From dotslash at mail.berlios.de  Sun Nov  5 23:48:19 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Sun, 5 Nov 2006 23:48:19 +0100
Subject: [S3d-svn] r461 - in trunk: . apps apps/s3dosm
Message-ID: <200611052248.kA5MmJ6w027904@sheep.berlios.de>

Author: dotslash
Date: 2006-11-05 23:48:17 +0100 (Sun, 05 Nov 2006)
New Revision: 461

Added:
   trunk/apps/s3dosm/
   trunk/apps/s3dosm/.draw.c.swp
   trunk/apps/s3dosm/.http_fetcher.c.swp
   trunk/apps/s3dosm/Makefile
   trunk/apps/s3dosm/TODO
   trunk/apps/s3dosm/avl.c
   trunk/apps/s3dosm/draw.c
   trunk/apps/s3dosm/http_error_codes.c
   trunk/apps/s3dosm/http_error_codes.h
   trunk/apps/s3dosm/http_fetcher.c
   trunk/apps/s3dosm/http_fetcher.h
   trunk/apps/s3dosm/layer.c
   trunk/apps/s3dosm/main.c
   trunk/apps/s3dosm/object.c
   trunk/apps/s3dosm/osm.c
   trunk/apps/s3dosm/s3dosm.h
Modified:
   trunk/
Log:
 r1114 at kero:  dotslash | 2006-11-05 23:48:13 +0100
 - s3dosm initial add



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1112
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1114

Added: trunk/apps/s3dosm/.draw.c.swp
===================================================================
(Binary files differ)


Property changes on: trunk/apps/s3dosm/.draw.c.swp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/apps/s3dosm/.http_fetcher.c.swp
===================================================================
(Binary files differ)


Property changes on: trunk/apps/s3dosm/.http_fetcher.c.swp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/apps/s3dosm/Makefile
===================================================================
--- trunk/apps/s3dosm/Makefile	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/Makefile	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,24 @@
+BIN=s3dosm
+VERS=0.0.1
+SOURCES=main.c http_fetcher.c http_error_codes.c osm.c avl.c object.c draw.c
+HEADERS=s3dosm.h http_fetcher.h
+OBJS=$(SOURCES:.c=.o)
+CFLAGS=-Wall -ggdb -pedantic `xml2-config --cflags`
+LDFLAGS=-lm -ls3d  `xml2-config --libs`
+CC=gcc
+LD=gcc
+
+
+
+.SUFFIXES: .c .o
+	
+default: 	all
+all:		$(BIN)
+clean:
+	rm -rf $(OBJS) $(BIN)
+$(BIN):    $(OBJS)
+	$(LD) $(LDFLAGS) $(OBJS) $(LIBS) -o $(BIN)
+.c.o:  $(HEADERS)
+	$(CC) $(CFLAGS) -c $< -o $@
+
+

Added: trunk/apps/s3dosm/TODO
===================================================================
--- trunk/apps/s3dosm/TODO	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/TODO	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1 @@
+do something about malloc()s

Added: trunk/apps/s3dosm/avl.c
===================================================================
--- trunk/apps/s3dosm/avl.c	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/avl.c	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,313 @@
+#include "s3dosm.h"
+#include <stdio.h>  /* printf(), NULL */
+#include <stdlib.h> /* malloc(), free() */
+		
+void avl_tree_trav(object_t *t, avl_func func, void *data)
+{
+	if (t!=NULL)
+	{
+		avl_tree_trav(t->left,func,data);
+		func(t,data);
+		avl_tree_trav(t->right,func,data);
+	}
+}
+/* avl_find a certain value */
+object_t *avl_find(object_t *t, int val)
+{
+	object_t *ret=NULL;
+	while (t!=NULL) 
+	{
+		if (t->id == val)
+		{
+			ret=t;
+			t=NULL;
+		}
+		else if (val > t->id) t=t->right;
+		else if (val < t->id) t=t->left;
+	}
+	return(ret);
+}
+static int s;
+object_t *avl_rotate_right(object_t *t)
+{
+	object_t *b;
+	b=t->right;
+/*	printf(">> right rotate at %d [%d] with %d [%d]\n",t->id,t->bal,b->id,b->bal);*/
+	t->right=b->left;
+	b->left=t;
+	return b;
+}
+object_t *avl_rotate_left(object_t *t)
+{
+	object_t *b;
+	b=t->left;
+/*	printf("<< left rotate at %d [%d] with %d [%d]\n",t->id,t->bal,b->id,b->bal);*/
+	t->left=b->right;
+	b->right=t;
+	return b;
+}
+
+object_t *avl_insert(object_t *t, object_t *nn)
+{
+	int i;
+
+	if (t == NULL) { 
+		s=1;
+		t=nn;
+	} else  {
+	    if (nn->id > t->id) 
+		{ 
+			i = t->bal; /* might be -1 */
+			t->right=avl_insert(t->right,nn);
+			if ( s == 1) /* we can still move */
+			{ 
+						if (i == -1) 	{	t->bal=0;	s=0;}
+				else	if (i == 0)  		t->bal=1;
+				else 	if (i == 1) 
+				{
+					if (t->right->bal == -1)
+					{ /* Doppelrotation */
+						t->right=avl_rotate_left(t->right);
+						t=avl_rotate_right(t);
+						t->left->bal=0;
+						t->right->bal=0;
+						if (t->bal == -1)  t->right->bal=1;
+						if (t->bal == 1)   t->left->bal=-1;
+						t->bal=0;
+					} else {
+						t->bal=0;
+						t=avl_rotate_right(t);
+						t->bal=t->bal - 1 ;
+					}
+
+					s=0;
+				}
+			}
+		}
+		else if (nn->id < t->id) 
+		{
+			i = t->bal; /* might be 1 */
+			t->left=avl_insert(t->left,nn);
+
+			if ( s == 1) /* we can still move */
+			{ 
+				if (i == 1) {
+					t->bal=0;
+					s=0;
+				} else if (i == 0) 
+					t->bal=-1;
+				else if (i == -1) 
+				{
+					if (t->left->bal == 1)
+					{  /* Doppelrotation */
+						t->left=avl_rotate_right(t->left);
+						t=avl_rotate_left(t);
+						t->left->bal=0;
+						t->right->bal=0;
+						if (t->bal == -1) t->left->bal=-1;
+						if (t->bal == 1)  t->right->bal=1;
+						t->bal=0;
+					} else {
+						t->bal=0;
+						t=avl_rotate_left(t);
+						t->bal=t->bal + 1 ;
+					}
+					s=0;
+				}
+			}
+		}
+	}
+	return(t);
+}
+object_t *avl_leftmost(object_t *t)
+{
+	while (t->left!=NULL) 
+	{
+		if (t->left!=NULL)			t=t->left;
+	} 
+	
+	return(t);
+}
+object_t *avl_rightmost(object_t *t)
+{
+	while (t->right!=NULL) 
+	{
+		if (t->right!=NULL)		t=t->right;
+	}
+	return(t);
+}
+object_t *avl_remove(object_t *t, object_t *nn)
+{
+	int i;
+	s=0;
+	if (t == NULL) { 
+/*		printf("object %d not found\n",nn->id);*/
+		t=nn;
+	} else {
+	    if (nn->id > t->id) 
+		{ 
+/*			printf("go right at %d\n",t->id);*/
+			i = t->bal; /* might be -1 */
+			t->right=avl_remove(t->right,nn);
+			if ( s == 1)  /* we can still move */
+			{ 
+					 if (i == 1) {	t->bal=0;	}
+				else if (i == 0) {	t->bal=-1;  s=0;	}
+				else if (i == -1) { 
+/*					printf("[T]rouble left at object_t *%d\n",t->id);*/
+
+					if (t->left->bal == 1)
+					{  /* Doppelrotation */
+						t->left=avl_rotate_right(t->left);
+						t=avl_rotate_left(t);
+						t->left->bal=0;
+						t->right->bal=0;
+						if (t->bal == -1)  t->left->bal=-1;
+						if (t->bal == 1)   t->right->bal=1;
+						t->bal=0;
+					} else {
+						t->bal=0;
+						t=avl_rotate_left(t);
+						t->bal=t->bal + 1 ;
+					}
+				}
+
+			}
+		} else if (nn->id < t->id) 
+		{
+/*			printf("go left at %d\n",t->id);*/
+
+			i = t->bal; /* might be 1 */
+			t->left=avl_remove(t->left,nn);
+
+			if ( s == 1) /* we can still move */
+			{ 
+					 if (i == -1) 	{ 	t->bal=0;}
+				else if (i == 0) 	{	t->bal=1;	s=0;}
+				else if (i == 1) { 
+/*					printf("[T]rouble right at object_t *%d\n",t->id);*/
+
+					if (t->right->bal == -1)
+					{ /* Doppelrotation */
+						t->right=avl_rotate_left(t->right);
+						t=avl_rotate_right(t);
+						t->left->bal=0;
+						t->right->bal=0;
+						if (t->bal == -1)   t->right->bal=1;
+						if (t->bal == 1)    t->left->bal=-1;
+						t->bal=0;
+					} else {
+						t->bal=0;
+						t=avl_rotate_right(t);
+						t->bal=t->bal - 1 ;
+					}
+
+				}
+			}
+		} if (nn->id == t->id)
+		{
+/*			printf("found, removing ...\n");*/
+			if (t->left==NULL && t->right==NULL)
+			{ /* leaf */
+				s=1;
+				t=NULL;
+			} else {
+				object_t *xchg=NULL;
+				if (t->right!=NULL) xchg=avl_leftmost(t->right);
+				else 				xchg=avl_rightmost(t->left);
+/*				printf("using %d as exchange node\n",xchg->id);*/
+				avl_remove(t, xchg);	/* remove the leaf */
+				xchg->left=t->left;
+				xchg->right=t->right;
+				xchg->bal=t->bal;
+				t=xchg; /* don't set s, keep the value from avl_remove() */
+			}
+		}
+	}
+/*	if (t!=NULL) printf("balance of %d is now %d\n",t->id, t->bal);*/
+	return t;
+}
+
+int avl_height(object_t *t)
+{
+	int h1,h2;
+	if (t == NULL) 	return(0);
+	else {
+		h1=avl_height(t->left);
+		h2=avl_height(t->right);
+		if (h1>h2)	if (h1 == 0) return(0); else return(h1+1);
+		else 		if (h2 == 0) return(0); else return(h2+1);
+	}
+}
+/*
+void avl_test()
+{
+	object_t *tree;
+
+	tree=NULL;
+	tree=avl_insert(tree,object_new(5));
+	avl_print_tree(tree);
+	printf("\n");
+
+	tree=avl_insert(tree,object_new(1));
+	avl_print_tree(tree);
+	printf("\n");
+
+	tree=avl_insert(tree,object_new(2));
+	avl_print_tree(tree);
+	printf("\n");
+	tree=avl_insert(tree,object_new(7));
+	avl_print_tree(tree);
+	printf("\n");
+
+	tree=avl_insert(tree,object_new(9));
+	avl_print_tree(tree);
+	printf("\n");
+
+	tree=avl_insert(tree,object_new(3));
+	avl_print_tree(tree);
+	printf("\n");
+
+	tree=avl_insert(tree,object_new(10));
+	avl_print_tree(tree);
+	printf("\n");
+
+	tree=avl_insert(tree,object_new(12));
+	avl_print_tree(tree);
+	printf("\n");
+
+
+	tree=avl_remove(tree,avl_find(tree,3));
+	tree=avl_remove(tree,avl_find(tree,1));
+	tree=avl_remove(tree,avl_find(tree,9));
+	tree=avl_remove(tree,avl_find(tree,5));
+	tree=avl_remove(tree,avl_find(tree,7));
+
+	printf("my tree:\n");
+	avl_print_tree(tree);
+	printf("\n");
+}
+void avl_print_tree(object_t *n)
+{ 
+	if (n != NULL) 
+	{ 
+		printf(" (");
+		avl_print_tree(n->left);
+		printf("%d [%d]",n->id, n->bal);
+		avl_print_tree(n->right);
+		printf(") ");
+	}
+}
+object_t *avl_findbest(object_t *t,int n)
+{
+	object_t *ret=NULL;
+	while (t != NULL) 
+	{
+		ret=t;
+		if (n >= t->id) t=t->right;
+		else if (n < t->id) t=t->left;
+	}
+	return(ret);
+}
+*/
+

Added: trunk/apps/s3dosm/draw.c
===================================================================
--- trunk/apps/s3dosm/draw.c	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/draw.c	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,85 @@
+#include "s3dosm.h"
+#include <s3d.h>
+#include <math.h>	/* sin(), cos() */
+#include <stdio.h>	/* printf() */
+#define	ESIZE	6378
+
+struct vdata{
+	layer_t *layer;
+	double lonsum,latsum;
+	int n;
+	int oid;
+	int vnum;
+};
+
+void calc_earth_to_eukl(double lon, double lat, double *x)
+{
+	double la,lo;
+	la=lat*M_PI/180.0;
+	lo=lon*M_PI/180.0;
+	x[0]=ESIZE*sin(lo) *cos(la);
+	x[1]=ESIZE*			sin(la);
+	x[2]=ESIZE*cos(lo) *cos(la);
+}
+void draw_add_vertices(object_t *t, void *data)
+{
+	struct vdata *v=data;
+	
+	if (t->type==T_NODE)
+	{
+		double x[3];
+		node_t *node=NODE_T(t);
+		node->vid=v->vnum;
+		calc_earth_to_eukl(node->lon,node->lat,x);
+		s3d_push_vertex(v->oid,x[0],x[1],x[2]);
+		printf("vertex  %d: %f %f %f\n",node->vid,x[0],x[1],x[2]);
+		v->vnum++;
+		v->lonsum+=node->lon;
+		v->latsum+=node->lat;
+		v->n++;
+	}
+}
+
+void draw_add_segments(object_t *t, void *data)
+{
+	struct vdata *v=data;
+	if (t->type==T_SEGMENT)
+	{
+		node_t *from, *to;
+		segment_t *seg=SEGMENT_T(t);
+		from=NODE_T(avl_find(v->layer->tree,seg->from));
+		to=NODE_T(avl_find(v->layer->tree,seg->to));
+		if (from!=NULL && to!=NULL)
+			s3d_push_line(v->oid,from->vid,to->vid,0);
+	}
+}
+int oidx, oidy;
+int draw_layer(layer_t *layer)
+{
+	struct vdata v;
+	int oid;
+	double lo,la,x[3];
+	oid=s3d_new_object();
+	oidx=s3d_new_object();
+	oidy=s3d_new_object();
+	s3d_link(oid,oidy);
+	s3d_link(oidy,oidx);
+	v.layer=layer;
+	v.oid=oid;
+	v.vnum=0;
+	v.n=0;
+	v.lonsum=v.latsum=0;
+	s3d_push_material(oid,1,1,1,	1,1,1,	1,1,1);
+	avl_tree_trav(layer->tree,draw_add_vertices,(void *)&v);
+	avl_tree_trav(layer->tree,draw_add_segments,(void *)&v);
+	lo=(v.lonsum)/v.n;
+	la=(v.latsum)/v.n;
+	s3d_rotate(oidy,0,-lo,0);
+	s3d_rotate(oidx,-(90-la),0,0);
+	calc_earth_to_eukl(lo,la,x);
+	s3d_translate(oidx,0,-ESIZE*10,0);
+	s3d_scale(oidx,10);
+	s3d_flags_on(oid,S3D_OF_VISIBLE);
+	return(0);
+
+}

Added: trunk/apps/s3dosm/http_error_codes.c
===================================================================
--- trunk/apps/s3dosm/http_error_codes.c	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/http_error_codes.c	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,36 @@
+/* http_error_codes.c - Error code declarations
+
+	HTTP Fetcher 
+ 	Copyright (C) 2001 Lyle Hanson (lhanson at cs.nmu.edu)
+
+	This library is free software; you can redistribute it and/or
+	modify it under the terms of the GNU Library General Public
+	License as published by the Free Software Foundation; either
+	version 2 of the License, or (at your option) any later version.
+
+	This library is distributed in the hope that it will be useful,
+	but WITHOUT ANY WARRANTY; without even the implied warranty of
+	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+	Library General Public License for more details.
+
+	See LICENSE file for details
+ */
+
+
+	/* Note that '%d' cannot be escaped at this time */
+const char *http_errlist[] =
+	{
+	"Success",										/* HF_SUCCESS		*/
+	"Internal Error. What the hell?!",				/* HF_METAERROR		*/
+	"Got NULL url",									/* HF_NULLURL		*/
+	"Timed out, no metadata for %d seconds",		/* HF_HEADTIMEOUT 	*/
+	"Timed out, no data for %d seconds",			/* HF_DATATIMEOUT	*/
+	"Couldn't find return code in HTTP response",	/* HF_FRETURNCODE	*/
+	"Couldn't convert return code in HTTP response",/* HF_CRETURNCODE	*/
+	"Request returned a status code of %d",			/* HF_STATUSCODE	*/
+	"Couldn't convert Content-Length to integer"	/* HF_CONTENTLEN	*/
+	};
+
+	/* Used to copy in messages from http_errlist[] and replace %d's with
+	 *	the value of errorInt.  Then we can pass the pointer to THIS */
+char convertedError[128];

Added: trunk/apps/s3dosm/http_error_codes.h
===================================================================
--- trunk/apps/s3dosm/http_error_codes.h	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/http_error_codes.h	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,38 @@
+/* http_error_codes.h - Error code definitions
+
+	Copyright (C) 2001 Lyle Hanson (lhanson at cs.nmu.edu)
+
+	This library is free software; you can redistribute it and/or
+	modify it under the terms of the GNU Library General Public
+	License as published by the Free Software Foundation; either
+	version 2 of the License, or (at your option) any later version.
+
+	This library is distributed in the hope that it will be useful,
+	but WITHOUT ANY WARRANTY; without even the implied warranty of
+	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+	Library General Public License for more details.
+
+	See LICENSE file for details
+
+ */
+
+#ifndef HTTP_ERROR_CODES_H
+#define HTTP_ERROR_CODES_H
+
+/* Error sources */
+#define FETCHER_ERROR	0
+#define ERRNO			1
+#define H_ERRNO			2
+
+/* HTTP Fetcher error codes */
+#define HF_SUCCESS		0
+#define HF_METAERROR	1
+#define HF_NULLURL		2
+#define HF_HEADTIMEOUT	3
+#define HF_DATATIMEOUT	4
+#define HF_FRETURNCODE	5
+#define HF_CRETURNCODE	6
+#define HF_STATUSCODE	7
+#define HF_CONTENTLEN	8
+
+#endif

Added: trunk/apps/s3dosm/http_fetcher.c
===================================================================
--- trunk/apps/s3dosm/http_fetcher.c	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/http_fetcher.c	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,621 @@
+/* http_fetcher.c - HTTP handling functions
+
+	Copyright (C) 2001 Lyle Hanson (lhanson at cs.nmu.edu)
+
+	This library is free software; you can redistribute it and/or
+	modify it under the terms of the GNU Library General Public
+	License as published by the Free Software Foundation; either
+	version 2 of the License, or (at your option) any later version.
+
+	This library is distributed in the hope that it will be useful,
+	but WITHOUT ANY WARRANTY; without even the implied warranty of
+	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+	Library General Public License for more details.
+
+	See included LICENSE file for details
+
+ */
+
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+#include <netdb.h>
+#include <unistd.h>
+#include <netinet/in.h>
+#include <errno.h>
+#include <sys/types.h>
+#include <sys/time.h>
+#include "http_fetcher.h"
+
+/* Globals */
+int timeout = DEFAULT_READ_TIMEOUT;
+char *userAgent = NULL;
+char *referer = NULL;
+char *auth = NULL;
+int hideUserAgent = 0;
+int hideReferer = 1;
+extern const char *http_errlist[];	/* Array of HTTP Fetcher error messages */
+extern char convertedError[128];	/* Buffer to used when errors contain %d */
+static int errorSource = 0;
+static int http_errno = 0;
+static int errorInt = 0;			/* When the error message has a %d in it,
+									 *	this variable is inserted */
+static int freeOldAgent = 0; /* Indicates previous malloc's */
+static int freeOldReferer = 0; /* Indicated previous malloc's */
+
+
+	/* 
+	 * Actually downloads the page, registering a hit (donation)
+	 *	If the fileBuf passed in is NULL, the url is downloaded and then
+	 *	freed; otherwise the necessary space is allocated for fileBuf.
+	 *	Returns size of download on success, -1 on error is set, 
+	 */
+int http_fetch(const char *url_tmp, char **fileBuf)
+	{
+	fd_set rfds;
+	struct timeval tv;
+	char requestBuf[REQUEST_BUF_SIZE];
+	char headerBuf[HEADER_BUF_SIZE];
+	char *url, *pageBuf, *host, *charIndex;
+	int sock, bytesRead = 0, contentLength = -1;
+	int ret = -1, i, selectRet;
+
+
+	if(url_tmp == NULL)
+		{
+		errorSource = FETCHER_ERROR;
+		http_errno = HF_NULLURL;
+		return -1;
+		}
+
+	/* Copy the url passed in into a buffer we can work with, change, etc. */
+	url = malloc(strlen(url_tmp)+1);
+	if(url == NULL)
+		{
+		errorSource = ERRNO;
+		return -1;
+		}
+	strncpy(url, url_tmp, strlen(url_tmp) + 1);
+	
+	/* Seek to the file path portion of the url */
+	charIndex = strstr(url, "://");
+	if(charIndex != NULL)
+		{
+		/* url contains a protocol field */
+		charIndex += strlen("://");
+		host = charIndex;
+		charIndex = strchr(charIndex, '/');
+		}
+	else
+		{
+		host = (char *)url;
+		charIndex = strchr(url, '/');
+		}
+
+	/* Compose a request string */
+	if(charIndex == NULL)
+		/* The url has no '/' in it, assume the user is making a root-level
+		 *	request */ 
+		sprintf(requestBuf, "GET / %s\r\n", HTTP_VERSION);
+	else
+		sprintf(requestBuf, "GET %s %s\r\n", charIndex, HTTP_VERSION);
+	/* Null out the end of the hostname if need be */
+	if(charIndex != NULL)
+		*charIndex = 0;
+
+	strcat(requestBuf, "Host: ");
+	strcat(requestBuf, host);
+	strcat(requestBuf, "\r\n");
+
+
+	if(!hideReferer && referer != NULL)	/* NO default referer */
+		{
+		strcat(requestBuf, "Referer: ");
+		strcat(requestBuf, referer);
+		strcat(requestBuf, "\r\n");
+		}
+
+	if(!hideUserAgent && userAgent == NULL)
+		{
+		strcat(requestBuf, "User-Agent: ");
+		strcat(requestBuf, DEFAULT_USER_AGENT);
+		strcat(requestBuf, "/");
+		strcat(requestBuf, VERSION);
+		strcat(requestBuf, "\r\n");
+		}
+	else if(!hideUserAgent)
+		{
+		strcat(requestBuf, "User-Agent: ");
+		strcat(requestBuf, userAgent);
+		strcat(requestBuf, "\r\n");
+		}
+	if (auth!=NULL)
+	{
+		strcat(requestBuf, "Authorization: Basic ");
+		strcat(requestBuf, auth);
+		strcat(requestBuf, "\r\n");
+	}
+	strcat(requestBuf, "\r\n");
+
+
+
+	sock = makeSocket(host);			/* errorSource set within makeSocket */
+	if(sock == -1) { free(url); return -1;}
+
+	if(write(sock, requestBuf, strlen(requestBuf)) == -1)
+		{ close(sock); free(url); errorSource = ERRNO; return -1; }
+
+	/* Grab enough of the response to get the metadata */
+	ret = _http_read_header(sock, headerBuf);	/* errorSource set within */
+	if(ret < 0) { close(sock); free(url); return -1; }
+
+	/* Get the return code */
+	charIndex = strstr(headerBuf, "HTTP/");
+	if(charIndex == NULL)
+		{
+		close(sock);
+		free(url);
+		errorSource = FETCHER_ERROR;
+		http_errno = HF_FRETURNCODE;
+		return -1;
+		}
+	while(*charIndex != ' ')
+		charIndex++;
+	charIndex++;
+
+	ret = sscanf(charIndex, "%i", &i);
+	if(ret != 1)
+		{
+		close(sock);
+		free(url);
+		errorSource = FETCHER_ERROR;
+		http_errno = HF_CRETURNCODE;
+		return -1;
+		}
+	if(i<200 || i>299)
+		{
+		close(sock);
+		free(url);
+		errorInt = i;	/* Status code, to be inserted in error string */
+		errorSource = FETCHER_ERROR;
+		http_errno = HF_STATUSCODE;
+		return -1;
+		}
+	
+	/*
+	 * Parse out about how big the data segment is.
+	 *	Note that under current HTTP standards (1.1 and prior), the
+	 *	Content-Length field is not guaranteed to be accurate or even present. 
+	 *	I just use it here so I can allocate a ballpark amount of memory.
+	 *
+	 * Note that some servers use different capitalization
+	 */
+	charIndex = strstr(headerBuf, "Content-Length:");
+	if(charIndex == NULL)
+		charIndex = strstr(headerBuf, "Content-length:");
+
+	if(charIndex != NULL)
+		{
+		ret = sscanf(charIndex + strlen("content-length: "), "%i",
+			&contentLength);
+		if(ret < 1)
+			{
+			close(sock);
+			free(url);
+			errorSource = FETCHER_ERROR;
+			http_errno = HF_CONTENTLEN;
+			return -1;
+			}
+		}
+	
+	/* Allocate enough memory to hold the page */
+	if(contentLength == -1)
+		contentLength = DEFAULT_PAGE_BUF_SIZE;
+
+	pageBuf = (char *)malloc(contentLength+1);
+	if(pageBuf == NULL)
+		{
+		close(sock);
+		free(url);
+		errorSource = ERRNO;
+		return -1;
+		}
+
+	/* Begin reading the body of the file */
+	while(ret > 0)
+		{
+		FD_ZERO(&rfds);
+		FD_SET(sock, &rfds);
+		tv.tv_sec = timeout; 
+		tv.tv_usec = 0;
+
+		if(timeout >= 0)
+			selectRet = select(sock+1, &rfds, NULL, NULL, &tv);
+		else		/* No timeout, can block indefinately */
+			selectRet = select(sock+1, &rfds, NULL, NULL, NULL);
+
+		if(selectRet == 0 && timeout < 0)
+			{
+			errorSource = FETCHER_ERROR;
+			http_errno = HF_DATATIMEOUT;
+			errorInt = timeout;
+			close(sock);
+			free(url);
+			free(pageBuf);
+			return -1;
+			}
+		else if(selectRet == -1)
+			{
+			close(sock);
+			free(url);
+			free(pageBuf);
+			errorSource = ERRNO;
+			return -1;
+			}
+
+		ret = read(sock, pageBuf + bytesRead, contentLength);
+		if(ret == -1)
+			{
+			close(sock);
+			free(url);
+			free(pageBuf);
+			errorSource = ERRNO;
+			return -1;
+			}
+
+		bytesRead += ret;
+
+		if(ret > 0)
+			{
+			/* To be tolerant of inaccurate Content-Length fields, we'll
+			 *	allocate another read-sized chunk to make sure we have
+			 *	enough room.
+			 */
+			pageBuf = (char *)realloc(pageBuf, bytesRead + contentLength);
+			if(pageBuf == NULL)
+				{
+				close(sock);
+				free(url);
+				free(pageBuf);
+				errorSource = ERRNO;
+				return -1;
+				}
+			}
+		}
+	
+	/*
+	 * The download buffer is too large.  Trim off the safety padding.
+	 */
+	pageBuf = (char *)realloc(pageBuf, bytesRead);
+		/* pageBuf shouldn't be null, since we're _shrinking_ the buffer,
+		 *	and if it DID fail, we could go on with the too-large buffer,
+		 *	but something would DEFINATELY be wrong, so we'll just give
+		 *	an error message */
+	if(pageBuf == NULL)
+		{
+		close(sock);
+		free(url);
+		free(pageBuf);
+		errorSource = ERRNO;
+		return -1;
+		}
+
+	if(fileBuf == NULL)	/* They just wanted us to "hit" the url */
+		free(pageBuf);
+	else
+		*fileBuf = pageBuf;
+
+	close(sock);
+	free(url);
+	return bytesRead;
+	}
+
+
+
+	/*
+	 * Changes the User Agent.  Returns 0 on success, -1 on error. 
+	 */
+int http_setUserAgent(const char *newAgent)
+	{
+	char *tmp;
+
+	if(newAgent == NULL)
+		{
+		if(freeOldAgent) free(userAgent);
+		userAgent = NULL;
+		hideUserAgent = 1;
+		}
+	else
+		{
+		tmp = (char *)malloc(strlen(newAgent));
+		if(tmp == NULL) { errorSource = ERRNO; return -1; }
+		if(freeOldAgent) free(userAgent);
+		userAgent = tmp;
+		strcpy(userAgent, newAgent);
+		freeOldAgent = 1;
+		hideUserAgent = 0;
+		}
+
+	return 0;
+	}
+
+
+
+	/*
+	 * Changes the Referer.  Returns 0 on success, -1 on error
+	 */
+int http_setReferer(const char *newReferer)
+	{
+	char *tmp;
+
+	if(newReferer == NULL)
+		{
+		if(freeOldReferer) free(referer);
+		referer = NULL;
+		hideReferer = 1;
+		}
+	else
+		{
+		tmp = (char *)malloc(strlen(newReferer));
+		if(tmp == NULL) { errorSource = ERRNO; return -1; }
+		if(freeOldReferer) free(referer);
+		referer = tmp;
+		strcpy(referer, newReferer);
+		freeOldReferer = 1;
+		hideReferer = 0;
+		}
+	
+	return 0;
+	}
+void http_setAuth(const char *user, const char *pass)
+{
+	unsigned char plain[1024];
+	char ec64[]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
+	char *b64;
+	int i,j,c,len,n;
+	char o;
+	 /* base64 encode user and pass */
+	
+	snprintf((char *)plain,1024,"%s:%s",user,pass);
+	len=strlen((char *)plain);
+	b64=malloc(len*4+1);
+	i=j=c=0;
+	while (i<len || c!=0)
+	{
+		switch (c)
+		{
+			case 0:	o=ec64[ n=plain[i] >> 2 ]; i++; break;
+			case 1: o=ec64[ n=((plain[i-1]&0x3)<<4) | (plain[i]>>4) ]; i++; break;
+			case 2: o=(i>=len)?'=':ec64[ n=((plain[i-1]&0xf)<<2) | (plain[i]>>6) ]; break;
+			case 3: o=(i>=len)?'=':ec64[ n=(plain[i]&0x3f) ];i++;break;
+		}
+		b64[j]=o;
+		c=(c+1)%4;
+		j++;
+	}
+	b64[j]=0;
+	if (auth!=NULL)	free(auth); /* free old auth */
+	auth=b64;
+	
+
+	
+}
+
+
+
+
+	/*
+	 * Changes the amount of time that HTTP Fetcher will wait for data
+	 *	before timing out on reads
+	 */
+void http_setTimeout(int seconds) { timeout = seconds; }
+
+
+
+	/*
+	 * Puts the filename portion of the url into 'filename'.
+	 * Returns:
+	 *	0 on success
+	 *	1 when url contains no end filename (i.e., 'www.foo.com/'),
+	 *		and **filename should not be assumed to be valid
+	 *	-1 on error
+	 */
+int http_parseFilename(const char *url, char **filename)
+	{
+	char *ptr;
+
+	if(url == NULL)
+		{
+		errorSource = FETCHER_ERROR;
+		http_errno = HF_NULLURL;
+		return -1;
+		}
+
+	ptr = (char *)rindex(url, '/');
+	if(ptr == NULL)
+		/* Root level request, apparently */
+		return 1;
+
+	ptr++;
+	if(*ptr == '\0') return 1;
+
+	*filename = (char *)malloc(strlen(ptr));
+	if(*filename == NULL) { errorSource = ERRNO; return -1; }
+	strcpy(*filename, ptr);
+
+	return 0;
+	}
+
+	
+	
+	/* Depending on the source of error, calls either perror() or prints
+	 *	an HTTP Fetcher error message to stdout */
+void http_perror(const char *string)
+	{
+	if(errorSource == ERRNO)
+		perror(string);
+	else if(errorSource == H_ERRNO)
+		herror(string);
+	else if(errorSource == FETCHER_ERROR)
+		{
+		char *stringIndex;
+
+		if(strstr(http_errlist[http_errno], "%d") == NULL)
+			{
+			fputs(string, stderr);
+			fputs(": ", stderr);
+			fputs(http_errlist[http_errno], stderr);
+			fputs("\n", stderr);
+			}
+		else
+			{
+			/* The error string has a %d in it, we need to insert errorInt */
+			stringIndex = (char *)http_errlist[http_errno];
+			while(*stringIndex != '%')			/* Print up to the %d */
+				{
+				fputc(*stringIndex, stderr);
+				stringIndex++;
+				}
+			fprintf(stderr, "%d", errorInt);	/* Print the number */
+			stringIndex += 2;					/* Skip past the %d */
+			while(*stringIndex != 0)			/* Print up to the end NULL */
+				{
+				fputc(*stringIndex, stderr);
+				stringIndex++;
+				}
+			fputs("\n", stderr);
+			}
+		}
+	}
+
+
+
+	/* 
+	 * Returns a pointer to the current error description message. The
+	 *	message pointed to is only good until the next call to http_strerror(),
+	 *	so if you need to hold on to the message for a while you should make
+	 *	a copy of it
+	 */
+const char *http_strerror()
+	{
+	if(errorSource == ERRNO)
+		return strerror(errno);
+	else if(errorSource == H_ERRNO)
+		return hstrerror(h_errno);
+	else if(errorSource == FETCHER_ERROR)
+		{
+		if(strstr(http_errlist[http_errno], "%d") == NULL)
+			return http_errlist[http_errno];
+		else
+			{
+			/* The error string has a %d in it, we need to insert errorInt.
+			 *	convertedError[128] has been declared for that purpose */
+			char *stringIndex, *originalError;
+		
+			originalError = (char *)http_errlist[http_errno];
+			convertedError[0] = 0;		/* Start off with NULL */
+			stringIndex = strstr(originalError, "%d");
+			strncat(convertedError, originalError,		/* Copy up to %d */
+				abs(stringIndex - originalError));
+			sprintf(&convertedError[strlen(convertedError)],"%d",errorInt);
+			stringIndex += 2;		/* Skip past the %d */
+			strcat(convertedError, stringIndex);
+
+			return convertedError;
+			}
+		}
+		
+	return http_errlist[HF_METAERROR];	/* Should NEVER happen */
+	}
+
+	
+	/*
+	 * Reads the metadata of an HTTP response.
+	 * Perhaps a little inefficient, as it reads 1 byte at a time, but
+	 *	I don't think it's that much of a loss (most headers aren't HUGE).
+	 * Returns:
+	 *	# of bytes read on success, or
+	 *	-1 on error
+	 */
+int _http_read_header(int sock, char *headerPtr)
+	{
+	fd_set rfds;
+	struct timeval tv;
+	int bytesRead = 0, newlines = 0, ret, selectRet;
+
+	while(newlines != 2 && bytesRead != HEADER_BUF_SIZE)
+		{
+		FD_ZERO(&rfds);
+		FD_SET(sock, &rfds);
+		tv.tv_sec = timeout; 
+		tv.tv_usec = 0;
+
+		if(timeout >= 0)
+			selectRet = select(sock+1, &rfds, NULL, NULL, &tv);
+		else		/* No timeout, can block indefinately */
+			selectRet = select(sock+1, &rfds, NULL, NULL, NULL);
+		
+		if(selectRet == 0 && timeout < 0)
+			{
+			errorSource = FETCHER_ERROR;
+			http_errno = HF_HEADTIMEOUT;
+			errorInt = timeout;
+			return -1;
+			}
+		else if(selectRet == -1) { errorSource = ERRNO; return -1; }
+
+		ret = read(sock, headerPtr, 1);
+		if(ret == -1) { errorSource = ERRNO; return -1; }
+		bytesRead++;
+
+		if(*headerPtr == '\r')			/* Ignore CR */
+			{
+			/* Basically do nothing special, just don't set newlines
+			 *	to 0 */
+			headerPtr++;
+			continue;
+			}
+		else if(*headerPtr == '\n')		/* LF is the separator */
+			newlines++;
+		else
+			newlines = 0;
+
+		headerPtr++;
+		}
+
+	headerPtr -= 3;		/* Snip the trailing LF's */
+	*headerPtr = '\0';
+	return bytesRead;
+	}
+
+	
+	
+	/*
+	 * Opens a TCP socket and returns the descriptor
+	 * Returns:
+	 *	socket descriptor, or
+	 *	-1 on error
+	 */
+int makeSocket(const char *host)
+	{
+	int sock;										/* Socket descriptor */
+	struct sockaddr_in sa;							/* Socket address */
+	struct hostent *hp;								/* Host entity */
+	int ret;
+	
+	hp = gethostbyname(host);
+	if(hp == NULL) { errorSource = H_ERRNO; return -1; }
+		
+	/* Copy host address from hostent to (server) socket address */
+	memcpy((char *)&sa.sin_addr, (char *)hp->h_addr, hp->h_length);
+	sa.sin_family = hp->h_addrtype;		/* Set service sin_family to PF_INET */
+	sa.sin_port = htons(PORT_NUMBER);	/* Put portnum into sockaddr */
+
+	sock = socket(hp->h_addrtype, SOCK_STREAM, 0);
+	if(sock == -1) { errorSource = ERRNO; return -1; }
+
+	ret = connect(sock, (struct sockaddr *)&sa, sizeof(sa));
+	if(ret == -1) { errorSource = ERRNO; return -1; }
+
+	return sock;
+	}

Added: trunk/apps/s3dosm/http_fetcher.h
===================================================================
--- trunk/apps/s3dosm/http_fetcher.h	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/http_fetcher.h	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,136 @@
+/* http_fetcher.h - HTTP handling functions
+
+	HTTP Fetcher
+	Copyright (C) 2001 Lyle Hanson (lhanson at cs.nmu.edu)
+
+	This library is free software; you can redistribute it and/or
+	modify it under the terms of the GNU Library General Public
+	License as published by the Free Software Foundation; either
+	version 2 of the License, or (at your option) any later version.
+
+	This library is distributed in the hope that it will be useful,
+	but WITHOUT ANY WARRANTY; without even the implied warranty of
+	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+	Library General Public License for more details.
+
+	See LICENSE file for details
+									
+ */
+
+#ifndef HTTP_FETCHER_H
+#define HTTP_FETCHER_H
+
+#include "http_error_codes.h"
+
+#define PORT_NUMBER 			80
+#define HTTP_VERSION 			"HTTP/1.1"
+#define DEFAULT_USER_AGENT		"HTTP Fetcher"
+#define	VERSION					"1.0"
+#define DEFAULT_READ_TIMEOUT	30		/* Seconds to wait before giving up
+										 *	when no data is arriving */
+	 
+#define REQUEST_BUF_SIZE 		1024
+#define HEADER_BUF_SIZE 		1024
+#define DEFAULT_PAGE_BUF_SIZE 	1024 * 200	/* 200K should hold most things */
+
+
+
+/******************************************************************************/
+/**************** Function declarations and descriptions **********************/
+/******************************************************************************/
+
+/* 
+ * [!!! NOTE !!!]  All HTTP Fetcher functions return -1 on error.  You can
+ *	then either call http_perror to print the error message or call
+ *	http_strerror to get a pointer to it
+ */
+
+
+	/*
+	 * Download the page, registering a hit. If you pass it a NULL for fileBuf,
+	 *	'url' will be requested but will not remain in memory (useful for
+	 *	simply registering a hit).  Otherwise necessary space will be allocated
+	 *	and will be pointed to by fileBuf.
+	 * Returns:
+	 *	# of bytes downloaded, or
+	 *	-1 on error
+	 */
+int http_fetch(const char *url, char **fileBuf);
+
+	/*
+	 * Changes the User Agent (shown to the web server with each request)
+	 *	Send it NULL to avoid telling the server a User Agent
+	 *	By default, the User Agent is sent (The default one unless changed)
+	 * Returns:
+	 *	0 on success, or
+	 *	-1 on error (previous value for agent remains unchanged)
+	 */
+int http_setUserAgent(const char *newAgent);
+
+	/*
+	 * Changes the Referer (shown to the web server with each request)
+	 *	Send it NULL to avoid thelling the server a Referer
+	 *	By default, no Referer is sent
+	 * Returns:
+	 *	0 on success, or
+	 *	-1 on error
+	 */
+int http_setReferer(const char *newReferer);
+
+	/*
+	 * Changes the maximum amount of time that HTTP Fetcher will wait on
+	 *	data.  If this many seconds elapses without more data from the
+	 *	server, http_fetch will return with an error.
+	 * If you pass a value less than 0, reads will not time out, potentially
+	 *	waiting forever (or until data shows up, whichever comes first)
+	 */
+void http_setTimeout(int seconds);
+void http_setAuth(const char *user, const char *pass);
+
+	/*
+	 * Takes a url and puts the filename portion of it into 'filename'.
+	 * Returns:
+	 *	0 on success, or
+	 *	1 when url contains no end filename (i.e., "www.foo.com/")
+	 *		and **filename should not be assumed to point to anything), or
+	 *	-1 on error
+	 */
+int http_parseFilename(const char *url, char **filename);
+
+	/*
+	 * Works like perror.  If an HTTP Fetcher function ever returns an
+	 *	error (-1), this will print a descriptive message to standard output
+	 */
+void http_perror(const char *string);
+
+	/*
+	 * Returns a pointer to the current error description message.  The
+	 *	message pointed to is only good until the next call to http_strerror(),
+	 *	so if you need to hold on to the message for a while you should make
+	 *	a copy of it.
+	 */
+const char *http_strerror();
+
+
+
+/******************************************************************************/
+/**** The following functions are used INTERNALLY by http_fetcher *************/
+/******************************************************************************/
+
+	/*
+	 * Reads the metadata of an HTTP response.  On success returns the number
+	 * Returns:
+	 *	# of bytes read on success, or
+	 *	-1 on error
+	 */
+int _http_read_header(int sock, char *headerPtr);
+
+	/*
+	 * Opens a TCP socket and returns the descriptor
+	 * Returns:
+	 *	socket descriptor, or
+	 *	-1 on error
+	 */
+int makeSocket(const char *host);
+
+#endif

Added: trunk/apps/s3dosm/layer.c
===================================================================

Added: trunk/apps/s3dosm/main.c
===================================================================
--- trunk/apps/s3dosm/main.c	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/main.c	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,66 @@
+#include <stdio.h>		 /*  snprintf(), printf(), NULL */
+#include <stdlib.h>		 /*  malloc(),free() */
+#include <sys/stat.h>	 /*  fstat() */
+#include <s3d.h>
+#include "http_fetcher.h"
+#include "s3dosm.h"
+#include <time.h>	 /*  nanosleep(), struct tm, time_t...  */
+
+void mainloop()
+{
+	struct timespec t={0,100*1000*1000}; /* 100 mili seconds */
+	nanosleep(&t,NULL); 
+}
+char *read_osm(float minlon, float minlat, float maxlon, float maxlat,int *length)
+{
+	int ret;
+	char *user = "foo at packetmixer.de";
+	char *pass = "foobar";
+	char url[1024];
+	char *fileBuf;						/* Pointer to downloaded data */
+	snprintf(url,1024,"www.openstreetmap.org/api/0.3/map?bbox=%f,%f,%f,%f",minlon,minlat,maxlon,maxlat);
+
+	http_setAuth(user,pass);
+	ret = http_fetch(url, &fileBuf);	/* Downloads page */
+	if(ret == -1)
+	{	
+		http_perror("http_fetch");	
+		return(NULL);
+	}
+	if (length!=NULL) *length=ret;
+	return(fileBuf);
+	
+}
+char *read_file(char *fname, int *fsize)
+{
+	FILE *fp;
+	char *buf=NULL;
+	int filesize;
+	struct stat bf;
+
+	if ((fp = fopen(fname, "rt")) == NULL)	{ 	perror("read_file():fopen()"); 		return(NULL);	}
+	if (fstat(fileno(fp),&bf))				{ 	perror("read_file():fstat()");		return(NULL);	}
+	filesize=bf.st_size;
+	if ((buf=malloc(filesize))==NULL)		{	perror("read_file():malloc()");		return(NULL);	}
+	fread(buf, filesize, 1, fp);
+	fclose(fp);
+	if (fsize!=NULL) *fsize=filesize;
+	return(buf);
+}
+
+int main(int argc, char **argv)
+{
+	char *file=NULL;
+	layer_t *layer;
+	int length;
+/*	file=read_file("file.osm",&length);*/
+	file=read_osm(11.610952060700235,49.409270464751515,14.453271808922661,52.338403146460365,&length);
+	layer=parse_osm(file,length);
+	if (!s3d_init(&argc,&argv,"s3dosm"))
+	{
+		draw_layer(layer);
+		s3d_mainloop(mainloop);
+		s3d_quit();
+	}
+	return(0);
+}

Added: trunk/apps/s3dosm/object.c
===================================================================
--- trunk/apps/s3dosm/object.c	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/object.c	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,93 @@
+#include "s3dosm.h"
+#include <stdlib.h> /* malloc() */
+
+/* ########### object ############### */
+void object_init(object_t *nobj)
+{
+	nobj->bal=0;
+	nobj->left=NULL;
+	nobj->right=NULL;
+	nobj->id=0;
+	nobj->oid=-1;
+	nobj->tag_n=0;
+	nobj->tag_p=NULL;
+	nobj->type=T_OBJECT;
+}
+
+object_t *object_new(int key)
+{
+	object_t *nobj=malloc(sizeof(object_t));
+	object_init(nobj);
+	nobj->id=key;
+	return (nobj);
+}
+/* ########### node ############### */
+void node_init(node_t *nnode)
+{
+	object_init((object_t *)nnode);
+	OBJECT_T(nnode)->type=T_NODE;
+	nnode->lat=0;
+	nnode->lon=0;
+	nnode->alt=0;
+	nnode->visible=1;
+	nnode->vid=-1;
+	nnode->adj_n=0;
+	nnode->adj_p=NULL;
+}
+node_t *node_new()
+{
+	node_t *nnode=malloc(sizeof(node_t));
+	node_init(nnode);
+	return(nnode);
+}
+void node_free(node_t *node)
+{
+	free(node);
+}
+
+/* ########### segment ############### */
+void segment_init(segment_t *nsegment)
+{
+	object_init((object_t *)nsegment);
+	OBJECT_T(nsegment)->type=T_SEGMENT;
+	nsegment->from=0;
+	nsegment->to=0;
+}
+segment_t *segment_new()
+{
+	segment_t *nsegment=malloc(sizeof(segment_t));
+	segment_init(nsegment);
+	return(nsegment);
+}
+void segment_free(segment_t *segment)
+{
+	free(segment);
+}
+
+/* ########### way  ############### */
+void way_init(way_t *nway)
+{
+	object_init((object_t *)nway);
+	OBJECT_T(nway)->type=T_WAY;
+	nway->seg_n=0;
+	nway->seg_p=NULL;
+}
+way_t *way_new()
+{
+	way_t *nway=malloc(sizeof(way_t));
+	way_init(nway);
+	return(nway);
+}
+void way_free(way_t *way)
+{
+	if (way->seg_n>0) 
+		free(way->seg_p);
+	free(way);
+}
+/* ########### layer  ############### */
+layer_t *layer_new()
+{
+	layer_t *nlayer=malloc(sizeof(layer_t));
+	nlayer->tree=NULL;
+	return(nlayer);
+}

Added: trunk/apps/s3dosm/osm.c
===================================================================
--- trunk/apps/s3dosm/osm.c	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/osm.c	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,216 @@
+#include "s3dosm.h"
+#include <string.h>			/* strcmp() */
+#include <stdlib.h>			/* strtof(),strtod(),strtol() */
+#include <libxml/parser.h>
+#include <libxml/tree.h>
+int parse_osm_tags(object_t *obj, xmlNodePtr cur)
+{
+	
+	xmlNodePtr c;
+	xmlAttrPtr attr;
+	char *v,*k;
+	tag_t *t;
+	int n;
+	
+	n=0;
+	for (c=cur->children;c!=NULL; c=c->next)
+	{
+		if (0==strcmp((char *)c->name,"tag"))	{
+			for (attr=c->properties;attr;attr=attr->next)
+			{
+				if (0==strcmp((char *)attr->name,"k")) 				k=(char *)attr->children->content;
+				else if (0==strcmp((char *)attr->name,"v")) 		v=(char *)attr->children->content;
+			}
+			if (k==NULL || v==NULL)			printf("bad tag!!\n");
+			else 							n++;
+		}
+	}
+	obj->tag_n=n;
+	obj->tag_p=malloc(obj->tag_n*sizeof(tag_t));
+	n=0;
+	for (c=cur->children;c!=NULL; c=c->next)
+	{
+		if (0==strcmp((char *)c->name,"tag"))	{
+			for (attr=c->properties;attr;attr=attr->next)
+			{
+				if (0==strcmp((char *)attr->name,"k")) 				k=(char *)attr->children->content;
+				else if (0==strcmp((char *)attr->name,"v")) 		v=(char *)attr->children->content;
+			}
+			if (k!=NULL && v!=NULL)
+			{
+				t=&(obj->tag_p[n]);
+				t->ttype=TAG_UNKNOWN;
+				t->k=strdup(k);
+				t->v=strdup(v);
+				t->d.s=v;
+				if 		(0==strcmp(k,"name"))	t->ttype=TAG_NAME;
+
+				n++;
+			}
+		}
+	}
+
+
+	
+	return(0);
+
+}
+object_t *parse_osm_way(xmlNodePtr cur)
+{
+	way_t *way;
+	xmlNodePtr kids;
+	xmlAttrPtr attr,kattr;
+	int n=0;
+
+	way=way_new();
+	
+	for (attr=cur->properties;attr;attr=attr->next)
+		if (0==strcmp((char *)attr->name,"id")) 			way->base.id=	strtol((char *)attr->children->content,NULL,10);
+	/* count segments */
+	for (kids=cur->children;kids!=NULL;kids=kids->next)
+	{
+		if (0==strcmp((char *)kids->name,"seg"))			n++;
+	}
+	/* add segments in segment buffer */
+	if (n>0)
+	{
+		way->seg_n=n;
+		way->seg_p=malloc(sizeof(ID_T)*n);
+		n=0;
+		for (kids=cur->children;kids!=NULL;kids=kids->next)
+		{
+			if (0==strcmp((char *)kids->name,"seg"))	{
+				for (kattr=kids->properties;kattr;kattr=kattr->next)
+					if (0==strcmp((char *)kattr->name,"id")) 			way->seg_p[n]=	strtol((char *)kattr->children->content,NULL,10);
+				n++;
+			}
+		}
+	}
+
+	parse_osm_tags(OBJECT_T(way),cur);
+	if (way->base.id>0)
+		return(OBJECT_T(way));
+	else {
+		way_free(way);
+		return(NULL);
+	}
+}
+object_t *parse_osm_segment(xmlNodePtr cur)
+{
+	segment_t *segment;
+	xmlAttrPtr attr;
+
+	segment=segment_new();
+	
+	for (attr=cur->properties;attr;attr=attr->next)
+	{
+		
+		if (0==strcmp((char *)attr->name,"id")) 			segment->base.id=	strtol((char *)attr->children->content,NULL,10);
+		else if (0==strcmp((char *)attr->name,"from")) 		segment->from=		strtod((char *)attr->children->content,NULL);
+		else if (0==strcmp((char *)attr->name,"to")) 		segment->to=		strtod((char *)attr->children->content,NULL);
+	}
+	parse_osm_tags(OBJECT_T(segment),cur);
+	if ((segment->base.id>0) && (segment->from>0) && (segment->to>0))
+		return(OBJECT_T(segment));
+	else {
+		segment_free(segment);
+		return(NULL);
+	}
+}
+object_t *parse_osm_node(xmlNodePtr cur)
+{
+	node_t *node;
+	xmlAttrPtr attr;
+
+	node=node_new();
+	attr=cur->properties;
+	
+	for (attr=cur->properties;attr;attr=attr->next)
+	{
+		if (0==strcmp((char *)attr->name,"id")) 			node->base.id=		strtol((char *)attr->children->content,NULL,10);
+		else if (0==strcmp((char *)attr->name,"lat")) 		node->lat=			strtod((char *)attr->children->content,NULL);
+		else if (0==strcmp((char *)attr->name,"lon")) 		node->lon=			strtod((char *)attr->children->content,NULL);
+		else if (0==strcmp((char *)attr->name,"visible")) 	node->visible=		(0==strcmp((char *)attr->children->content,"true"))?1:0;
+		else if (0==strcmp((char *)attr->name,"time")) {}	/* TODO */
+	}
+	parse_osm_tags(OBJECT_T(node),cur);
+	if (node->base.id>0)
+		return(OBJECT_T(node));
+	else {
+		node_free(node);
+		return(NULL);
+	}
+}
+
+void debug_obj(object_t *obj, void *dummy)
+{
+	int i;
+	way_t *way=WAY_T(obj);
+	node_t *node=NODE_T(obj);
+	segment_t *seg=SEGMENT_T(obj);
+	switch (obj->type)
+	{
+		case T_OBJECT:
+				printf("object %d\n",(int)obj->id);
+				break;
+		case T_NODE:
+				 printf("node %d [%f,%f,%f]\n",(int)obj->id,node->lon,node->lat,node->alt);
+				 break;
+		case T_SEGMENT:
+				 printf("segment %d [%d->%d]\n",(int)obj->id,(int)seg->from,(int)seg->to);
+				 break;
+		case T_WAY:
+				 printf("way %d [ ",(int)obj->id);
+				 for (i=0;i<way->seg_n;i++)
+					printf("%d ",(int)way->seg_p[i]);
+				 printf("]\n");
+				 break;
+				 
+	}
+}
+/* parse the osm input file */
+layer_t *parse_osm(char *buf, int length)
+{
+	xmlDocPtr doc;
+	xmlNodePtr cur;
+	layer_t *layer=layer_new();
+	object_t *obj;
+	
+
+	doc = xmlReadMemory(buf, length, "noname.xml", NULL, 0);
+	if (doc == NULL) {
+		fprintf(stderr,"Document not parsed successfully.\n");
+		return(NULL);
+	}
+	cur = xmlDocGetRootElement(doc);
+	if (cur == NULL) {
+		fprintf(stderr,"empty document\n");
+		xmlFreeDoc(doc);
+		return(NULL);
+	}
+	for (cur=cur->children;cur!=NULL; cur=cur->next)
+	{
+		if (cur->type==XML_ELEMENT_NODE)
+		{
+			if (0==strcmp((char *)cur->name,"node"))
+			{
+				if (NULL!=(obj=parse_osm_node(cur)))
+					layer->tree=avl_insert(layer->tree, obj);
+				else fprintf(stderr,"bad node\n"); 
+			} else if (0==strcmp((char *)cur->name,"segment"))
+			{
+				if (NULL!=(obj=parse_osm_segment(cur)))
+					layer->tree=avl_insert(layer->tree, obj);
+				else fprintf(stderr,"bad segment\n");
+			} else if (0==strcmp((char *)cur->name,"way"))
+			{
+				if (NULL!=(obj=parse_osm_way(cur)))
+					layer->tree=avl_insert(layer->tree, obj);
+				else fprintf(stderr,"bad way\n");
+			}
+		}
+	}
+	xmlFreeDoc(doc);
+
+	return(layer);
+}

Added: trunk/apps/s3dosm/s3dosm.h
===================================================================
--- trunk/apps/s3dosm/s3dosm.h	2006-10-31 16:09:09 UTC (rev 460)
+++ trunk/apps/s3dosm/s3dosm.h	2006-11-05 22:48:17 UTC (rev 461)
@@ -0,0 +1,106 @@
+typedef struct _layer_t layer_t;
+typedef struct _adj_t adj_t;
+typedef struct _object_t object_t;
+typedef struct _node_t node_t;
+typedef struct _segment_t segment_t;
+typedef struct _way_t way_t;
+typedef struct _tag_t tag_t;
+typedef unsigned long ID_T;
+#define OBJECT_T(x)		((object_t *)x)
+#define NODE_T(x)		((node_t *)x)
+#define SEGMENT_T(x)	((segment_t *)x)
+#define WAY_T(x)		((way_t *)x)
+struct _layer_t {
+	object_t *tree;
+};
+
+enum {
+	T_OBJECT,
+	T_NODE,
+	T_SEGMENT,
+	T_WAY
+};
+enum {
+	TAG_UNKNOWN,
+	TAG_NAME,
+	TAG_N
+};
+typedef void (*avl_func)(object_t *, void *);
+struct _tag_t {
+	char *k, *v;
+	char ttype;
+	union {
+		char *s;
+		int num;
+		int b;
+		float f;
+	} d;
+};
+
+struct _object_t {
+	ID_T 		 id;		/* id of this object */
+	int 		 oid;		/* s3d oid */
+	int 		 type;		/* type of this object */
+	/* avl stuff */
+	char 		 bal;
+	int			 tag_n;
+	tag_t		*tag_p;
+	object_t 	*left,*right;
+};
+
+struct _adj_t {
+	ID_T 		 to,seg;	/* destination and segment to use */
+};
+
+struct _node_t {
+	object_t	 base;
+	double 		 lon;		/* longitude */
+	double 		 lat;		/* latitude */
+	double 		 alt;		/* altitude */
+	char 		 visible;	/* node visible? */
+	int 		 vid;		/* vertex id */
+/*	time_t time;*/
+	int 		 adj_n;		/* adjacence list */
+	adj_t 		*adj_p;
+};
+struct _segment_t {
+	object_t	 base;
+	ID_T		 from;
+	ID_T		 to;
+};
+struct _way_t {
+	object_t	 base;
+	int 		 seg_n;
+	ID_T		*seg_p;
+};
+
+
+
+/* object.c */
+void 		 object_init(object_t *nobj);
+void 		 node_init(node_t *nnode);
+void 		 segment_init(segment_t *nsegment);
+void 		 way_init(way_t *nway);
+object_t 	*object_new(int key);
+node_t 		*node_new();
+segment_t 	*segment_new();
+layer_t 	*layer_new();
+way_t 		*way_new();
+void 		 node_free(node_t *node);
+void 		 segment_free(segment_t *segment);
+void 		 way_free(way_t *way);
+/* osm.c */
+layer_t *parse_osm(char *buf, int length);
+/* void xml_parse(xmlNode *a_node); */
+void 		 avl_tree_trav(object_t *t, avl_func func, void *data);
+object_t 	*avl_find(object_t *t, int val);
+object_t 	*avl_rotate_right(object_t *t);
+object_t	*avl_rotate_left(object_t *t);
+object_t	*avl_insert(object_t *t, object_t *nn);
+object_t 	*avl_leftmost(object_t *t);
+object_t 	*avl_rightmost(object_t *t);
+object_t 	*avl_remove(object_t *t, object_t *nn);
+int 		 avl_height(object_t *t);
+int 		 draw_layer(layer_t *layer);
+/* draw.c */
+int draw_layer(layer_t *layer);



From dotslash at mail.berlios.de  Mon Nov  6 17:20:14 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Mon, 6 Nov 2006 17:20:14 +0100
Subject: [S3d-svn] r462 - in trunk/apps: s3dfm s3dosm
Message-ID: <200611061620.kA6GKE9l031387@sheep.berlios.de>

Author: dotslash
Date: 2006-11-06 17:20:13 +0100 (Mon, 06 Nov 2006)
New Revision: 462

Modified:
   trunk/apps/s3dfm/dialog.c
   trunk/apps/s3dosm/http_fetcher.c
   trunk/apps/s3dosm/main.c
Log:
- add some debug printf()

Modified: trunk/apps/s3dfm/dialog.c
===================================================================
--- trunk/apps/s3dfm/dialog.c	2006-11-05 22:48:17 UTC (rev 461)
+++ trunk/apps/s3dfm/dialog.c	2006-11-06 16:20:13 UTC (rev 462)
@@ -163,7 +163,7 @@
 	return(NULL);
 	
 }
-/* now really copy ... */
+/* start the thread, as filesystem stuff is locked ... */
 void window_fs(s3dw_widget *button)
 {
 	pthread_create( &filethread, NULL, thread_start, NULL);
@@ -394,6 +394,7 @@
 			}
 		}
 		if (fs_lock==TYPE_FINISHED)	{
+			printf("filesystem stuff is finisheed, cleaning up");
 			if (fp!=NULL)
 			{
 				fl_del(fp);

Modified: trunk/apps/s3dosm/http_fetcher.c
===================================================================
--- trunk/apps/s3dosm/http_fetcher.c	2006-11-05 22:48:17 UTC (rev 461)
+++ trunk/apps/s3dosm/http_fetcher.c	2006-11-06 16:20:13 UTC (rev 462)
@@ -137,17 +137,18 @@
 	}
 	strcat(requestBuf, "\r\n");
 
-
-
+	printf("[HTTP] creating connection ...\n");
 	sock = makeSocket(host);			/* errorSource set within makeSocket */
 	if(sock == -1) { free(url); return -1;}
-
+	printf("[HTTP] sending request \n");
 	if(write(sock, requestBuf, strlen(requestBuf)) == -1)
 		{ close(sock); free(url); errorSource = ERRNO; return -1; }
 
+	printf("[HTTP] receiving header\n");
 	/* Grab enough of the response to get the metadata */
 	ret = _http_read_header(sock, headerBuf);	/* errorSource set within */
 	if(ret < 0) { close(sock); free(url); return -1; }
+	printf("[HTTP] receiving content\n");
 
 	/* Get the return code */
 	charIndex = strstr(headerBuf, "HTTP/");
@@ -281,6 +282,7 @@
 				return -1;
 				}
 			}
+		printf("[HTTP] read %d bytes\n",ret);
 		}
 	
 	/*

Modified: trunk/apps/s3dosm/main.c
===================================================================
--- trunk/apps/s3dosm/main.c	2006-11-05 22:48:17 UTC (rev 461)
+++ trunk/apps/s3dosm/main.c	2006-11-06 16:20:13 UTC (rev 462)
@@ -19,6 +19,7 @@
 	char url[1024];
 	char *fileBuf;						/* Pointer to downloaded data */
 	snprintf(url,1024,"www.openstreetmap.org/api/0.3/map?bbox=%f,%f,%f,%f",minlon,minlat,maxlon,maxlat);
+	printf("downloading url [ %s ]\n",url);
 
 	http_setAuth(user,pass);
 	ret = http_fetch(url, &fileBuf);	/* Downloads page */
@@ -53,9 +54,13 @@
 	char *file=NULL;
 	layer_t *layer;
 	int length;
-/*	file=read_file("file.osm",&length);*/
+	file=read_file("sachsen.osm",&length);
+/*	printf("reading data from server ...\n");
 	file=read_osm(11.610952060700235,49.409270464751515,14.453271808922661,52.338403146460365,&length);
+	file=read_osm(12.8,50.6,13,51,&length);*/
+	printf("okay, parsing data...\n");
 	layer=parse_osm(file,length);
+	printf("okay, drawing layer...\n");
 	if (!s3d_init(&argc,&argv,"s3dosm"))
 	{
 		draw_layer(layer);



From dotslash at mail.berlios.de  Tue Nov  7 22:42:45 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Tue, 7 Nov 2006 22:42:45 +0100
Subject: [S3d-svn] r463 - trunk/apps/s3dosm
Message-ID: <200611072142.kA7Lgjcu028443@sheep.berlios.de>

Author: dotslash
Date: 2006-11-07 22:42:44 +0100 (Tue, 07 Nov 2006)
New Revision: 463

Removed:
   trunk/apps/s3dosm/.draw.c.swp
   trunk/apps/s3dosm/.http_fetcher.c.swp
Modified:
   trunk/apps/s3dosm/Makefile
   trunk/apps/s3dosm/main.c
   trunk/apps/s3dosm/object.c
   trunk/apps/s3dosm/osm.c
   trunk/apps/s3dosm/s3dosm.h
Log:
- add parser for kismet files to s3dosm
- remove vim swapfile which i accidently uploaded

Deleted: trunk/apps/s3dosm/.draw.c.swp
===================================================================
(Binary files differ)

Deleted: trunk/apps/s3dosm/.http_fetcher.c.swp
===================================================================
(Binary files differ)

Modified: trunk/apps/s3dosm/Makefile
===================================================================
--- trunk/apps/s3dosm/Makefile	2006-11-06 16:20:13 UTC (rev 462)
+++ trunk/apps/s3dosm/Makefile	2006-11-07 21:42:44 UTC (rev 463)
@@ -1,6 +1,6 @@
 BIN=s3dosm
 VERS=0.0.1
-SOURCES=main.c http_fetcher.c http_error_codes.c osm.c avl.c object.c draw.c
+SOURCES=main.c http_fetcher.c http_error_codes.c osm.c avl.c object.c draw.c kismet.c
 HEADERS=s3dosm.h http_fetcher.h
 OBJS=$(SOURCES:.c=.o)
 CFLAGS=-Wall -ggdb -pedantic `xml2-config --cflags`

Modified: trunk/apps/s3dosm/main.c
===================================================================
--- trunk/apps/s3dosm/main.c	2006-11-06 16:20:13 UTC (rev 462)
+++ trunk/apps/s3dosm/main.c	2006-11-07 21:42:44 UTC (rev 463)
@@ -54,12 +54,12 @@
 	char *file=NULL;
 	layer_t *layer;
 	int length;
-	file=read_file("sachsen.osm",&length);
+	file=read_file("kismet_sample.xml",&length);
 /*	printf("reading data from server ...\n");
 	file=read_osm(11.610952060700235,49.409270464751515,14.453271808922661,52.338403146460365,&length);
 	file=read_osm(12.8,50.6,13,51,&length);*/
 	printf("okay, parsing data...\n");
-	layer=parse_osm(file,length);
+	layer=parse_kismet(file,length);
 	printf("okay, drawing layer...\n");
 	if (!s3d_init(&argc,&argv,"s3dosm"))
 	{

Modified: trunk/apps/s3dosm/object.c
===================================================================
--- trunk/apps/s3dosm/object.c	2006-11-06 16:20:13 UTC (rev 462)
+++ trunk/apps/s3dosm/object.c	2006-11-07 21:42:44 UTC (rev 463)
@@ -2,6 +2,10 @@
 #include <stdlib.h> /* malloc() */
 
 /* ########### object ############### */
+void object_free(object_t *nobjs)
+{
+	/* TODO: remove taglist etc */
+}
 void object_init(object_t *nobj)
 {
 	nobj->bal=0;

Modified: trunk/apps/s3dosm/osm.c
===================================================================
--- trunk/apps/s3dosm/osm.c	2006-11-06 16:20:13 UTC (rev 462)
+++ trunk/apps/s3dosm/osm.c	2006-11-07 21:42:44 UTC (rev 463)
@@ -167,6 +167,8 @@
 				 break;
 				 
 	}
+	for (i=0;i<obj->tag_n;i++)
+		printf("tag %d: %s -> %s\n",i,obj->tag_p[i].k,obj->tag_p[i].v);
 }
 /* parse the osm input file */
 layer_t *parse_osm(char *buf, int length)

Modified: trunk/apps/s3dosm/s3dosm.h
===================================================================
--- trunk/apps/s3dosm/s3dosm.h	2006-11-06 16:20:13 UTC (rev 462)
+++ trunk/apps/s3dosm/s3dosm.h	2006-11-07 21:42:44 UTC (rev 463)
@@ -90,7 +90,10 @@
 void 		 segment_free(segment_t *segment);
 void 		 way_free(way_t *way);
 /* osm.c */
+void debug_obj(object_t *obj, void *dummy);
 layer_t *parse_osm(char *buf, int length);
+/* kismet.c */
+layer_t *parse_kismet(char *buf, int length);
 /* void xml_parse(xmlNode *a_node); */
 void 		 avl_tree_trav(object_t *t, avl_func func, void *data);
 object_t 	*avl_find(object_t *t, int val);



From dotslash at mail.berlios.de  Thu Nov  9 21:03:22 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Thu, 9 Nov 2006 21:03:22 +0100
Subject: [S3d-svn] r464 - trunk/apps/s3dosm
Message-ID: <200611092003.kA9K3MY1015430@sheep.berlios.de>

Author: dotslash
Date: 2006-11-09 21:03:22 +0100 (Thu, 09 Nov 2006)
New Revision: 464

Added:
   trunk/apps/s3dosm/kismet.c
Log:
- forgot to add kismet.c to repository

Added: trunk/apps/s3dosm/kismet.c
===================================================================
--- trunk/apps/s3dosm/kismet.c	2006-11-07 21:42:44 UTC (rev 463)
+++ trunk/apps/s3dosm/kismet.c	2006-11-09 20:03:22 UTC (rev 464)
@@ -0,0 +1,101 @@
+#include "s3dosm.h"
+#include <string.h>			/* strcmp() */
+#include <stdlib.h>			/* strtof(),strtod(),strtol() */
+#include <libxml/parser.h>
+#include <libxml/tree.h>
+void add_tag(object_t *obj,char *k, char *v)
+{
+	tag_t *t;
+	obj->tag_n++;
+	obj->tag_p=realloc(obj->tag_p,obj->tag_n*sizeof(tag_t));
+	if (k!=NULL && v!=NULL)
+	{
+		t=&(obj->tag_p[obj->tag_n-1]);
+		t->ttype=TAG_UNKNOWN;
+		t->k=strdup(k);
+		t->v=strdup(v);
+		t->d.s=v;
+		if (0==strcmp(k,"name"))	t->ttype=TAG_NAME;
+	}
+
+}
+object_t *parse_kismet_node(xmlNodePtr cur)
+{
+	node_t *node;
+	xmlAttrPtr attr;
+	xmlNodePtr kids,gpskids;
+
+	node=node_new();
+	attr=cur->properties;
+	
+	for (attr=cur->properties;attr;attr=attr->next)
+	{
+		if (0==strcmp((char *)attr->name,"number")) 		node->base.id=		strtol((char *)attr->children->content,NULL,10);
+		else if (0==strcmp((char *)attr->name,"wep")) 		add_tag(OBJECT_T(node),"wep",(char *)attr->children->content);
+	}
+	for (kids=cur->children;kids;kids=kids->next)
+	{
+		if (0==strcmp((char *)kids->name,"SSID")) 			add_tag(OBJECT_T(node),"SSID",(char *)xmlNodeGetContent(kids->children));
+		if (0==strcmp((char *)kids->name,"BSSID")) 			add_tag(OBJECT_T(node),"BSSID",(char *)xmlNodeGetContent(kids->children));
+		if (0==strcmp((char *)kids->name,"gps-info"))
+		{
+			for (gpskids=kids->children;gpskids;gpskids=gpskids->next)
+			{
+				/* get median value */
+				if (0==strcmp((char *)gpskids->name,"min-lat")) 		node->lat=node->lat + strtod((char *)xmlNodeGetContent(gpskids->children),NULL)/2;
+				if (0==strcmp((char *)gpskids->name,"max-lat")) 		node->lat=node->lat + strtod((char *)xmlNodeGetContent(gpskids->children),NULL)/2;
+				if (0==strcmp((char *)gpskids->name,"min-lon")) 		node->lon=node->lon + strtod((char *)xmlNodeGetContent(gpskids->children),NULL)/2;
+				if (0==strcmp((char *)gpskids->name,"max-lon")) 		node->lon=node->lon + strtod((char *)xmlNodeGetContent(gpskids->children),NULL)/2;
+				if (0==strcmp((char *)gpskids->name,"min-alt")) 		node->alt=node->alt + strtod((char *)xmlNodeGetContent(gpskids->children),NULL)/2;
+				if (0==strcmp((char *)gpskids->name,"max-alt")) 		node->alt=node->alt + strtod((char *)xmlNodeGetContent(gpskids->children),NULL)/2;
+
+
+			}
+		}
+	}
+
+	if (node->base.id>0 && (node->lon!=0.0) && (node->lat!=0.0)) /* really, i don't want to discriminate anyone at 0 lat 0 lon running a wifi hotspot, even
+																	if it's in the middle of the ocean. i'm very sorry. */
+		return(OBJECT_T(node));
+	else {
+		node_free(node);
+		return(NULL);
+	}
+}
+
+/* parse the osm input file */
+layer_t *parse_kismet(char *buf, int length)
+{
+	xmlDocPtr doc;
+	xmlNodePtr cur;
+	layer_t *layer=layer_new();
+	object_t *obj;
+	
+
+	doc = xmlReadMemory(buf, length, "noname.xml", NULL, 0);
+	if (doc == NULL) {
+		fprintf(stderr,"Document not parsed successfully.\n");
+		return(NULL);
+	}
+	cur = xmlDocGetRootElement(doc);
+	if (cur == NULL) {
+		fprintf(stderr,"empty document\n");
+		xmlFreeDoc(doc);
+		return(NULL);
+	}
+	for (cur=cur->children;cur!=NULL; cur=cur->next)
+	{
+		if (cur->type==XML_ELEMENT_NODE)
+		{
+			if (0==strcmp((char *)cur->name,"wireless-network"))
+			{
+				if (NULL!=(obj=parse_kismet_node(cur)))
+					layer->tree=avl_insert(layer->tree, obj);
+				else fprintf(stderr,"bad node\n"); 
+			} 
+		}
+	}
+	xmlFreeDoc(doc);
+
+	return(layer);
+}



From dotslash at mail.berlios.de  Thu Nov  9 23:00:55 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Thu, 9 Nov 2006 23:00:55 +0100
Subject: [S3d-svn] r465 - in trunk: . apps/s3dosm
Message-ID: <200611092200.kA9M0tBd025828@sheep.berlios.de>

Author: dotslash
Date: 2006-11-09 23:00:54 +0100 (Thu, 09 Nov 2006)
New Revision: 465

Added:
   trunk/apps/s3dosm/nav.c
Modified:
   trunk/
   trunk/apps/s3dosm/Makefile
   trunk/apps/s3dosm/draw.c
   trunk/apps/s3dosm/kismet.c
   trunk/apps/s3dosm/main.c
   trunk/apps/s3dosm/osm.c
   trunk/apps/s3dosm/s3dosm.h
Log:
 r1121 at kero:  dotslash | 2006-11-09 23:00:43 +0100
 - draw access points found by kismet
 - some more navigation formalism



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1114
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1121

Modified: trunk/apps/s3dosm/Makefile
===================================================================
--- trunk/apps/s3dosm/Makefile	2006-11-09 20:03:22 UTC (rev 464)
+++ trunk/apps/s3dosm/Makefile	2006-11-09 22:00:54 UTC (rev 465)
@@ -1,6 +1,6 @@
 BIN=s3dosm
 VERS=0.0.1
-SOURCES=main.c http_fetcher.c http_error_codes.c osm.c avl.c object.c draw.c kismet.c
+SOURCES=main.c http_fetcher.c http_error_codes.c osm.c avl.c object.c draw.c kismet.c nav.c tag.c
 HEADERS=s3dosm.h http_fetcher.h
 OBJS=$(SOURCES:.c=.o)
 CFLAGS=-Wall -ggdb -pedantic `xml2-config --cflags`

Modified: trunk/apps/s3dosm/draw.c
===================================================================
--- trunk/apps/s3dosm/draw.c	2006-11-09 20:03:22 UTC (rev 464)
+++ trunk/apps/s3dosm/draw.c	2006-11-09 22:00:54 UTC (rev 465)
@@ -2,7 +2,7 @@
 #include <s3d.h>
 #include <math.h>	/* sin(), cos() */
 #include <stdio.h>	/* printf() */
-#define	ESIZE	6378
+#include <string.h>	/* strcmp() */
 
 struct vdata{
 	layer_t *layer;
@@ -24,6 +24,7 @@
 void draw_add_vertices(object_t *t, void *data)
 {
 	struct vdata *v=data;
+	tag_t *tag;
 	
 	if (t->type==T_NODE)
 	{
@@ -32,7 +33,33 @@
 		node->vid=v->vnum;
 		calc_earth_to_eukl(node->lon,node->lat,x);
 		s3d_push_vertex(v->oid,x[0],x[1],x[2]);
-		printf("vertex  %d: %f %f %f\n",node->vid,x[0],x[1],x[2]);
+		if (node->visible==2) /* something special */
+		{
+			if (NULL!=(tag=tag_get(OBJECT_T(node), "amenity")))
+			{
+				if (0==(strcmp(tag->v,"wifi")))
+				{
+					tag_t *wtag,*ttag;
+					if (NULL!=(ttag=tag_get(OBJECT_T(node),"wifi_type")))
+					if (0==strcmp(ttag->v,"infrastructure"))
+					{	
+						if (NULL!=(wtag=tag_get(OBJECT_T(node), "wifi_wep")))
+							if (0==strcmp(wtag->v,"true"))
+								node->base.oid=s3d_clone(icons[ICON_AP_OPEN].oid);
+							else
+								node->base.oid=s3d_clone(icons[ICON_AP].oid);
+						else
+							node->base.oid=s3d_clone(icons[ICON_AP].oid);
+						s3d_translate(node->base.oid,x[0],x[1],x[2]);
+						s3d_link(node->base.oid,v->oid);
+						s3d_flags_on(node->base.oid,S3D_OF_VISIBLE);
+						s3d_rotate(node->base.oid,(90-node->lat),node->lon,0);
+					} else {
+						printf("not an ap\n");
+					}
+				}
+			}
+		}
 		v->vnum++;
 		v->lonsum+=node->lon;
 		v->latsum+=node->lat;
@@ -43,42 +70,50 @@
 void draw_add_segments(object_t *t, void *data)
 {
 	struct vdata *v=data;
+	tag_t *tag;
+	int color;
 	if (t->type==T_SEGMENT)
 	{
 		node_t *from, *to;
 		segment_t *seg=SEGMENT_T(t);
 		from=NODE_T(avl_find(v->layer->tree,seg->from));
 		to=NODE_T(avl_find(v->layer->tree,seg->to));
+
+		color=0;
+		/* TODO: look at the ways using it, not the segments  */
+		if (NULL!=(tag=tag_get(OBJECT_T(seg), "highway")))
+		{
+			if (0==(strcmp(tag->v,"motorway"))) color=1;
+			else if (0==(strcmp(tag->v,"motorway_link"))) color=2;
+			else if (0==(strcmp(tag->v,"primary"))) color=3;
+			else if (0==(strcmp(tag->v,"secondary"))) color=4;
+			else if (0==(strcmp(tag->v,"residential"))) color=5;
+		}
 		if (from!=NULL && to!=NULL)
-			s3d_push_line(v->oid,from->vid,to->vid,0);
+			s3d_push_line(v->oid,from->vid,to->vid,color);
 	}
 }
-int oidx, oidy;
 int draw_layer(layer_t *layer)
 {
 	struct vdata v;
 	int oid;
-	double lo,la,x[3];
 	oid=s3d_new_object();
-	oidx=s3d_new_object();
-	oidy=s3d_new_object();
 	s3d_link(oid,oidy);
-	s3d_link(oidy,oidx);
 	v.layer=layer;
 	v.oid=oid;
 	v.vnum=0;
 	v.n=0;
 	v.lonsum=v.latsum=0;
-	s3d_push_material(oid,1,1,1,	1,1,1,	1,1,1);
+	s3d_push_material(oid,1,1,1,		1,1,1,		1,1,1); /* default */
+	s3d_push_material(oid,0.3,0.3,1,	0.3,0.3,1.0,	0.3,0.3,1.0);	/* motorway */
+	s3d_push_material(oid,0.5,0.5,0.8,	0.5,0.5,0.8,	0.5,0.5,0.8);	/* motorway_link*/
+	s3d_push_material(oid,1.0,1.0,0.0,	1.0,1.0,0.0, 	1.0,1.0,0.0);	/* primary */
+	s3d_push_material(oid,0.8,0.8,0.2,	0.8,0.8,0.2, 	0.8,0.8,0.2);	/* secondary */
+	s3d_push_material(oid,0.7,0.7,0.4,	0.7,0.7,0.4, 	0.7,0.7,0.4);	/* secondary */
 	avl_tree_trav(layer->tree,draw_add_vertices,(void *)&v);
 	avl_tree_trav(layer->tree,draw_add_segments,(void *)&v);
-	lo=(v.lonsum)/v.n;
-	la=(v.latsum)/v.n;
-	s3d_rotate(oidy,0,-lo,0);
-	s3d_rotate(oidx,-(90-la),0,0);
-	calc_earth_to_eukl(lo,la,x);
-	s3d_translate(oidx,0,-ESIZE*10,0);
-	s3d_scale(oidx,10);
+	layer->center_lo=(v.lonsum)/v.n;
+	layer->center_la=(v.latsum)/v.n;	
 	s3d_flags_on(oid,S3D_OF_VISIBLE);
 	return(0);
 

Modified: trunk/apps/s3dosm/kismet.c
===================================================================
--- trunk/apps/s3dosm/kismet.c	2006-11-09 20:03:22 UTC (rev 464)
+++ trunk/apps/s3dosm/kismet.c	2006-11-09 22:00:54 UTC (rev 465)
@@ -3,22 +3,6 @@
 #include <stdlib.h>			/* strtof(),strtod(),strtol() */
 #include <libxml/parser.h>
 #include <libxml/tree.h>
-void add_tag(object_t *obj,char *k, char *v)
-{
-	tag_t *t;
-	obj->tag_n++;
-	obj->tag_p=realloc(obj->tag_p,obj->tag_n*sizeof(tag_t));
-	if (k!=NULL && v!=NULL)
-	{
-		t=&(obj->tag_p[obj->tag_n-1]);
-		t->ttype=TAG_UNKNOWN;
-		t->k=strdup(k);
-		t->v=strdup(v);
-		t->d.s=v;
-		if (0==strcmp(k,"name"))	t->ttype=TAG_NAME;
-	}
-
-}
 object_t *parse_kismet_node(xmlNodePtr cur)
 {
 	node_t *node;
@@ -31,12 +15,13 @@
 	for (attr=cur->properties;attr;attr=attr->next)
 	{
 		if (0==strcmp((char *)attr->name,"number")) 		node->base.id=		strtol((char *)attr->children->content,NULL,10);
-		else if (0==strcmp((char *)attr->name,"wep")) 		add_tag(OBJECT_T(node),"wep",(char *)attr->children->content);
+		else if (0==strcmp((char *)attr->name,"wep")) 		tag_add(OBJECT_T(node),"wifi_wep",(char *)attr->children->content);
+		else if (0==strcmp((char *)attr->name,"type")) 		tag_add(OBJECT_T(node),"wifi_type",(char *)attr->children->content);
 	}
 	for (kids=cur->children;kids;kids=kids->next)
 	{
-		if (0==strcmp((char *)kids->name,"SSID")) 			add_tag(OBJECT_T(node),"SSID",(char *)xmlNodeGetContent(kids->children));
-		if (0==strcmp((char *)kids->name,"BSSID")) 			add_tag(OBJECT_T(node),"BSSID",(char *)xmlNodeGetContent(kids->children));
+		if (0==strcmp((char *)kids->name,"SSID")) 			tag_add(OBJECT_T(node),"wifi_SSID",(char *)xmlNodeGetContent(kids->children));
+		if (0==strcmp((char *)kids->name,"BSSID")) 			tag_add(OBJECT_T(node),"wifi_BSSID",(char *)xmlNodeGetContent(kids->children));
 		if (0==strcmp((char *)kids->name,"gps-info"))
 		{
 			for (gpskids=kids->children;gpskids;gpskids=gpskids->next)
@@ -48,11 +33,11 @@
 				if (0==strcmp((char *)gpskids->name,"max-lon")) 		node->lon=node->lon + strtod((char *)xmlNodeGetContent(gpskids->children),NULL)/2;
 				if (0==strcmp((char *)gpskids->name,"min-alt")) 		node->alt=node->alt + strtod((char *)xmlNodeGetContent(gpskids->children),NULL)/2;
 				if (0==strcmp((char *)gpskids->name,"max-alt")) 		node->alt=node->alt + strtod((char *)xmlNodeGetContent(gpskids->children),NULL)/2;
-
-
 			}
 		}
 	}
+	node->visible=2;	/* something special */
+	tag_add(OBJECT_T(node), "amenity", "wifi");
 
 	if (node->base.id>0 && (node->lon!=0.0) && (node->lat!=0.0)) /* really, i don't want to discriminate anyone at 0 lat 0 lon running a wifi hotspot, even
 																	if it's in the middle of the ocean. i'm very sorry. */
@@ -96,6 +81,12 @@
 		}
 	}
 	xmlFreeDoc(doc);
-
 	return(layer);
 }
+layer_t *load_kismet_file(char *filename)
+{
+	int length;
+	char *file;
+	if (NULL==(file=read_file(filename,&length))) return(NULL);
+	return parse_kismet(file,length);
+}

Modified: trunk/apps/s3dosm/main.c
===================================================================
--- trunk/apps/s3dosm/main.c	2006-11-09 20:03:22 UTC (rev 464)
+++ trunk/apps/s3dosm/main.c	2006-11-09 22:00:54 UTC (rev 465)
@@ -2,7 +2,6 @@
 #include <stdlib.h>		 /*  malloc(),free() */
 #include <sys/stat.h>	 /*  fstat() */
 #include <s3d.h>
-#include "http_fetcher.h"
 #include "s3dosm.h"
 #include <time.h>	 /*  nanosleep(), struct tm, time_t...  */
 
@@ -11,27 +10,7 @@
 	struct timespec t={0,100*1000*1000}; /* 100 mili seconds */
 	nanosleep(&t,NULL); 
 }
-char *read_osm(float minlon, float minlat, float maxlon, float maxlat,int *length)
-{
-	int ret;
-	char *user = "foo at packetmixer.de";
-	char *pass = "foobar";
-	char url[1024];
-	char *fileBuf;						/* Pointer to downloaded data */
-	snprintf(url,1024,"www.openstreetmap.org/api/0.3/map?bbox=%f,%f,%f,%f",minlon,minlat,maxlon,maxlat);
-	printf("downloading url [ %s ]\n",url);
 
-	http_setAuth(user,pass);
-	ret = http_fetch(url, &fileBuf);	/* Downloads page */
-	if(ret == -1)
-	{	
-		http_perror("http_fetch");	
-		return(NULL);
-	}
-	if (length!=NULL) *length=ret;
-	return(fileBuf);
-	
-}
 char *read_file(char *fname, int *fsize)
 {
 	FILE *fp;
@@ -51,19 +30,23 @@
 
 int main(int argc, char **argv)
 {
-	char *file=NULL;
-	layer_t *layer;
-	int length;
-	file=read_file("kismet_sample.xml",&length);
-/*	printf("reading data from server ...\n");
-	file=read_osm(11.610952060700235,49.409270464751515,14.453271808922661,52.338403146460365,&length);
-	file=read_osm(12.8,50.6,13,51,&length);*/
-	printf("okay, parsing data...\n");
-	layer=parse_kismet(file,length);
+	layer_t *layer1,*layer2;
+	printf("loading data");
+	layer1=load_kismet_file("kismet_sample.xml");
+/*	layer2=load_osm_web(11.610952060700235,49.409270464751515,14.453271808922661,52.338403146460365);	*/	/* sachsen */
+	layer2=load_osm_file("sachsen.osm");
+	if (layer1==NULL || layer2==NULL)
+	{
+		printf("could not read data :(");
+		return(-1);
+	}
 	printf("okay, drawing layer...\n");
 	if (!s3d_init(&argc,&argv,"s3dosm"))
 	{
-		draw_layer(layer);
+		nav_init();
+		draw_layer(layer1);
+		draw_layer(layer2);
+		nav_center(layer2->center_la,layer2->center_lo);
 		s3d_mainloop(mainloop);
 		s3d_quit();
 	}

Added: trunk/apps/s3dosm/nav.c
===================================================================
--- trunk/apps/s3dosm/nav.c	2006-11-09 20:03:22 UTC (rev 464)
+++ trunk/apps/s3dosm/nav.c	2006-11-09 22:00:54 UTC (rev 465)
@@ -0,0 +1,32 @@
+#include "s3dosm.h"
+#include <s3d.h>
+icon_t icons[ICON_NUM]={
+		{"objs/accesspoint.3ds",0},
+		{"objs/star.3ds",0},
+	};
+int oidx, oidy;
+void nav_loadicons()
+{
+	int i;
+	for (i=0;i<ICON_NUM;i++)
+	{
+		icons[i].oid=s3d_import_model_file(icons[i].path);
+	}
+}
+void nav_init()
+{
+	nav_loadicons();
+	oidx=s3d_new_object();
+	oidy=s3d_new_object();
+	s3d_link(oidy,oidx);
+}
+void nav_center(float la, float lo)
+{
+	double x[3];
+	s3d_rotate(oidy,0,-lo,0);
+	s3d_rotate(oidx,-(90-la),0,0);
+	calc_earth_to_eukl(lo,la,x);
+	s3d_translate(oidx,0,-ESIZE*RESCALE,0);
+	s3d_scale(oidx,RESCALE);
+}
+

Modified: trunk/apps/s3dosm/osm.c
===================================================================
--- trunk/apps/s3dosm/osm.c	2006-11-09 20:03:22 UTC (rev 464)
+++ trunk/apps/s3dosm/osm.c	2006-11-09 22:00:54 UTC (rev 465)
@@ -3,6 +3,7 @@
 #include <stdlib.h>			/* strtof(),strtod(),strtol() */
 #include <libxml/parser.h>
 #include <libxml/tree.h>
+#include "http_fetcher.h"
 int parse_osm_tags(object_t *obj, xmlNodePtr cur)
 {
 	
@@ -216,3 +217,29 @@
 
 	return(layer);
 }
+layer_t *load_osm_web(float minlon, float minlat, float maxlon, float maxlat)
+{
+	int ret;
+	char *user = "foo at packetmixer.de";
+	char *pass = "foobar";
+	char url[1024];
+	char *fileBuf;						/* Pointer to downloaded data */
+	snprintf(url,1024,"www.openstreetmap.org/api/0.3/map?bbox=%f,%f,%f,%f",minlon,minlat,maxlon,maxlat);
+	printf("downloading url [ %s ]\n",url);
+
+	http_setAuth(user,pass);
+	ret = http_fetch(url, &fileBuf);	/* Downloads page */
+	if(ret == -1)
+	{	
+		http_perror("http_fetch");	
+		return(NULL);
+	}
+	return parse_osm(fileBuf, ret);
+}
+layer_t *load_osm_file(char *filename)
+{
+	int length;
+	char *file;
+	if (NULL==(file=read_file(filename,&length))) return(NULL);
+	return parse_osm(file,length);
+}

Modified: trunk/apps/s3dosm/s3dosm.h
===================================================================
--- trunk/apps/s3dosm/s3dosm.h	2006-11-09 20:03:22 UTC (rev 464)
+++ trunk/apps/s3dosm/s3dosm.h	2006-11-09 22:00:54 UTC (rev 465)
@@ -1,3 +1,6 @@
+#define	ESIZE	637800		/* earth size */
+#define	RESCALE	1
+
 typedef struct _layer_t layer_t;
 typedef struct _adj_t adj_t;
 typedef struct _object_t object_t;
@@ -5,15 +8,22 @@
 typedef struct _segment_t segment_t;
 typedef struct _way_t way_t;
 typedef struct _tag_t tag_t;
+typedef struct _icon_t icon_t;
 typedef unsigned long ID_T;
 #define OBJECT_T(x)		((object_t *)x)
 #define NODE_T(x)		((node_t *)x)
 #define SEGMENT_T(x)	((segment_t *)x)
 #define WAY_T(x)		((way_t *)x)
+
 struct _layer_t {
 	object_t *tree;
+	float center_lo, center_la;
 };
 
+struct _icon_t {
+	char *path;
+	int oid;
+};
 enum {
 	T_OBJECT,
 	T_NODE,
@@ -21,10 +31,16 @@
 	T_WAY
 };
 enum {
+	ICON_AP,
+	ICON_AP_OPEN,
+	ICON_NUM
+};
+enum {
 	TAG_UNKNOWN,
 	TAG_NAME,
 	TAG_N
 };
+extern icon_t icons[];
 typedef void (*avl_func)(object_t *, void *);
 struct _tag_t {
 	char *k, *v;
@@ -57,7 +73,7 @@
 	double 		 lon;		/* longitude */
 	double 		 lat;		/* latitude */
 	double 		 alt;		/* altitude */
-	char 		 visible;	/* node visible? */
+	char 		 visible;	/* node visible? 0 = no, 1 = yes, 2 = some sepcial object */
 	int 		 vid;		/* vertex id */
 /*	time_t time;*/
 	int 		 adj_n;		/* adjacence list */
@@ -89,12 +105,16 @@
 void 		 node_free(node_t *node);
 void 		 segment_free(segment_t *segment);
 void 		 way_free(way_t *way);
+/* main.c */
+char *read_file(char *fname, int *fsize);
 /* osm.c */
 void debug_obj(object_t *obj, void *dummy);
 layer_t *parse_osm(char *buf, int length);
+layer_t *load_osm_file(char *filename);
+layer_t *load_osm_web(float minlon, float minlat, float maxlon, float maxlat);
 /* kismet.c */
 layer_t *parse_kismet(char *buf, int length);
-/* void xml_parse(xmlNode *a_node); */
+layer_t *load_kismet_file(char *filename);
 void 		 avl_tree_trav(object_t *t, avl_func func, void *data);
 object_t 	*avl_find(object_t *t, int val);
 object_t 	*avl_rotate_right(object_t *t);
@@ -106,4 +126,12 @@
 int 		 avl_height(object_t *t);
 int 		 draw_layer(layer_t *layer);
 /* draw.c */
+void calc_earth_to_eukl(double lon, double lat, double *x);
 int draw_layer(layer_t *layer);
+/* nav.c */
+void nav_init();
+void nav_center(float la, float lo);
+extern int oidy;
+/* tag.c */
+void tag_add(object_t *obj,char *k, char *v);
+tag_t *tag_get(object_t *obj, char *k);



From dotslash at mail.berlios.de  Thu Nov  9 23:03:11 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Thu, 9 Nov 2006 23:03:11 +0100
Subject: [S3d-svn] r466 - in trunk: . apps/s3dosm
Message-ID: <200611092203.kA9M3Bet026557@sheep.berlios.de>

Author: dotslash
Date: 2006-11-09 23:03:11 +0100 (Thu, 09 Nov 2006)
New Revision: 466

Added:
   trunk/apps/s3dosm/tag.c
Modified:
   trunk/
Log:
 r1123 at kero:  dotslash | 2006-11-09 23:03:08 +0100
 - forgot tag.c



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1121
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1123

Added: trunk/apps/s3dosm/tag.c
===================================================================
--- trunk/apps/s3dosm/tag.c	2006-11-09 22:00:54 UTC (rev 465)
+++ trunk/apps/s3dosm/tag.c	2006-11-09 22:03:11 UTC (rev 466)
@@ -0,0 +1,28 @@
+#include "s3dosm.h"
+#include <stdio.h>	/* printf() */
+#include <string.h>	/* strcmp() */
+#include <stdlib.h>	/* realloc() */
+void tag_add(object_t *obj,char *k, char *v)
+{
+	tag_t *t;
+	obj->tag_n++;
+	obj->tag_p=realloc(obj->tag_p,obj->tag_n*sizeof(tag_t));
+	if (k!=NULL && v!=NULL)
+	{
+		t=&(obj->tag_p[obj->tag_n-1]);
+		t->ttype=TAG_UNKNOWN;
+		t->k=strdup(k);
+		t->v=strdup(v);
+		t->d.s=v;
+		if (0==strcmp(k,"name"))	t->ttype=TAG_NAME;
+	}
+}
+tag_t *tag_get(object_t *obj, char *k)
+{
+	int i;
+	for (i=0;i<obj->tag_n;i++)
+	{
+		if (0==strcmp(obj->tag_p[i].k,k)) return(&(obj->tag_p[i]));
+	}
+	return(NULL);
+}



From dotslash at mail.berlios.de  Fri Nov 10 20:48:07 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Fri, 10 Nov 2006 20:48:07 +0100
Subject: [S3d-svn] r467 - in trunk: . libs3d/libg3d/plugins/import
Message-ID: <200611101948.kAAJm7XY026537@sheep.berlios.de>

Author: dotslash
Date: 2006-11-10 20:48:06 +0100 (Fri, 10 Nov 2006)
New Revision: 467

Modified:
   trunk/
   trunk/libs3d/libg3d/plugins/import/Makefile.am
Log:
 r1125 at kero:  dotslash | 2006-11-10 20:48:00 +0100
 - removed leocad lib - it only creates weird warnings for us.



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1123
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1125

Modified: trunk/libs3d/libg3d/plugins/import/Makefile.am
===================================================================
--- trunk/libs3d/libg3d/plugins/import/Makefile.am	2006-11-09 22:03:11 UTC (rev 466)
+++ trunk/libs3d/libg3d/plugins/import/Makefile.am	2006-11-10 19:48:06 UTC (rev 467)
@@ -8,7 +8,6 @@
 	imp_dxf.la \
 	imp_heightfield.la \
 	imp_iob.la \
-	imp_leocad.la \
 	imp_lwo.la \
 	imp_md2.la \
 	imp_md3.la \
@@ -16,6 +15,7 @@
 	imp_obj.la \
 	imp_q3o.la \
 	imp_vrml.la
+#	imp_leocad.la 
 
 # we are experimental ;D
 pluginimp_LTLIBRARIES += \



From dotslash at mail.berlios.de  Fri Nov 10 21:04:50 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Fri, 10 Nov 2006 21:04:50 +0100
Subject: [S3d-svn] r468 - in trunk: . libs3d/libg3d/plugins/import
Message-ID: <200611102004.kAAK4o0r028404@sheep.berlios.de>

Author: dotslash
Date: 2006-11-10 21:04:49 +0100 (Fri, 10 Nov 2006)
New Revision: 468

Modified:
   trunk/
   trunk/libs3d/libg3d/plugins/import/imp_3ds.c
   trunk/libs3d/libg3d/plugins/import/imp_3ds_callbacks.c
Log:
 r1127 at kero:  dotslash | 2006-11-10 21:04:46 +0100
 - remove debug output from imp_3ds.c



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1125
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1127

Modified: trunk/libs3d/libg3d/plugins/import/imp_3ds.c
===================================================================
--- trunk/libs3d/libg3d/plugins/import/imp_3ds.c	2006-11-10 19:48:06 UTC (rev 467)
+++ trunk/libs3d/libg3d/plugins/import/imp_3ds.c	2006-11-10 20:04:49 UTC (rev 468)
@@ -62,7 +62,9 @@
 	}
 	nbytes = g3d_read_int32_le(f);
 	nbytes -= 6;
+#if DEBUG > 0
 	g_printerr("[%4.4X] 3DS file: main length: %d\n", magic, nbytes);
+#endif
 
 	global.context = context;
 	global.model = model;

Modified: trunk/libs3d/libg3d/plugins/import/imp_3ds_callbacks.c
===================================================================
--- trunk/libs3d/libg3d/plugins/import/imp_3ds_callbacks.c	2006-11-10 19:48:06 UTC (rev 467)
+++ trunk/libs3d/libg3d/plugins/import/imp_3ds_callbacks.c	2006-11-10 20:04:49 UTC (rev 468)
@@ -64,7 +64,9 @@
 			break;
 
 		default:
+#if DEBUG > 0
 			g_printerr("[3DS] unhandled COLOR_F in 0x%04X\n", parent->id);
+#endif
 			break;
 	}
 
@@ -104,7 +106,9 @@
 			break;
 
 		default:
+#if DEBUG > 0
 			g_printerr("[3DS] unhandled COLOR_24 in 0x%04X\n", parent->id);
+#endif
 			break;
 	}
 



From dotslash at mail.berlios.de  Fri Nov 10 21:29:39 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Fri, 10 Nov 2006 21:29:39 +0100
Subject: [S3d-svn] r469 - in trunk: . apps/s3dosm
Message-ID: <200611102029.kAAKTda0031140@sheep.berlios.de>

Author: dotslash
Date: 2006-11-10 21:29:38 +0100 (Fri, 10 Nov 2006)
New Revision: 469

Added:
   trunk/apps/s3dosm/LICENSE
   trunk/apps/s3dosm/io.c
Modified:
   trunk/
   trunk/apps/s3dosm/Makefile
   trunk/apps/s3dosm/avl.c
   trunk/apps/s3dosm/draw.c
   trunk/apps/s3dosm/http_fetcher.c
   trunk/apps/s3dosm/http_fetcher.h
   trunk/apps/s3dosm/kismet.c
   trunk/apps/s3dosm/main.c
   trunk/apps/s3dosm/nav.c
   trunk/apps/s3dosm/object.c
   trunk/apps/s3dosm/osm.c
   trunk/apps/s3dosm/s3dosm.h
   trunk/apps/s3dosm/tag.c
Log:
 r1129 at kero:  dotslash | 2006-11-10 21:29:34 +0100
 - add copyright notice (gplv2)
 - read commandline arguments for input files or download
 - comment to http_setAuth() function in http_fetcher
 - added layerset to hold layers



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1127
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1129

Added: trunk/apps/s3dosm/LICENSE
===================================================================
--- trunk/apps/s3dosm/LICENSE	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/LICENSE	2006-11-10 20:29:38 UTC (rev 469)
@@ -0,0 +1,340 @@
+		    GNU GENERAL PUBLIC LICENSE
+		       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.
+                       51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Library General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+		    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+			    NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+	    How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Library General
+Public License instead of this License.

Modified: trunk/apps/s3dosm/Makefile
===================================================================
--- trunk/apps/s3dosm/Makefile	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/Makefile	2006-11-10 20:29:38 UTC (rev 469)
@@ -1,6 +1,6 @@
 BIN=s3dosm
 VERS=0.0.1
-SOURCES=main.c http_fetcher.c http_error_codes.c osm.c avl.c object.c draw.c kismet.c nav.c tag.c
+SOURCES=main.c http_fetcher.c http_error_codes.c osm.c avl.c object.c draw.c kismet.c nav.c tag.c io.c
 HEADERS=s3dosm.h http_fetcher.h
 OBJS=$(SOURCES:.c=.o)
 CFLAGS=-Wall -ggdb -pedantic `xml2-config --cflags`

Modified: trunk/apps/s3dosm/avl.c
===================================================================
--- trunk/apps/s3dosm/avl.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/avl.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -1,3 +1,26 @@
+/*
+ * avl.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3dosm, a gps card application for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3dosm is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3dosm is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3dosm; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include "s3dosm.h"
 #include <stdio.h>  /* printf(), NULL */
 #include <stdlib.h> /* malloc(), free() */

Modified: trunk/apps/s3dosm/draw.c
===================================================================
--- trunk/apps/s3dosm/draw.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/draw.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -1,3 +1,25 @@
+/*
+ * draw.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3dosm, a gps card application for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3dosm is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3dosm is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3dosm; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
 #include "s3dosm.h"
 #include <s3d.h>
 #include <math.h>	/* sin(), cos() */
@@ -40,22 +62,22 @@
 				if (0==(strcmp(tag->v,"wifi")))
 				{
 					tag_t *wtag,*ttag;
-					if (NULL!=(ttag=tag_get(OBJECT_T(node),"wifi_type")))
-					if (0==strcmp(ttag->v,"infrastructure"))
-					{	
-						if (NULL!=(wtag=tag_get(OBJECT_T(node), "wifi_wep")))
-							if (0==strcmp(wtag->v,"true"))
-								node->base.oid=s3d_clone(icons[ICON_AP_OPEN].oid);
+					if (NULL!=(ttag=tag_get(OBJECT_T(node),"wifi_type"))) {
+						if (0==strcmp(ttag->v,"infrastructure"))
+						{	
+							if (NULL!=(wtag=tag_get(OBJECT_T(node), "wifi_wep")))
+								if (0==strcmp(wtag->v,"true"))
+									node->base.oid=s3d_clone(icons[ICON_AP_OPEN].oid);
+								else
+									node->base.oid=s3d_clone(icons[ICON_AP].oid);
 							else
-								node->base.oid=s3d_clone(icons[ICON_AP].oid);
-						else
 							node->base.oid=s3d_clone(icons[ICON_AP].oid);
-						s3d_translate(node->base.oid,x[0],x[1],x[2]);
-						s3d_link(node->base.oid,v->oid);
-						s3d_flags_on(node->base.oid,S3D_OF_VISIBLE);
-						s3d_rotate(node->base.oid,(90-node->lat),node->lon,0);
-					} else {
-						printf("not an ap\n");
+							s3d_translate(node->base.oid,x[0],x[1],x[2]);
+							s3d_link(node->base.oid,v->oid);
+							s3d_flags_on(node->base.oid,S3D_OF_VISIBLE);
+							s3d_rotate(node->base.oid,(90-node->lat),node->lon,0);
+						} else { /* not an ap */
+						}
 					}
 				}
 			}
@@ -114,7 +136,13 @@
 	avl_tree_trav(layer->tree,draw_add_segments,(void *)&v);
 	layer->center_lo=(v.lonsum)/v.n;
 	layer->center_la=(v.latsum)/v.n;	
+	layer->visible=1;
 	s3d_flags_on(oid,S3D_OF_VISIBLE);
 	return(0);
-
 }
+void draw_all_layers()
+{
+	int i;
+	for (i=0;i<layerset.n;i++)
+		draw_layer(layerset.p[i]);
+}

Modified: trunk/apps/s3dosm/http_fetcher.c
===================================================================
--- trunk/apps/s3dosm/http_fetcher.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/http_fetcher.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -14,6 +14,10 @@
 
 	See included LICENSE file for details
 
+	Changes: 
+		Simon Wunderlich <dotslash at packetmixer.de>
+		+ added http_setAuth() to support basic http-authentication and some minor fixes
+		
  */
 
 #include <stdlib.h>
@@ -369,7 +373,7 @@
 	
 	return 0;
 	}
-void http_setAuth(const char *user, const char *pass)
+int http_setAuth(const char *user, const char *pass)
 {
 	unsigned char plain[1024];
 	char ec64[]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
@@ -377,6 +381,12 @@
 	int i,j,c,len,n;
 	char o;
 	 /* base64 encode user and pass */
+	if ((user==NULL) || (pass==NULL)) /* bad input or request to clean up */
+	{
+		if (auth!=NULL)	free(auth); /* free old auth */
+		auth=NULL;
+		return(-1);
+	}
 	
 	snprintf((char *)plain,1024,"%s:%s",user,pass);
 	len=strlen((char *)plain);
@@ -398,7 +408,7 @@
 	b64[j]=0;
 	if (auth!=NULL)	free(auth); /* free old auth */
 	auth=b64;
-	
+	return(0);	
 
 	
 }

Modified: trunk/apps/s3dosm/http_fetcher.h
===================================================================
--- trunk/apps/s3dosm/http_fetcher.h	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/http_fetcher.h	2006-11-10 20:29:38 UTC (rev 469)
@@ -14,6 +14,10 @@
 	Library General Public License for more details.
 
 	See LICENSE file for details
+
+	Changes: 
+		Simon Wunderlich <dotslash at packetmixer.de>
+		+ added http_setAuth() to support basic http-authentication and some minor fixes
 									
  */
 
@@ -85,9 +89,16 @@
 	 *	waiting forever (or until data shows up, whichever comes first)
 	 */
 void http_setTimeout(int seconds);
-void http_setAuth(const char *user, const char *pass);
 
 	/*
+	 * Activate authentication for the Request. If user or pass is NULL,
+	 * http_set_Auth assumes a request to cleanup (disable Authentication). 
+	 * Returns 0 on success, and -1 on error or cleanup.
+	 */
+
+int http_setAuth(const char *user, const char *pass);
+
+	/*
 	 * Takes a url and puts the filename portion of it into 'filename'.
 	 * Returns:
 	 *	0 on success, or

Added: trunk/apps/s3dosm/io.c
===================================================================
--- trunk/apps/s3dosm/io.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/io.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -0,0 +1,109 @@
+/*
+ * io.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3dosm, a gps card application for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3dosm is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3dosm is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3dosm; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+#include "s3dosm.h"
+#include <stdio.h>		 /* fopen(), fread(), fclose() */
+#include <stdlib.h>		 /* malloc(), free() */
+#include <string.h>		 /* strstr() */
+#include <sys/stat.h>	 /* fstat() */
+#include <getopt.h>		 /* getopt() */
+#include <errno.h>		 /* errno */
+#include <s3d.h>		 /* s3d_usage() */
+
+char *read_file(char *fname, int *fsize)
+{
+	FILE *fp;
+	char *buf=NULL;
+	int filesize;
+	struct stat bf;
+
+	if ((fp = fopen(fname, "rt")) == NULL)	{ 	fprintf(stderr,"read_file( %s ):fopen(): %s",fname,strerror(errno)); 		return(NULL);	}
+	if (fstat(fileno(fp),&bf))				{ 	fprintf(stderr,"read_file( %s ):fopen(): %s",fname,strerror(errno));		return(NULL);	}
+	filesize=bf.st_size;
+	if ((buf=malloc(filesize))==NULL)		{	fprintf(stderr,"read_file( %s ):malloc(): %s",fname,strerror(errno));		return(NULL);	}
+	fread(buf, filesize, 1, fp);
+	fclose(fp);
+	if (fsize!=NULL) *fsize=filesize;
+	return(buf);
+}
+
+int process_args(int argc, char **argv)
+{
+	int					 lopt_idx,i;
+	char				 c;
+	float				 minlat, minlon, maxlat, maxlon;
+	struct option long_options[] = 
+	{
+		{"help",0,0,'h'},
+		{"osm",1,0,'o'},
+		{0,0,0,0}
+	};
+	while (-1!=(c=getopt_long(argc,argv,"?ho",long_options,&lopt_idx)))
+	{
+		switch (c)
+		{
+				case 0:break;
+				case 'o':
+					if (4==sscanf(optarg,"%f,%f,%f,%f",&minlat,&minlon,&maxlat,&maxlon))
+					   	layerset_add(load_osm_web(minlat,minlon,maxlat,maxlon));
+					else {
+						printf("%s: bad map bounding box",optarg);
+						return(-1);
+					}
+					break;
+				case '?':
+				case 'h':
+					printf("\nUSAGE: %s [options] [files]\n\n",argv[0]);
+					printf("options:\n");
+					printf("\t--osm, -o MINLAT,MINLON,MAXLAT,MAXLON:\n");
+					printf("\t\tload a map with the given bounding box\n\t\tfrom the openstreetmap server\n");
+					printf("\t--help, -?, -h: this helpful text\n\n");
+					printf("supported file types:\n");
+					printf("\t+ Kismet .xml Logs\n");
+					printf("\t+ Opemstreetmap .osm files\n\n");
+					s3d_usage();	/* add s3d usage */
+					return(-1);
+		}
+	}
+	for (i=1;i<argc;i++)
+	{
+		if (strstr(argv[i],".osm")-argv[i]==strlen(argv[i])-4)
+			layerset_add(load_osm_file(argv[i]));
+		else if (strstr(argv[i],".xml")-argv[i]==strlen(argv[i])-4) /* might be osm or kismet xml */
+		{
+			char *file;
+			int fsize;
+			if (NULL==(file=read_file(argv[i],&fsize)))				
+				break;
+			if (NULL!=strstr(file,"<!DOCTYPE detection-run SYSTEM \"http://kismetwireless.net"))
+				layerset_add(parse_kismet(file,fsize));
+			else if (NULL!=strstr(file,"<osm "))
+				layerset_add(parse_osm(file,fsize));
+			free(file);
+					
+		}
+	}
+	return(0);
+}
+

Modified: trunk/apps/s3dosm/kismet.c
===================================================================
--- trunk/apps/s3dosm/kismet.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/kismet.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -1,3 +1,26 @@
+/*
+ * kismet.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3dosm, a gps card application for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3dosm is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3dosm is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3dosm; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include "s3dosm.h"
 #include <string.h>			/* strcmp() */
 #include <stdlib.h>			/* strtof(),strtod(),strtol() */
@@ -87,6 +110,9 @@
 {
 	int length;
 	char *file;
+	layer_t *ret;
 	if (NULL==(file=read_file(filename,&length))) return(NULL);
-	return parse_kismet(file,length);
+	ret=parse_kismet(file,length);
+	free(file);
+	return ret;
 }

Modified: trunk/apps/s3dosm/main.c
===================================================================
--- trunk/apps/s3dosm/main.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/main.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -1,6 +1,28 @@
+/*
+ * main.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3dosm, a gps card application for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3dosm is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3dosm is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3dosm; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <stdio.h>		 /*  snprintf(), printf(), NULL */
-#include <stdlib.h>		 /*  malloc(),free() */
-#include <sys/stat.h>	 /*  fstat() */
 #include <s3d.h>
 #include "s3dosm.h"
 #include <time.h>	 /*  nanosleep(), struct tm, time_t...  */
@@ -10,45 +32,21 @@
 	struct timespec t={0,100*1000*1000}; /* 100 mili seconds */
 	nanosleep(&t,NULL); 
 }
-
-char *read_file(char *fname, int *fsize)
+int init(int argc, char **argv)
 {
-	FILE *fp;
-	char *buf=NULL;
-	int filesize;
-	struct stat bf;
+	if (process_args(argc,argv)) return(-1);
+	nav_init();
+	draw_all_layers();
+	nav_autocenter();
+	return(0);
 
-	if ((fp = fopen(fname, "rt")) == NULL)	{ 	perror("read_file():fopen()"); 		return(NULL);	}
-	if (fstat(fileno(fp),&bf))				{ 	perror("read_file():fstat()");		return(NULL);	}
-	filesize=bf.st_size;
-	if ((buf=malloc(filesize))==NULL)		{	perror("read_file():malloc()");		return(NULL);	}
-	fread(buf, filesize, 1, fp);
-	fclose(fp);
-	if (fsize!=NULL) *fsize=filesize;
-	return(buf);
 }
-
 int main(int argc, char **argv)
 {
-	layer_t *layer1,*layer2;
-	printf("loading data");
-	layer1=load_kismet_file("kismet_sample.xml");
-/*	layer2=load_osm_web(11.610952060700235,49.409270464751515,14.453271808922661,52.338403146460365);	*/	/* sachsen */
-	layer2=load_osm_file("sachsen.osm");
-	if (layer1==NULL || layer2==NULL)
-	{
-		printf("could not read data :(");
-		return(-1);
-	}
-	printf("okay, drawing layer...\n");
 	if (!s3d_init(&argc,&argv,"s3dosm"))
 	{
-		nav_init();
-		draw_layer(layer1);
-		draw_layer(layer2);
-		nav_center(layer2->center_la,layer2->center_lo);
-		s3d_mainloop(mainloop);
+		if (!init(argc, argv)) s3d_mainloop(mainloop);
 		s3d_quit();
-	}
+	} else return(-1);
 	return(0);
 }

Modified: trunk/apps/s3dosm/nav.c
===================================================================
--- trunk/apps/s3dosm/nav.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/nav.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -5,6 +5,7 @@
 		{"objs/star.3ds",0},
 	};
 int oidx, oidy;
+/* load icons, we want to clone each of them later */
 void nav_loadicons()
 {
 	int i;
@@ -13,6 +14,7 @@
 		icons[i].oid=s3d_import_model_file(icons[i].path);
 	}
 }
+/* load rotation centers */
 void nav_init()
 {
 	nav_loadicons();
@@ -20,6 +22,7 @@
 	oidy=s3d_new_object();
 	s3d_link(oidy,oidx);
 }
+/* center to given latitude longitude */
 void nav_center(float la, float lo)
 {
 	double x[3];
@@ -29,4 +32,20 @@
 	s3d_translate(oidx,0,-ESIZE*RESCALE,0);
 	s3d_scale(oidx,RESCALE);
 }
-
+/* find some good center on our own */
+void nav_autocenter()
+{
+	int i;
+	float la, lo, n;
+	la=lo=n=0;
+	for (i=0;i<layerset.n;i++)
+		if (layerset.p[i]->visible)
+		{
+			la+=layerset.p[i]->center_la;
+			lo+=layerset.p[i]->center_lo;
+			n+=1;
+		}
+	if (n>0)
+		nav_center(la/n, lo/n);
+			
+}

Modified: trunk/apps/s3dosm/object.c
===================================================================
--- trunk/apps/s3dosm/object.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/object.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -1,3 +1,27 @@
+/*
+ * object.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3dosm, a gps card application for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3dosm is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3dosm is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3dosm; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3dosm.h"
 #include <stdlib.h> /* malloc() */
 
@@ -2,5 +26,7 @@
 /* ########### object ############### */
-void object_free(object_t *nobjs)
+void object_free(object_t *obj)
 {
-	/* TODO: remove taglist etc */
+	int i;
+	for (i=0;i<obj->tag_n;i++)
+		tag_free(&(obj->tag_p[i]));
 }
@@ -93,5 +119,16 @@
 {
 	layer_t *nlayer=malloc(sizeof(layer_t));
 	nlayer->tree=NULL;
+	nlayer->visible=0;
 	return(nlayer);
 }
+/* ########### layerset ############### */
+layerset_t layerset={0,NULL};
+
+void layerset_add(layer_t *layer)
+{
+	if (layer==NULL) return;
+	layerset.n++;
+	layerset.p=realloc(layerset.p, sizeof(layer_t *)*layerset.n);
+	layerset.p[layerset.n-1]=layer;
+}

Modified: trunk/apps/s3dosm/osm.c
===================================================================
--- trunk/apps/s3dosm/osm.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/osm.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -1,3 +1,26 @@
+/*
+ * osm.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3dosm, a gps card application for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3dosm is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3dosm is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3dosm; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include "s3dosm.h"
 #include <string.h>			/* strcmp() */
 #include <stdlib.h>			/* strtof(),strtod(),strtol() */
@@ -224,6 +247,7 @@
 	char *pass = "foobar";
 	char url[1024];
 	char *fileBuf;						/* Pointer to downloaded data */
+	layer_t *layer;
 	snprintf(url,1024,"www.openstreetmap.org/api/0.3/map?bbox=%f,%f,%f,%f",minlon,minlat,maxlon,maxlat);
 	printf("downloading url [ %s ]\n",url);
 
@@ -234,12 +258,18 @@
 		http_perror("http_fetch");	
 		return(NULL);
 	}
-	return parse_osm(fileBuf, ret);
+	layer=parse_osm(fileBuf, ret);
+	/* TODO: cleanup http-lib */
+	free(fileBuf);
+	return layer;
 }
 layer_t *load_osm_file(char *filename)
 {
 	int length;
 	char *file;
+	layer_t *ret;
 	if (NULL==(file=read_file(filename,&length))) return(NULL);
-	return parse_osm(file,length);
+	ret=parse_osm(file,length);
+	free(file);
+	return ret;
 }

Modified: trunk/apps/s3dosm/s3dosm.h
===================================================================
--- trunk/apps/s3dosm/s3dosm.h	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/s3dosm.h	2006-11-10 20:29:38 UTC (rev 469)
@@ -6,6 +6,7 @@
 typedef struct _object_t object_t;
 typedef struct _node_t node_t;
 typedef struct _segment_t segment_t;
+typedef struct _layerset_t layerset_t;
 typedef struct _way_t way_t;
 typedef struct _tag_t tag_t;
 typedef struct _icon_t icon_t;
@@ -14,10 +15,16 @@
 #define NODE_T(x)		((node_t *)x)
 #define SEGMENT_T(x)	((segment_t *)x)
 #define WAY_T(x)		((way_t *)x)
+struct _layerset_t {
+	int n;
+	layer_t **p;
+};
+extern layerset_t layerset;
 
 struct _layer_t {
 	object_t *tree;
 	float center_lo, center_la;
+	int visible;
 };
 
 struct _icon_t {
@@ -90,8 +97,8 @@
 	ID_T		*seg_p;
 };
 
+/* public functions */
 
-
 /* object.c */
 void 		 object_init(object_t *nobj);
 void 		 node_init(node_t *nnode);
@@ -105,8 +112,7 @@
 void 		 node_free(node_t *node);
 void 		 segment_free(segment_t *segment);
 void 		 way_free(way_t *way);
-/* main.c */
-char *read_file(char *fname, int *fsize);
+void 		 layerset_add(layer_t *layer);
 /* osm.c */
 void debug_obj(object_t *obj, void *dummy);
 layer_t *parse_osm(char *buf, int length);
@@ -124,14 +130,19 @@
 object_t 	*avl_rightmost(object_t *t);
 object_t 	*avl_remove(object_t *t, object_t *nn);
 int 		 avl_height(object_t *t);
-int 		 draw_layer(layer_t *layer);
 /* draw.c */
+void draw_all_layers();
 void calc_earth_to_eukl(double lon, double lat, double *x);
 int draw_layer(layer_t *layer);
 /* nav.c */
 void nav_init();
 void nav_center(float la, float lo);
+void nav_autocenter();
 extern int oidy;
 /* tag.c */
 void tag_add(object_t *obj,char *k, char *v);
 tag_t *tag_get(object_t *obj, char *k);
+void tag_free(tag_t *tag);
+/* io.c */
+char *read_file(char *fname, int *fsize);
+int process_args(int argc, char **argv);

Modified: trunk/apps/s3dosm/tag.c
===================================================================
--- trunk/apps/s3dosm/tag.c	2006-11-10 20:04:49 UTC (rev 468)
+++ trunk/apps/s3dosm/tag.c	2006-11-10 20:29:38 UTC (rev 469)
@@ -1,3 +1,25 @@
+/*
+ * tag.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3dosm, a gps card application for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3dosm is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3dosm is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3dosm; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
 #include "s3dosm.h"
 #include <stdio.h>	/* printf() */
 #include <string.h>	/* strcmp() */
@@ -26,3 +48,13 @@
 	}
 	return(NULL);
 }
+void tag_free(tag_t *tag)
+{
+	if (tag->d.s!=tag->v)
+		free(tag->d.s);
+	free(tag->v);
+	free(tag->k);
+	tag->k=NULL;
+	tag->d.s=NULL;
+	tag->v=NULL;
+}



From marec at mail.berlios.de  Mon Nov 13 15:28:19 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Mon, 13 Nov 2006 15:28:19 +0100
Subject: [S3d-svn] r470 - in trunk/apps: . kismet3d
Message-ID: <200611131428.kADESJDS000642@sheep.berlios.de>

Author: marec
Date: 2006-11-13 15:28:19 +0100 (Mon, 13 Nov 2006)
New Revision: 470

Added:
   trunk/apps/kismet3d/
   trunk/apps/kismet3d/kismet3d.c
   trunk/apps/kismet3d/kismet3d.h
   trunk/apps/kismet3d/list.h
Log:
kismet3d added (still in early stage)

Added: trunk/apps/kismet3d/kismet3d.c
===================================================================
--- trunk/apps/kismet3d/kismet3d.c	2006-11-10 20:29:38 UTC (rev 469)
+++ trunk/apps/kismet3d/kismet3d.c	2006-11-13 14:28:19 UTC (rev 470)
@@ -0,0 +1,438 @@
+/*
+ * kismet3d.c
+ *
+ * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
+ *
+ * This file is part of kismet3d, an 802.11 visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * kismet3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * olsrs3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with olsrs3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
+#include "kismet3d.h"
+#include <stdlib.h>   /* malloc() */
+#include <stdio.h>    /* printf() */
+#include <string.h>   /* memset() */
+#include <errno.h>    /* errno */
+#include <sys/socket.h>
+#include <sys/types.h>
+
+
+
+int num_kismet_sources = 0;
+
+DEFINE_LIST_HEAD(kismet_src_list);
+
+
+
+void *alloc_memory( int len ) {
+
+	void *res = malloc( len );
+
+	if ( res == NULL ) {
+		printf( "Error - can't allocate memory: %s\n", strerror(errno) );
+		exit(1);
+	}
+
+	memset( res, 0, len );
+
+	return res;
+
+}
+
+
+
+void parse_buffer( struct kismet_src *kismet_src ) {
+
+	char enable_network[] = "!0 ENABLE NETWORK bssid,type,channel,ssid\n", enable_client[] = "!0 ENABLE CLIENT bssid,mac,ip\n", enable_alert[] = "!0 ENABLE ALERT *\n";
+	char *read_ptr, *line_ptr, *last_cr_ptr = NULL, *parse_begin_ptr, *parse_end_ptr;
+	char *bssid, *channel, *type, *ssid, *mac, *ip;
+	int count;
+
+	read_ptr = kismet_src->recv_buff;
+	line_ptr = kismet_src->recv_buff;
+
+
+	while ( (*read_ptr) != '\0' ) {
+
+		if ( (*read_ptr) == '\n' ) {
+
+			last_cr_ptr = read_ptr;
+			*last_cr_ptr = '\0';
+
+			/* printf( "line: %s\n", line_ptr ); */
+
+			if ( strncmp( line_ptr, "*TIME: ", strlen( "*TIME: " ) ) == 0 ) {
+
+				if ( kismet_src->enable_level < 3 ) {
+
+					switch ( kismet_src->enable_level ) {
+
+						case 0:
+							if ( write( kismet_src->sock, enable_alert, sizeof( enable_alert ) ) < 0 ) {
+
+								printf( "Warning - can't send ENABLE ALERT message to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
+
+							}
+
+							break;
+
+						case 1:
+							if ( write( kismet_src->sock, enable_client, sizeof( enable_client ) ) < 0 ) {
+
+								printf( "Warning - can't send ENABLE CLIENT message to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
+
+							}
+
+							break;
+
+						case 2:
+
+							if ( write( kismet_src->sock, enable_network, sizeof( enable_network ) ) < 0 ) {
+
+								printf( "Warning - can't send ENABLE NETWORK message to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
+
+							}
+
+							break;
+
+					}
+
+					kismet_src->enable_level++;
+
+				}
+
+			} else if ( strncmp( line_ptr, "*NETWORK: ", strlen( "*NETWORK: " ) ) == 0 ) {
+
+				parse_begin_ptr = parse_end_ptr = line_ptr + strlen( "*NETWORK: " );
+				count = 0;
+
+				while ( (*parse_end_ptr) != '\0' ) {
+
+					if ( (*parse_end_ptr) == ' ' ) {
+
+						switch ( count ) {
+
+							case 0:
+								bssid = parse_begin_ptr;
+								break;
+
+							case 1:
+								type = parse_begin_ptr;
+								break;
+
+							case 2:
+								channel = parse_begin_ptr;
+								break;
+
+							case 3:
+								ssid = parse_begin_ptr;
+								break;
+
+						}
+
+						if ( count == 3 )
+							break;
+
+						*parse_end_ptr = '\0';
+						parse_begin_ptr = parse_end_ptr + 1;
+
+						count++;
+
+					}
+
+					parse_end_ptr++;
+
+				}
+
+				printf( "network found - bssid %s, type %s, channel %s, ssid %s\n", bssid, type, channel, ssid );
+
+			} else if ( strncmp( line_ptr, "*CLIENT: ", strlen( "*CLIENT: " ) ) == 0 ) {
+
+				parse_begin_ptr = parse_end_ptr = line_ptr + strlen( "*CLIENT: " );
+				count = 0;
+
+				while ( (*parse_end_ptr) != '\0' ) {
+
+					if ( (*parse_end_ptr) == ' ' ) {
+
+						switch ( count ) {
+
+							case 0:
+								bssid = parse_begin_ptr;
+								break;
+
+							case 1:
+								mac = parse_begin_ptr;
+								break;
+
+							case 2:
+								ip = parse_begin_ptr;
+								break;
+
+						}
+
+						if ( count == 2 )
+							break;
+
+						*parse_end_ptr = '\0';
+						parse_begin_ptr = parse_end_ptr + 1;
+
+						count++;
+
+					}
+
+					parse_end_ptr++;
+
+				}
+
+				printf( "client found - bssid %s, mac %s, ip %s\n", bssid, mac, ip );
+
+			} else if ( strncmp( line_ptr, "*ALERT: ", strlen( "*ALERT: " ) ) == 0 ) {
+
+				printf( "alert: %s\n", line_ptr + strlen( "*ALERT: " ) );
+
+			}
+
+			*last_cr_ptr = '\n';
+			line_ptr = last_cr_ptr + 1;
+
+		}
+
+		read_ptr++;
+
+	}
+
+	if ( last_cr_ptr != NULL )
+		memmove( kismet_src->recv_buff, last_cr_ptr + 1, strlen( last_cr_ptr ) );
+
+}
+
+
+
+int main( int argc, char *argv[] ) {
+
+	struct in_addr tmp_ip_holder;
+	struct kismet_src *kismet_src;
+	struct list_head *kismet_pos, *kismet_pos_tmp;
+	struct timeval tv;
+	int found_args = 1, max_sock = -1, res, status;
+	char *colon_ptr;
+	char enable_network[] = "!0 ENABLE NETWORK bssid,type,channel,ssid\n", enable_client[] = "!0 ENABLE CLIENT bssid,mac,ip\n";
+	unsigned char buff[1000];
+	fd_set wait_sockets, tmp_wait_sockets;
+
+
+	FD_ZERO(&wait_sockets);
+
+
+	while ( argc > found_args ) {
+
+		kismet_src = alloc_memory( sizeof(struct kismet_src) );
+
+		INIT_LIST_HEAD(&kismet_src->list);
+		kismet_src->enable_level = 0;
+
+		/* get ip and port from argument */
+		if ( ( colon_ptr = strchr( argv[found_args], ':' ) ) != NULL ) {
+
+			*colon_ptr = '\0';
+			colon_ptr++;
+
+		}
+
+		if ( inet_pton(AF_INET, argv[found_args], &tmp_ip_holder) < 1 ) {
+
+			printf( "Invalid kismet IP specified: %s\n", argv[found_args] );
+			free( kismet_src );
+			found_args++;
+			continue;
+
+		} else {
+
+			kismet_src->ip = tmp_ip_holder.s_addr;
+
+		}
+
+		if ( colon_ptr != NULL ) {
+
+			kismet_src->port = strtol(colon_ptr, NULL , 10);
+
+			if ( kismet_src->port < 0 || kismet_src->port > 65535 ) {
+				printf( "Invalid kismet PORT specified: %s\n", colon_ptr );
+				free( kismet_src );
+				found_args++;
+				continue;
+			}
+
+		} else {
+
+			kismet_src->port = 2501;
+
+		}
+
+
+		kismet_src->kismet_addr.sin_family = AF_INET;
+		kismet_src->kismet_addr.sin_port = htons( kismet_src->port );
+		kismet_src->kismet_addr.sin_addr.s_addr = kismet_src->ip;
+
+		kismet_src->kismet_ip = alloc_memory( 16 );
+		inet_ntop( AF_INET, &kismet_src->ip, kismet_src->kismet_ip, 16 );
+
+
+		/* connect to kismet server */
+		if ( ( kismet_src->sock = socket( PF_INET, SOCK_STREAM, 0 ) ) < 0 ) {
+
+			printf( "Error - can't create tcp socket (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
+			free( kismet_src->kismet_ip );
+			free( kismet_src );
+			found_args++;
+			continue;
+
+		}
+
+		if ( connect ( kismet_src->sock, (struct sockaddr *)&kismet_src->kismet_addr, sizeof(struct sockaddr) ) < 0 ) {
+
+			printf( "Error - can't connect to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
+			close( kismet_src->sock );
+			free( kismet_src->kismet_ip );
+			free( kismet_src );
+			found_args++;
+			continue;
+
+		}
+
+
+		kismet_src->recv_buff = alloc_memory( 1500 );
+
+		FD_SET( kismet_src->sock, &wait_sockets );
+		if ( kismet_src->sock > max_sock )
+			max_sock = kismet_src->sock;
+
+		list_add_tail(&kismet_src->list, &kismet_src_list);
+
+
+		num_kismet_sources++;
+		found_args++;
+
+	}
+
+
+	if ( num_kismet_sources == 0 ) {
+
+		printf( "Exiting - can't find any valid kismet server\n" );
+		exit(EXIT_FAILURE);
+
+	}
+
+
+	while ( num_kismet_sources > 0 ) {
+
+		tv.tv_sec = 0;
+		tv.tv_usec = 250;
+
+		tmp_wait_sockets = wait_sockets;
+
+		res = select(max_sock + 1, &tmp_wait_sockets, NULL, NULL, &tv);
+
+		if ( res > 0 ) {
+
+			max_sock = -1;
+
+			list_for_each_safe(kismet_pos, kismet_pos_tmp, &kismet_src_list) {
+
+				kismet_src = list_entry(kismet_pos, struct kismet_src, list);
+
+				if ( FD_ISSET( kismet_src->sock, &tmp_wait_sockets ) ) {
+
+					status = read( kismet_src->sock, buff, sizeof( buff ) );
+
+					if ( status > 0 ) {
+
+						if ( kismet_src->sock > max_sock )
+							max_sock = kismet_src->sock;
+
+						buff[status] = '\0';
+
+						/* check for potential buffer overflow */
+						if ( ( strlen( kismet_src->recv_buff ) + strlen( buff ) ) < 1500 ) {
+
+							strncat( kismet_src->recv_buff, buff, 1000 );
+
+						} else {
+
+							/* hope that carriage return is now in buf */
+							if ( strlen( kismet_src->recv_buff ) < 1500 ) {
+
+								printf( "WARNING: receive buffer almost filled without *any* carriage return within that data !\nAppending truncated buffer to receive buffer to prevent buffer overflow.\n" );
+								strncat( kismet_src->recv_buff, buff, 1500 - strlen( kismet_src->recv_buff ) );
+
+							} else {
+
+								printf( "ERROR: receive buffer filled without *any* carriage return within that data !\nClearing receive buffer to prevent buffer overflow.\n" );
+								strncpy( kismet_src->recv_buff, buff, 1000 );
+
+							}
+
+						}
+
+						parse_buffer( kismet_src );
+
+						/* printf( "buffer length: %i\n", strlen( kismet_src->recv_buff ) ); */
+
+					} else {
+
+						if ( status < 0 ) {
+
+							printf( "Error - can't read message from %s:%i: %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
+
+						} else {
+
+							printf( "Kismet server %s:%i closed connection ...\n", kismet_src->kismet_ip, kismet_src->port );
+
+						}
+
+						FD_CLR(kismet_src->sock, &wait_sockets);
+						close( kismet_src->sock );
+
+						list_del( kismet_pos );
+						free( kismet_src->kismet_ip );
+						free( kismet_pos );
+
+						num_kismet_sources--;
+
+					}
+
+				} else {
+
+					if ( kismet_src->sock > max_sock )
+						max_sock = kismet_src->sock;
+
+				}
+
+			}
+
+		} else if ( ( res < 0 ) && (errno != EINTR) ) {
+
+			printf( "Error - can't select: %s\n", strerror(errno) );
+			break;
+
+		}
+
+	}
+
+}

Added: trunk/apps/kismet3d/kismet3d.h
===================================================================
--- trunk/apps/kismet3d/kismet3d.h	2006-11-10 20:29:38 UTC (rev 469)
+++ trunk/apps/kismet3d/kismet3d.h	2006-11-13 14:28:19 UTC (rev 470)
@@ -0,0 +1,46 @@
+/*
+ * kismet3d.h
+ *
+ * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
+ *
+ * This file is part of kismet3d, an 802.11 visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * kismet3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * olsrs3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with olsrs3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
+#include "list.h"
+#include <netinet/in.h>   /* sockaddr_in */
+
+
+
+extern int num_kismet_sources;
+
+
+
+struct kismet_src {
+
+	struct list_head list;
+	unsigned int ip;
+	int port;
+	int sock;
+	char *kismet_ip;
+	unsigned char *recv_buff;
+	struct sockaddr_in kismet_addr;
+	int enable_level;
+
+};

Added: trunk/apps/kismet3d/list.h
===================================================================
--- trunk/apps/kismet3d/list.h	2006-11-10 20:29:38 UTC (rev 469)
+++ trunk/apps/kismet3d/list.h	2006-11-13 14:28:19 UTC (rev 470)
@@ -0,0 +1,121 @@
+/*
+ * list.h
+ *
+ * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
+ *
+ * This file is part of kismet3d, an 802.11 visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * kismet3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * olsrs3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with olsrs3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
+struct list_head {
+	struct list_head *next, *prev;
+};
+
+
+
+#define DEFINE_LIST_HEAD(name) \
+	struct list_head name = { &(name), &(name) }
+
+#define INIT_LIST_HEAD(ptr) do { \
+	(ptr)->next = (ptr); (ptr)->prev = (ptr); \
+} while (0)
+
+
+/**
+ * list_for_each_safe - iterate over a list safe against removal of list entry
+ * @pos:	the &struct list_head to use as a loop counter.
+ * @n:		another &struct list_head to use as temporary storage
+ * @head:	the head for your list.
+ */
+#define list_for_each_safe(pos, n, head) \
+	for (pos = (head)->next, n = pos->next; pos != (head); \
+		pos = n, n = pos->next)
+
+
+/**
+ * list_entry - get the struct for this entry
+ * @ptr:	the &struct list_head pointer.
+ * @type:	the type of the struct this is embedded in.
+ * @member:	the name of the list_struct within the struct.
+ */
+#define list_entry(ptr, type, member) \
+	((type *)((char *)(ptr)-(unsigned long)(&((type *)0)->member)))
+
+
+
+/**
+ * Insert a new entry between two known consecutive entries.
+ *
+ * This is only for internal list manipulation where we know
+ * the prev/next entries already!
+ */
+static inline void __list_add(struct list_head *new,
+			      struct list_head *prev,
+			      struct list_head *next)
+{
+	next->prev = new;
+	new->next = next;
+	new->prev = prev;
+	prev->next = new;
+}
+
+
+
+/**
+ * list_add_tail - add a new entry
+ * @new: new entry to be added
+ * @head: list head to add it before
+ *
+ * Insert a new entry before the specified head.
+ * This is useful for implementing queues.
+ */
+static inline void list_add_tail(struct list_head *new, struct list_head *head)
+{
+	__list_add(new, head->prev, head);
+}
+
+
+
+/**
+ * Delete a list entry by making the prev/next entries
+ * point to each other.
+ *
+ * This is only for internal list manipulation where we know
+ * the prev/next entries already!
+ */
+static inline void __list_del(struct list_head *prev, struct list_head *next)
+{
+	next->prev = prev;
+	prev->next = next;
+}
+
+
+
+/**
+ * list_del - deletes entry from list.
+ * @entry: the element to delete from the list.
+ * Note: list_empty on entry does not return true after this, the entry is in an undefined state.
+ */
+static inline void list_del(struct list_head *entry)
+{
+	__list_del(entry->prev, entry->next);
+	entry->next = (void *) 0;
+	entry->prev = (void *) 0;
+}
+



From marec at mail.berlios.de  Mon Nov 13 16:07:30 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Mon, 13 Nov 2006 16:07:30 +0100
Subject: [S3d-svn] r471 - trunk/apps/kismet3d
Message-ID: <200611131507.kADF7UcF006152@sheep.berlios.de>

Author: marec
Date: 2006-11-13 16:07:29 +0100 (Mon, 13 Nov 2006)
New Revision: 471

Modified:
   trunk/apps/kismet3d/kismet3d.c
   trunk/apps/kismet3d/kismet3d.h
   trunk/apps/kismet3d/list.h
Log:
rename kismet3d to kism3d

Modified: trunk/apps/kismet3d/kismet3d.c
===================================================================
--- trunk/apps/kismet3d/kismet3d.c	2006-11-13 14:28:19 UTC (rev 470)
+++ trunk/apps/kismet3d/kismet3d.c	2006-11-13 15:07:29 UTC (rev 471)
@@ -1,12 +1,12 @@
 /*
- * kismet3d.c
+ * kism3d.c
  *
  * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
  *
- * This file is part of kismet3d, an 802.11 visualizer for s3d.
+ * This file is part of kism3d, an 802.11 visualizer for s3d.
  * See http://s3d.berlios.de/ for more updates.
  *
- * kismet3d is free software; you can redistribute it and/or modify
+ * kism3d is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
@@ -23,7 +23,7 @@
 
 
 
-#include "kismet3d.h"
+#include "kism3d.h"
 #include <stdlib.h>   /* malloc() */
 #include <stdio.h>    /* printf() */
 #include <string.h>   /* memset() */

Modified: trunk/apps/kismet3d/kismet3d.h
===================================================================
--- trunk/apps/kismet3d/kismet3d.h	2006-11-13 14:28:19 UTC (rev 470)
+++ trunk/apps/kismet3d/kismet3d.h	2006-11-13 15:07:29 UTC (rev 471)
@@ -1,12 +1,12 @@
 /*
- * kismet3d.h
+ * kism3d.h
  *
  * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
  *
- * This file is part of kismet3d, an 802.11 visualizer for s3d.
+ * This file is part of kism3d, an 802.11 visualizer for s3d.
  * See http://s3d.berlios.de/ for more updates.
  *
- * kismet3d is free software; you can redistribute it and/or modify
+ * kism3d is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.

Modified: trunk/apps/kismet3d/list.h
===================================================================
--- trunk/apps/kismet3d/list.h	2006-11-13 14:28:19 UTC (rev 470)
+++ trunk/apps/kismet3d/list.h	2006-11-13 15:07:29 UTC (rev 471)
@@ -3,10 +3,10 @@
  *
  * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
  *
- * This file is part of kismet3d, an 802.11 visualizer for s3d.
+ * This file is part of kism3d, an 802.11 visualizer for s3d.
  * See http://s3d.berlios.de/ for more updates.
  *
- * kismet3d is free software; you can redistribute it and/or modify
+ * kism3d is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.



From marec at mail.berlios.de  Mon Nov 13 16:08:02 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Mon, 13 Nov 2006 16:08:02 +0100
Subject: [S3d-svn] r472 - trunk/apps/kismet3d
Message-ID: <200611131508.kADF82ej006240@sheep.berlios.de>

Author: marec
Date: 2006-11-13 16:08:02 +0100 (Mon, 13 Nov 2006)
New Revision: 472

Added:
   trunk/apps/kismet3d/kism3d.c
   trunk/apps/kismet3d/kism3d.h
Removed:
   trunk/apps/kismet3d/kismet3d.c
   trunk/apps/kismet3d/kismet3d.h
Log:
rename kismet3d to kism3d continued

Copied: trunk/apps/kismet3d/kism3d.c (from rev 471, trunk/apps/kismet3d/kismet3d.c)

Copied: trunk/apps/kismet3d/kism3d.h (from rev 471, trunk/apps/kismet3d/kismet3d.h)

Deleted: trunk/apps/kismet3d/kismet3d.c
===================================================================
--- trunk/apps/kismet3d/kismet3d.c	2006-11-13 15:07:29 UTC (rev 471)
+++ trunk/apps/kismet3d/kismet3d.c	2006-11-13 15:08:02 UTC (rev 472)
@@ -1,438 +0,0 @@
-/*
- * kism3d.c
- *
- * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
- *
- * This file is part of kism3d, an 802.11 visualizer for s3d.
- * See http://s3d.berlios.de/ for more updates.
- *
- * kism3d is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * olsrs3d is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with olsrs3d; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- */
-
-
-
-#include "kism3d.h"
-#include <stdlib.h>   /* malloc() */
-#include <stdio.h>    /* printf() */
-#include <string.h>   /* memset() */
-#include <errno.h>    /* errno */
-#include <sys/socket.h>
-#include <sys/types.h>
-
-
-
-int num_kismet_sources = 0;
-
-DEFINE_LIST_HEAD(kismet_src_list);
-
-
-
-void *alloc_memory( int len ) {
-
-	void *res = malloc( len );
-
-	if ( res == NULL ) {
-		printf( "Error - can't allocate memory: %s\n", strerror(errno) );
-		exit(1);
-	}
-
-	memset( res, 0, len );
-
-	return res;
-
-}
-
-
-
-void parse_buffer( struct kismet_src *kismet_src ) {
-
-	char enable_network[] = "!0 ENABLE NETWORK bssid,type,channel,ssid\n", enable_client[] = "!0 ENABLE CLIENT bssid,mac,ip\n", enable_alert[] = "!0 ENABLE ALERT *\n";
-	char *read_ptr, *line_ptr, *last_cr_ptr = NULL, *parse_begin_ptr, *parse_end_ptr;
-	char *bssid, *channel, *type, *ssid, *mac, *ip;
-	int count;
-
-	read_ptr = kismet_src->recv_buff;
-	line_ptr = kismet_src->recv_buff;
-
-
-	while ( (*read_ptr) != '\0' ) {
-
-		if ( (*read_ptr) == '\n' ) {
-
-			last_cr_ptr = read_ptr;
-			*last_cr_ptr = '\0';
-
-			/* printf( "line: %s\n", line_ptr ); */
-
-			if ( strncmp( line_ptr, "*TIME: ", strlen( "*TIME: " ) ) == 0 ) {
-
-				if ( kismet_src->enable_level < 3 ) {
-
-					switch ( kismet_src->enable_level ) {
-
-						case 0:
-							if ( write( kismet_src->sock, enable_alert, sizeof( enable_alert ) ) < 0 ) {
-
-								printf( "Warning - can't send ENABLE ALERT message to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-
-							}
-
-							break;
-
-						case 1:
-							if ( write( kismet_src->sock, enable_client, sizeof( enable_client ) ) < 0 ) {
-
-								printf( "Warning - can't send ENABLE CLIENT message to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-
-							}
-
-							break;
-
-						case 2:
-
-							if ( write( kismet_src->sock, enable_network, sizeof( enable_network ) ) < 0 ) {
-
-								printf( "Warning - can't send ENABLE NETWORK message to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-
-							}
-
-							break;
-
-					}
-
-					kismet_src->enable_level++;
-
-				}
-
-			} else if ( strncmp( line_ptr, "*NETWORK: ", strlen( "*NETWORK: " ) ) == 0 ) {
-
-				parse_begin_ptr = parse_end_ptr = line_ptr + strlen( "*NETWORK: " );
-				count = 0;
-
-				while ( (*parse_end_ptr) != '\0' ) {
-
-					if ( (*parse_end_ptr) == ' ' ) {
-
-						switch ( count ) {
-
-							case 0:
-								bssid = parse_begin_ptr;
-								break;
-
-							case 1:
-								type = parse_begin_ptr;
-								break;
-
-							case 2:
-								channel = parse_begin_ptr;
-								break;
-
-							case 3:
-								ssid = parse_begin_ptr;
-								break;
-
-						}
-
-						if ( count == 3 )
-							break;
-
-						*parse_end_ptr = '\0';
-						parse_begin_ptr = parse_end_ptr + 1;
-
-						count++;
-
-					}
-
-					parse_end_ptr++;
-
-				}
-
-				printf( "network found - bssid %s, type %s, channel %s, ssid %s\n", bssid, type, channel, ssid );
-
-			} else if ( strncmp( line_ptr, "*CLIENT: ", strlen( "*CLIENT: " ) ) == 0 ) {
-
-				parse_begin_ptr = parse_end_ptr = line_ptr + strlen( "*CLIENT: " );
-				count = 0;
-
-				while ( (*parse_end_ptr) != '\0' ) {
-
-					if ( (*parse_end_ptr) == ' ' ) {
-
-						switch ( count ) {
-
-							case 0:
-								bssid = parse_begin_ptr;
-								break;
-
-							case 1:
-								mac = parse_begin_ptr;
-								break;
-
-							case 2:
-								ip = parse_begin_ptr;
-								break;
-
-						}
-
-						if ( count == 2 )
-							break;
-
-						*parse_end_ptr = '\0';
-						parse_begin_ptr = parse_end_ptr + 1;
-
-						count++;
-
-					}
-
-					parse_end_ptr++;
-
-				}
-
-				printf( "client found - bssid %s, mac %s, ip %s\n", bssid, mac, ip );
-
-			} else if ( strncmp( line_ptr, "*ALERT: ", strlen( "*ALERT: " ) ) == 0 ) {
-
-				printf( "alert: %s\n", line_ptr + strlen( "*ALERT: " ) );
-
-			}
-
-			*last_cr_ptr = '\n';
-			line_ptr = last_cr_ptr + 1;
-
-		}
-
-		read_ptr++;
-
-	}
-
-	if ( last_cr_ptr != NULL )
-		memmove( kismet_src->recv_buff, last_cr_ptr + 1, strlen( last_cr_ptr ) );
-
-}
-
-
-
-int main( int argc, char *argv[] ) {
-
-	struct in_addr tmp_ip_holder;
-	struct kismet_src *kismet_src;
-	struct list_head *kismet_pos, *kismet_pos_tmp;
-	struct timeval tv;
-	int found_args = 1, max_sock = -1, res, status;
-	char *colon_ptr;
-	char enable_network[] = "!0 ENABLE NETWORK bssid,type,channel,ssid\n", enable_client[] = "!0 ENABLE CLIENT bssid,mac,ip\n";
-	unsigned char buff[1000];
-	fd_set wait_sockets, tmp_wait_sockets;
-
-
-	FD_ZERO(&wait_sockets);
-
-
-	while ( argc > found_args ) {
-
-		kismet_src = alloc_memory( sizeof(struct kismet_src) );
-
-		INIT_LIST_HEAD(&kismet_src->list);
-		kismet_src->enable_level = 0;
-
-		/* get ip and port from argument */
-		if ( ( colon_ptr = strchr( argv[found_args], ':' ) ) != NULL ) {
-
-			*colon_ptr = '\0';
-			colon_ptr++;
-
-		}
-
-		if ( inet_pton(AF_INET, argv[found_args], &tmp_ip_holder) < 1 ) {
-
-			printf( "Invalid kismet IP specified: %s\n", argv[found_args] );
-			free( kismet_src );
-			found_args++;
-			continue;
-
-		} else {
-
-			kismet_src->ip = tmp_ip_holder.s_addr;
-
-		}
-
-		if ( colon_ptr != NULL ) {
-
-			kismet_src->port = strtol(colon_ptr, NULL , 10);
-
-			if ( kismet_src->port < 0 || kismet_src->port > 65535 ) {
-				printf( "Invalid kismet PORT specified: %s\n", colon_ptr );
-				free( kismet_src );
-				found_args++;
-				continue;
-			}
-
-		} else {
-
-			kismet_src->port = 2501;
-
-		}
-
-
-		kismet_src->kismet_addr.sin_family = AF_INET;
-		kismet_src->kismet_addr.sin_port = htons( kismet_src->port );
-		kismet_src->kismet_addr.sin_addr.s_addr = kismet_src->ip;
-
-		kismet_src->kismet_ip = alloc_memory( 16 );
-		inet_ntop( AF_INET, &kismet_src->ip, kismet_src->kismet_ip, 16 );
-
-
-		/* connect to kismet server */
-		if ( ( kismet_src->sock = socket( PF_INET, SOCK_STREAM, 0 ) ) < 0 ) {
-
-			printf( "Error - can't create tcp socket (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-			free( kismet_src->kismet_ip );
-			free( kismet_src );
-			found_args++;
-			continue;
-
-		}
-
-		if ( connect ( kismet_src->sock, (struct sockaddr *)&kismet_src->kismet_addr, sizeof(struct sockaddr) ) < 0 ) {
-
-			printf( "Error - can't connect to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-			close( kismet_src->sock );
-			free( kismet_src->kismet_ip );
-			free( kismet_src );
-			found_args++;
-			continue;
-
-		}
-
-
-		kismet_src->recv_buff = alloc_memory( 1500 );
-
-		FD_SET( kismet_src->sock, &wait_sockets );
-		if ( kismet_src->sock > max_sock )
-			max_sock = kismet_src->sock;
-
-		list_add_tail(&kismet_src->list, &kismet_src_list);
-
-
-		num_kismet_sources++;
-		found_args++;
-
-	}
-
-
-	if ( num_kismet_sources == 0 ) {
-
-		printf( "Exiting - can't find any valid kismet server\n" );
-		exit(EXIT_FAILURE);
-
-	}
-
-
-	while ( num_kismet_sources > 0 ) {
-
-		tv.tv_sec = 0;
-		tv.tv_usec = 250;
-
-		tmp_wait_sockets = wait_sockets;
-
-		res = select(max_sock + 1, &tmp_wait_sockets, NULL, NULL, &tv);
-
-		if ( res > 0 ) {
-
-			max_sock = -1;
-
-			list_for_each_safe(kismet_pos, kismet_pos_tmp, &kismet_src_list) {
-
-				kismet_src = list_entry(kismet_pos, struct kismet_src, list);
-
-				if ( FD_ISSET( kismet_src->sock, &tmp_wait_sockets ) ) {
-
-					status = read( kismet_src->sock, buff, sizeof( buff ) );
-
-					if ( status > 0 ) {
-
-						if ( kismet_src->sock > max_sock )
-							max_sock = kismet_src->sock;
-
-						buff[status] = '\0';
-
-						/* check for potential buffer overflow */
-						if ( ( strlen( kismet_src->recv_buff ) + strlen( buff ) ) < 1500 ) {
-
-							strncat( kismet_src->recv_buff, buff, 1000 );
-
-						} else {
-
-							/* hope that carriage return is now in buf */
-							if ( strlen( kismet_src->recv_buff ) < 1500 ) {
-
-								printf( "WARNING: receive buffer almost filled without *any* carriage return within that data !\nAppending truncated buffer to receive buffer to prevent buffer overflow.\n" );
-								strncat( kismet_src->recv_buff, buff, 1500 - strlen( kismet_src->recv_buff ) );
-
-							} else {
-
-								printf( "ERROR: receive buffer filled without *any* carriage return within that data !\nClearing receive buffer to prevent buffer overflow.\n" );
-								strncpy( kismet_src->recv_buff, buff, 1000 );
-
-							}
-
-						}
-
-						parse_buffer( kismet_src );
-
-						/* printf( "buffer length: %i\n", strlen( kismet_src->recv_buff ) ); */
-
-					} else {
-
-						if ( status < 0 ) {
-
-							printf( "Error - can't read message from %s:%i: %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-
-						} else {
-
-							printf( "Kismet server %s:%i closed connection ...\n", kismet_src->kismet_ip, kismet_src->port );
-
-						}
-
-						FD_CLR(kismet_src->sock, &wait_sockets);
-						close( kismet_src->sock );
-
-						list_del( kismet_pos );
-						free( kismet_src->kismet_ip );
-						free( kismet_pos );
-
-						num_kismet_sources--;
-
-					}
-
-				} else {
-
-					if ( kismet_src->sock > max_sock )
-						max_sock = kismet_src->sock;
-
-				}
-
-			}
-
-		} else if ( ( res < 0 ) && (errno != EINTR) ) {
-
-			printf( "Error - can't select: %s\n", strerror(errno) );
-			break;
-
-		}
-
-	}
-
-}

Deleted: trunk/apps/kismet3d/kismet3d.h
===================================================================
--- trunk/apps/kismet3d/kismet3d.h	2006-11-13 15:07:29 UTC (rev 471)
+++ trunk/apps/kismet3d/kismet3d.h	2006-11-13 15:08:02 UTC (rev 472)
@@ -1,46 +0,0 @@
-/*
- * kism3d.h
- *
- * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
- *
- * This file is part of kism3d, an 802.11 visualizer for s3d.
- * See http://s3d.berlios.de/ for more updates.
- *
- * kism3d is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * olsrs3d is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with olsrs3d; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- */
-
-
-
-#include "list.h"
-#include <netinet/in.h>   /* sockaddr_in */
-
-
-
-extern int num_kismet_sources;
-
-
-
-struct kismet_src {
-
-	struct list_head list;
-	unsigned int ip;
-	int port;
-	int sock;
-	char *kismet_ip;
-	unsigned char *recv_buff;
-	struct sockaddr_in kismet_addr;
-	int enable_level;
-
-};



From marec at mail.berlios.de  Mon Nov 13 16:08:39 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Mon, 13 Nov 2006 16:08:39 +0100
Subject: [S3d-svn] r473 - in trunk/apps: . kism3d
Message-ID: <200611131508.kADF8chH006362@sheep.berlios.de>

Author: marec
Date: 2006-11-13 16:08:38 +0100 (Mon, 13 Nov 2006)
New Revision: 473

Added:
   trunk/apps/kism3d/
   trunk/apps/kism3d/kism3d.c
   trunk/apps/kism3d/kism3d.h
   trunk/apps/kism3d/list.h
Removed:
   trunk/apps/kism3d/kismet3d.c
   trunk/apps/kism3d/kismet3d.h
   trunk/apps/kism3d/list.h
   trunk/apps/kismet3d/
Log:
rename kismet3d to kism3d final

Copied: trunk/apps/kism3d (from rev 470, trunk/apps/kismet3d)

Copied: trunk/apps/kism3d/kism3d.c (from rev 472, trunk/apps/kismet3d/kism3d.c)

Copied: trunk/apps/kism3d/kism3d.h (from rev 472, trunk/apps/kismet3d/kism3d.h)

Deleted: trunk/apps/kism3d/kismet3d.c
===================================================================
--- trunk/apps/kismet3d/kismet3d.c	2006-11-13 14:28:19 UTC (rev 470)
+++ trunk/apps/kism3d/kismet3d.c	2006-11-13 15:08:38 UTC (rev 473)
@@ -1,438 +0,0 @@
-/*
- * kismet3d.c
- *
- * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
- *
- * This file is part of kismet3d, an 802.11 visualizer for s3d.
- * See http://s3d.berlios.de/ for more updates.
- *
- * kismet3d is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * olsrs3d is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with olsrs3d; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- */
-
-
-
-#include "kismet3d.h"
-#include <stdlib.h>   /* malloc() */
-#include <stdio.h>    /* printf() */
-#include <string.h>   /* memset() */
-#include <errno.h>    /* errno */
-#include <sys/socket.h>
-#include <sys/types.h>
-
-
-
-int num_kismet_sources = 0;
-
-DEFINE_LIST_HEAD(kismet_src_list);
-
-
-
-void *alloc_memory( int len ) {
-
-	void *res = malloc( len );
-
-	if ( res == NULL ) {
-		printf( "Error - can't allocate memory: %s\n", strerror(errno) );
-		exit(1);
-	}
-
-	memset( res, 0, len );
-
-	return res;
-
-}
-
-
-
-void parse_buffer( struct kismet_src *kismet_src ) {
-
-	char enable_network[] = "!0 ENABLE NETWORK bssid,type,channel,ssid\n", enable_client[] = "!0 ENABLE CLIENT bssid,mac,ip\n", enable_alert[] = "!0 ENABLE ALERT *\n";
-	char *read_ptr, *line_ptr, *last_cr_ptr = NULL, *parse_begin_ptr, *parse_end_ptr;
-	char *bssid, *channel, *type, *ssid, *mac, *ip;
-	int count;
-
-	read_ptr = kismet_src->recv_buff;
-	line_ptr = kismet_src->recv_buff;
-
-
-	while ( (*read_ptr) != '\0' ) {
-
-		if ( (*read_ptr) == '\n' ) {
-
-			last_cr_ptr = read_ptr;
-			*last_cr_ptr = '\0';
-
-			/* printf( "line: %s\n", line_ptr ); */
-
-			if ( strncmp( line_ptr, "*TIME: ", strlen( "*TIME: " ) ) == 0 ) {
-
-				if ( kismet_src->enable_level < 3 ) {
-
-					switch ( kismet_src->enable_level ) {
-
-						case 0:
-							if ( write( kismet_src->sock, enable_alert, sizeof( enable_alert ) ) < 0 ) {
-
-								printf( "Warning - can't send ENABLE ALERT message to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-
-							}
-
-							break;
-
-						case 1:
-							if ( write( kismet_src->sock, enable_client, sizeof( enable_client ) ) < 0 ) {
-
-								printf( "Warning - can't send ENABLE CLIENT message to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-
-							}
-
-							break;
-
-						case 2:
-
-							if ( write( kismet_src->sock, enable_network, sizeof( enable_network ) ) < 0 ) {
-
-								printf( "Warning - can't send ENABLE NETWORK message to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-
-							}
-
-							break;
-
-					}
-
-					kismet_src->enable_level++;
-
-				}
-
-			} else if ( strncmp( line_ptr, "*NETWORK: ", strlen( "*NETWORK: " ) ) == 0 ) {
-
-				parse_begin_ptr = parse_end_ptr = line_ptr + strlen( "*NETWORK: " );
-				count = 0;
-
-				while ( (*parse_end_ptr) != '\0' ) {
-
-					if ( (*parse_end_ptr) == ' ' ) {
-
-						switch ( count ) {
-
-							case 0:
-								bssid = parse_begin_ptr;
-								break;
-
-							case 1:
-								type = parse_begin_ptr;
-								break;
-
-							case 2:
-								channel = parse_begin_ptr;
-								break;
-
-							case 3:
-								ssid = parse_begin_ptr;
-								break;
-
-						}
-
-						if ( count == 3 )
-							break;
-
-						*parse_end_ptr = '\0';
-						parse_begin_ptr = parse_end_ptr + 1;
-
-						count++;
-
-					}
-
-					parse_end_ptr++;
-
-				}
-
-				printf( "network found - bssid %s, type %s, channel %s, ssid %s\n", bssid, type, channel, ssid );
-
-			} else if ( strncmp( line_ptr, "*CLIENT: ", strlen( "*CLIENT: " ) ) == 0 ) {
-
-				parse_begin_ptr = parse_end_ptr = line_ptr + strlen( "*CLIENT: " );
-				count = 0;
-
-				while ( (*parse_end_ptr) != '\0' ) {
-
-					if ( (*parse_end_ptr) == ' ' ) {
-
-						switch ( count ) {
-
-							case 0:
-								bssid = parse_begin_ptr;
-								break;
-
-							case 1:
-								mac = parse_begin_ptr;
-								break;
-
-							case 2:
-								ip = parse_begin_ptr;
-								break;
-
-						}
-
-						if ( count == 2 )
-							break;
-
-						*parse_end_ptr = '\0';
-						parse_begin_ptr = parse_end_ptr + 1;
-
-						count++;
-
-					}
-
-					parse_end_ptr++;
-
-				}
-
-				printf( "client found - bssid %s, mac %s, ip %s\n", bssid, mac, ip );
-
-			} else if ( strncmp( line_ptr, "*ALERT: ", strlen( "*ALERT: " ) ) == 0 ) {
-
-				printf( "alert: %s\n", line_ptr + strlen( "*ALERT: " ) );
-
-			}
-
-			*last_cr_ptr = '\n';
-			line_ptr = last_cr_ptr + 1;
-
-		}
-
-		read_ptr++;
-
-	}
-
-	if ( last_cr_ptr != NULL )
-		memmove( kismet_src->recv_buff, last_cr_ptr + 1, strlen( last_cr_ptr ) );
-
-}
-
-
-
-int main( int argc, char *argv[] ) {
-
-	struct in_addr tmp_ip_holder;
-	struct kismet_src *kismet_src;
-	struct list_head *kismet_pos, *kismet_pos_tmp;
-	struct timeval tv;
-	int found_args = 1, max_sock = -1, res, status;
-	char *colon_ptr;
-	char enable_network[] = "!0 ENABLE NETWORK bssid,type,channel,ssid\n", enable_client[] = "!0 ENABLE CLIENT bssid,mac,ip\n";
-	unsigned char buff[1000];
-	fd_set wait_sockets, tmp_wait_sockets;
-
-
-	FD_ZERO(&wait_sockets);
-
-
-	while ( argc > found_args ) {
-
-		kismet_src = alloc_memory( sizeof(struct kismet_src) );
-
-		INIT_LIST_HEAD(&kismet_src->list);
-		kismet_src->enable_level = 0;
-
-		/* get ip and port from argument */
-		if ( ( colon_ptr = strchr( argv[found_args], ':' ) ) != NULL ) {
-
-			*colon_ptr = '\0';
-			colon_ptr++;
-
-		}
-
-		if ( inet_pton(AF_INET, argv[found_args], &tmp_ip_holder) < 1 ) {
-
-			printf( "Invalid kismet IP specified: %s\n", argv[found_args] );
-			free( kismet_src );
-			found_args++;
-			continue;
-
-		} else {
-
-			kismet_src->ip = tmp_ip_holder.s_addr;
-
-		}
-
-		if ( colon_ptr != NULL ) {
-
-			kismet_src->port = strtol(colon_ptr, NULL , 10);
-
-			if ( kismet_src->port < 0 || kismet_src->port > 65535 ) {
-				printf( "Invalid kismet PORT specified: %s\n", colon_ptr );
-				free( kismet_src );
-				found_args++;
-				continue;
-			}
-
-		} else {
-
-			kismet_src->port = 2501;
-
-		}
-
-
-		kismet_src->kismet_addr.sin_family = AF_INET;
-		kismet_src->kismet_addr.sin_port = htons( kismet_src->port );
-		kismet_src->kismet_addr.sin_addr.s_addr = kismet_src->ip;
-
-		kismet_src->kismet_ip = alloc_memory( 16 );
-		inet_ntop( AF_INET, &kismet_src->ip, kismet_src->kismet_ip, 16 );
-
-
-		/* connect to kismet server */
-		if ( ( kismet_src->sock = socket( PF_INET, SOCK_STREAM, 0 ) ) < 0 ) {
-
-			printf( "Error - can't create tcp socket (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-			free( kismet_src->kismet_ip );
-			free( kismet_src );
-			found_args++;
-			continue;
-
-		}
-
-		if ( connect ( kismet_src->sock, (struct sockaddr *)&kismet_src->kismet_addr, sizeof(struct sockaddr) ) < 0 ) {
-
-			printf( "Error - can't connect to kismet server (%s:%i): %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-			close( kismet_src->sock );
-			free( kismet_src->kismet_ip );
-			free( kismet_src );
-			found_args++;
-			continue;
-
-		}
-
-
-		kismet_src->recv_buff = alloc_memory( 1500 );
-
-		FD_SET( kismet_src->sock, &wait_sockets );
-		if ( kismet_src->sock > max_sock )
-			max_sock = kismet_src->sock;
-
-		list_add_tail(&kismet_src->list, &kismet_src_list);
-
-
-		num_kismet_sources++;
-		found_args++;
-
-	}
-
-
-	if ( num_kismet_sources == 0 ) {
-
-		printf( "Exiting - can't find any valid kismet server\n" );
-		exit(EXIT_FAILURE);
-
-	}
-
-
-	while ( num_kismet_sources > 0 ) {
-
-		tv.tv_sec = 0;
-		tv.tv_usec = 250;
-
-		tmp_wait_sockets = wait_sockets;
-
-		res = select(max_sock + 1, &tmp_wait_sockets, NULL, NULL, &tv);
-
-		if ( res > 0 ) {
-
-			max_sock = -1;
-
-			list_for_each_safe(kismet_pos, kismet_pos_tmp, &kismet_src_list) {
-
-				kismet_src = list_entry(kismet_pos, struct kismet_src, list);
-
-				if ( FD_ISSET( kismet_src->sock, &tmp_wait_sockets ) ) {
-
-					status = read( kismet_src->sock, buff, sizeof( buff ) );
-
-					if ( status > 0 ) {
-
-						if ( kismet_src->sock > max_sock )
-							max_sock = kismet_src->sock;
-
-						buff[status] = '\0';
-
-						/* check for potential buffer overflow */
-						if ( ( strlen( kismet_src->recv_buff ) + strlen( buff ) ) < 1500 ) {
-
-							strncat( kismet_src->recv_buff, buff, 1000 );
-
-						} else {
-
-							/* hope that carriage return is now in buf */
-							if ( strlen( kismet_src->recv_buff ) < 1500 ) {
-
-								printf( "WARNING: receive buffer almost filled without *any* carriage return within that data !\nAppending truncated buffer to receive buffer to prevent buffer overflow.\n" );
-								strncat( kismet_src->recv_buff, buff, 1500 - strlen( kismet_src->recv_buff ) );
-
-							} else {
-
-								printf( "ERROR: receive buffer filled without *any* carriage return within that data !\nClearing receive buffer to prevent buffer overflow.\n" );
-								strncpy( kismet_src->recv_buff, buff, 1000 );
-
-							}
-
-						}
-
-						parse_buffer( kismet_src );
-
-						/* printf( "buffer length: %i\n", strlen( kismet_src->recv_buff ) ); */
-
-					} else {
-
-						if ( status < 0 ) {
-
-							printf( "Error - can't read message from %s:%i: %s\n", kismet_src->kismet_ip, kismet_src->port, strerror(errno) );
-
-						} else {
-
-							printf( "Kismet server %s:%i closed connection ...\n", kismet_src->kismet_ip, kismet_src->port );
-
-						}
-
-						FD_CLR(kismet_src->sock, &wait_sockets);
-						close( kismet_src->sock );
-
-						list_del( kismet_pos );
-						free( kismet_src->kismet_ip );
-						free( kismet_pos );
-
-						num_kismet_sources--;
-
-					}
-
-				} else {
-
-					if ( kismet_src->sock > max_sock )
-						max_sock = kismet_src->sock;
-
-				}
-
-			}
-
-		} else if ( ( res < 0 ) && (errno != EINTR) ) {
-
-			printf( "Error - can't select: %s\n", strerror(errno) );
-			break;
-
-		}
-
-	}
-
-}

Deleted: trunk/apps/kism3d/kismet3d.h
===================================================================
--- trunk/apps/kismet3d/kismet3d.h	2006-11-13 14:28:19 UTC (rev 470)
+++ trunk/apps/kism3d/kismet3d.h	2006-11-13 15:08:38 UTC (rev 473)
@@ -1,46 +0,0 @@
-/*
- * kismet3d.h
- *
- * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
- *
- * This file is part of kismet3d, an 802.11 visualizer for s3d.
- * See http://s3d.berlios.de/ for more updates.
- *
- * kismet3d is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * olsrs3d is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with olsrs3d; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- */
-
-
-
-#include "list.h"
-#include <netinet/in.h>   /* sockaddr_in */
-
-
-
-extern int num_kismet_sources;
-
-
-
-struct kismet_src {
-
-	struct list_head list;
-	unsigned int ip;
-	int port;
-	int sock;
-	char *kismet_ip;
-	unsigned char *recv_buff;
-	struct sockaddr_in kismet_addr;
-	int enable_level;
-
-};

Deleted: trunk/apps/kism3d/list.h
===================================================================
--- trunk/apps/kismet3d/list.h	2006-11-13 14:28:19 UTC (rev 470)
+++ trunk/apps/kism3d/list.h	2006-11-13 15:08:38 UTC (rev 473)
@@ -1,121 +0,0 @@
-/*
- * list.h
- *
- * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
- *
- * This file is part of kismet3d, an 802.11 visualizer for s3d.
- * See http://s3d.berlios.de/ for more updates.
- *
- * kismet3d is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * olsrs3d is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with olsrs3d; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- */
-
-
-
-struct list_head {
-	struct list_head *next, *prev;
-};
-
-
-
-#define DEFINE_LIST_HEAD(name) \
-	struct list_head name = { &(name), &(name) }
-
-#define INIT_LIST_HEAD(ptr) do { \
-	(ptr)->next = (ptr); (ptr)->prev = (ptr); \
-} while (0)
-
-
-/**
- * list_for_each_safe - iterate over a list safe against removal of list entry
- * @pos:	the &struct list_head to use as a loop counter.
- * @n:		another &struct list_head to use as temporary storage
- * @head:	the head for your list.
- */
-#define list_for_each_safe(pos, n, head) \
-	for (pos = (head)->next, n = pos->next; pos != (head); \
-		pos = n, n = pos->next)
-
-
-/**
- * list_entry - get the struct for this entry
- * @ptr:	the &struct list_head pointer.
- * @type:	the type of the struct this is embedded in.
- * @member:	the name of the list_struct within the struct.
- */
-#define list_entry(ptr, type, member) \
-	((type *)((char *)(ptr)-(unsigned long)(&((type *)0)->member)))
-
-
-
-/**
- * Insert a new entry between two known consecutive entries.
- *
- * This is only for internal list manipulation where we know
- * the prev/next entries already!
- */
-static inline void __list_add(struct list_head *new,
-			      struct list_head *prev,
-			      struct list_head *next)
-{
-	next->prev = new;
-	new->next = next;
-	new->prev = prev;
-	prev->next = new;
-}
-
-
-
-/**
- * list_add_tail - add a new entry
- * @new: new entry to be added
- * @head: list head to add it before
- *
- * Insert a new entry before the specified head.
- * This is useful for implementing queues.
- */
-static inline void list_add_tail(struct list_head *new, struct list_head *head)
-{
-	__list_add(new, head->prev, head);
-}
-
-
-
-/**
- * Delete a list entry by making the prev/next entries
- * point to each other.
- *
- * This is only for internal list manipulation where we know
- * the prev/next entries already!
- */
-static inline void __list_del(struct list_head *prev, struct list_head *next)
-{
-	next->prev = prev;
-	prev->next = next;
-}
-
-
-
-/**
- * list_del - deletes entry from list.
- * @entry: the element to delete from the list.
- * Note: list_empty on entry does not return true after this, the entry is in an undefined state.
- */
-static inline void list_del(struct list_head *entry)
-{
-	__list_del(entry->prev, entry->next);
-	entry->next = (void *) 0;
-	entry->prev = (void *) 0;
-}
-

Copied: trunk/apps/kism3d/list.h (from rev 472, trunk/apps/kismet3d/list.h)



From dotslash at mail.berlios.de  Mon Nov 13 16:36:45 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Mon, 13 Nov 2006 16:36:45 +0100
Subject: [S3d-svn] r474 - in trunk: . apps apps/s3dosm
	libs3d/libg3d/plugins/import
Message-ID: <200611131536.kADFajab009272@sheep.berlios.de>

Author: dotslash
Date: 2006-11-13 16:36:44 +0100 (Mon, 13 Nov 2006)
New Revision: 474

Removed:
   trunk/apps/s3dosm/Makefile
Modified:
   trunk/
   trunk/apps/Makefile.am
   trunk/apps/s3dosm/draw.c
   trunk/configure.ac
   trunk/libs3d/libg3d/plugins/import/Makefile.am
Log:
 r1137 at kero:  dotslash | 2006-11-13 16:36:35 +0100
 - autoconf fix for kisms3d, s3dosm
 - change layer visibility only if something is actually drawn 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1129
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1137

Modified: trunk/apps/Makefile.am
===================================================================
--- trunk/apps/Makefile.am	2006-11-13 15:08:38 UTC (rev 473)
+++ trunk/apps/Makefile.am	2006-11-13 15:36:44 UTC (rev 474)
@@ -6,5 +6,8 @@
 MAYBE_X11GATE=	s3d_x11gate
 endif
 
-SUBDIRS =  ${MAYBE_S3DGPS} ${MAYBE_X11GATE} s3dvt olsrs3d dot_mcp s3dfm
+if BUILD_S3DOSM
+MAYBE_S3DOSM=	s3dosm
+endif
 
+SUBDIRS =  ${MAYBE_S3DGPS} ${MAYBE_X11GATE} ${MAYBE_S3DOSM} s3dvt olsrs3d dot_mcp s3dfm kism3d

Deleted: trunk/apps/s3dosm/Makefile
===================================================================
--- trunk/apps/s3dosm/Makefile	2006-11-13 15:08:38 UTC (rev 473)
+++ trunk/apps/s3dosm/Makefile	2006-11-13 15:36:44 UTC (rev 474)
@@ -1,24 +0,0 @@
-BIN=s3dosm
-VERS=0.0.1
-SOURCES=main.c http_fetcher.c http_error_codes.c osm.c avl.c object.c draw.c kismet.c nav.c tag.c io.c
-HEADERS=s3dosm.h http_fetcher.h
-OBJS=$(SOURCES:.c=.o)
-CFLAGS=-Wall -ggdb -pedantic `xml2-config --cflags`
-LDFLAGS=-lm -ls3d  `xml2-config --libs`
-CC=gcc
-LD=gcc
-
-
-
-.SUFFIXES: .c .o
-	
-default: 	all
-all:		$(BIN)
-clean:
-	rm -rf $(OBJS) $(BIN)
-$(BIN):    $(OBJS)
-	$(LD) $(LDFLAGS) $(OBJS) $(LIBS) -o $(BIN)
-.c.o:  $(HEADERS)
-	$(CC) $(CFLAGS) -c $< -o $@
-
-

Modified: trunk/apps/s3dosm/draw.c
===================================================================
--- trunk/apps/s3dosm/draw.c	2006-11-13 15:08:38 UTC (rev 473)
+++ trunk/apps/s3dosm/draw.c	2006-11-13 15:36:44 UTC (rev 474)
@@ -76,6 +76,7 @@
 							s3d_link(node->base.oid,v->oid);
 							s3d_flags_on(node->base.oid,S3D_OF_VISIBLE);
 							s3d_rotate(node->base.oid,(90-node->lat),node->lon,0);
+							v->layer->visible=1;
 						} else { /* not an ap */
 						}
 					}
@@ -112,7 +113,10 @@
 			else if (0==(strcmp(tag->v,"residential"))) color=5;
 		}
 		if (from!=NULL && to!=NULL)
+		{
 			s3d_push_line(v->oid,from->vid,to->vid,color);
+			v->layer->visible=1;
+		}
 	}
 }
 int draw_layer(layer_t *layer)
@@ -136,7 +140,6 @@
 	avl_tree_trav(layer->tree,draw_add_segments,(void *)&v);
 	layer->center_lo=(v.lonsum)/v.n;
 	layer->center_la=(v.latsum)/v.n;	
-	layer->visible=1;
 	s3d_flags_on(oid,S3D_OF_VISIBLE);
 	return(0);
 }

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2006-11-13 15:08:38 UTC (rev 473)
+++ trunk/configure.ac	2006-11-13 15:36:44 UTC (rev 474)
@@ -106,19 +106,26 @@
 PKG_CHECK_MODULES(FONTCONFIG, fontconfig >= 2.1.0, [:], [AC_MSG_ERROR([Please install fontconfig (version 2.1.0 or higher)])])
 PKG_CHECK_MODULES(FREETYPE, freetype2 >= 9.5.0, [:], [AC_MSG_ERROR([Please install freetype2 (version 9.5.0 or higher)])])
 
+# libxml2
+AM_PATH_XML2(2.0.0, HAVE_XML=yes)
+if test "x$HAV_XML" = "xyes" ; then
+	LIBXML2_CFLAGS=$XML_CPPFLAGS
+	LIBXML2_LIBS=$XML_LIBS
+	AC_SUBST(LIBXML2_CFLAGS)
+	AC_SUBST(LIBXML2_LIBS)
+fi
+		
 
 dnl ##################################### EXAMPLES / APPS ######################
 
-AC_CHECK_LIB(gps, main, [HAVE_GPS=yes], [HAVE_GPS=no])
-if test x$HAVE_GPS = xyes; then
-	GPS_CFLAGS=
-	GPS_LIBS=-lgps	
-	AC_SUBST(GPS_CFLAGS)
-	AC_SUBST(GPS_LIBS)
-else
+if test x$HAVE_XML != xyes; then
 	WARNS="$WARNS
- ### Sorry, you lack the gps library to compile the s3dgps application."
+ ### Sorry, you lack the libxml2 library to compile the s3dosm application."
 fi
+
+
+AM_CONDITIONAL([BUILD_S3DOSM], [test x$HAVE_XML= xyes])
+
 SIM_AC_HAVE_SIMAGE_IFELSE([
 	SIMAGE_CFLAGS=$sim_ac_simage_cppflags
 	SIMAGE_LIBS="$sim_ac_simage_ldflags $sim_ac_simage_libs"
@@ -208,6 +215,8 @@
 	apps/s3dgps/Makefile
 	apps/s3dvt/Makefile
 	apps/s3dfm/Makefile
+	apps/kism3d/Makefile
+	apps/s3dosm/Makefile
 	apps/dot_mcp/Makefile
 	example/Makefile
 	objs/Makefile

Modified: trunk/libs3d/libg3d/plugins/import/Makefile.am
===================================================================
--- trunk/libs3d/libg3d/plugins/import/Makefile.am	2006-11-13 15:08:38 UTC (rev 473)
+++ trunk/libs3d/libg3d/plugins/import/Makefile.am	2006-11-13 15:36:44 UTC (rev 474)
@@ -55,7 +55,7 @@
 imp_heightfield_la_SOURCES = imp_heightfield.c
 imp_iob_la_SOURCES = imp_iob.c imp_iob.h imp_iob_chunks.h \
 	imp_iob_callbacks.c imp_iob_callbacks.h
-imp_leocad_la_SOURCES = imp_leocad.c imp_leocad_library.h imp_leocad_library.c
+#imp_leocad_la_SOURCES = imp_leocad.c imp_leocad_library.h imp_leocad_library.c
 imp_lwo_la_SOURCES = imp_lwo.c imp_lwo.h imp_lwo_chunks.h \
 	imp_lwo_callbacks.c imp_lwo_callbacks.h
 imp_maya_la_SOURCES = imp_maya.c imp_maya_chunks.h \



From dotslash at mail.berlios.de  Mon Nov 13 16:56:10 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Mon, 13 Nov 2006 16:56:10 +0100
Subject: [S3d-svn] r475 - trunk
Message-ID: <200611131556.kADFuA96011121@sheep.berlios.de>

Author: dotslash
Date: 2006-11-13 16:56:09 +0100 (Mon, 13 Nov 2006)
New Revision: 475

Modified:
   trunk/
   trunk/configure.ac
Log:
 r1139 at kero:  dotslash | 2006-11-13 16:56:06 +0100
 - autohell, again.



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1137
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1139

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2006-11-13 15:36:44 UTC (rev 474)
+++ trunk/configure.ac	2006-11-13 15:56:09 UTC (rev 475)
@@ -107,25 +107,25 @@
 PKG_CHECK_MODULES(FREETYPE, freetype2 >= 9.5.0, [:], [AC_MSG_ERROR([Please install freetype2 (version 9.5.0 or higher)])])
 
 # libxml2
-AM_PATH_XML2(2.0.0, HAVE_XML=yes)
-if test "x$HAV_XML" = "xyes" ; then
+AM_PATH_XML2(2.0.0, [HAVE_XML="yes"], [])
+
+if test x"${HAVE_XML}" = xyes ; then
 	LIBXML2_CFLAGS=$XML_CPPFLAGS
 	LIBXML2_LIBS=$XML_LIBS
 	AC_SUBST(LIBXML2_CFLAGS)
 	AC_SUBST(LIBXML2_LIBS)
-fi
-		
-
+else
 dnl ##################################### EXAMPLES / APPS ######################
-
-if test x$HAVE_XML != xyes; then
 	WARNS="$WARNS
  ### Sorry, you lack the libxml2 library to compile the s3dosm application."
+
 fi
+		
 
 
-AM_CONDITIONAL([BUILD_S3DOSM], [test x$HAVE_XML= xyes])
 
+AM_CONDITIONAL([BUILD_S3DOSM], [test x"${HAVE_XML}" = xyes])
+
 SIM_AC_HAVE_SIMAGE_IFELSE([
 	SIMAGE_CFLAGS=$sim_ac_simage_cppflags
 	SIMAGE_LIBS="$sim_ac_simage_ldflags $sim_ac_simage_libs"



From dotslash at mail.berlios.de  Mon Nov 13 17:05:53 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Mon, 13 Nov 2006 17:05:53 +0100
Subject: [S3d-svn] r476 - in trunk: . apps/kism3d apps/s3dosm
Message-ID: <200611131605.kADG5rAf011986@sheep.berlios.de>

Author: dotslash
Date: 2006-11-13 17:05:52 +0100 (Mon, 13 Nov 2006)
New Revision: 476

Added:
   trunk/apps/kism3d/Makefile.am
   trunk/apps/s3dosm/Makefile.am
Modified:
   trunk/
Log:
 r1141 at kero:  dotslash | 2006-11-13 17:05:49 +0100
 - autohell again, forgot to upload Makefile.am (thanks Lazhur)



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1139
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1141

Added: trunk/apps/kism3d/Makefile.am
===================================================================
--- trunk/apps/kism3d/Makefile.am	2006-11-13 15:56:09 UTC (rev 475)
+++ trunk/apps/kism3d/Makefile.am	2006-11-13 16:05:52 UTC (rev 476)
@@ -0,0 +1,13 @@
+bin_PROGRAMS=	kism3d
+
+kism3dincludedir = ${pkgincludedir}/kism3d
+
+kism3dinclude_HEADERS =  \
+	kism3d.h list.h
+kism3d_SOURCES =  \
+	kism3d.c
+
+kism3d_CPPFLAGS=		-I${top_srcdir}/libs3d -I${top_srcdir}/libs3dw
+kism3d_LDADD=		${top_builddir}/libs3d/libs3d.la ${top_builddir}/libs3dw/libs3dw.la
+
+

Added: trunk/apps/s3dosm/Makefile.am
===================================================================
--- trunk/apps/s3dosm/Makefile.am	2006-11-13 15:56:09 UTC (rev 475)
+++ trunk/apps/s3dosm/Makefile.am	2006-11-13 16:05:52 UTC (rev 476)
@@ -0,0 +1,12 @@
+bin_PROGRAMS=	s3dosm
+s3dosmincludedir = ${pkgincludedir}/s3dosm
+s3dosminclude_HEADERS =  \
+	s3dosm.h
+				  
+s3dosm_SOURCES =  \
+	main.c http_fetcher.c http_error_codes.c osm.c \
+	avl.c object.c draw.c kismet.c nav.c tag.c io.c
+
+s3dosm_CPPFLAGS=	-I$(top_srcdir)/libs3d @LIBXML2_CFLAGS@
+s3dosm_LDADD=		$(top_builddir)/libs3d/libs3d.la @LIBXML2_LIBS@
+



From marec at mail.berlios.de  Mon Nov 13 17:56:21 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Mon, 13 Nov 2006 17:56:21 +0100
Subject: [S3d-svn] r477 - trunk/apps/kism3d
Message-ID: <200611131656.kADGuLP3017507@sheep.berlios.de>

Author: marec
Date: 2006-11-13 17:56:21 +0100 (Mon, 13 Nov 2006)
New Revision: 477

Modified:
   trunk/apps/kism3d/kism3d.c
   trunk/apps/kism3d/kism3d.h
Log:
fix kism3d compile warnings

Modified: trunk/apps/kism3d/kism3d.c
===================================================================
--- trunk/apps/kism3d/kism3d.c	2006-11-13 16:05:52 UTC (rev 476)
+++ trunk/apps/kism3d/kism3d.c	2006-11-13 16:56:21 UTC (rev 477)
@@ -28,8 +28,11 @@
 #include <stdio.h>    /* printf() */
 #include <string.h>   /* memset() */
 #include <errno.h>    /* errno */
-#include <sys/socket.h>
+#include <unistd.h>   /* write() */
+
+#include <sys/socket.h> /* inet_pton(), inet_aton() */
 #include <sys/types.h>
+#include <arpa/inet.h>
 
 
 
@@ -74,6 +77,8 @@
 			last_cr_ptr = read_ptr;
 			*last_cr_ptr = '\0';
 
+			bssid = channel = type = ssid = mac = ip = NULL;
+
 			/* printf( "line: %s\n", line_ptr ); */
 
 			if ( strncmp( line_ptr, "*TIME: ", strlen( "*TIME: " ) ) == 0 ) {
@@ -231,9 +236,7 @@
 	struct list_head *kismet_pos, *kismet_pos_tmp;
 	struct timeval tv;
 	int found_args = 1, max_sock = -1, res, status;
-	char *colon_ptr;
-	char enable_network[] = "!0 ENABLE NETWORK bssid,type,channel,ssid\n", enable_client[] = "!0 ENABLE CLIENT bssid,mac,ip\n";
-	unsigned char buff[1000];
+	char *colon_ptr, buff[1000];
 	fd_set wait_sockets, tmp_wait_sockets;
 
 
@@ -272,7 +275,7 @@
 
 			kismet_src->port = strtol(colon_ptr, NULL , 10);
 
-			if ( kismet_src->port < 0 || kismet_src->port > 65535 ) {
+			if ( kismet_src->port < 1 || kismet_src->port > 65535 ) {
 				printf( "Invalid kismet PORT specified: %s\n", colon_ptr );
 				free( kismet_src );
 				found_args++;
@@ -375,7 +378,7 @@
 
 						} else {
 
-							/* hope that carriage return is now in buf */
+							/* hope that carriage return is now in buffer */
 							if ( strlen( kismet_src->recv_buff ) < 1500 ) {
 
 								printf( "WARNING: receive buffer almost filled without *any* carriage return within that data !\nAppending truncated buffer to receive buffer to prevent buffer overflow.\n" );

Modified: trunk/apps/kism3d/kism3d.h
===================================================================
--- trunk/apps/kism3d/kism3d.h	2006-11-13 16:05:52 UTC (rev 476)
+++ trunk/apps/kism3d/kism3d.h	2006-11-13 16:56:21 UTC (rev 477)
@@ -39,7 +39,7 @@
 	int port;
 	int sock;
 	char *kismet_ip;
-	unsigned char *recv_buff;
+	char *recv_buff;
 	struct sockaddr_in kismet_addr;
 	int enable_level;
 



From ydyd at mail.berlios.de  Thu Nov 16 17:45:19 2006
From: ydyd at mail.berlios.de (ydyd at mail.berlios.de)
Date: Thu, 16 Nov 2006 17:45:19 +0100
Subject: [S3d-svn] r478 - trunk/objs
Message-ID: <200611161645.kAGGjJST015832@sheep.berlios.de>

Author: ydyd
Date: 2006-11-16 17:44:59 +0100 (Thu, 16 Nov 2006)
New Revision: 478

Added:
   trunk/objs/noinetwep.3ds
Log:
icons fuer netz

Added: trunk/objs/noinetwep.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/noinetwep.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From ydyd at mail.berlios.de  Thu Nov 16 17:45:33 2006
From: ydyd at mail.berlios.de (ydyd at mail.berlios.de)
Date: Thu, 16 Nov 2006 17:45:33 +0100
Subject: [S3d-svn] r479 - trunk/objs
Message-ID: <200611161645.kAGGjXpr015858@sheep.berlios.de>

Author: ydyd
Date: 2006-11-16 17:45:32 +0100 (Thu, 16 Nov 2006)
New Revision: 479

Added:
   trunk/objs/noinetwpa.3ds
Log:
icons fuer netz

Added: trunk/objs/noinetwpa.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/noinetwpa.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From marec at mail.berlios.de  Sun Nov 19 15:08:41 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Sun, 19 Nov 2006 15:08:41 +0100
Subject: [S3d-svn] r480 - trunk/apps/kism3d
Message-ID: <200611191408.kAJE8fjp024546@sheep.berlios.de>

Author: marec
Date: 2006-11-19 15:08:40 +0100 (Sun, 19 Nov 2006)
New Revision: 480

Added:
   trunk/apps/kism3d/client.c
   trunk/apps/kism3d/gui.c
   trunk/apps/kism3d/network.c
Modified:
   trunk/apps/kism3d/Makefile.am
   trunk/apps/kism3d/kism3d.c
   trunk/apps/kism3d/kism3d.h
   trunk/apps/kism3d/list.h
Log:
kism3d update

Modified: trunk/apps/kism3d/Makefile.am
===================================================================
--- trunk/apps/kism3d/Makefile.am	2006-11-16 16:45:32 UTC (rev 479)
+++ trunk/apps/kism3d/Makefile.am	2006-11-19 14:08:40 UTC (rev 480)
@@ -5,7 +5,7 @@
 kism3dinclude_HEADERS =  \
 	kism3d.h list.h
 kism3d_SOURCES =  \
-	kism3d.c
+	kism3d.c network.c client.c gui.c
 
 kism3d_CPPFLAGS=		-I${top_srcdir}/libs3d -I${top_srcdir}/libs3dw
 kism3d_LDADD=		${top_builddir}/libs3d/libs3d.la ${top_builddir}/libs3dw/libs3dw.la

Added: trunk/apps/kism3d/client.c
===================================================================
--- trunk/apps/kism3d/client.c	2006-11-16 16:45:32 UTC (rev 479)
+++ trunk/apps/kism3d/client.c	2006-11-19 14:08:40 UTC (rev 480)
@@ -0,0 +1,73 @@
+/*
+ * client.c
+ *
+ * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
+ *
+ * This file is part of kism3d, an 802.11 visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * kism3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * kism3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with olsrs3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
+#include "kism3d.h"
+#include <string.h>   /* strncmp(), strncpy() */
+#include <stdlib.h>   /* rand() */
+
+
+
+struct wlan_client *get_wlan_client( char *mac ) {
+
+	struct list_head *client_pos;
+	struct wlan_client *wlan_client;
+
+
+	list_for_each(client_pos, &Client_list) {
+
+		wlan_client = list_entry(client_pos, struct wlan_client, list);
+
+		if ( strncmp( wlan_client->mac, mac, 18 ) == 0 )
+			return wlan_client;
+
+	}
+
+
+	/* we reached the end of the list and must create a new wlan_network */
+	wlan_client = alloc_memory( sizeof( struct wlan_client ) );
+
+	INIT_LIST_HEAD(&wlan_client->list);
+
+	strncpy( wlan_client->mac, mac, 18 );
+	wlan_client->wlan_network = NULL;
+
+	wlan_client->visible = 1;
+
+	wlan_client->pos_vec[0] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+	wlan_client->pos_vec[1] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+	wlan_client->pos_vec[2] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+	wlan_client->mov_vec[0] = wlan_client->mov_vec[1] = wlan_client->mov_vec[2] = 0.0;
+
+	wlan_client->obj_id = -1;
+	wlan_client->desc_id = -1;
+
+	list_add_tail(&wlan_client->list, &Client_list);
+
+	return wlan_client;
+
+}
+
+
+

Added: trunk/apps/kism3d/gui.c
===================================================================
--- trunk/apps/kism3d/gui.c	2006-11-16 16:45:32 UTC (rev 479)
+++ trunk/apps/kism3d/gui.c	2006-11-19 14:08:40 UTC (rev 480)
@@ -0,0 +1,24 @@
+/*
+ * gui.c
+ *
+ * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
+ *
+ * This file is part of kism3d, an 802.11 visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * kism3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * kism3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with olsrs3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+

Modified: trunk/apps/kism3d/kism3d.c
===================================================================
--- trunk/apps/kism3d/kism3d.c	2006-11-16 16:45:32 UTC (rev 479)
+++ trunk/apps/kism3d/kism3d.c	2006-11-19 14:08:40 UTC (rev 480)
@@ -11,7 +11,7 @@
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  *
- * olsrs3d is distributed in the hope that it will be useful,
+ * kism3d is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
@@ -26,7 +26,7 @@
 #include "kism3d.h"
 #include <stdlib.h>   /* malloc() */
 #include <stdio.h>    /* printf() */
-#include <string.h>   /* memset() */
+#include <string.h>   /* memset(), strncmp(), strncpy() */
 #include <errno.h>    /* errno */
 #include <unistd.h>   /* write() */
 
@@ -36,9 +36,9 @@
 
 
 
-int num_kismet_sources = 0;
-
 DEFINE_LIST_HEAD(kismet_src_list);
+DEFINE_LIST_HEAD(Network_list);
+DEFINE_LIST_HEAD(Client_list);
 
 
 
@@ -59,8 +59,27 @@
 
 
 
+void *realloc_memory( void *ptr, int len ) {
+
+	void *res = realloc( ptr, len );
+
+	if (res == NULL) {
+		printf( "Error - can't trallocate memory: %s\n", strerror(errno) );
+		exit(1);
+	}
+
+	memset( res, 0, len );
+
+	return res;
+
+}
+
+
+
 void parse_buffer( struct kismet_src *kismet_src ) {
 
+	struct wlan_network *wlan_network;
+	struct wlan_client *wlan_client;
 	char enable_network[] = "!0 ENABLE NETWORK bssid,type,channel,ssid\n", enable_client[] = "!0 ENABLE CLIENT bssid,mac,ip\n", enable_alert[] = "!0 ENABLE ALERT *\n";
 	char *read_ptr, *line_ptr, *last_cr_ptr = NULL, *parse_begin_ptr, *parse_end_ptr;
 	char *bssid, *channel, *type, *ssid, *mac, *ip;
@@ -164,8 +183,27 @@
 
 				}
 
-				printf( "network found - bssid %s, type %s, channel %s, ssid %s\n", bssid, type, channel, ssid );
+				wlan_network = get_wlan_network( bssid );
 
+				if ( ( wlan_network->type != -1 ) && ( wlan_network->channel != -1 ) && ( wlan_network->ssid != NULL ) ) {
+
+					/* network properties have changed - alert user */
+
+				}
+
+				wlan_network->type = atoi( type );
+				wlan_network->channel = atoi( channel );
+
+				if ( wlan_network->ssid == NULL )
+					wlan_network->ssid = alloc_memory( strlen( ssid ) );
+				else
+					wlan_network->ssid = realloc_memory( wlan_network->ssid, strlen( ssid ) );
+
+				strncpy( wlan_network->ssid, ssid, strlen( ssid ) );
+
+
+				/* printf( "network found - bssid %s, type %s, channel %s, ssid %s\n", bssid, type, channel, ssid ); */
+
 			} else if ( strncmp( line_ptr, "*CLIENT: ", strlen( "*CLIENT: " ) ) == 0 ) {
 
 				parse_begin_ptr = parse_end_ptr = line_ptr + strlen( "*CLIENT: " );
@@ -205,11 +243,23 @@
 
 				}
 
-				printf( "client found - bssid %s, mac %s, ip %s\n", bssid, mac, ip );
+				wlan_client = get_wlan_client( mac );
 
+				/*if ( ( wlan_client->type != -1 ) && ( wlan_client->channel != -1 ) && ( wlan_client->ssid != NULL ) ) {
+
+					 client properties have changed - alert user
+
+				}*/
+
+				strncpy( wlan_client->bssid, bssid, 18 );
+				strncpy( wlan_client->ip, ip, 16 );
+				wlan_client->wlan_network = find_wlan_network( wlan_client->bssid );
+
+				/* printf( "client found - bssid %s, mac %s, ip %s\n", bssid, mac, ip ); */
+
 			} else if ( strncmp( line_ptr, "*ALERT: ", strlen( "*ALERT: " ) ) == 0 ) {
 
-				printf( "alert: %s\n", line_ptr + strlen( "*ALERT: " ) );
+				/* printf( "alert: %s\n", line_ptr + strlen( "*ALERT: " ) ); */
 
 			}
 
@@ -234,8 +284,10 @@
 	struct in_addr tmp_ip_holder;
 	struct kismet_src *kismet_src;
 	struct list_head *kismet_pos, *kismet_pos_tmp;
+	struct wlan_network *wlan_network;
+	struct wlan_client *wlan_client;
 	struct timeval tv;
-	int found_args = 1, max_sock = -1, res, status;
+	int num_kismet_sources = 0, found_args = 1, max_sock = -1, res, status;
 	char *colon_ptr, buff[1000];
 	fd_set wait_sockets, tmp_wait_sockets;
 
@@ -436,6 +488,28 @@
 
 		}
 
+		printf( "\nCurrent network list:\n" );
+
+		list_for_each_safe(kismet_pos, kismet_pos_tmp, &Network_list) {
+
+			wlan_network = list_entry(kismet_pos, struct wlan_network, list);
+
+			printf( "   => %s\n", wlan_network->bssid );
+
+		}
+
+		printf( "\nCurrent client list:\n" );
+
+		list_for_each_safe(kismet_pos, kismet_pos_tmp, &Client_list) {
+
+			wlan_client = list_entry(kismet_pos, struct wlan_client, list);
+
+			printf( "   => %s belonging to %s\n", wlan_client->mac, ( wlan_client->wlan_network == NULL ? "unknown" : wlan_client->wlan_network->bssid ) );
+
+		}
+
 	}
 
+	return (0);
+
 }

Modified: trunk/apps/kism3d/kism3d.h
===================================================================
--- trunk/apps/kism3d/kism3d.h	2006-11-16 16:45:32 UTC (rev 479)
+++ trunk/apps/kism3d/kism3d.h	2006-11-19 14:08:40 UTC (rev 480)
@@ -11,7 +11,7 @@
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  *
- * olsrs3d is distributed in the hope that it will be useful,
+ * kism3d is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
@@ -28,10 +28,6 @@
 
 
 
-extern int num_kismet_sources;
-
-
-
 struct kismet_src {
 
 	struct list_head list;
@@ -44,3 +40,47 @@
 	int enable_level;
 
 };
+
+
+struct wlan_network {
+
+	struct list_head list;
+	char bssid[18];
+	char *ssid;
+	int type;
+	int channel;
+	int visible;
+	float pos_vec[3];
+	float mov_vec[3];
+	int obj_id;
+	int desc_id;
+
+};
+
+
+struct wlan_client {
+
+	struct list_head list;
+	char bssid[18];
+	char mac[18];
+	int ip[16];
+	struct wlan_network *wlan_network;
+	int visible;
+	float pos_vec[3];
+	float mov_vec[3];
+	int obj_id;
+	int desc_id;
+
+};
+
+
+
+void *alloc_memory( int len );
+struct wlan_network *get_wlan_network( char *bssid );
+struct wlan_network *find_wlan_network( char *bssid );
+struct wlan_client *get_wlan_client( char *mac );
+
+
+
+extern struct list_head Network_list;
+extern struct list_head Client_list;

Modified: trunk/apps/kism3d/list.h
===================================================================
--- trunk/apps/kism3d/list.h	2006-11-16 16:45:32 UTC (rev 479)
+++ trunk/apps/kism3d/list.h	2006-11-19 14:08:40 UTC (rev 480)
@@ -11,7 +11,7 @@
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  *
- * olsrs3d is distributed in the hope that it will be useful,
+ * kism3d is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
@@ -38,6 +38,16 @@
 
 
 /**
+ * list_for_each	-	iterate over a list
+ * @pos:	the &struct list_head to use as a loop counter.
+ * @head:	the head for your list.
+ */
+#define list_for_each(pos, head) \
+	for (pos = (head)->next; pos != (head); \
+        	pos = pos->next)
+
+
+/**
  * list_for_each_safe - iterate over a list safe against removal of list entry
  * @pos:	the &struct list_head to use as a loop counter.
  * @n:		another &struct list_head to use as temporary storage

Added: trunk/apps/kism3d/network.c
===================================================================
--- trunk/apps/kism3d/network.c	2006-11-16 16:45:32 UTC (rev 479)
+++ trunk/apps/kism3d/network.c	2006-11-19 14:08:40 UTC (rev 480)
@@ -0,0 +1,92 @@
+/*
+ * network.c
+ *
+ * Copyright (C) 2006  Marek Lindner <lindner_marek at yahoo.de>
+ *
+ * This file is part of kism3d, an 802.11 visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * kism3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * kism3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with olsrs3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
+#include "kism3d.h"
+#include <string.h>   /* strncmp(), strncpy() */
+#include <stdlib.h>   /* rand() */
+
+
+
+struct wlan_network *get_wlan_network( char *bssid ) {
+
+	struct wlan_network *wlan_network;
+
+
+	wlan_network = find_wlan_network( bssid );
+
+	if ( wlan_network != NULL )
+		return wlan_network;
+
+
+	/* we reached the end of the list and must create a new wlan_network */
+	wlan_network = alloc_memory( sizeof( struct wlan_network ) );
+
+	INIT_LIST_HEAD(&wlan_network->list);
+
+	strncpy( wlan_network->bssid, bssid, 18 );
+
+	wlan_network->type = -1;
+	wlan_network->channel = -1;
+
+	wlan_network->ssid = NULL;
+
+	wlan_network->visible = 1;
+
+	wlan_network->pos_vec[0] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+	wlan_network->pos_vec[1] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+	wlan_network->pos_vec[2] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+	wlan_network->mov_vec[0] = wlan_network->mov_vec[1] = wlan_network->mov_vec[2] = 0.0;
+
+	wlan_network->obj_id = -1;
+	wlan_network->desc_id = -1;
+
+	list_add_tail(&wlan_network->list, &Network_list);
+
+	return wlan_network;
+
+}
+
+
+
+struct wlan_network *find_wlan_network( char *bssid ) {
+
+	struct list_head *network_pos;
+	struct wlan_network *wlan_network;
+
+
+	list_for_each(network_pos, &Network_list) {
+
+		wlan_network = list_entry(network_pos, struct wlan_network, list);
+
+		if ( strncmp( wlan_network->bssid, bssid, 18 ) == 0 )
+			return wlan_network;
+
+	}
+
+
+	return NULL;
+
+}
+



From dotslash at mail.berlios.de  Sun Nov 19 16:44:04 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Sun, 19 Nov 2006 16:44:04 +0100
Subject: [S3d-svn] r481 - in trunk: . example libs3dw
Message-ID: <200611191544.kAJFi4uu031634@sheep.berlios.de>

Author: dotslash
Date: 2006-11-19 16:44:03 +0100 (Sun, 19 Nov 2006)
New Revision: 481

Added:
   trunk/libs3dw/scrollbar.c
   trunk/libs3dw/textbox.c
Modified:
   trunk/
   trunk/example/widgets.c
   trunk/libs3dw/Makefile.am
   trunk/libs3dw/input.c
   trunk/libs3dw/root.c
   trunk/libs3dw/s3dw.h
   trunk/libs3dw/s3dw_int.h
Log:
 r1143 at kero:  dotslash | 2006-11-19 16:43:58 +0100
 - add textbox (and scrollbars) to widget library



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1141
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1143

Modified: trunk/example/widgets.c
===================================================================
--- trunk/example/widgets.c	2006-11-19 14:08:40 UTC (rev 480)
+++ trunk/example/widgets.c	2006-11-19 15:44:03 UTC (rev 481)
@@ -128,17 +128,18 @@
 	
 	s3dw_show(S3DWIDGET(surface));
 }
-
+char *text="okay\nn2\n3\nfooobarfooobar ...\noh no\n its too loooong\n";
 int main (int argc, char **argv)
 {
 	s3dw_button *button;
+	s3dw_textbox *textbox;
 	if (!s3d_init(&argc,&argv,"widgettest"))
 	{
 		s3d_set_callback(S3D_EVENT_OBJ_CLICK,click);
 		s3d_set_callback(S3D_EVENT_KEY,key);
 		s3d_set_callback(S3D_EVENT_OBJ_INFO,s3dw_object_info);
 		/* this creates the "window" */
-		surface=s3dw_surface_new("Hello World",20,10);
+		surface=s3dw_surface_new("Hello World",20,20);
 		
 		/* put a label (which is simply text) at position x=1, y=2 */
 		s3dw_label_new(surface,"How old are you?",1,2);
@@ -160,6 +161,8 @@
 
 		/* we will tell him how sad we are ... */
 		button->onclick=no_button;
+		/* create some textbox at (1,10) widh width 18 and height 8 */
+		textbox=s3dw_textbox_new(surface,text,1,10,18,8);
 
 		/* this widget is focused (of course, it's our only one ... */
 		s3dw_focus(S3DWIDGET(surface));

Modified: trunk/libs3dw/Makefile.am
===================================================================
--- trunk/libs3dw/Makefile.am	2006-11-19 14:08:40 UTC (rev 480)
+++ trunk/libs3dw/Makefile.am	2006-11-19 15:44:03 UTC (rev 481)
@@ -1,6 +1,6 @@
 lib_LTLIBRARIES=	libs3dw.la
 
-libs3dw_la_SOURCES=	button.c surface.c widget.c style.c event.c animate.c label.c input.c root.c arrange.c 
+libs3dw_la_SOURCES=	button.c surface.c widget.c style.c event.c animate.c label.c input.c root.c arrange.c  textbox.c scrollbar.c
 			
 include_HEADERS= 	s3dw.h
 noinst_HEADERS=		s3dw_int.h

Modified: trunk/libs3dw/input.c
===================================================================
--- trunk/libs3dw/input.c	2006-11-19 14:08:40 UTC (rev 480)
+++ trunk/libs3dw/input.c	2006-11-19 15:44:03 UTC (rev 481)
@@ -38,11 +38,8 @@
 	float tlen;
 	if (widget->width<1) return(-1);
 	i=0;
-	do 
-	{
-		oid_text=s3d_draw_string(input->text+i,&tlen);
-		i++;
-	} while (tlen>(widget->width-1));
+	while (s3d_strlen(input->text+i) > (widget->width-1)) i++;
+	oid_text=s3d_draw_string(input->text+i,&tlen);
 	s3d_pep_materials_a(oid_text,widget->style->text_mat,1);
 	s3d_translate( oid_text,0.5,-1.5,0.30);
 	s3d_link(	   oid_text,widget->oid);

Modified: trunk/libs3dw/root.c
===================================================================
--- trunk/libs3dw/root.c	2006-11-19 14:08:40 UTC (rev 480)
+++ trunk/libs3dw/root.c	2006-11-19 15:44:03 UTC (rev 481)
@@ -76,11 +76,16 @@
 		s3dwcb_show[S3DW_TBUTTON]=		s3dw_button_show;
 		s3dwcb_show[S3DW_TLABEL]=		s3dw_label_show;
 		s3dwcb_show[S3DW_TINPUT]=		s3dw_input_show;
+		s3dwcb_show[S3DW_TTEXTBOX]=		s3dw_textbox_show;
+		s3dwcb_show[S3DW_TSCROLLBAR]=	s3dw_scrollbar_show;
+
 		s3dwcb_hide[S3DW_TROOT]=		s3dw_nothing;
 		s3dwcb_hide[S3DW_TSURFACE]=		s3dw_surface_hide;
 		s3dwcb_hide[S3DW_TBUTTON]=		s3dw_button_hide;
 		s3dwcb_hide[S3DW_TLABEL]=		s3dw_label_hide;
 		s3dwcb_hide[S3DW_TINPUT]=		s3dw_input_hide;
+		s3dwcb_hide[S3DW_TTEXTBOX]=		s3dw_textbox_hide;
+		s3dwcb_hide[S3DW_TSCROLLBAR]=	s3dw_scrollbar_hide;
 		
 		s3dwcb_destroy[S3DW_TROOT]=		s3dw_root_destroy;
 		s3dwcb_destroy[S3DW_TCAM]=		s3dw_root_destroy;
@@ -88,6 +93,8 @@
 		s3dwcb_destroy[S3DW_TBUTTON]=	s3dw_button_destroy;
 		s3dwcb_destroy[S3DW_TLABEL]=	s3dw_label_destroy;
 		s3dwcb_destroy[S3DW_TINPUT]=	s3dw_input_destroy;
+		s3dwcb_destroy[S3DW_TTEXTBOX]=	s3dw_textbox_destroy;
+		s3dwcb_destroy[S3DW_TSCROLLBAR]=s3dw_scrollbar_destroy;
 
 		s3dwcb_click[S3DW_TROOT]=		s3dw_click_nothing;
 		s3dwcb_click[S3DW_TCAM]=		s3dw_click_nothing;
@@ -95,6 +102,8 @@
 		s3dwcb_click[S3DW_TBUTTON]=		s3dw_button_event_click;
 		s3dwcb_click[S3DW_TLABEL]=		s3dw_label_event_click;
 		s3dwcb_click[S3DW_TINPUT]=		s3dw_input_event_click;
+		s3dwcb_click[S3DW_TTEXTBOX]=	s3dw_textbox_event_click;
+		s3dwcb_click[S3DW_TSCROLLBAR]=	s3dw_scrollbar_event_click;
 
 		s3dwcb_key[S3DW_TROOT]=			s3dw_key_nothing;
 		s3dwcb_key[S3DW_TCAM]=			s3dw_key_nothing;
@@ -102,6 +111,8 @@
 		s3dwcb_key[S3DW_TBUTTON]=		s3dw_button_event_key;
 		s3dwcb_key[S3DW_TLABEL]=		s3dw_label_event_key;
 		s3dwcb_key[S3DW_TINPUT]=		s3dw_input_event_key;
+		s3dwcb_key[S3DW_TTEXTBOX]=		s3dw_key_nothing;
+		s3dwcb_key[S3DW_TSCROLLBAR]=	s3dw_key_nothing;
 
 	} 
 	return root;

Modified: trunk/libs3dw/s3dw.h
===================================================================
--- trunk/libs3dw/s3dw.h	2006-11-19 14:08:40 UTC (rev 480)
+++ trunk/libs3dw/s3dw.h	2006-11-19 15:44:03 UTC (rev 481)
@@ -47,11 +47,15 @@
 	S3DW_TBUTTON,
 	S3DW_TLABEL,
 	S3DW_TINPUT,
+	S3DW_TTEXTBOX,
+	S3DW_TSCROLLBAR,
 	S3DW_NTYPES
 };
 typedef struct _s3dw_widget 	s3dw_widget;
 typedef struct _s3dw_button 	s3dw_button;
 typedef struct _s3dw_label  	s3dw_label;
+typedef struct _s3dw_textbox  	s3dw_textbox;
+typedef struct _s3dw_scrollbar 	s3dw_scrollbar;
 typedef struct _s3dw_input  	s3dw_input;
 typedef struct _s3dw_surface  	s3dw_surface;
 typedef struct _s3dw_style  	s3dw_style;
@@ -95,6 +99,31 @@
 	s3dw_callback 	 onclick;
 	
 };
+struct _s3dw_scrollbar {
+	/* private */
+	s3dw_widget 	 widget;
+	float			 pos,max;
+	int				 type; /* 0 = horizontal, 1 = vertical */
+	int				 loid,roid,baroid;
+	/* public */
+	s3dw_callback 	 lonclick;
+	s3dw_callback 	 ronclick;
+	
+};
+
+struct _s3dw_textbox {
+	/* private */
+	s3dw_widget 	 widget;
+	s3dw_scrollbar	*scroll_vertical,
+					*scroll_horizontal;
+	char 			*text;
+	int				n_lineoids,*p_lineoids;
+	int				window_x,window_y;
+	/* public */
+	s3dw_callback 	 onclick;
+	
+};
+
 struct _s3dw_input {
 	/* private */
 	s3dw_widget 	 widget;
@@ -128,6 +157,7 @@
 s3dw_button 		*s3dw_button_new(s3dw_surface *surface, char *text, float posx, float posy);
 s3dw_label	 		*s3dw_label_new(s3dw_surface *surface, char *text, float posx, float posy);
 s3dw_input 			*s3dw_input_new(s3dw_surface *surface, float width, float posx, float posy);
+s3dw_textbox 		*s3dw_textbox_new(s3dw_surface *surface, char *text, float posx, float posy, float width, float height);
 char 				*s3dw_input_gettext(s3dw_input *input);
 void 				 s3dw_input_change_text(s3dw_input *input, char *text);
 s3dw_surface 		*s3dw_surface_new(char *title, float width, float height);
@@ -138,6 +168,13 @@
 void 				 s3dw_show(s3dw_widget *widget);
 void 				 s3dw_focus(s3dw_widget *focus);
 
+void 				 s3dw_textbox_scrollup(s3dw_textbox *textbox);
+void 				 s3dw_textbox_scrolldown(s3dw_textbox *textbox);
+void 				 s3dw_textbox_scrollleft(s3dw_textbox *textbox);
+void 				 s3dw_textbox_scrollright(s3dw_textbox *textbox);
+void 				 s3dw_textbox_scrollto(s3dw_textbox *textbox, int x, int y);
+void 				 s3dw_textbox_change_text(s3dw_textbox *textbox, char *text);
+
 int 				 s3dw_handle_click(struct s3d_evt *evt);
 int 				 s3dw_handle_key(struct s3d_evt *evt);
 int 				 s3dw_object_info(struct s3d_evt *evt);

Modified: trunk/libs3dw/s3dw_int.h
===================================================================
--- trunk/libs3dw/s3dw_int.h	2006-11-19 14:08:40 UTC (rev 480)
+++ trunk/libs3dw/s3dw_int.h	2006-11-19 15:44:03 UTC (rev 481)
@@ -80,7 +80,28 @@
 uint32_t s3dw_input_draw_string(s3dw_widget *widget);
 int s3dw_input_event_click(s3dw_widget *widget, uint32_t oid);
 int s3dw_input_event_key(s3dw_widget *widget, struct s3d_key_event *keys);
+/* textbox.c */
+void s3dw_textbox_drawtext(s3dw_widget *widget);
+void s3dw_textbox_erasetext(s3dw_widget *widget);
+void s3dw_textbox_show(s3dw_widget *widget);
+void s3dw_textbox_hide(s3dw_widget *widget);
+void s3dw_textbox_erase(s3dw_widget *widget);
+void s3dw_textbox_destroy(s3dw_widget *widget);
+void s3dw_textbox_erasetext(s3dw_widget *widget);
+void s3dw_textbox_drawtext(s3dw_widget *widget);
+int s3dw_textbox_event_key(s3dw_widget *widget, struct s3d_key_event *keys);
+int s3dw_textbox_event_click(s3dw_widget *widget, uint32_t oid);
 
+/* scrollbar.c */
+#define S3DW_SBAR_HORI		0
+#define S3DW_SBAR_VERT		1
+s3dw_scrollbar *s3dw_scrollbar_new(s3dw_widget *parent, int type, float posx, float posy, float length);
+void s3dw_scrollbar_show(s3dw_widget *widget);
+void s3dw_scrollbar_hide(s3dw_widget *widget);
+void s3dw_scrollbar_erase(s3dw_widget *widget);
+void s3dw_scrollbar_destroy(s3dw_widget *widget);
+int s3dw_scrollbar_event_key(s3dw_widget *widget, struct s3d_key_event *keys);
+int s3dw_scrollbar_event_click(s3dw_widget *widget, uint32_t oid);
 /* style.c */
 extern s3dw_style def_style;
 /* animate.c */

Added: trunk/libs3dw/scrollbar.c
===================================================================
--- trunk/libs3dw/scrollbar.c	2006-11-19 14:08:40 UTC (rev 480)
+++ trunk/libs3dw/scrollbar.c	2006-11-19 15:44:03 UTC (rev 481)
@@ -0,0 +1,301 @@
+/*
+ * scrollbar.c
+ *
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d Widgets, a Widget Library for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d Widgets is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d Widgets is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d Widgets; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+#include <s3d.h>
+#include <s3dw.h>
+#include <s3dw_int.h>
+#include <stdlib.h> /* malloc() */
+#include <string.h> /* strdup() */
+
+void s3dw_scrollbar_draw(s3dw_widget *widget)
+{
+	s3dw_scrollbar *scrollbar=(s3dw_scrollbar *)widget;
+	float back_vertices[3*32];
+	int i,j;
+	unsigned int back_polygons[44*4]={
+							/* box outside */
+							0,4,5,0,							0,5,1,0,
+							1,5,6,0,							1,6,2,0,
+							3,2,7,0,							7,2,6,0,
+							3,7,4,0,							3,4,0,0,
+							
+							/* sides of big box */
+							12,13,9,0,							12,9,8,0,
+							14,15,11,0,							14,11,10,0,
+
+							/* inlay box */
+							9,16,17,0,							9,17,10,0,
+							17,18,14,0,							17,14,10,0,
+							13,14,18,0,							13,18,19,0,
+							13,19,16,0,							13,16,9,0,
+
+							/* inlay box back */
+							19,18,17,0,							19,17,16,0,
+
+							/* up arrow background surface */
+							7,6,15,0,
+							7,15,14,0,
+							7,14,13,0,
+							7,13,12,0,
+							
+							/* up arrow face */
+							20,23,24,0,							20,24,21,0,
+							21,24,25,0,							21,25,22,0,
+							20,22,25,0,							20,25,23,0,
+							23,25,24,0,
+
+							/* down arrow background surface */
+							4,8,9,0,
+							4,9,10,0,
+							4,10,11,0,
+							4,11,5,0,
+							
+							/* down arrow face */
+							26,27,31,0,							26,31,30,0,
+							31,27,28,0,							31,28,29,0,
+							26,30,29,0,							26,29,28,0,
+							30,31,29,0
+
+					};
+	unsigned int bar_polygons[14*4]={
+							/* front */
+							0,4,5,0,							0,5,1,0,
+							1,5,6,0,							1,6,2,0,
+							3,2,6,0,							3,6,7,0,
+							3,7,4,0,							3,4,0,0,
+
+							7,6,4,0,							4,6,5,0,
+
+							/* back, only visible sides */
+							2,3,11,0,							2,11,10,0,
+							1,9,8,0,							1,8,0,0
+			};
+	float bar_vertices[12*3];
+	float w,h;
+	float temp;
+
+	
+	w=(scrollbar->type==S3DW_SBAR_VERT)? widget->width : widget->height;
+	h=(scrollbar->type==S3DW_SBAR_VERT)? widget->height : widget->width;
+	/* outside/big  box */
+	back_vertices[0*3+0]=w*0.0;			back_vertices[0*3+1]=0.0-h;			back_vertices[0*3+2]=0.0;
+	back_vertices[1*3+0]=w*1.0;			back_vertices[1*3+1]=0.0-h;			back_vertices[1*3+2]=0.0;
+	back_vertices[2*3+0]=w*1.0;			back_vertices[2*3+1]=0.0;			back_vertices[2*3+2]=0.0;
+	back_vertices[3*3+0]=w*0.0;			back_vertices[3*3+1]=0.0;			back_vertices[3*3+2]=0.0;
+	back_vertices[4*3+0]=w*0.125;		back_vertices[4*3+1]=w*0.125-h;		back_vertices[4*3+2]=0.25;
+	back_vertices[5*3+0]=w*0.875;		back_vertices[5*3+1]=w*0.125-h;		back_vertices[5*3+2]=0.25;
+	back_vertices[6*3+0]=w*0.875;		back_vertices[6*3+1]=w*-0.125;		back_vertices[6*3+2]=0.25;
+	back_vertices[7*3+0]=w*0.125;		back_vertices[7*3+1]=w*-0.125;		back_vertices[7*3+2]=0.25;
+
+	/* downside inlay */
+	back_vertices[8*3+0]=w* 0.125;		back_vertices[8*3+1]=w-h;			back_vertices[8*3+2]=0.25;
+	back_vertices[9*3+0]=w* 0.25;		back_vertices[9*3+1]=w-h;			back_vertices[9*3+2]=0.25;
+	back_vertices[10*3+0]=w*0.75;		back_vertices[10*3+1]=w-h;			back_vertices[10*3+2]=0.25;
+	back_vertices[11*3+0]=w*0.875;		back_vertices[11*3+1]=w-h;			back_vertices[11*3+2]=0.25;
+
+	/* upside inlay */
+	back_vertices[12*3+0]=w*0.125;		back_vertices[12*3+1]=-w;			back_vertices[12*3+2]=0.25;
+	back_vertices[13*3+0]=w*0.25;		back_vertices[13*3+1]=-w;			back_vertices[13*3+2]=0.25;
+	back_vertices[14*3+0]=w*0.75;		back_vertices[14*3+1]=-w;			back_vertices[14*3+2]=0.25;
+	back_vertices[15*3+0]=w*0.875;		back_vertices[15*3+1]=-w;			back_vertices[15*3+2]=0.25;
+
+	/* inlay box */
+	back_vertices[16*3+0]=w*0.25;		back_vertices[16*3+1]=w*0.125-h+w;	back_vertices[16*3+2]=0.125;
+	back_vertices[17*3+0]=w*0.75;		back_vertices[17*3+1]=w*0.125-h+w;	back_vertices[17*3+2]=0.125;
+	back_vertices[18*3+0]=w*0.75;		back_vertices[18*3+1]=w*-0.125-w;	back_vertices[18*3+2]=0.125;
+	back_vertices[19*3+0]=w*0.25;		back_vertices[19*3+1]=w*-0.125-w;	back_vertices[19*3+2]=0.125;
+
+	/* arrow up */
+	back_vertices[20*3+0]=w*0.25;		back_vertices[20*3+1]=w*-0.875;		back_vertices[20*3+2]=0.25;
+	back_vertices[21*3+0]=w*0.75;		back_vertices[21*3+1]=w*-0.875;		back_vertices[21*3+2]=0.25;
+	back_vertices[22*3+0]=w*0.5;		back_vertices[22*3+1]=w*-0.25;		back_vertices[22*3+2]=0.25;
+	back_vertices[23*3+0]=w*0.375;		back_vertices[23*3+1]=w*-0.75;		back_vertices[23*3+2]=0.375;
+	back_vertices[24*3+0]=w*0.625;		back_vertices[24*3+1]=w*-0.75;		back_vertices[24*3+2]=0.375;
+	back_vertices[25*3+0]=w*0.5;		back_vertices[25*3+1]=w*-0.375;		back_vertices[25*3+2]=0.375;
+
+	/* arrow down */
+	back_vertices[26*3+0]=w*0.25;		back_vertices[26*3+1]=-h+w*0.875;	back_vertices[26*3+2]=0.25;
+	back_vertices[27*3+0]=w*0.75;		back_vertices[27*3+1]=-h+w*0.875;	back_vertices[27*3+2]=0.25;
+	back_vertices[28*3+0]=w*0.5;		back_vertices[28*3+1]=-h+w*0.25;	back_vertices[28*3+2]=0.25;
+	back_vertices[29*3+0]=w*0.375;		back_vertices[29*3+1]=-h+w*0.75;	back_vertices[29*3+2]=0.375;
+	back_vertices[30*3+0]=w*0.625;		back_vertices[30*3+1]=-h+w*0.75;	back_vertices[30*3+2]=0.375;
+	back_vertices[31*3+0]=w*0.5;		back_vertices[31*3+1]=-h+w*0.375;	back_vertices[31*3+2]=0.375;
+
+	/* scrollbar bar poinst */
+	bar_vertices[0*3+0]=w*0.25;			bar_vertices[0*3+1]=-(h-3)+w*0.125;	bar_vertices[0*3+2]=0.25;
+	bar_vertices[1*3+0]=w*0.75;			bar_vertices[1*3+1]=-(h-3)+w*0.125;	bar_vertices[1*3+2]=0.25;
+	bar_vertices[2*3+0]=w*0.75;			bar_vertices[2*3+1]=-w*0.125;		bar_vertices[2*3+2]=0.25;
+	bar_vertices[3*3+0]=w*0.25;			bar_vertices[3*3+1]=-w*0.125;		bar_vertices[3*3+2]=0.25;
+
+	bar_vertices[4*3+0]=w*0.125;		bar_vertices[4*3+1]=-(h-3)+w*0.25;	bar_vertices[4*3+2]=0.375;
+	bar_vertices[5*3+0]=w*0.875;		bar_vertices[5*3+1]=-(h-3)+w*0.25;	bar_vertices[5*3+2]=0.375;
+	bar_vertices[6*3+0]=w*0.875;		bar_vertices[6*3+1]=-w*0.25;		bar_vertices[6*3+2]=0.375;
+	bar_vertices[7*3+0]=w*0.125;		bar_vertices[7*3+1]=-w*0.25;		bar_vertices[7*3+2]=0.375;
+	
+	bar_vertices[8*3+0]=w*0.125;		bar_vertices[8*3+1]=-(h-3)+w*0.25;	bar_vertices[8*3+2]=0.175;
+	bar_vertices[9*3+0]=w*0.875;		bar_vertices[9*3+1]=-(h-3)+w*0.25;	bar_vertices[9*3+2]=0.175;
+	bar_vertices[10*3+0]=w*0.875;		bar_vertices[10*3+1]=-w*0.25;		bar_vertices[10*3+2]=0.175;
+	bar_vertices[11*3+0]=w*0.125;		bar_vertices[11*3+1]=-w*0.25;		bar_vertices[11*3+2]=0.175;
+
+
+
+	
+	if (scrollbar->type==S3DW_SBAR_HORI) /* rotate x and y for horizontal scrollbar */
+	{
+		for (i=0;i<32;i++)	{
+			temp=back_vertices[i*3];
+			back_vertices[i*3]=-back_vertices[i*3+1];
+			back_vertices[i*3+1]=-temp;
+		}
+		for (i=0;i<44;i++) { /* change clockwiseness */
+			j=back_polygons[i*4];
+			back_polygons[i*4]=back_polygons[i*4+1];
+			back_polygons[i*4+1]=j;
+		}
+		for (i=0;i<12;i++)	{
+			temp=bar_vertices[i*3];
+			bar_vertices[i*3]=-bar_vertices[i*3+1];
+			bar_vertices[i*3+1]=-temp;
+		}
+		for (i=0;i<14;i++) { /* change clockwiseness */
+			j=bar_polygons[i*4];
+			bar_polygons[i*4]=bar_polygons[i*4+1];
+			bar_polygons[i*4+1]=j;
+		}
+	}
+
+	widget->oid=s3d_new_object();
+	scrollbar->loid=s3d_new_object();
+	scrollbar->roid=s3d_new_object();
+	scrollbar->baroid=s3d_new_object();
+	s3d_push_materials_a(widget->oid,widget->style->input_mat,1);
+	s3d_push_materials_a(scrollbar->loid,widget->style->input_mat,1);
+	s3d_push_materials_a(scrollbar->roid,widget->style->input_mat,1);
+	s3d_push_materials_a(scrollbar->baroid,widget->style->input_mat,1);
+	s3d_push_vertices   (widget->oid,back_vertices,20);
+	s3d_push_vertices   (scrollbar->loid,back_vertices,32);
+	s3d_push_vertices   (scrollbar->roid,back_vertices,32);
+	s3d_push_vertices   (scrollbar->baroid,bar_vertices,12);
+
+	s3d_push_polygons   (widget->oid,back_polygons ,22);
+	s3d_push_polygons   (scrollbar->loid,back_polygons +4*22,11);
+	s3d_push_polygons   (scrollbar->roid,back_polygons +4*33,11);
+	s3d_push_polygons   (scrollbar->baroid,bar_polygons ,14);
+	s3d_link(		   widget->oid,widget->parent->oid);
+	s3d_link(		   scrollbar->loid,widget->oid);
+	s3d_link(		   scrollbar->roid,widget->oid);
+	s3d_link(		   scrollbar->baroid,widget->oid);
+	s3d_translate(widget->oid,widget->x,-widget->y,0);
+	if (scrollbar->type==S3DW_SBAR_VERT) 
+		s3d_translate(scrollbar->baroid,0,-1.5,0);
+	else
+		s3d_translate(scrollbar->baroid,1.5,0,0);
+
+}
+/* show the scrollbar */
+void s3dw_scrollbar_show(s3dw_widget *widget)
+{
+	s3dw_scrollbar *scrollbar=(s3dw_scrollbar *)widget;
+    s3d_flags_on(widget->oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+    s3d_flags_on(scrollbar->loid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+    s3d_flags_on(scrollbar->roid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+    s3d_flags_on(scrollbar->baroid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+
+}
+/* hides the scrollbar */
+void s3dw_scrollbar_hide(s3dw_widget *widget)
+{
+	s3dw_scrollbar *scrollbar=(s3dw_scrollbar *)widget;
+    s3d_flags_off(widget->oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+    s3d_flags_off(scrollbar->loid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+    s3d_flags_off(scrollbar->roid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+    s3d_flags_off(scrollbar->baroid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+}
+
+/* create a new scrollbar in the surface */
+s3dw_scrollbar *s3dw_scrollbar_new(s3dw_widget *parent, int type, float posx, float posy, float length)
+{
+	s3dw_scrollbar *scrollbar;
+	s3dw_widget *widget;
+	scrollbar=(s3dw_scrollbar *)malloc(sizeof(s3dw_scrollbar));
+	widget=s3dw_widget_new((s3dw_widget *)scrollbar);
+	widget->type=S3DW_TSCROLLBAR;
+	if ((scrollbar->type=type)==S3DW_SBAR_HORI)
+	{
+		widget->height=1;
+		widget->width=length;
+	} else {
+		widget->width=1;
+		widget->height=length;
+	}
+	widget->x=posx;
+	widget->y=posy;
+	widget->oid=-1;
+	scrollbar->loid=-1;
+	scrollbar->roid=-1;
+	scrollbar->baroid=-1;
+	scrollbar->lonclick=s3dw_nothing;
+	scrollbar->ronclick=s3dw_nothing;
+	s3dw_widget_append(parent, widget);
+	s3dw_scrollbar_draw(widget);
+	return(scrollbar);
+}
+
+void s3dw_scrollbar_erase(s3dw_widget *widget)
+{
+	s3dw_scrollbar *scrollbar=(s3dw_scrollbar *)widget;
+	s3d_del_object(widget->oid);
+	s3d_del_object(scrollbar->loid);
+	s3d_del_object(scrollbar->roid);
+	s3d_del_object(scrollbar->baroid);
+}
+/* destroy the scrollbar */
+void s3dw_scrollbar_destroy(s3dw_widget *widget)
+{
+	s3dw_scrollbar *scrollbar=(s3dw_scrollbar *)widget;
+	s3dw_scrollbar_erase(widget);
+	free(scrollbar);
+}
+/* handle key events */
+int s3dw_scrollbar_event_key(s3dw_widget *widget, struct s3d_key_event *keys)
+{
+	return(0);
+}
+/* handle click events */
+int s3dw_scrollbar_event_click(s3dw_widget *widget, uint32_t oid)
+{
+	s3dw_scrollbar *scrollbar=(s3dw_scrollbar *)widget;
+	if (scrollbar->loid==oid)
+	{
+		scrollbar->lonclick(widget);
+		return(1);
+	}
+	if (scrollbar->roid==oid)
+	{
+		scrollbar->ronclick(widget);
+		return(1);
+	}
+
+	return(0);
+}

Added: trunk/libs3dw/textbox.c
===================================================================
--- trunk/libs3dw/textbox.c	2006-11-19 14:08:40 UTC (rev 480)
+++ trunk/libs3dw/textbox.c	2006-11-19 15:44:03 UTC (rev 481)
@@ -0,0 +1,277 @@
+/*
+ * textbox.c
+ *
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d Widgets, a Widget Library for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d Widgets is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d Widgets is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d Widgets; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+#include <s3d.h>
+#include <s3dw.h>
+#include <s3dw_int.h>
+#include <stdlib.h> /* malloc() */
+#include <string.h> /* strdup() */
+
+void s3dw_textbox_draw(s3dw_widget *widget)
+{
+	float h,w;
+	float vertices[12*3];
+	uint32_t polygons[18*4]={
+			0,4,5,1,
+			0,5,1,1,
+			1,5,6,1,
+			1,6,2,1,
+			2,6,7,1,
+			2,7,3,1,
+			3,7,4,1,
+			3,4,0,1,
+
+			4,8, 9, 1,
+			4,9, 5, 1,
+			5,9, 10,1,
+			5,10,6, 1,
+			6,10,11,1,
+			6,11,7, 1,
+			7,11,8, 1,
+			7,8, 4, 1,
+
+
+			8,11,10,0,
+			8,10,9, 0
+	};
+	w=widget->width-2;
+	h=widget->height-3;
+	if (widget->width<1) return;
+	/* width of the input depends on the length of the text */
+	vertices[0*3+0]=0.0;			vertices[0*3+1]=0.0;		vertices[0*3+2]=0.0;	
+	vertices[1*3+0]=0.0;			vertices[1*3+1]=-h-2.0;		vertices[1*3+2]=0.0;	
+	vertices[2*3+0]=w+1;			vertices[2*3+1]=-h-2.0;		vertices[2*3+2]=0.0;	
+	vertices[3*3+0]=w+1;			vertices[3*3+1]=0.0;		vertices[3*3+2]=0.0;	
+	vertices[4*3+0]=0.125;			vertices[4*3+1]=-0.125;		vertices[4*3+2]=0.25;	
+	vertices[5*3+0]=0.125;			vertices[5*3+1]=-h-1.875;	vertices[5*3+2]=0.25;	
+	vertices[6*3+0]=w+0.875;		vertices[6*3+1]=-h-1.875;	vertices[6*3+2]=0.25;	
+	vertices[7*3+0]=w+0.875;		vertices[7*3+1]=-0.125;		vertices[7*3+2]=0.25;	
+	vertices[8*3+0]=0.25;			vertices[8*3+1]=-0.25;		vertices[8*3+2]=0.125;	
+	vertices[9*3+0]=0.25;			vertices[9*3+1]=-h-1.75;	vertices[9*3+2]=0.125;	
+	vertices[10*3+0]=w+0.75;		vertices[10*3+1]=-h-1.75;	vertices[10*3+2]=0.125;	
+	vertices[11*3+0]=w+0.75;		vertices[11*3+1]=-0.25;		vertices[11*3+2]=0.125;	
+	widget->oid=s3d_new_object();
+	s3d_push_materials_a(widget->oid,widget->style->inputback_mat,1);
+	s3d_push_materials_a(widget->oid,widget->style->input_mat,1);
+	s3d_push_vertices   (widget->oid,vertices,12);
+	s3d_push_polygons   (widget->oid,polygons,18);
+	s3d_link(		   widget->oid,widget->parent->oid);
+	s3d_translate(widget->oid,widget->x,-widget->y,0);
+
+	s3dw_textbox_drawtext(widget);
+
+}
+void s3dw_textbox_drawtext(s3dw_widget *widget)
+{
+	s3dw_textbox *textbox=(s3dw_textbox *)widget;
+	char *text,*rest;
+	char *linefeedpos;
+	int i;
+	int x,y;
+	float width;
+	textbox->n_lineoids=widget->height-2;
+	textbox->p_lineoids=malloc(textbox->n_lineoids*sizeof(int));
+	width=widget->width-1.5;
+	y=-textbox->window_y;
+	x=textbox->window_x;
+	for (i=0;i<textbox->n_lineoids;i++)
+		textbox->p_lineoids[i]=-1;
+	rest=text=strdup(textbox->text);
+	while (NULL!=(linefeedpos=strchr(rest,'\n'))) /* process every line */
+	{
+		linefeedpos[0]=0;
+		if ((x<strlen(rest)) && ((y>=0) && y<textbox->n_lineoids)) /* don't bother, if it's not visible anyway */
+		{
+			rest+=x;	/* ignore the first x chars because we've scrolled a bit right */
+			while ((strlen(rest)>0) && (s3d_strlen(rest)>width))
+				rest[strlen(rest)-1]=0; /* remove last character and try again until it fits */
+			if (strlen(rest)>0)
+			{
+				 textbox->p_lineoids[y]=s3d_draw_string(rest,NULL);
+				 s3d_pep_materials_a(textbox->p_lineoids[y],widget->style->text_mat,1);
+				 s3d_translate( textbox->p_lineoids[y],0.5,-y-1,0.30);
+				 s3d_link(	   textbox->p_lineoids[y],widget->oid);
+
+			}
+		} 
+		rest=linefeedpos+1;
+		y+=1;
+	}
+	if (y<0) textbox->window_y-=y;
+	
+	free(text);
+}
+void s3dw_textbox_erasetext(s3dw_widget *widget)
+{
+	s3dw_textbox *textbox=(s3dw_textbox *)widget;
+	int i;
+
+
+	if (textbox->p_lineoids!=NULL)
+	{
+		for (i=0;i<textbox->n_lineoids;i++)
+			if (textbox->p_lineoids[i]!=-1)
+				s3d_del_object(textbox->p_lineoids[i]);
+		free(textbox->p_lineoids);
+		textbox->p_lineoids=NULL;
+		textbox->n_lineoids=0;
+
+	}
+}
+/* show the textbox */
+void s3dw_textbox_show(s3dw_widget *widget)
+{
+	s3dw_textbox *textbox=(s3dw_textbox *)widget;
+	int i;
+    s3d_flags_on(widget->oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+	for (i=0;i<textbox->n_lineoids;i++)
+    	s3d_flags_on(textbox->p_lineoids[i],S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+}
+/* hides the textbox */
+void s3dw_textbox_hide(s3dw_widget *widget)
+{
+	s3dw_textbox *textbox=(s3dw_textbox *)widget;
+	int i;
+    s3d_flags_off(widget->oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+	for (i=0;i<textbox->n_lineoids;i++)
+    	s3d_flags_on(textbox->p_lineoids[i],S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+
+}
+static void _s3dw_textbox_scrollbar_up(s3dw_widget *widget)
+{	s3dw_textbox_scrollup((s3dw_textbox *)widget->parent);}
+static void _s3dw_textbox_scrollbar_down(s3dw_widget *widget)
+{	s3dw_textbox_scrolldown((s3dw_textbox *)widget->parent);}
+static void _s3dw_textbox_scrollbar_left(s3dw_widget *widget)
+{	s3dw_textbox_scrollleft((s3dw_textbox *)widget->parent);}
+static void _s3dw_textbox_scrollbar_right(s3dw_widget *widget)
+{	s3dw_textbox_scrollright((s3dw_textbox *)widget->parent);}
+
+/* create a new textbox in the surface */
+s3dw_textbox *s3dw_textbox_new(s3dw_surface *surface, char *text, float posx, float posy, float width, float height)
+{
+	s3dw_textbox *textbox;
+	s3dw_widget *widget;
+	textbox=(s3dw_textbox *)malloc(sizeof(s3dw_textbox));
+	widget=s3dw_widget_new((s3dw_widget *)textbox);
+	widget->type=S3DW_TTEXTBOX;
+	widget->x=posx;
+	widget->y=posy;
+	widget->width=width;
+	widget->height=height;
+	textbox->window_x=0;
+	textbox->window_y=0;
+	textbox->p_lineoids=NULL;
+	textbox->n_lineoids=0;
+	textbox->text=strdup(text);
+	textbox->onclick=s3dw_nothing;
+	s3dw_widget_append((s3dw_widget *)surface, widget);		/* append first so the scrollbars inherit the style */
+	s3dw_textbox_draw(widget);
+	textbox->scroll_horizontal=s3dw_scrollbar_new(widget,S3DW_SBAR_HORI,  0,widget->height-1, widget->width-1); 
+	textbox->scroll_vertical=s3dw_scrollbar_new(widget,S3DW_SBAR_VERT,  widget->width-1,0, widget->height-1);
+	textbox->scroll_horizontal->lonclick=_s3dw_textbox_scrollbar_left;
+	textbox->scroll_horizontal->ronclick=_s3dw_textbox_scrollbar_right;
+	textbox->scroll_vertical->lonclick=_s3dw_textbox_scrollbar_up;
+	textbox->scroll_vertical->ronclick=_s3dw_textbox_scrollbar_down;
+
+	return(textbox);
+}
+static void s3dw_textbox_redraw(s3dw_widget *widget)
+{
+	s3dw_textbox_erasetext(widget);
+	s3dw_textbox_drawtext(widget);
+	if (widget->flags&S3DW_ONSCREEN)
+		s3dw_textbox_show(widget);
+}
+		
+void s3dw_textbox_scrollup(s3dw_textbox *textbox)
+{
+	if (textbox->window_y>0)
+		textbox->window_y--;
+	s3dw_textbox_redraw(S3DWIDGET(textbox));
+}
+void s3dw_textbox_scrolldown(s3dw_textbox *textbox)
+{
+	textbox->window_y++;
+	s3dw_textbox_redraw(S3DWIDGET(textbox));
+
+}
+void s3dw_textbox_scrollleft(s3dw_textbox *textbox)
+{
+	if (textbox->window_x>0)
+		textbox->window_x--;
+	s3dw_textbox_redraw(S3DWIDGET(textbox));
+}
+void s3dw_textbox_scrollright(s3dw_textbox *textbox)
+{
+	textbox->window_x++;
+	s3dw_textbox_redraw(S3DWIDGET(textbox));
+}
+void s3dw_textbox_scrollto(s3dw_textbox *textbox, int x, int y)
+{
+	s3dw_widget *widget=(s3dw_widget *)textbox;
+	if (x<0) x=0;
+	if (y<0) y=0;
+	textbox->window_x=x;
+	textbox->window_y=y;
+	s3dw_textbox_redraw(widget);
+}
+
+void s3dw_textbox_change_text(s3dw_textbox *textbox, char *text)
+{
+	s3dw_widget *widget=(s3dw_widget *)textbox;
+	/* redraw the text ... */
+	free(textbox->text);
+	textbox->text=strdup(text);
+	s3dw_textbox_redraw(widget);
+}
+void s3dw_textbox_erase(s3dw_widget *widget)
+{
+	s3dw_textbox_erasetext(widget);
+	s3d_del_object(widget->oid);
+}
+
+/* destroy the textbox */
+void s3dw_textbox_destroy(s3dw_widget *widget)
+{
+	s3dw_textbox *textbox=(s3dw_textbox *)widget;
+	s3dw_textbox_erase(widget);
+	free(textbox->text);
+	free(textbox);
+}
+/* handle key events */
+int s3dw_textbox_event_key(s3dw_widget *widget, struct s3d_key_event *keys)
+{
+	return(0);
+}
+/* handle click events */
+int s3dw_textbox_event_click(s3dw_widget *widget, uint32_t oid)
+{
+	s3dw_textbox *textbox=(s3dw_textbox *)widget;
+	if (widget->oid==oid)
+	{
+		textbox->onclick(widget);
+		return(1);
+	}
+	return(0);
+}



From dotslash at mail.berlios.de  Sun Nov 19 17:31:03 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Sun, 19 Nov 2006 17:31:03 +0100
Subject: [S3d-svn] r482 - in trunk: . example
Message-ID: <200611191631.kAJGV3bN002234@sheep.berlios.de>

Author: dotslash
Date: 2006-11-19 17:31:02 +0100 (Sun, 19 Nov 2006)
New Revision: 482

Added:
   trunk/example/wiresphere.c
Modified:
   trunk/
   trunk/example/Makefile.am
Log:
 r1150 at kero:  dotslash | 2006-11-19 17:30:56 +0100
 - wiresphere for marek ;)



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1143
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1150

Modified: trunk/example/Makefile.am
===================================================================
--- trunk/example/Makefile.am	2006-11-19 15:44:03 UTC (rev 481)
+++ trunk/example/Makefile.am	2006-11-19 16:31:02 UTC (rev 482)
@@ -1,7 +1,7 @@
 noinst_PROGRAMS=	hudtest katze \
 			ptrtest radius_test s3dclock snowman \
 			strtest texturetest linetest widgets \
-			nichtsnutz
+			nichtsnutz wiresphere
 bin_PROGRAMS= filebrowser modelloader
 			
 modelloader_SOURCES=	modelloader.c
@@ -17,6 +17,7 @@
 texturetest_SOURCES=	texturetest.c
 ptrtest_SOURCES=		ptrtest.c
 nichtsnutz_SOURCES=		nichtsnutz.c
+wiresphere_SOURCES=		wiresphere.c
 
 CPPFLAGS=		-I$(top_srcdir)/server -I$(top_srcdir)/libs3d 
 LIBS=			$(top_builddir)/libs3d/libs3d.la  

Added: trunk/example/wiresphere.c
===================================================================
--- trunk/example/wiresphere.c	2006-11-19 15:44:03 UTC (rev 481)
+++ trunk/example/wiresphere.c	2006-11-19 16:31:02 UTC (rev 482)
@@ -0,0 +1,128 @@
+/*
+ * wiresphere.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+#include <s3d.h>
+#include <stdio.h>  /* NULL, sprintf() */
+#include <time.h>	/* nanosleep()  */
+#include <math.h>	/* M_PI, cos(), sin() */
+#include <stdlib.h>	/* malloc(), free() */
+static struct timespec t={0,100*1000*1000}; /* 100 mili seconds */
+int oid;
+int r;
+int wire_sphere(int slices, int stacks)
+{
+	int x,y,i,o;
+	int num_v,num_l;
+	float *v,*n;			/* vertices, normals */
+	float alpha, beta;
+	unsigned int *l;	/* lines */
+	num_v=(stacks+1) * slices;
+	num_l=stacks * slices+ (stacks-1) * slices; /* vertical + horizontal */
+	v=malloc(sizeof(float) * 3 * num_v);
+	n=malloc(sizeof(float) * 6 * num_l);
+	l=malloc(sizeof(unsigned int) * 3 * num_l);
+	i=0;
+	for (x=0;x<slices;x++) {
+		alpha=(x*360.0/slices)*M_PI/180.0;
+		for (y=0;y<(stacks+1);y++) {
+			beta=((y*180/slices)-90.0)*M_PI/180.0;
+			v[i*3+0]=cos(alpha) * cos(beta);
+			v[i*3+1]=sin(beta);
+			v[i*3+2]=sin(alpha) * cos(beta);
+			i++;
+		}
+	}
+	i=0;
+	for (x=0;x<slices;x++) {
+		for (y=0;y<stacks;y++) {
+			if ((y!=0) && (y!=stacks)) /* no horizontal lines at the poles */
+			{
+				l[i*3+0]=(x*(stacks+1))+y;
+				l[i*3+1]=(((x+1)%slices)*(stacks+1))+y;
+				l[i*3+2]=0;
+				n[i*6+0]=v[ l[i*3+0]*3 + 0];
+				n[i*6+1]=v[ l[i*3+0]*3 + 1];
+				n[i*6+2]=v[ l[i*3+0]*3 + 2];
+				n[i*6+3]=v[ l[i*3+1]*3 + 0];
+				n[i*6+4]=v[ l[i*3+1]*3 + 1];
+				n[i*6+5]=v[ l[i*3+1]*3 + 2];
+
+				i++;
+
+			}
+			/* vertical lines */
+			l[i*3+0]=(x*(stacks+1))+y;
+			l[i*3+1]=(x*(stacks+1))+y+1;
+			l[i*3+2]=0;
+			n[i*6+0]=v[ l[i*3+0]*3 + 0];
+			n[i*6+1]=v[ l[i*3+0]*3 + 1];
+			n[i*6+2]=v[ l[i*3+0]*3 + 2];
+			n[i*6+3]=v[ l[i*3+1]*3 + 0];
+			n[i*6+4]=v[ l[i*3+1]*3 + 1];
+			n[i*6+5]=v[ l[i*3+1]*3 + 2];
+			i++;
+
+		}
+	}
+	o=s3d_new_object();
+	s3d_push_material(o,0,0,1, 
+						1,0,0, 
+						0,1,0);
+	s3d_push_vertices(o,v,num_v);
+	s3d_push_lines(o,l,num_l);
+	s3d_load_line_normals(o,n,0,num_l);
+	free(v);
+	free(n);
+	free(l);
+	return(o);
+}
+void stop(struct s3d_evt *evt)
+{
+	s3d_quit();
+}
+
+void mainloop()
+{
+	r=(r+1)%360;
+	s3d_rotate(oid,0,r,0);
+	nanosleep(&t,NULL); 
+
+}
+int main (int argc, char **argv)
+{
+	if (!s3d_init(&argc,&argv,"clock"))	
+	{
+		oid=wire_sphere(30,30);
+		s3d_scale(oid,10);
+		s3d_flags_on(oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_set_callback(S3D_EVENT_OBJ_CLICK,	(s3d_cb)stop);
+		s3d_set_callback(S3D_EVENT_QUIT,		(s3d_cb)stop);
+		s3d_mainloop(mainloop);
+		 /*  wait for some object to be clicked */
+		s3d_quit();
+	}
+	return(0);
+}
+
+



From marec at mail.berlios.de  Tue Nov 21 17:42:26 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Tue, 21 Nov 2006 17:42:26 +0100
Subject: [S3d-svn] r483 - trunk/apps/kism3d
Message-ID: <200611211642.kALGgQbc007628@sheep.berlios.de>

Author: marec
Date: 2006-11-21 17:42:26 +0100 (Tue, 21 Nov 2006)
New Revision: 483

Modified:
   trunk/apps/kism3d/Makefile.am
   trunk/apps/kism3d/gui.c
   trunk/apps/kism3d/kism3d.c
   trunk/apps/kism3d/kism3d.h
   trunk/apps/kism3d/network.c
Log:
initial kism3d gui setup

Modified: trunk/apps/kism3d/Makefile.am
===================================================================
--- trunk/apps/kism3d/Makefile.am	2006-11-19 16:31:02 UTC (rev 482)
+++ trunk/apps/kism3d/Makefile.am	2006-11-21 16:42:26 UTC (rev 483)
@@ -8,6 +8,7 @@
 	kism3d.c network.c client.c gui.c
 
 kism3d_CPPFLAGS=		-I${top_srcdir}/libs3d -I${top_srcdir}/libs3dw
-kism3d_LDADD=		${top_builddir}/libs3d/libs3d.la ${top_builddir}/libs3dw/libs3dw.la
+kism3d_LDADD=		${top_builddir}/libs3d/libs3d.la ${top_builddir}/libs3dw/libs3dw.la 
+kism3d_LDFLAGS =	-lpthread
 
 

Modified: trunk/apps/kism3d/gui.c
===================================================================
--- trunk/apps/kism3d/gui.c	2006-11-19 16:31:02 UTC (rev 482)
+++ trunk/apps/kism3d/gui.c	2006-11-21 16:42:26 UTC (rev 483)
@@ -22,3 +22,155 @@
  */
 
 
+
+#include "kism3d.h"
+#include <s3d.h>
+#include <math.h>	/* M_PI, cos(), sin() */
+#include <stdlib.h>	/* malloc(), free() */
+#include <time.h>	/* nanosleep()  */
+#include <pthread.h>
+
+
+
+int oid;
+int r;
+
+int wire_sphere(int slices, int stacks)
+{
+	int x,y,i,o;
+	int num_v,num_l;
+	float *v,*n;			/* vertices, normals */
+	float alpha, beta;
+	unsigned int *l;	/* lines */
+	num_v=(stacks+1) * slices;
+	num_l=stacks * slices+ (stacks-1) * slices; /* vertical + horizontal */
+	v=malloc(sizeof(float) * 3 * num_v);
+	n=malloc(sizeof(float) * 6 * num_l);
+	l=malloc(sizeof(unsigned int) * 3 * num_l);
+	i=0;
+	for (x=0;x<slices;x++) {
+		alpha=(x*360.0/slices)*M_PI/180.0;
+		for (y=0;y<(stacks+1);y++) {
+			beta=((y*180/slices)-90.0)*M_PI/180.0;
+			v[i*3+0]=cos(alpha) * cos(beta);
+			v[i*3+1]=sin(beta);
+			v[i*3+2]=sin(alpha) * cos(beta);
+			i++;
+		}
+	}
+	i=0;
+	for (x=0;x<slices;x++) {
+		for (y=0;y<stacks;y++) {
+			if ((y!=0) && (y!=stacks)) /* no horizontal lines at the poles */
+			{
+				l[i*3+0]=(x*(stacks+1))+y;
+				l[i*3+1]=(((x+1)%slices)*(stacks+1))+y;
+				l[i*3+2]=0;
+				n[i*6+0]=v[ l[i*3+0]*3 + 0];
+				n[i*6+1]=v[ l[i*3+0]*3 + 1];
+				n[i*6+2]=v[ l[i*3+0]*3 + 2];
+				n[i*6+3]=v[ l[i*3+1]*3 + 0];
+				n[i*6+4]=v[ l[i*3+1]*3 + 1];
+				n[i*6+5]=v[ l[i*3+1]*3 + 2];
+
+				i++;
+
+			}
+			/* vertical lines */
+			l[i*3+0]=(x*(stacks+1))+y;
+			l[i*3+1]=(x*(stacks+1))+y+1;
+			l[i*3+2]=0;
+			n[i*6+0]=v[ l[i*3+0]*3 + 0];
+			n[i*6+1]=v[ l[i*3+0]*3 + 1];
+			n[i*6+2]=v[ l[i*3+0]*3 + 2];
+			n[i*6+3]=v[ l[i*3+1]*3 + 0];
+			n[i*6+4]=v[ l[i*3+1]*3 + 1];
+			n[i*6+5]=v[ l[i*3+1]*3 + 2];
+			i++;
+
+		}
+	}
+	o=s3d_new_object();
+	s3d_push_material(o,0,0,1,
+			  1,0,0,
+			  0,1,0);
+	s3d_push_vertices(o,v,num_v);
+	s3d_push_lines(o,l,num_l);
+	s3d_load_line_normals(o,n,0,num_l);
+	free(v);
+	free(n);
+	free(l);
+	return(o);
+}
+
+
+
+int handle_networks() {
+
+	struct list_head *network_pos;
+	struct wlan_network *wlan_network;
+
+
+	pthread_mutex_lock( &Network_list_mutex );
+
+	list_for_each(network_pos, &Network_list) {
+
+		wlan_network = list_entry(network_pos, struct wlan_network, list);
+
+		if ( wlan_network->visible ) {
+
+			if ( wlan_network->obj_id == -1 ) {
+
+				wlan_network->obj_id = wire_sphere(30,30);
+				s3d_scale( wlan_network->obj_id, 5 );
+				s3d_translate( wlan_network->obj_id, wlan_network->pos_vec[0], wlan_network->pos_vec[1], wlan_network->pos_vec[2] );
+				s3d_flags_on( wlan_network->obj_id, S3D_OF_VISIBLE );
+
+			}
+
+			wlan_network->rotation = ( wlan_network->rotation + 1 ) % 360;
+			s3d_rotate( wlan_network->obj_id, 0, wlan_network->rotation, 0 );
+
+		}
+
+	}
+
+
+	pthread_mutex_unlock( &Network_list_mutex );
+
+	return(0);
+
+}
+
+
+
+void mainloop() {
+
+	struct timespec sleeptime = { 0, 100 * 1000 * 1000 };   /* 100 mili seconds */
+
+
+	handle_networks();
+
+	if ( Kism3d_aborted )
+		s3d_quit();
+
+	nanosleep( &sleeptime, NULL );
+
+}
+
+
+
+int gui_main( void *unused ) {
+
+	if ( !s3d_init( NULL, NULL, "kism3d" ) ) {
+
+		s3d_mainloop( mainloop );
+
+		s3d_quit();
+
+	}
+
+	Kism3d_aborted = 1;
+	return(0);
+
+}
\ No newline at end of file

Modified: trunk/apps/kism3d/kism3d.c
===================================================================
--- trunk/apps/kism3d/kism3d.c	2006-11-19 16:31:02 UTC (rev 482)
+++ trunk/apps/kism3d/kism3d.c	2006-11-21 16:42:26 UTC (rev 483)
@@ -29,6 +29,7 @@
 #include <string.h>   /* memset(), strncmp(), strncpy() */
 #include <errno.h>    /* errno */
 #include <unistd.h>   /* write() */
+#include <pthread.h>
 
 #include <sys/socket.h> /* inet_pton(), inet_aton() */
 #include <sys/types.h>
@@ -40,8 +41,13 @@
 DEFINE_LIST_HEAD(Network_list);
 DEFINE_LIST_HEAD(Client_list);
 
+pthread_mutex_t Network_list_mutex = PTHREAD_MUTEX_INITIALIZER;
+pthread_mutex_t Client_list_mutex = PTHREAD_MUTEX_INITIALIZER;
 
+int Kism3d_aborted = 0;
 
+
+
 void *alloc_memory( int len ) {
 
 	void *res = malloc( len );
@@ -183,6 +189,8 @@
 
 				}
 
+				pthread_mutex_lock( &Network_list_mutex );
+
 				wlan_network = get_wlan_network( bssid );
 
 				if ( ( wlan_network->type != -1 ) && ( wlan_network->channel != -1 ) && ( wlan_network->ssid != NULL ) ) {
@@ -201,6 +209,7 @@
 
 				strncpy( wlan_network->ssid, ssid, strlen( ssid ) );
 
+				pthread_mutex_unlock( &Network_list_mutex );
 
 				/* printf( "network found - bssid %s, type %s, channel %s, ssid %s\n", bssid, type, channel, ssid ); */
 
@@ -253,8 +262,22 @@
 
 				strncpy( wlan_client->bssid, bssid, 18 );
 				strncpy( wlan_client->ip, ip, 16 );
-				wlan_client->wlan_network = find_wlan_network( wlan_client->bssid );
 
+				wlan_network = find_wlan_network( wlan_client->bssid );
+
+				if ( wlan_client->wlan_network != wlan_network ) {
+
+					if ( wlan_client->wlan_network != NULL )
+						wlan_client->wlan_network->num_wlan_clients--;
+
+					if ( wlan_network != NULL )
+						wlan_network->num_wlan_clients++;
+
+					wlan_client->wlan_network = wlan_network;
+
+				}
+
+
 				/* printf( "client found - bssid %s, mac %s, ip %s\n", bssid, mac, ip ); */
 
 			} else if ( strncmp( line_ptr, "*ALERT: ", strlen( "*ALERT: " ) ) == 0 ) {
@@ -284,9 +307,10 @@
 	struct in_addr tmp_ip_holder;
 	struct kismet_src *kismet_src;
 	struct list_head *kismet_pos, *kismet_pos_tmp;
-	struct wlan_network *wlan_network;
-	struct wlan_client *wlan_client;
+	/* struct wlan_network *wlan_network;
+	struct wlan_client *wlan_client; */
 	struct timeval tv;
+	pthread_t s3d_thread_id;
 	int num_kismet_sources = 0, found_args = 1, max_sock = -1, res, status;
 	char *colon_ptr, buff[1000];
 	fd_set wait_sockets, tmp_wait_sockets;
@@ -395,22 +419,25 @@
 	}
 
 
-	while ( num_kismet_sources > 0 ) {
+	pthread_create( &s3d_thread_id, NULL, &gui_main, NULL );
 
+
+	while ( ( num_kismet_sources > 0 ) && !( Kism3d_aborted ) ) {
+
 		tv.tv_sec = 0;
 		tv.tv_usec = 250;
 
 		tmp_wait_sockets = wait_sockets;
 
-		res = select(max_sock + 1, &tmp_wait_sockets, NULL, NULL, &tv);
+		res = select( max_sock + 1, &tmp_wait_sockets, NULL, NULL, &tv );
 
 		if ( res > 0 ) {
 
 			max_sock = -1;
 
-			list_for_each_safe(kismet_pos, kismet_pos_tmp, &kismet_src_list) {
+			list_for_each_safe( kismet_pos, kismet_pos_tmp, &kismet_src_list ) {
 
-				kismet_src = list_entry(kismet_pos, struct kismet_src, list);
+				kismet_src = list_entry( kismet_pos, struct kismet_src, list );
 
 				if ( FD_ISSET( kismet_src->sock, &tmp_wait_sockets ) ) {
 
@@ -488,7 +515,7 @@
 
 		}
 
-		printf( "\nCurrent network list:\n" );
+		/* printf( "\nCurrent network list:\n" );
 
 		list_for_each_safe(kismet_pos, kismet_pos_tmp, &Network_list) {
 
@@ -506,8 +533,27 @@
 
 			printf( "   => %s belonging to %s\n", wlan_client->mac, ( wlan_client->wlan_network == NULL ? "unknown" : wlan_client->wlan_network->bssid ) );
 
+		} */
+
+	}
+
+
+	if ( Kism3d_aborted ) {
+
+		printf( "Closing all sockets ... \n" );
+		list_for_each(kismet_pos, &kismet_src_list) {
+
+			kismet_src = list_entry( kismet_pos, struct kismet_src, list );
+
+			close( kismet_src->sock );
+
 		}
 
+	} else {
+
+		Kism3d_aborted = 1;
+		pthread_join( s3d_thread_id, NULL );
+
 	}
 
 	return (0);

Modified: trunk/apps/kism3d/kism3d.h
===================================================================
--- trunk/apps/kism3d/kism3d.h	2006-11-19 16:31:02 UTC (rev 482)
+++ trunk/apps/kism3d/kism3d.h	2006-11-21 16:42:26 UTC (rev 483)
@@ -49,11 +49,12 @@
 	char *ssid;
 	int type;
 	int channel;
+	int num_wlan_clients;
 	int visible;
 	float pos_vec[3];
 	float mov_vec[3];
 	int obj_id;
-	int desc_id;
+	int rotation;
 
 };
 
@@ -63,7 +64,7 @@
 	struct list_head list;
 	char bssid[18];
 	char mac[18];
-	int ip[16];
+	char ip[16];
 	struct wlan_network *wlan_network;
 	int visible;
 	float pos_vec[3];
@@ -79,8 +80,12 @@
 struct wlan_network *get_wlan_network( char *bssid );
 struct wlan_network *find_wlan_network( char *bssid );
 struct wlan_client *get_wlan_client( char *mac );
+int gui_main( void *unused );
 
 
 
 extern struct list_head Network_list;
 extern struct list_head Client_list;
+extern pthread_mutex_t Network_list_mutex;
+extern pthread_mutex_t Client_list_mutex;
+extern int Kism3d_aborted;

Modified: trunk/apps/kism3d/network.c
===================================================================
--- trunk/apps/kism3d/network.c	2006-11-19 16:31:02 UTC (rev 482)
+++ trunk/apps/kism3d/network.c	2006-11-21 16:42:26 UTC (rev 483)
@@ -52,6 +52,8 @@
 
 	wlan_network->ssid = NULL;
 
+	wlan_network->num_wlan_clients = 0;
+
 	wlan_network->visible = 1;
 
 	wlan_network->pos_vec[0] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
@@ -60,7 +62,7 @@
 	wlan_network->mov_vec[0] = wlan_network->mov_vec[1] = wlan_network->mov_vec[2] = 0.0;
 
 	wlan_network->obj_id = -1;
-	wlan_network->desc_id = -1;
+	wlan_network->rotation = 0;
 
 	list_add_tail(&wlan_network->list, &Network_list);
 



From dotslash at mail.berlios.de  Sun Nov 26 12:45:17 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Sun, 26 Nov 2006 12:45:17 +0100
Subject: [S3d-svn] r484 - in trunk: . server
Message-ID: <200611261145.kAQBjHc6031472@sheep.berlios.de>

Author: dotslash
Date: 2006-11-26 12:45:17 +0100 (Sun, 26 Nov 2006)
New Revision: 484

Modified:
   trunk/
   trunk/server/user_sdl.c
Log:
 r1156 at kero:  dotslash | 2006-11-26 12:44:54 +0100
 - SDL_VIDEO_EXPOSE to VLOW debug level



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1150
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1156

Modified: trunk/server/user_sdl.c
===================================================================
--- trunk/server/user_sdl.c	2006-11-21 16:42:26 UTC (rev 483)
+++ trunk/server/user_sdl.c	2006-11-26 11:45:17 UTC (rev 484)
@@ -115,7 +115,7 @@
 										errsf("SDL_SetVideoMode()",SDL_GetError());
 									graphics_reshape(event.resize.w,event.resize.h);
 									break;
-		case SDL_VIDEOEXPOSE:		s3dprintf(LOW,"SDL_VIDEOEXPOSE");break;
+		case SDL_VIDEOEXPOSE:		s3dprintf(VLOW,"SDL_VIDEOEXPOSE");break;
 		case SDL_USEREVENT:			s3dprintf(VLOW,"SDL_USEREVENT");break;
 		case SDL_JOYAXISMOTION:		s3dprintf(VLOW,"SDL_JOYAXISMOTION");break;
 		case SDL_JOYBALLMOTION:		s3dprintf(VLOW,"SDL_JOYBALLMOTION");break;



From marec at mail.berlios.de  Sun Nov 26 14:49:35 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Sun, 26 Nov 2006 14:49:35 +0100
Subject: [S3d-svn] r485 - trunk/apps/kism3d
Message-ID: <200611261349.kAQDnZOA021068@sheep.berlios.de>

Author: marec
Date: 2006-11-26 14:49:35 +0100 (Sun, 26 Nov 2006)
New Revision: 485

Modified:
   trunk/apps/kism3d/gui.c
   trunk/apps/kism3d/kism3d.c
   trunk/apps/kism3d/kism3d.h
   trunk/apps/kism3d/network.c
Log:
let the networks dance  ;-)

Modified: trunk/apps/kism3d/gui.c
===================================================================
--- trunk/apps/kism3d/gui.c	2006-11-26 11:45:17 UTC (rev 484)
+++ trunk/apps/kism3d/gui.c	2006-11-26 13:49:35 UTC (rev 485)
@@ -27,6 +27,7 @@
 #include <s3d.h>
 #include <math.h>	/* M_PI, cos(), sin() */
 #include <stdlib.h>	/* malloc(), free() */
+#include <stdio.h>      /* printf() */
 #include <time.h>	/* nanosleep()  */
 #include <pthread.h>
 
@@ -109,6 +110,9 @@
 
 	struct list_head *network_pos;
 	struct wlan_network *wlan_network;
+	float real_node_pos_x, real_node_pos_z, label_str_len;
+	int network_index = 0;
+	char *label_str;
 
 
 	pthread_mutex_lock( &Network_list_mutex );
@@ -119,15 +123,52 @@
 
 		if ( wlan_network->visible ) {
 
+			network_index++;
+
 			if ( wlan_network->obj_id == -1 ) {
 
 				wlan_network->obj_id = wire_sphere(30,30);
-				s3d_scale( wlan_network->obj_id, 5 );
-				s3d_translate( wlan_network->obj_id, wlan_network->pos_vec[0], wlan_network->pos_vec[1], wlan_network->pos_vec[2] );
 				s3d_flags_on( wlan_network->obj_id, S3D_OF_VISIBLE );
 
 			}
 
+			wlan_network->scale_factor = wlan_network->num_wlan_clients;
+			s3d_scale( wlan_network->obj_id, wlan_network->scale_factor );
+
+			real_node_pos_x = sin( ( 360 / Num_networks ) * network_index ) * ( M_PI / 180 ) * ( ( ( 100 * Num_networks ) / 2 * M_PI ) );
+			real_node_pos_z = cos( ( 360 / Num_networks ) * network_index ) * ( M_PI / 180 ) * ( ( ( 100 * Num_networks ) / 2 * M_PI ) );
+
+			if ( ( wlan_network->pos_vec[0] != real_node_pos_x ) || ( wlan_network->pos_vec[2] != real_node_pos_z ) ) {
+
+				if ( wlan_network->pos_vec[0] != real_node_pos_x )
+					wlan_network->pos_vec[0] += ( ( real_node_pos_x - wlan_network->pos_vec[0] ) * ( wlan_network->pos_vec[0] / real_node_pos_x ) );
+
+				if ( wlan_network->pos_vec[2] != real_node_pos_z )
+					wlan_network->pos_vec[2] += ( ( real_node_pos_z - wlan_network->pos_vec[2] ) * ( wlan_network->pos_vec[2] / real_node_pos_z ) );
+
+				s3d_translate( wlan_network->obj_id, wlan_network->pos_vec[0], wlan_network->pos_vec[1], wlan_network->pos_vec[2] );
+
+			}
+
+			if ( wlan_network->properties_changed ) {
+
+				wlan_network->properties_changed = 0;
+
+				if ( wlan_network->label_id != -1 )
+					s3d_del_object( wlan_network->label_id );
+
+
+				label_str = alloc_memory( 100 );
+				snprintf( label_str, 100, "%s\n%s", wlan_network->bssid, wlan_network->ssid );
+				label_str_len = 100;
+
+				wlan_network->label_id = s3d_draw_string( label_str, &label_str_len );
+				s3d_link( wlan_network->label_id, wlan_network->obj_id );
+				s3d_translate( wlan_network->label_id, - label_str_len / 2, -2, 0 );
+				s3d_flags_on( wlan_network->label_id, S3D_OF_VISIBLE );
+
+			}
+
 			wlan_network->rotation = ( wlan_network->rotation + 1 ) % 360;
 			s3d_rotate( wlan_network->obj_id, 0, wlan_network->rotation, 0 );
 
@@ -164,8 +205,16 @@
 
 	if ( !s3d_init( NULL, NULL, "kism3d" ) ) {
 
-		s3d_mainloop( mainloop );
+		if ( s3d_select_font( "vera" ) ) {
 
+			printf( "font 'vera' not found\n" );
+
+		} else {
+
+			s3d_mainloop( mainloop );
+
+		}
+
 		s3d_quit();
 
 	}

Modified: trunk/apps/kism3d/kism3d.c
===================================================================
--- trunk/apps/kism3d/kism3d.c	2006-11-26 11:45:17 UTC (rev 484)
+++ trunk/apps/kism3d/kism3d.c	2006-11-26 13:49:35 UTC (rev 485)
@@ -45,6 +45,7 @@
 pthread_mutex_t Client_list_mutex = PTHREAD_MUTEX_INITIALIZER;
 
 int Kism3d_aborted = 0;
+int Num_networks = 0;
 
 
 

Modified: trunk/apps/kism3d/kism3d.h
===================================================================
--- trunk/apps/kism3d/kism3d.h	2006-11-26 11:45:17 UTC (rev 484)
+++ trunk/apps/kism3d/kism3d.h	2006-11-26 13:49:35 UTC (rev 485)
@@ -50,11 +50,14 @@
 	int type;
 	int channel;
 	int num_wlan_clients;
+	int properties_changed;
 	int visible;
 	float pos_vec[3];
 	float mov_vec[3];
 	int obj_id;
+	int label_id;
 	int rotation;
+	int scale_factor;
 
 };
 
@@ -89,3 +92,4 @@
 extern pthread_mutex_t Network_list_mutex;
 extern pthread_mutex_t Client_list_mutex;
 extern int Kism3d_aborted;
+extern int Num_networks;

Modified: trunk/apps/kism3d/network.c
===================================================================
--- trunk/apps/kism3d/network.c	2006-11-26 11:45:17 UTC (rev 484)
+++ trunk/apps/kism3d/network.c	2006-11-26 13:49:35 UTC (rev 485)
@@ -62,10 +62,17 @@
 	wlan_network->mov_vec[0] = wlan_network->mov_vec[1] = wlan_network->mov_vec[2] = 0.0;
 
 	wlan_network->obj_id = -1;
+	wlan_network->label_id = -1;
+
 	wlan_network->rotation = 0;
+	wlan_network->scale_factor = 0;
 
+	wlan_network->properties_changed = 1;
+
 	list_add_tail(&wlan_network->list, &Network_list);
 
+	Num_networks++;
+
 	return wlan_network;
 
 }



From dotslash at mail.berlios.de  Sun Nov 26 18:37:46 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Sun, 26 Nov 2006 18:37:46 +0100
Subject: [S3d-svn] r486 - in trunk: . apps/s3dosm
Message-ID: <200611261737.kAQHbkfw006937@sheep.berlios.de>

Author: dotslash
Date: 2006-11-26 18:37:44 +0100 (Sun, 26 Nov 2006)
New Revision: 486

Added:
   trunk/apps/s3dosm/db.c
Removed:
   trunk/apps/s3dosm/avl.c
   trunk/apps/s3dosm/layer.c
Modified:
   trunk/
   trunk/apps/s3dosm/Makefile.am
   trunk/apps/s3dosm/draw.c
   trunk/apps/s3dosm/kismet.c
   trunk/apps/s3dosm/main.c
   trunk/apps/s3dosm/object.c
   trunk/apps/s3dosm/osm.c
   trunk/apps/s3dosm/s3dosm.h
Log:
 r1160 at kero:  dotslash | 2006-11-26 18:37:07 +0100
 - s3dosm update for using sqlite3 (beware, not working ;)



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1156
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1160

Modified: trunk/apps/s3dosm/Makefile.am
===================================================================
--- trunk/apps/s3dosm/Makefile.am	2006-11-26 13:49:35 UTC (rev 485)
+++ trunk/apps/s3dosm/Makefile.am	2006-11-26 17:37:44 UTC (rev 486)
@@ -5,8 +5,9 @@
 				  
 s3dosm_SOURCES =  \
 	main.c http_fetcher.c http_error_codes.c osm.c \
-	avl.c object.c draw.c kismet.c nav.c tag.c io.c
+	object.c draw.c kismet.c nav.c tag.c io.c db.c
 
-s3dosm_CPPFLAGS=	-I$(top_srcdir)/libs3d @LIBXML2_CFLAGS@
-s3dosm_LDADD=		$(top_builddir)/libs3d/libs3d.la @LIBXML2_LIBS@
+s3dosm_CPPFLAGS=	-pg -I$(top_srcdir)/libs3d @LIBXML2_CFLAGS@ @LIBSQLITE3_CFLAGS@
+s3dosm_LDADD=		$(top_builddir)/libs3d/libs3d.la @LIBXML2_LIBS@ @LIBSQLITE3_LIBS@
+s3dosm_LDFLAGS=		-pg
 

Deleted: trunk/apps/s3dosm/avl.c
===================================================================
--- trunk/apps/s3dosm/avl.c	2006-11-26 13:49:35 UTC (rev 485)
+++ trunk/apps/s3dosm/avl.c	2006-11-26 17:37:44 UTC (rev 486)
@@ -1,336 +0,0 @@
-/*
- * avl.c
- * 
- * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
- *
- * This file is part of s3dosm, a gps card application for s3d.
- * See http://s3d.berlios.de/ for more updates.
- * 
- * s3dosm is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- * 
- * s3dosm is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- * 
- * You should have received a copy of the GNU General Public License
- * along with s3dosm; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- */
-
-#include "s3dosm.h"
-#include <stdio.h>  /* printf(), NULL */
-#include <stdlib.h> /* malloc(), free() */
-		
-void avl_tree_trav(object_t *t, avl_func func, void *data)
-{
-	if (t!=NULL)
-	{
-		avl_tree_trav(t->left,func,data);
-		func(t,data);
-		avl_tree_trav(t->right,func,data);
-	}
-}
-/* avl_find a certain value */
-object_t *avl_find(object_t *t, int val)
-{
-	object_t *ret=NULL;
-	while (t!=NULL) 
-	{
-		if (t->id == val)
-		{
-			ret=t;
-			t=NULL;
-		}
-		else if (val > t->id) t=t->right;
-		else if (val < t->id) t=t->left;
-	}
-	return(ret);
-}
-static int s;
-object_t *avl_rotate_right(object_t *t)
-{
-	object_t *b;
-	b=t->right;
-/*	printf(">> right rotate at %d [%d] with %d [%d]\n",t->id,t->bal,b->id,b->bal);*/
-	t->right=b->left;
-	b->left=t;
-	return b;
-}
-object_t *avl_rotate_left(object_t *t)
-{
-	object_t *b;
-	b=t->left;
-/*	printf("<< left rotate at %d [%d] with %d [%d]\n",t->id,t->bal,b->id,b->bal);*/
-	t->left=b->right;
-	b->right=t;
-	return b;
-}
-
-object_t *avl_insert(object_t *t, object_t *nn)
-{
-	int i;
-
-	if (t == NULL) { 
-		s=1;
-		t=nn;
-	} else  {
-	    if (nn->id > t->id) 
-		{ 
-			i = t->bal; /* might be -1 */
-			t->right=avl_insert(t->right,nn);
-			if ( s == 1) /* we can still move */
-			{ 
-						if (i == -1) 	{	t->bal=0;	s=0;}
-				else	if (i == 0)  		t->bal=1;
-				else 	if (i == 1) 
-				{
-					if (t->right->bal == -1)
-					{ /* Doppelrotation */
-						t->right=avl_rotate_left(t->right);
-						t=avl_rotate_right(t);
-						t->left->bal=0;
-						t->right->bal=0;
-						if (t->bal == -1)  t->right->bal=1;
-						if (t->bal == 1)   t->left->bal=-1;
-						t->bal=0;
-					} else {
-						t->bal=0;
-						t=avl_rotate_right(t);
-						t->bal=t->bal - 1 ;
-					}
-
-					s=0;
-				}
-			}
-		}
-		else if (nn->id < t->id) 
-		{
-			i = t->bal; /* might be 1 */
-			t->left=avl_insert(t->left,nn);
-
-			if ( s == 1) /* we can still move */
-			{ 
-				if (i == 1) {
-					t->bal=0;
-					s=0;
-				} else if (i == 0) 
-					t->bal=-1;
-				else if (i == -1) 
-				{
-					if (t->left->bal == 1)
-					{  /* Doppelrotation */
-						t->left=avl_rotate_right(t->left);
-						t=avl_rotate_left(t);
-						t->left->bal=0;
-						t->right->bal=0;
-						if (t->bal == -1) t->left->bal=-1;
-						if (t->bal == 1)  t->right->bal=1;
-						t->bal=0;
-					} else {
-						t->bal=0;
-						t=avl_rotate_left(t);
-						t->bal=t->bal + 1 ;
-					}
-					s=0;
-				}
-			}
-		}
-	}
-	return(t);
-}
-object_t *avl_leftmost(object_t *t)
-{
-	while (t->left!=NULL) 
-	{
-		if (t->left!=NULL)			t=t->left;
-	} 
-	
-	return(t);
-}
-object_t *avl_rightmost(object_t *t)
-{
-	while (t->right!=NULL) 
-	{
-		if (t->right!=NULL)		t=t->right;
-	}
-	return(t);
-}
-object_t *avl_remove(object_t *t, object_t *nn)
-{
-	int i;
-	s=0;
-	if (t == NULL) { 
-/*		printf("object %d not found\n",nn->id);*/
-		t=nn;
-	} else {
-	    if (nn->id > t->id) 
-		{ 
-/*			printf("go right at %d\n",t->id);*/
-			i = t->bal; /* might be -1 */
-			t->right=avl_remove(t->right,nn);
-			if ( s == 1)  /* we can still move */
-			{ 
-					 if (i == 1) {	t->bal=0;	}
-				else if (i == 0) {	t->bal=-1;  s=0;	}
-				else if (i == -1) { 
-/*					printf("[T]rouble left at object_t *%d\n",t->id);*/
-
-					if (t->left->bal == 1)
-					{  /* Doppelrotation */
-						t->left=avl_rotate_right(t->left);
-						t=avl_rotate_left(t);
-						t->left->bal=0;
-						t->right->bal=0;
-						if (t->bal == -1)  t->left->bal=-1;
-						if (t->bal == 1)   t->right->bal=1;
-						t->bal=0;
-					} else {
-						t->bal=0;
-						t=avl_rotate_left(t);
-						t->bal=t->bal + 1 ;
-					}
-				}
-
-			}
-		} else if (nn->id < t->id) 
-		{
-/*			printf("go left at %d\n",t->id);*/
-
-			i = t->bal; /* might be 1 */
-			t->left=avl_remove(t->left,nn);
-
-			if ( s == 1) /* we can still move */
-			{ 
-					 if (i == -1) 	{ 	t->bal=0;}
-				else if (i == 0) 	{	t->bal=1;	s=0;}
-				else if (i == 1) { 
-/*					printf("[T]rouble right at object_t *%d\n",t->id);*/
-
-					if (t->right->bal == -1)
-					{ /* Doppelrotation */
-						t->right=avl_rotate_left(t->right);
-						t=avl_rotate_right(t);
-						t->left->bal=0;
-						t->right->bal=0;
-						if (t->bal == -1)   t->right->bal=1;
-						if (t->bal == 1)    t->left->bal=-1;
-						t->bal=0;
-					} else {
-						t->bal=0;
-						t=avl_rotate_right(t);
-						t->bal=t->bal - 1 ;
-					}
-
-				}
-			}
-		} if (nn->id == t->id)
-		{
-/*			printf("found, removing ...\n");*/
-			if (t->left==NULL && t->right==NULL)
-			{ /* leaf */
-				s=1;
-				t=NULL;
-			} else {
-				object_t *xchg=NULL;
-				if (t->right!=NULL) xchg=avl_leftmost(t->right);
-				else 				xchg=avl_rightmost(t->left);
-/*				printf("using %d as exchange node\n",xchg->id);*/
-				avl_remove(t, xchg);	/* remove the leaf */
-				xchg->left=t->left;
-				xchg->right=t->right;
-				xchg->bal=t->bal;
-				t=xchg; /* don't set s, keep the value from avl_remove() */
-			}
-		}
-	}
-/*	if (t!=NULL) printf("balance of %d is now %d\n",t->id, t->bal);*/
-	return t;
-}
-
-int avl_height(object_t *t)
-{
-	int h1,h2;
-	if (t == NULL) 	return(0);
-	else {
-		h1=avl_height(t->left);
-		h2=avl_height(t->right);
-		if (h1>h2)	if (h1 == 0) return(0); else return(h1+1);
-		else 		if (h2 == 0) return(0); else return(h2+1);
-	}
-}
-/*
-void avl_test()
-{
-	object_t *tree;
-
-	tree=NULL;
-	tree=avl_insert(tree,object_new(5));
-	avl_print_tree(tree);
-	printf("\n");
-
-	tree=avl_insert(tree,object_new(1));
-	avl_print_tree(tree);
-	printf("\n");
-
-	tree=avl_insert(tree,object_new(2));
-	avl_print_tree(tree);
-	printf("\n");
-	tree=avl_insert(tree,object_new(7));
-	avl_print_tree(tree);
-	printf("\n");
-
-	tree=avl_insert(tree,object_new(9));
-	avl_print_tree(tree);
-	printf("\n");
-
-	tree=avl_insert(tree,object_new(3));
-	avl_print_tree(tree);
-	printf("\n");
-
-	tree=avl_insert(tree,object_new(10));
-	avl_print_tree(tree);
-	printf("\n");
-
-	tree=avl_insert(tree,object_new(12));
-	avl_print_tree(tree);
-	printf("\n");
-
-
-	tree=avl_remove(tree,avl_find(tree,3));
-	tree=avl_remove(tree,avl_find(tree,1));
-	tree=avl_remove(tree,avl_find(tree,9));
-	tree=avl_remove(tree,avl_find(tree,5));
-	tree=avl_remove(tree,avl_find(tree,7));
-
-	printf("my tree:\n");
-	avl_print_tree(tree);
-	printf("\n");
-}
-void avl_print_tree(object_t *n)
-{ 
-	if (n != NULL) 
-	{ 
-		printf(" (");
-		avl_print_tree(n->left);
-		printf("%d [%d]",n->id, n->bal);
-		avl_print_tree(n->right);
-		printf(") ");
-	}
-}
-object_t *avl_findbest(object_t *t,int n)
-{
-	object_t *ret=NULL;
-	while (t != NULL) 
-	{
-		ret=t;
-		if (n >= t->id) t=t->right;
-		else if (n < t->id) t=t->left;
-	}
-	return(ret);
-}
-*/
-

Added: trunk/apps/s3dosm/db.c
===================================================================
--- trunk/apps/s3dosm/db.c	2006-11-26 13:49:35 UTC (rev 485)
+++ trunk/apps/s3dosm/db.c	2006-11-26 17:37:44 UTC (rev 486)
@@ -0,0 +1,224 @@
+/*
+ * kismet.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3dosm, a gps card application for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3dosm is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3dosm is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3dosm; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+#include <sqlite3.h>
+#include "s3dosm.h"
+#include <stdio.h>
+#include <string.h> /* stdup() */
+#include <unistd.h>	/* unlink() */
+#include <stdlib.h>	/* atoi() */
+#define MAXQ	4096	
+#define QBUF	1024*128
+static char qbuf[QBUF];
+static int qlen=0;
+
+static int tagid;
+static sqlite3 *db;
+static char *dbFile=NULL;
+int db_exec(const char *query, sqlite3_callback callback, void *arg);
+static int db_getint(void *tagid, int argc, char **argv, char **azColName);
+/*static int callback(void *NotUsed, int argc, char **argv, char **azColName);*/
+
+/* TODO: remove '' for security reasons */
+char *clean_string(char *dirty)
+{
+	return(strdup(dirty));
+}
+int db_insert_tags(int tag_n, tag_t *tag_p)
+{
+	int i;
+	char tagquery[MAXQ];
+	char *mkey, *mval;
+	if (tag_n>0 && tag_p!=NULL)
+	{
+		 /* add tags */
+		tagid++;
+		tagquery[0]=0;
+		for (i=0;i<tag_n;i++)
+		{
+			mkey=clean_string(tag_p[i].k);
+			mval=clean_string(tag_p[i].v);
+			snprintf(tagquery,MAXQ,"INSERT INTO tag VALUES (%d, '%s','%s' );",tagid, mkey, mval);
+			db_exec(tagquery, NULL, 0);
+			free(mkey);
+			free(mval);
+		}
+		return(tagid);
+	} else 
+		return(-1);
+}
+int db_insert_node(node_t *node)
+{
+	int tagid;
+	char addquery[MAXQ];
+	tagid= db_insert_tags(node->base.tag_n,node->base.tag_p);
+	
+/*	snprintf(addquery,MAXQ,"INSERT INTO node (layer_id,latitude,longitude,altitude, visible, tag_id) VALUES (%d, %f, %f, %f, %d, %d);",
+					(int)node->base.layerid,
+					node->lat,
+					node->lon,
+					node->alt,
+					node->visible, 
+					tagid);*/
+	if (node->base.id==-1) /* give own id */
+		snprintf(addquery,MAXQ,"INSERT INTO node (layer_id, latitude, longitude, altitude, visible, tag_id) VALUES (%d, %f, %f, %f, %d, %d);",
+						(int)node->base.layerid,				node->lat,		node->lon,		node->alt,		node->visible, 		tagid);
+	else
+		snprintf(addquery,MAXQ,"INSERT INTO node VALUES (%d, %d, %f, %f, %f, %d, %d);",
+					(int)node->base.layerid,(int)node->base.id,	node->lat,		node->lon,		node->alt,		node->visible, 		tagid);
+
+	db_exec(addquery, NULL, 0);
+	return(0);
+}
+
+int db_insert_segment(segment_t *seg)
+{
+	/* TODO */
+	return(0);
+}
+int db_insert_way(way_t *way)
+{
+	/* TODO */
+	return(0);
+}
+int db_insert_layer(char *layer_name)
+{
+	char findquery[MAXQ];
+	char addquery[MAXQ];
+	char *clayer;
+	int layerid=-1;
+	clayer=clean_string(layer_name);
+	
+	snprintf(findquery, MAXQ, "SELECT layer_id FROM layer WHERE name='%s';", clayer);
+    db_exec(findquery, db_getint, &layerid);
+	if (layerid==-1) /* need to add */
+	{
+		snprintf(addquery, MAXQ, "INSERT INTO layer(name) VALUES ('%s');", clayer);
+    	db_exec(addquery, NULL, 0);db_flush();
+    	db_exec(findquery, db_getint, &layerid);
+	}
+	free(clayer);
+	return(layerid);
+}
+int db_insert_object(object_t *obj)
+{
+	if (obj==NULL)
+	{
+		printf("NULL object, run away\n");
+		return(-1);
+	}
+	switch (obj->type) {
+		case T_NODE:			return(db_insert_node((node_t *)obj));
+		case T_SEGMENT:			return(db_insert_segment((segment_t *)obj));
+		case T_WAY:				return(	db_insert_way((way_t *)obj));
+		default:break;
+	}
+	return(-1);
+}
+
+static int db_getint(void *tagid, int argc, char **argv, char **azColName){
+  if (argv[0]!=NULL) 
+	  *((int *)tagid)=atoi(argv[0]);
+  return 0;
+}
+/*
+static int callback(void *NotUsed, int argc, char **argv, char **azColName){
+  int i;
+  for(i=0; i<argc; i++){
+    printf("%s = %s\n", azColName[i], argv[i] ? argv[i] : "NULL");
+  }
+  printf("\n");
+  return 0;
+}*/
+
+int static db_really_exec(const char *query, sqlite3_callback callback, void *arg)
+{
+	char *zErrMsg = 0;
+	int rc;
+	if(SQLITE_OK !=(  rc = sqlite3_exec(db, query, callback, arg, &zErrMsg))) {
+		fprintf(stderr,"query: %s\n",query);
+		fprintf(stderr, "SQL error: %s\n", zErrMsg);
+		exit(-1);
+	}
+	return(SQLITE_OK!=rc); /* 0 = okay */
+}
+/* call this if you're finished with a few stackable operations */
+void db_flush()
+{
+	if (qlen>0)
+		db_really_exec(qbuf,NULL,0);
+	qbuf[0]=0;
+	qlen=0;
+}
+int db_exec(const char *query, sqlite3_callback callback, void *arg)
+{
+	int len;
+	int ret;
+	if (callback==NULL) /* we can stack it */
+	{
+		len=strlen(query);
+		if (len+qlen>=QBUF)
+			db_flush();
+		strncat(qbuf,query,QBUF);
+		qlen+=strlen(query);
+		ret=0;
+	} else {
+		ret=db_really_exec(query,callback,arg);		/* pass it to the real function */
+	}
+	return(ret);
+}
+int db_init(char *dbFile)
+{
+  int rc;
+  tagid=1;
+  qbuf[0]=0;		/* clear querybuffer */
+  qlen=0;
+
+  unlink(dbFile);	/* remove if already there */
+  rc = sqlite3_open(dbFile, &db);
+  if( rc ){
+    fprintf(stderr, "Can't open database: %s\n", sqlite3_errmsg(db));
+    sqlite3_close(db);
+    return(-1);
+  }
+  return(0);
+}
+int db_quit()
+{
+  sqlite3_close(db);
+  if (dbFile!=NULL) 
+	if (unlink(dbFile))
+		perror("db_quit()");
+  return(0);
+}
+int db_create()
+{
+	db_exec("CREATE TABLE tag (tag_id INT, tagkey TEXT, tagvalue TEXT);", NULL, 0);
+	db_exec("CREATE TABLE layer (layer_id INTEGER PRIMARY KEY, name TEXT, UNIQUE(layer_id));", NULL, 0);
+	db_exec("CREATE TABLE node (layer_id INT, node_id INTEGER PRIMARY KEY, latitude DOUBLE PRECISION, longitude DOUBLE PRECISION, altitude DOUBLE PRECISION, visible BOOLEAN, tag_id INT, UNIQUE(layer_id,node_id));",NULL,0);
+	db_exec("CREATE TABLE segment (layer INT, seg_id INTEGER PRIMARY KEY, node_from INT, node_to INT, tag_id INT, way_id INT,UNIQUE(layer,seg_id));", NULL, 0);
+	db_exec("CREATE TABLE way (way_id INTEGER PRIMARY KEY, tag_id INT, UNIQUE(way_id));", NULL, 0);
+	db_flush();
+	return(0);
+}
+

Modified: trunk/apps/s3dosm/draw.c
===================================================================
--- trunk/apps/s3dosm/draw.c	2006-11-26 13:49:35 UTC (rev 485)
+++ trunk/apps/s3dosm/draw.c	2006-11-26 17:37:44 UTC (rev 486)
@@ -91,10 +91,11 @@
 }
 
 void draw_add_segments(object_t *t, void *data)
-{
+{/*
 	struct vdata *v=data;
 	tag_t *tag;
 	int color;
+	
 	if (t->type==T_SEGMENT)
 	{
 		node_t *from, *to;
@@ -103,7 +104,7 @@
 		to=NODE_T(avl_find(v->layer->tree,seg->to));
 
 		color=0;
-		/* TODO: look at the ways using it, not the segments  */
+		/ * TODO: look at the ways using it, not the segments  * /
 		if (NULL!=(tag=tag_get(OBJECT_T(seg), "highway")))
 		{
 			if (0==(strcmp(tag->v,"motorway"))) color=1;
@@ -117,7 +118,7 @@
 			s3d_push_line(v->oid,from->vid,to->vid,color);
 			v->layer->visible=1;
 		}
-	}
+	}*/
 }
 int draw_layer(layer_t *layer)
 {
@@ -136,8 +137,9 @@
 	s3d_push_material(oid,1.0,1.0,0.0,	1.0,1.0,0.0, 	1.0,1.0,0.0);	/* primary */
 	s3d_push_material(oid,0.8,0.8,0.2,	0.8,0.8,0.2, 	0.8,0.8,0.2);	/* secondary */
 	s3d_push_material(oid,0.7,0.7,0.4,	0.7,0.7,0.4, 	0.7,0.7,0.4);	/* secondary */
+	/*
 	avl_tree_trav(layer->tree,draw_add_vertices,(void *)&v);
-	avl_tree_trav(layer->tree,draw_add_segments,(void *)&v);
+	avl_tree_trav(layer->tree,draw_add_segments,(void *)&v);*/
 	layer->center_lo=(v.lonsum)/v.n;
 	layer->center_la=(v.latsum)/v.n;	
 	s3d_flags_on(oid,S3D_OF_VISIBLE);

Modified: trunk/apps/s3dosm/kismet.c
===================================================================
--- trunk/apps/s3dosm/kismet.c	2006-11-26 13:49:35 UTC (rev 485)
+++ trunk/apps/s3dosm/kismet.c	2006-11-26 17:37:44 UTC (rev 486)
@@ -26,6 +26,7 @@
 #include <stdlib.h>			/* strtof(),strtod(),strtol() */
 #include <libxml/parser.h>
 #include <libxml/tree.h>
+static int layerid;
 object_t *parse_kismet_node(xmlNodePtr cur)
 {
 	node_t *node;
@@ -34,11 +35,13 @@
 
 	node=node_new();
 	attr=cur->properties;
-	
+
+	node->base.layerid=layerid;
+	node->base.id=-1;				/* let database decide */
 	for (attr=cur->properties;attr;attr=attr->next)
 	{
-		if (0==strcmp((char *)attr->name,"number")) 		node->base.id=		strtol((char *)attr->children->content,NULL,10);
-		else if (0==strcmp((char *)attr->name,"wep")) 		tag_add(OBJECT_T(node),"wifi_wep",(char *)attr->children->content);
+/*		if (0==strcmp((char *)attr->name,"number")) 		node->base.id=		strtol((char *)attr->children->content,NULL,10);
+		else */if (0==strcmp((char *)attr->name,"wep")) 		tag_add(OBJECT_T(node),"wifi_wep",(char *)attr->children->content);
 		else if (0==strcmp((char *)attr->name,"type")) 		tag_add(OBJECT_T(node),"wifi_type",(char *)attr->children->content);
 	}
 	for (kids=cur->children;kids;kids=kids->next)
@@ -91,6 +94,8 @@
 		xmlFreeDoc(doc);
 		return(NULL);
 	}
+	layerid=db_insert_layer("kismet");
+	printf("kismet layerid is %d\n",layerid);
 	for (cur=cur->children;cur!=NULL; cur=cur->next)
 	{
 		if (cur->type==XML_ELEMENT_NODE)
@@ -98,11 +103,12 @@
 			if (0==strcmp((char *)cur->name,"wireless-network"))
 			{
 				if (NULL!=(obj=parse_kismet_node(cur)))
-					layer->tree=avl_insert(layer->tree, obj);
+					db_insert_object(obj);
 				else fprintf(stderr,"bad node\n"); 
 			} 
 		}
 	}
+	db_flush();
 	xmlFreeDoc(doc);
 	return(layer);
 }

Deleted: trunk/apps/s3dosm/layer.c
===================================================================

Modified: trunk/apps/s3dosm/main.c
===================================================================
--- trunk/apps/s3dosm/main.c	2006-11-26 13:49:35 UTC (rev 485)
+++ trunk/apps/s3dosm/main.c	2006-11-26 17:37:44 UTC (rev 486)
@@ -34,19 +34,26 @@
 }
 int init(int argc, char **argv)
 {
+	if (db_init(":memory:")) return(-1);
+	if (db_create()) return(-1);
 	if (process_args(argc,argv)) return(-1);
 	nav_init();
-	draw_all_layers();
+/*	draw_all_layers();*/
 	nav_autocenter();
 	return(0);
-
 }
+int quit()
+{
+	s3d_quit();
+	db_quit();
+	return(0);
+}
 int main(int argc, char **argv)
 {
 	if (!s3d_init(&argc,&argv,"s3dosm"))
 	{
 		if (!init(argc, argv)) s3d_mainloop(mainloop);
-		s3d_quit();
+		quit();
 	} else return(-1);
 	return(0);
 }

Modified: trunk/apps/s3dosm/object.c
===================================================================
--- trunk/apps/s3dosm/object.c	2006-11-26 13:49:35 UTC (rev 485)
+++ trunk/apps/s3dosm/object.c	2006-11-26 17:37:44 UTC (rev 486)
@@ -39,6 +39,7 @@
 	nobj->right=NULL;
 	nobj->id=0;
 	nobj->oid=-1;
+	nobj->layerid=-1;
 	nobj->tag_n=0;
 	nobj->tag_p=NULL;
 	nobj->type=T_OBJECT;

Modified: trunk/apps/s3dosm/osm.c
===================================================================
--- trunk/apps/s3dosm/osm.c	2006-11-26 13:49:35 UTC (rev 485)
+++ trunk/apps/s3dosm/osm.c	2006-11-26 17:37:44 UTC (rev 486)
@@ -27,6 +27,7 @@
 #include <libxml/parser.h>
 #include <libxml/tree.h>
 #include "http_fetcher.h"
+static int layerid;
 int parse_osm_tags(object_t *obj, xmlNodePtr cur)
 {
 	
@@ -35,7 +36,7 @@
 	char *v,*k;
 	tag_t *t;
 	int n;
-	
+	v=k=NULL;
 	n=0;
 	for (c=cur->children;c!=NULL; c=c->next)
 	{
@@ -88,6 +89,7 @@
 
 	way=way_new();
 	
+	way->base.layerid=layerid;
 	for (attr=cur->properties;attr;attr=attr->next)
 		if (0==strcmp((char *)attr->name,"id")) 			way->base.id=	strtol((char *)attr->children->content,NULL,10);
 	/* count segments */
@@ -126,6 +128,7 @@
 
 	segment=segment_new();
 	
+	segment->base.layerid=layerid;
 	for (attr=cur->properties;attr;attr=attr->next)
 	{
 		
@@ -149,6 +152,7 @@
 	node=node_new();
 	attr=cur->properties;
 	
+	node->base.layerid=layerid;
 	for (attr=cur->properties;attr;attr=attr->next)
 	{
 		if (0==strcmp((char *)attr->name,"id")) 			node->base.id=		strtol((char *)attr->children->content,NULL,10);
@@ -201,6 +205,7 @@
 	xmlNodePtr cur;
 	layer_t *layer=layer_new();
 	object_t *obj;
+	int i=0;
 	
 
 	doc = xmlReadMemory(buf, length, "noname.xml", NULL, 0);
@@ -214,29 +219,26 @@
 		xmlFreeDoc(doc);
 		return(NULL);
 	}
+	layerid=db_insert_layer("osm");
+	printf("osm layerid is %d\n",layerid);
 	for (cur=cur->children;cur!=NULL; cur=cur->next)
 	{
 		if (cur->type==XML_ELEMENT_NODE)
 		{
-			if (0==strcmp((char *)cur->name,"node"))
-			{
-				if (NULL!=(obj=parse_osm_node(cur)))
-					layer->tree=avl_insert(layer->tree, obj);
-				else fprintf(stderr,"bad node\n"); 
-			} else if (0==strcmp((char *)cur->name,"segment"))
-			{
-				if (NULL!=(obj=parse_osm_segment(cur)))
-					layer->tree=avl_insert(layer->tree, obj);
-				else fprintf(stderr,"bad segment\n");
-			} else if (0==strcmp((char *)cur->name,"way"))
-			{
-				if (NULL!=(obj=parse_osm_way(cur)))
-					layer->tree=avl_insert(layer->tree, obj);
-				else fprintf(stderr,"bad way\n");
-			}
+			obj=NULL;
+			if (0==strcmp((char *)cur->name,"node"))				obj=parse_osm_node(cur);
+			else if (0==strcmp((char *)cur->name,"segment"))		obj=parse_osm_segment(cur);
+			else if (0==strcmp((char *)cur->name,"way"))			obj=parse_osm_way(cur);
+			if (obj!=NULL)
+				db_insert_object(obj);
+			else
+				fprintf(stderr,"bad object\n");
+			if ((i++)%100==0) {printf(".");fflush(stdout);}
 		}
 	}
+	printf("\n");
 	xmlFreeDoc(doc);
+	db_flush();
 
 	return(layer);
 }

Modified: trunk/apps/s3dosm/s3dosm.h
===================================================================
--- trunk/apps/s3dosm/s3dosm.h	2006-11-26 13:49:35 UTC (rev 485)
+++ trunk/apps/s3dosm/s3dosm.h	2006-11-26 17:37:44 UTC (rev 486)
@@ -62,6 +62,7 @@
 
 struct _object_t {
 	ID_T 		 id;		/* id of this object */
+	ID_T		 layerid;
 	int 		 oid;		/* s3d oid */
 	int 		 type;		/* type of this object */
 	/* avl stuff */
@@ -121,15 +122,6 @@
 /* kismet.c */
 layer_t *parse_kismet(char *buf, int length);
 layer_t *load_kismet_file(char *filename);
-void 		 avl_tree_trav(object_t *t, avl_func func, void *data);
-object_t 	*avl_find(object_t *t, int val);
-object_t 	*avl_rotate_right(object_t *t);
-object_t	*avl_rotate_left(object_t *t);
-object_t	*avl_insert(object_t *t, object_t *nn);
-object_t 	*avl_leftmost(object_t *t);
-object_t 	*avl_rightmost(object_t *t);
-object_t 	*avl_remove(object_t *t, object_t *nn);
-int 		 avl_height(object_t *t);
 /* draw.c */
 void draw_all_layers();
 void calc_earth_to_eukl(double lon, double lat, double *x);
@@ -146,3 +138,13 @@
 /* io.c */
 char *read_file(char *fname, int *fsize);
 int process_args(int argc, char **argv);
+/* db.c */
+int db_insert_node(node_t *node);
+int db_insert_segment(segment_t *seg);
+int db_insert_way(way_t *way);
+int db_insert_object(object_t *obj);
+int db_init(char *dbFile);
+int db_quit();
+int db_create();
+int db_insert_layer(char *layer_name);
+void db_flush();



From dotslash at mail.berlios.de  Sun Nov 26 18:37:51 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Sun, 26 Nov 2006 18:37:51 +0100
Subject: [S3d-svn] r487 - trunk
Message-ID: <200611261737.kAQHbpGW007142@sheep.berlios.de>

Author: dotslash
Date: 2006-11-26 18:37:49 +0100 (Sun, 26 Nov 2006)
New Revision: 487

Modified:
   trunk/
   trunk/configure.ac
Log:
 r1161 at kero:  dotslash | 2006-11-26 18:37:30 +0100
 - add sqlite dependency for s3dosm



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1160
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1161

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2006-11-26 17:37:44 UTC (rev 486)
+++ trunk/configure.ac	2006-11-26 17:37:49 UTC (rev 487)
@@ -106,6 +106,7 @@
 PKG_CHECK_MODULES(FONTCONFIG, fontconfig >= 2.1.0, [:], [AC_MSG_ERROR([Please install fontconfig (version 2.1.0 or higher)])])
 PKG_CHECK_MODULES(FREETYPE, freetype2 >= 9.5.0, [:], [AC_MSG_ERROR([Please install freetype2 (version 9.5.0 or higher)])])
 
+PKG_CHECK_MODULES(SQLITE3, sqlite3 >= 3.0, [HAVE_SQLITE3="yes"], [])
 # libxml2
 AM_PATH_XML2(2.0.0, [HAVE_XML="yes"], [])
 
@@ -121,11 +122,23 @@
 
 fi
 		
+if test x"${HAVE_SQLITE3}" = xyes ; then
+	LIBSQLITE3_CFLAGS=""
+	LIBSQLITE3_LIBS="-lsqlite3"
+	AC_SUBST(LIBSQLITE3_CFLAGS)
+	AC_SUBST(LIBSQLITE3_LIBS)
+else
+dnl ##################################### EXAMPLES / APPS ######################
+	WARNS="$WARNS
+ ### Sorry, you lack the sqlite3 library to compile the s3dosm application."
 
+fi
 
 
-AM_CONDITIONAL([BUILD_S3DOSM], [test x"${HAVE_XML}" = xyes])
 
+
+AM_CONDITIONAL([BUILD_S3DOSM], [test x"${HAVE_XML}" = xyes && test x"${HAVE_SQLITE3}" = xyes])
+
 SIM_AC_HAVE_SIMAGE_IFELSE([
 	SIMAGE_CFLAGS=$sim_ac_simage_cppflags
 	SIMAGE_LIBS="$sim_ac_simage_ldflags $sim_ac_simage_libs"
@@ -236,12 +249,13 @@
 #	libs3d/libg3d/doc/api/Makefile
 #	libs3d/libg3d/m4/Makefile
 #	libs3d/libg3d/tests/Makefile
-
+if test "x$WARNS" != x; then
 echo "
 --------------------------------------------------------------------------------
-Warnings (not fatal, if any):
+Warnings (NOT FATAL, safe to ignore if you don't need any of those apps):
 $WARNS
 --------------------------------------------------------------------------------
 "
+fi
 
 echo "now use 'make' to compile and 'make install' to install"



From lazhur at mail.berlios.de  Sun Nov 26 19:36:34 2006
From: lazhur at mail.berlios.de (lazhur at BerliOS)
Date: Sun, 26 Nov 2006 19:36:34 +0100
Subject: [S3d-svn] r488 - in trunk/extras/distro/gentoo/media-gfx/s3d-svn: .
	files
Message-ID: <200611261836.kAQIaYtL032677@sheep.berlios.de>

Author: lazhur
Date: 2006-11-26 19:36:34 +0100 (Sun, 26 Nov 2006)
New Revision: 488

Modified:
   trunk/extras/distro/gentoo/media-gfx/s3d-svn/ChangeLog
   trunk/extras/distro/gentoo/media-gfx/s3d-svn/Manifest
   trunk/extras/distro/gentoo/media-gfx/s3d-svn/files/digest-s3d-svn-9999
   trunk/extras/distro/gentoo/media-gfx/s3d-svn/s3d-svn-9999.ebuild
Log:
- add sqlite3 as dependency in svn-ebuild

Modified: trunk/extras/distro/gentoo/media-gfx/s3d-svn/ChangeLog
===================================================================
--- trunk/extras/distro/gentoo/media-gfx/s3d-svn/ChangeLog	2006-11-26 17:37:49 UTC (rev 487)
+++ trunk/extras/distro/gentoo/media-gfx/s3d-svn/ChangeLog	2006-11-26 18:36:34 UTC (rev 488)
@@ -1,5 +1,10 @@
 # ChangeLog for media-gfx/s3d-svn
 
+*s3d-svn-9999 (26 Nov 2006)
+
+  26 Nov 2006; Sven Eckelmann <sven.eckelmann at gmx.de> s3d-svn-9999.ebuild:
+  Added sqlite-3 as dependency.
+
 *s3d-svn-9999 (25 Oct 2006)
 
   25 Oct 2006; Sven Eckelmann <sven.eckelmann at gmx.de> s3d-svn-9999.ebuild:

Modified: trunk/extras/distro/gentoo/media-gfx/s3d-svn/Manifest
===================================================================
--- trunk/extras/distro/gentoo/media-gfx/s3d-svn/Manifest	2006-11-26 17:37:49 UTC (rev 487)
+++ trunk/extras/distro/gentoo/media-gfx/s3d-svn/Manifest	2006-11-26 18:36:34 UTC (rev 488)
@@ -1,15 +1,15 @@
-EBUILD s3d-svn-9999.ebuild 854 RMD160 71332ca7afce19258d03d30369f6fd40768f80bc SHA1 c18620febb279103d2e69dc4b5bfb99b8fca33d4 SHA256 bb3f63536f9266a033c880e4f00ef881e23928b89f7af8932f75607b5ee0286c
-MD5 5d86860506b4fd6edd49cafd70af217f s3d-svn-9999.ebuild 854
-RMD160 71332ca7afce19258d03d30369f6fd40768f80bc s3d-svn-9999.ebuild 854
-SHA256 bb3f63536f9266a033c880e4f00ef881e23928b89f7af8932f75607b5ee0286c s3d-svn-9999.ebuild 854
-MISC ChangeLog 158 RMD160 e817888af84d9f7ae286bbf1f23ada86c95e97f8 SHA1 df2ceb7d586962142785b91bdf915b4e7c02e04a SHA256 27a1ef992b0259bd3b203fb70e6c8e57f2cdeb39af98343069a2d1a0798eff17
-MD5 39106091ba185d909931a2d120f05db4 ChangeLog 158
-RMD160 e817888af84d9f7ae286bbf1f23ada86c95e97f8 ChangeLog 158
-SHA256 27a1ef992b0259bd3b203fb70e6c8e57f2cdeb39af98343069a2d1a0798eff17 ChangeLog 158
+EBUILD s3d-svn-9999.ebuild 873 RMD160 c4e442fb6f0e09d42d9bfb55559268cac0c3c2c3 SHA1 df6b48857dfa7db86a7a48e30c674190657b2f0a SHA256 6df55733ec72ff628fc6069c2547064d02efa1475567f67250be4b6d95b481ca
+MD5 14d3ec19b0272d64318178980bc619c5 s3d-svn-9999.ebuild 873
+RMD160 c4e442fb6f0e09d42d9bfb55559268cac0c3c2c3 s3d-svn-9999.ebuild 873
+SHA256 6df55733ec72ff628fc6069c2547064d02efa1475567f67250be4b6d95b481ca s3d-svn-9999.ebuild 873
+MISC ChangeLog 295 RMD160 818b9134758d8a5d81be67d25ab990fe7cc71283 SHA1 529b5c00b3ad8067f06ce4bcc41d6a185fb2670d SHA256 cd5d36bee2dce3a94ce0f4f65ad7dc4ab8d299e48e57f48aa0a609eb06fe4885
+MD5 569601eaa0bbba92427ed05da0dfc050 ChangeLog 295
+RMD160 818b9134758d8a5d81be67d25ab990fe7cc71283 ChangeLog 295
+SHA256 cd5d36bee2dce3a94ce0f4f65ad7dc4ab8d299e48e57f48aa0a609eb06fe4885 ChangeLog 295
 MISC metadata.xml 239 RMD160 236f28d8249f562b764e2d854580d8301b150418 SHA1 76f167e3abff81e9535c16a637fd1e7f91d4fda3 SHA256 c0f08f1f0c1ce07df414cd87bf028a15cae639c89b2d636714d50d8aa77c370f
 MD5 261031c8b7aca6f50babf7e44b35deb1 metadata.xml 239
 RMD160 236f28d8249f562b764e2d854580d8301b150418 metadata.xml 239
 SHA256 c0f08f1f0c1ce07df414cd87bf028a15cae639c89b2d636714d50d8aa77c370f metadata.xml 239
-MD5 d41d8cd98f00b204e9800998ecf8427e files/digest-s3d-svn-9999 0
-RMD160 9c1185a5c5e9fc54612808977ee8f548b2258d31 files/digest-s3d-svn-9999 0
-SHA256 e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 files/digest-s3d-svn-9999 0
+MD5 68b329da9893e34099c7d8ad5cb9c940 files/digest-s3d-svn-9999 1
+RMD160 c0da025038ed83c687ddc430da9846ecb97f3998 files/digest-s3d-svn-9999 1
+SHA256 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b files/digest-s3d-svn-9999 1

Modified: trunk/extras/distro/gentoo/media-gfx/s3d-svn/files/digest-s3d-svn-9999
===================================================================
--- trunk/extras/distro/gentoo/media-gfx/s3d-svn/files/digest-s3d-svn-9999	2006-11-26 17:37:49 UTC (rev 487)
+++ trunk/extras/distro/gentoo/media-gfx/s3d-svn/files/digest-s3d-svn-9999	2006-11-26 18:36:34 UTC (rev 488)
@@ -0,0 +1 @@
+

Modified: trunk/extras/distro/gentoo/media-gfx/s3d-svn/s3d-svn-9999.ebuild
===================================================================
--- trunk/extras/distro/gentoo/media-gfx/s3d-svn/s3d-svn-9999.ebuild	2006-11-26 17:37:49 UTC (rev 487)
+++ trunk/extras/distro/gentoo/media-gfx/s3d-svn/s3d-svn-9999.ebuild	2006-11-26 18:36:34 UTC (rev 488)
@@ -17,6 +17,7 @@
 	>=sys-devel/automake-1.9
 	sys-devel/flex
 	>=sys-devel/libtool-1.5
+	>=dev-db/sqlite-3
 	"
 RDEPEND="!media-gfx/s3d
 	>=media-libs/libsdl-1.2.7



From lazhur at mail.berlios.de  Sun Nov 26 20:42:15 2006
From: lazhur at mail.berlios.de (lazhur at BerliOS)
Date: Sun, 26 Nov 2006 20:42:15 +0100
Subject: [S3d-svn] r489 - in trunk/extras/distro/gentoo/media-gfx: s3d
	s3d-svn
Message-ID: <200611261942.kAQJgF1q007275@sheep.berlios.de>

Author: lazhur
Date: 2006-11-26 20:42:14 +0100 (Sun, 26 Nov 2006)
New Revision: 489

Modified:
   trunk/extras/distro/gentoo/media-gfx/s3d-svn/Manifest
   trunk/extras/distro/gentoo/media-gfx/s3d-svn/s3d-svn-9999.ebuild
   trunk/extras/distro/gentoo/media-gfx/s3d/Manifest
   trunk/extras/distro/gentoo/media-gfx/s3d/s3d-0.1.1.ebuild
Log:
- add media-fonts/ttf-bitstream-vera as runtime dependency


Modified: trunk/extras/distro/gentoo/media-gfx/s3d/Manifest
===================================================================
--- trunk/extras/distro/gentoo/media-gfx/s3d/Manifest	2006-11-26 18:36:34 UTC (rev 488)
+++ trunk/extras/distro/gentoo/media-gfx/s3d/Manifest	2006-11-26 19:42:14 UTC (rev 489)
@@ -1,8 +1,8 @@
 DIST s3d-0.1.1.tar.bz2 1737935 RMD160 88189600659dd4d184be044dd668597ab2b17334 SHA1 3765171848d519784a436468ac613c9bfe85c3ae SHA256 1e2be7c806deaaf07e7f00d018f6f08723a1b26332419a80e732c8b7a1a515e4
-EBUILD s3d-0.1.1.ebuild 779 RMD160 1139e842ece34fa21a6ec1bab8d46ec78f78f0d7 SHA1 849426853a809fb99af0b8d3993614ad1017f4ad SHA256 673bf5f1f0c2d03bb5da9483284b00d6038fe59fdf3dcf6289f4aac51f449937
-MD5 a0b3edd9261aac5e7fe1acedb51e3b37 s3d-0.1.1.ebuild 779
-RMD160 1139e842ece34fa21a6ec1bab8d46ec78f78f0d7 s3d-0.1.1.ebuild 779
-SHA256 673bf5f1f0c2d03bb5da9483284b00d6038fe59fdf3dcf6289f4aac51f449937 s3d-0.1.1.ebuild 779
+EBUILD s3d-0.1.1.ebuild 811 RMD160 36bf79576e7d2a2ccf0cf89c4ed537ca51bc78ab SHA1 acbea5f89f40d0647b04eb995e4231182611faf8 SHA256 34f72a57351fd53658e44632f161e591b941b6a9e8c83c953845c298ddf855ae
+MD5 13108513bab3168db7b566ec750603a4 s3d-0.1.1.ebuild 811
+RMD160 36bf79576e7d2a2ccf0cf89c4ed537ca51bc78ab s3d-0.1.1.ebuild 811
+SHA256 34f72a57351fd53658e44632f161e591b941b6a9e8c83c953845c298ddf855ae s3d-0.1.1.ebuild 811
 MISC ChangeLog 148 RMD160 cb8db163c4842d0f8d8d4ad41ba7516765f1b0a3 SHA1 70661ac4033b04c51f6928f82d9903bfa86eb0b3 SHA256 e61b9d97b0c64076e833b27201c5eda91b02f5d885a37b5f4d005c03a44c405c
 MD5 31944463e2ea8d52f7172c7b838927be ChangeLog 148
 RMD160 cb8db163c4842d0f8d8d4ad41ba7516765f1b0a3 ChangeLog 148

Modified: trunk/extras/distro/gentoo/media-gfx/s3d/s3d-0.1.1.ebuild
===================================================================
--- trunk/extras/distro/gentoo/media-gfx/s3d/s3d-0.1.1.ebuild	2006-11-26 18:36:34 UTC (rev 488)
+++ trunk/extras/distro/gentoo/media-gfx/s3d/s3d-0.1.1.ebuild	2006-11-26 19:42:14 UTC (rev 489)
@@ -19,6 +19,7 @@
 	>=media-libs/libsdl-1.2.7
 	>=media-libs/freetype-2
 	>=dev-libs/glib-2
+	media-fonts/ttf-bitstream-vera
 	media-libs/fontconfig
 	media-libs/mesa
 

Modified: trunk/extras/distro/gentoo/media-gfx/s3d-svn/Manifest
===================================================================
--- trunk/extras/distro/gentoo/media-gfx/s3d-svn/Manifest	2006-11-26 18:36:34 UTC (rev 488)
+++ trunk/extras/distro/gentoo/media-gfx/s3d-svn/Manifest	2006-11-26 19:42:14 UTC (rev 489)
@@ -1,7 +1,7 @@
-EBUILD s3d-svn-9999.ebuild 873 RMD160 c4e442fb6f0e09d42d9bfb55559268cac0c3c2c3 SHA1 df6b48857dfa7db86a7a48e30c674190657b2f0a SHA256 6df55733ec72ff628fc6069c2547064d02efa1475567f67250be4b6d95b481ca
-MD5 14d3ec19b0272d64318178980bc619c5 s3d-svn-9999.ebuild 873
-RMD160 c4e442fb6f0e09d42d9bfb55559268cac0c3c2c3 s3d-svn-9999.ebuild 873
-SHA256 6df55733ec72ff628fc6069c2547064d02efa1475567f67250be4b6d95b481ca s3d-svn-9999.ebuild 873
+EBUILD s3d-svn-9999.ebuild 905 RMD160 34bd888b19648084ae8dc8e5d603f898a6e86774 SHA1 d228cd4a38efb52c06db1e680e5936c8ac7b55d8 SHA256 202c2a6c56bdfb6b9353dbfd755994e235cb0f9333f12d03d27c6fcabc87f447
+MD5 518f54a8fb0a29a9a3ec6e650da58480 s3d-svn-9999.ebuild 905
+RMD160 34bd888b19648084ae8dc8e5d603f898a6e86774 s3d-svn-9999.ebuild 905
+SHA256 202c2a6c56bdfb6b9353dbfd755994e235cb0f9333f12d03d27c6fcabc87f447 s3d-svn-9999.ebuild 905
 MISC ChangeLog 295 RMD160 818b9134758d8a5d81be67d25ab990fe7cc71283 SHA1 529b5c00b3ad8067f06ce4bcc41d6a185fb2670d SHA256 cd5d36bee2dce3a94ce0f4f65ad7dc4ab8d299e48e57f48aa0a609eb06fe4885
 MD5 569601eaa0bbba92427ed05da0dfc050 ChangeLog 295
 RMD160 818b9134758d8a5d81be67d25ab990fe7cc71283 ChangeLog 295

Modified: trunk/extras/distro/gentoo/media-gfx/s3d-svn/s3d-svn-9999.ebuild
===================================================================
--- trunk/extras/distro/gentoo/media-gfx/s3d-svn/s3d-svn-9999.ebuild	2006-11-26 18:36:34 UTC (rev 488)
+++ trunk/extras/distro/gentoo/media-gfx/s3d-svn/s3d-svn-9999.ebuild	2006-11-26 19:42:14 UTC (rev 489)
@@ -23,6 +23,7 @@
 	>=media-libs/libsdl-1.2.7
 	>=media-libs/freetype-2
 	>=dev-libs/glib-2
+	media-fonts/ttf-bitstream-vera
 	media-libs/fontconfig
 	media-libs/mesa
 



From marec at mail.berlios.de  Mon Nov 27 02:32:25 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Mon, 27 Nov 2006 02:32:25 +0100
Subject: [S3d-svn] r490 - trunk/apps/kism3d
Message-ID: <200611270132.kAR1WPGm015814@sheep.berlios.de>

Author: marec
Date: 2006-11-27 02:32:23 +0100 (Mon, 27 Nov 2006)
New Revision: 490

Modified:
   trunk/apps/kism3d/gui.c
   trunk/apps/kism3d/kism3d.c
   trunk/apps/kism3d/kism3d.h
   trunk/apps/kism3d/network.c
Log:
- input parsing improved

Modified: trunk/apps/kism3d/gui.c
===================================================================
--- trunk/apps/kism3d/gui.c	2006-11-26 19:42:14 UTC (rev 489)
+++ trunk/apps/kism3d/gui.c	2006-11-27 01:32:23 UTC (rev 490)
@@ -25,6 +25,7 @@
 
 #include "kism3d.h"
 #include <s3d.h>
+#include <s3dw.h>
 #include <math.h>	/* M_PI, cos(), sin() */
 #include <stdlib.h>	/* malloc(), free() */
 #include <stdio.h>      /* printf() */
@@ -33,9 +34,10 @@
 
 
 
-int oid;
-int r;
+float CamPosition[2][3];	/* CamPosition[trans|rot][x-z] */
 
+
+
 int wire_sphere(int slices, int stacks)
 {
 	int x,y,i,o;
@@ -110,7 +112,8 @@
 
 	struct list_head *network_pos;
 	struct wlan_network *wlan_network;
-	float real_node_pos_x, real_node_pos_z, label_str_len;
+	float tmp_mov_vec[3], desc_norm_vec[3] = { 0, 0, -1 };
+	float real_node_pos_x, real_node_pos_z, angle, angle_rad;
 	int network_index = 0;
 	char *label_str;
 
@@ -127,50 +130,90 @@
 
 			if ( wlan_network->obj_id == -1 ) {
 
-				wlan_network->obj_id = wire_sphere(30,30);
-				s3d_flags_on( wlan_network->obj_id, S3D_OF_VISIBLE );
+				wlan_network->obj_id = s3d_new_object();
+				wlan_network->wrsphr_id = wire_sphere(30,30);
+				s3d_link( wlan_network->wrsphr_id, wlan_network->obj_id );
+				s3d_flags_on( wlan_network->wrsphr_id, S3D_OF_VISIBLE );
 
 			}
 
-			wlan_network->scale_factor = wlan_network->num_wlan_clients;
-			s3d_scale( wlan_network->obj_id, wlan_network->scale_factor );
 
+			wlan_network->scale_fac = wlan_network->num_wlan_clients + 2;
+			s3d_translate( wlan_network->wrsphr_id, 0, -6 + wlan_network->scale_fac, 0 );
+			s3d_scale( wlan_network->obj_id, wlan_network->scale_fac );
+
 			real_node_pos_x = sin( ( 360 / Num_networks ) * network_index ) * ( M_PI / 180 ) * ( ( ( 100 * Num_networks ) / 2 * M_PI ) );
 			real_node_pos_z = cos( ( 360 / Num_networks ) * network_index ) * ( M_PI / 180 ) * ( ( ( 100 * Num_networks ) / 2 * M_PI ) );
 
-			if ( ( wlan_network->pos_vec[0] != real_node_pos_x ) || ( wlan_network->pos_vec[2] != real_node_pos_z ) ) {
+			if ( ( fabs( wlan_network->pos_vec[0] - real_node_pos_x ) > 0.5 ) || ( fabs( wlan_network->pos_vec[2] - real_node_pos_z ) > 0.5 ) ) {
 
-				if ( wlan_network->pos_vec[0] != real_node_pos_x )
-					wlan_network->pos_vec[0] += ( ( real_node_pos_x - wlan_network->pos_vec[0] ) * ( wlan_network->pos_vec[0] / real_node_pos_x ) );
+				if ( fabs( wlan_network->pos_vec[0] - real_node_pos_x ) > 0.5 )
+					wlan_network->pos_vec[0] = ( ( wlan_network->pos_vec[0] * 9 + real_node_pos_x ) / 10 );
 
-				if ( wlan_network->pos_vec[2] != real_node_pos_z )
-					wlan_network->pos_vec[2] += ( ( real_node_pos_z - wlan_network->pos_vec[2] ) * ( wlan_network->pos_vec[2] / real_node_pos_z ) );
+				if ( fabs( wlan_network->pos_vec[2] - real_node_pos_z ) > 0.5 )
+					wlan_network->pos_vec[2] = ( ( wlan_network->pos_vec[2] * 9 + real_node_pos_z ) / 10 );
 
 				s3d_translate( wlan_network->obj_id, wlan_network->pos_vec[0], wlan_network->pos_vec[1], wlan_network->pos_vec[2] );
 
 			}
 
-			if ( wlan_network->properties_changed ) {
+			if ( wlan_network->props_changed ) {
 
-				wlan_network->properties_changed = 0;
+				wlan_network->props_changed = 0;
 
-				if ( wlan_network->label_id != -1 )
-					s3d_del_object( wlan_network->label_id );
+				if ( wlan_network->ssid_id != -1 )
+					s3d_del_object( wlan_network->ssid_id );
 
+				if ( wlan_network->misc_id != -1 )
+					s3d_del_object( wlan_network->misc_id );
 
+
+				if ( wlan_network->bssid_id == -1 ) {
+
+					wlan_network->bssid_id = s3d_draw_string( wlan_network->bssid, &wlan_network->bssid_len );
+					s3d_link( wlan_network->bssid_id, wlan_network->obj_id );
+					s3d_translate( wlan_network->bssid_id, - wlan_network->bssid_len / 2, -2, 0 );
+					s3d_flags_on( wlan_network->bssid_id, S3D_OF_VISIBLE );
+
+				}
+
+				wlan_network->ssid_id = s3d_draw_string( wlan_network->ssid, NULL );
+				s3d_link( wlan_network->ssid_id, wlan_network->bssid_id );
+				s3d_translate( wlan_network->ssid_id, 0, -2, 0 );
+				s3d_flags_on( wlan_network->ssid_id, S3D_OF_VISIBLE );
+
 				label_str = alloc_memory( 100 );
-				snprintf( label_str, 100, "%s\n%s", wlan_network->bssid, wlan_network->ssid );
-				label_str_len = 100;
+				snprintf( label_str, 100, "Type: %s, CH: %i, Clients: %i", ( wlan_network->type == 0 ? "Managed" : ( wlan_network->type == 1 ? "Ad-Hoc" : ( wlan_network->type == 2 ? "Prober" : "unknown" ) ) ), wlan_network->chan, wlan_network->num_wlan_clients );
 
-				wlan_network->label_id = s3d_draw_string( label_str, &label_str_len );
-				s3d_link( wlan_network->label_id, wlan_network->obj_id );
-				s3d_translate( wlan_network->label_id, - label_str_len / 2, -2, 0 );
-				s3d_flags_on( wlan_network->label_id, S3D_OF_VISIBLE );
+				wlan_network->misc_id = s3d_draw_string( label_str, NULL );
+				s3d_link( wlan_network->misc_id, wlan_network->ssid_id );
+				s3d_translate( wlan_network->misc_id, 0, -2, 0 );
+				s3d_flags_on( wlan_network->misc_id, S3D_OF_VISIBLE );
 
 			}
 
+			/* rotate network description so that it is always readable */
+			tmp_mov_vec[0] = CamPosition[0][0] - wlan_network->pos_vec[0];
+			tmp_mov_vec[1] = 0;   /* we are not interested in the y value */
+			tmp_mov_vec[2] = CamPosition[0][2] - wlan_network->pos_vec[2];
+
+			angle = s3d_vector_angle( desc_norm_vec, tmp_mov_vec );
+
+			/* take care of inverse cosinus */
+			if ( tmp_mov_vec[0] > 0 ) {
+				angle_rad = 90.0/M_PI - angle;
+				angle = 180 - ( 180.0/M_PI * angle );
+			} else {
+				angle_rad = 90.0/M_PI + angle;
+				angle = 180 + ( 180.0/M_PI * angle );
+			}
+
+			s3d_rotate( wlan_network->bssid_id, 0, angle , 0 );
+
+			s3d_translate( wlan_network->bssid_id, -cos(angle_rad) * wlan_network->bssid_len / 2 ,-1.5, sin(angle_rad) * wlan_network->bssid_len / 2 );
+
 			wlan_network->rotation = ( wlan_network->rotation + 1 ) % 360;
-			s3d_rotate( wlan_network->obj_id, 0, wlan_network->rotation, 0 );
+			s3d_rotate( wlan_network->wrsphr_id, 0, wlan_network->rotation, 0 );
 
 		}
 
@@ -185,6 +228,38 @@
 
 
 
+/***
+ *
+ * eventhandler when object change by user
+ * such as Cam
+ *
+ ***/
+
+int object_info(struct s3d_evt *hrmz) {
+
+	struct s3d_obj_info *inf;
+
+
+	inf = (struct s3d_obj_info *)hrmz->buf;
+	s3dw_object_info(hrmz);
+
+	if ( inf->object == 0 ) {
+
+		CamPosition[0][0] = inf->trans_x;
+		CamPosition[0][1] = inf->trans_y;
+		CamPosition[0][2] = inf->trans_z;
+		CamPosition[1][0] = inf->rot_x;
+		CamPosition[1][1] = inf->rot_y;
+		CamPosition[1][2] = inf->rot_z;
+
+	}
+
+	return(0);
+
+}
+
+
+
 void mainloop() {
 
 	struct timespec sleeptime = { 0, 100 * 1000 * 1000 };   /* 100 mili seconds */
@@ -211,6 +286,8 @@
 
 		} else {
 
+			s3d_set_callback( S3D_EVENT_OBJ_INFO, object_info );
+
 			s3d_mainloop( mainloop );
 
 		}

Modified: trunk/apps/kism3d/kism3d.c
===================================================================
--- trunk/apps/kism3d/kism3d.c	2006-11-26 19:42:14 UTC (rev 489)
+++ trunk/apps/kism3d/kism3d.c	2006-11-27 01:32:23 UTC (rev 490)
@@ -90,6 +90,7 @@
 	char enable_network[] = "!0 ENABLE NETWORK bssid,type,channel,ssid\n", enable_client[] = "!0 ENABLE CLIENT bssid,mac,ip\n", enable_alert[] = "!0 ENABLE ALERT *\n";
 	char *read_ptr, *line_ptr, *last_cr_ptr = NULL, *parse_begin_ptr, *parse_end_ptr;
 	char *bssid, *channel, *type, *ssid, *mac, *ip;
+	char end_char;
 	int count;
 
 	read_ptr = kismet_src->recv_buff;
@@ -149,7 +150,10 @@
 
 			} else if ( strncmp( line_ptr, "*NETWORK: ", strlen( "*NETWORK: " ) ) == 0 ) {
 
+				/* printf( "line: %s\n", line_ptr ); */
+
 				parse_begin_ptr = parse_end_ptr = line_ptr + strlen( "*NETWORK: " );
+				end_char = ' ';
 				count = 0;
 
 				while ( (*parse_end_ptr) != '\0' ) {
@@ -171,12 +175,24 @@
 								break;
 
 							case 3:
+								/* ssids with spaces are quoted by kismet */
+								if ( parse_begin_ptr[0] == '\001' ) {
+
+									parse_begin_ptr++;
+
+									parse_end_ptr = strchr( parse_begin_ptr, '\001' );
+									*parse_end_ptr = '\0';
+
+									count++;
+
+								}
+
 								ssid = parse_begin_ptr;
 								break;
 
 						}
 
-						if ( count == 3 )
+						if ( count == 4 )
 							break;
 
 						*parse_end_ptr = '\0';
@@ -190,29 +206,29 @@
 
 				}
 
+
 				pthread_mutex_lock( &Network_list_mutex );
 
 				wlan_network = get_wlan_network( bssid );
 
-				if ( ( wlan_network->type != -1 ) && ( wlan_network->channel != -1 ) && ( wlan_network->ssid != NULL ) ) {
+				if ( ( wlan_network->type != -1 ) && ( wlan_network->chan != -1 ) && ( wlan_network->ssid != NULL ) ) {
 
 					/* network properties have changed - alert user */
 
 				}
 
 				wlan_network->type = atoi( type );
-				wlan_network->channel = atoi( channel );
+				wlan_network->chan = atoi( channel );
 
-				if ( wlan_network->ssid == NULL )
-					wlan_network->ssid = alloc_memory( strlen( ssid ) );
-				else
-					wlan_network->ssid = realloc_memory( wlan_network->ssid, strlen( ssid ) );
+				if ( wlan_network->ssid != NULL )
+					free( wlan_network->ssid );
 
-				strncpy( wlan_network->ssid, ssid, strlen( ssid ) );
+				wlan_network->ssid = alloc_memory( strlen( ssid ) );
+				strcpy( wlan_network->ssid, ssid );
 
 				pthread_mutex_unlock( &Network_list_mutex );
 
-				/* printf( "network found - bssid %s, type %s, channel %s, ssid %s\n", bssid, type, channel, ssid ); */
+// 				printf( "network found - bssid %s, type %s, channel %s, ssid '%s' <> '%s'\n", bssid, type, channel, ssid, wlan_network->ssid );
 
 			} else if ( strncmp( line_ptr, "*CLIENT: ", strlen( "*CLIENT: " ) ) == 0 ) {
 
@@ -268,12 +284,20 @@
 
 				if ( wlan_client->wlan_network != wlan_network ) {
 
-					if ( wlan_client->wlan_network != NULL )
+					if ( wlan_client->wlan_network != NULL ) {
+
 						wlan_client->wlan_network->num_wlan_clients--;
+						wlan_client->wlan_network->props_changed = 1;
 
-					if ( wlan_network != NULL )
+					}
+
+					if ( wlan_network != NULL ) {
+
 						wlan_network->num_wlan_clients++;
+						wlan_network->props_changed = 1;
 
+					}
+
 					wlan_client->wlan_network = wlan_network;
 
 				}

Modified: trunk/apps/kism3d/kism3d.h
===================================================================
--- trunk/apps/kism3d/kism3d.h	2006-11-26 19:42:14 UTC (rev 489)
+++ trunk/apps/kism3d/kism3d.h	2006-11-27 01:32:23 UTC (rev 490)
@@ -48,16 +48,20 @@
 	char bssid[18];
 	char *ssid;
 	int type;
-	int channel;
+	int chan;
 	int num_wlan_clients;
-	int properties_changed;
+	int props_changed;
 	int visible;
 	float pos_vec[3];
 	float mov_vec[3];
 	int obj_id;
-	int label_id;
+	int wrsphr_id;
+	int bssid_id;
+	int ssid_id;
+	int misc_id;
 	int rotation;
-	int scale_factor;
+	int scale_fac;
+	float bssid_len;
 
 };
 

Modified: trunk/apps/kism3d/network.c
===================================================================
--- trunk/apps/kism3d/network.c	2006-11-26 19:42:14 UTC (rev 489)
+++ trunk/apps/kism3d/network.c	2006-11-27 01:32:23 UTC (rev 490)
@@ -48,7 +48,7 @@
 	strncpy( wlan_network->bssid, bssid, 18 );
 
 	wlan_network->type = -1;
-	wlan_network->channel = -1;
+	wlan_network->chan = -1;
 
 	wlan_network->ssid = NULL;
 
@@ -56,18 +56,20 @@
 
 	wlan_network->visible = 1;
 
-	wlan_network->pos_vec[0] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
-	wlan_network->pos_vec[1] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
-	wlan_network->pos_vec[2] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+	wlan_network->pos_vec[0] = 0;
+	wlan_network->pos_vec[1] = 0;
+	wlan_network->pos_vec[2] = 0;
 	wlan_network->mov_vec[0] = wlan_network->mov_vec[1] = wlan_network->mov_vec[2] = 0.0;
 
 	wlan_network->obj_id = -1;
-	wlan_network->label_id = -1;
+	wlan_network->bssid_id = -1;
+	wlan_network->ssid_id = -1;
+	wlan_network->misc_id = -1;
 
 	wlan_network->rotation = 0;
-	wlan_network->scale_factor = 0;
+	wlan_network->scale_fac = 0;
 
-	wlan_network->properties_changed = 1;
+	wlan_network->props_changed = 1;
 
 	list_add_tail(&wlan_network->list, &Network_list);
 



From marec at mail.berlios.de  Mon Nov 27 16:20:41 2006
From: marec at mail.berlios.de (marec at BerliOS)
Date: Mon, 27 Nov 2006 16:20:41 +0100
Subject: [S3d-svn] r491 - trunk/apps/kism3d
Message-ID: <200611271520.kARFKfAU023555@sheep.berlios.de>

Author: marec
Date: 2006-11-27 16:20:41 +0100 (Mon, 27 Nov 2006)
New Revision: 491

Modified:
   trunk/apps/kism3d/gui.c
Log:
beautify flying networks

Modified: trunk/apps/kism3d/gui.c
===================================================================
--- trunk/apps/kism3d/gui.c	2006-11-27 01:32:23 UTC (rev 490)
+++ trunk/apps/kism3d/gui.c	2006-11-27 15:20:41 UTC (rev 491)
@@ -139,7 +139,7 @@
 
 
 			wlan_network->scale_fac = wlan_network->num_wlan_clients + 2;
-			s3d_translate( wlan_network->wrsphr_id, 0, -6 + wlan_network->scale_fac, 0 );
+			s3d_translate( wlan_network->wrsphr_id, 0, -6 + wlan_network->scale_fac, wlan_network->scale_fac );
 			s3d_scale( wlan_network->obj_id, wlan_network->scale_fac );
 
 			real_node_pos_x = sin( ( 360 / Num_networks ) * network_index ) * ( M_PI / 180 ) * ( ( ( 100 * Num_networks ) / 2 * M_PI ) );
@@ -173,6 +173,7 @@
 					wlan_network->bssid_id = s3d_draw_string( wlan_network->bssid, &wlan_network->bssid_len );
 					s3d_link( wlan_network->bssid_id, wlan_network->obj_id );
 					s3d_translate( wlan_network->bssid_id, - wlan_network->bssid_len / 2, -2, 0 );
+					s3d_scale( wlan_network->bssid_id, 0.2 );
 					s3d_flags_on( wlan_network->bssid_id, S3D_OF_VISIBLE );
 
 				}



From dotslash at mail.berlios.de  Mon Nov 27 17:10:06 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Mon, 27 Nov 2006 17:10:06 +0100
Subject: [S3d-svn] r492 - in trunk: . apps/kism3d
Message-ID: <200611271610.kARGA65c012098@sheep.berlios.de>

Author: dotslash
Date: 2006-11-27 17:10:05 +0100 (Mon, 27 Nov 2006)
New Revision: 492

Modified:
   trunk/
   trunk/apps/kism3d/gui.c
Log:
 r1169 at kero:  dotslash | 2006-11-27 17:09:58 +0100
 - some fix



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1161
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1169

Modified: trunk/apps/kism3d/gui.c
===================================================================
--- trunk/apps/kism3d/gui.c	2006-11-27 15:20:41 UTC (rev 491)
+++ trunk/apps/kism3d/gui.c	2006-11-27 16:10:05 UTC (rev 492)
@@ -106,8 +106,8 @@
 	return(o);
 }
 
+#define BSSID_SCALE		0.2
 
-
 int handle_networks() {
 
 	struct list_head *network_pos;
@@ -142,8 +142,8 @@
 			s3d_translate( wlan_network->wrsphr_id, 0, -6 + wlan_network->scale_fac, wlan_network->scale_fac );
 			s3d_scale( wlan_network->obj_id, wlan_network->scale_fac );
 
-			real_node_pos_x = sin( ( 360 / Num_networks ) * network_index ) * ( M_PI / 180 ) * ( ( ( 100 * Num_networks ) / 2 * M_PI ) );
-			real_node_pos_z = cos( ( 360 / Num_networks ) * network_index ) * ( M_PI / 180 ) * ( ( ( 100 * Num_networks ) / 2 * M_PI ) );
+			real_node_pos_x = sin( 2.0* M_PI * network_index / ((float) Num_networks ) ) * ( ( ( 1 * Num_networks ) / 2 * M_PI ) );
+			real_node_pos_z = cos( 2.0* M_PI * network_index / ((float) Num_networks ) ) * ( ( ( 1 * Num_networks ) / 2 * M_PI ) );
 
 			if ( ( fabs( wlan_network->pos_vec[0] - real_node_pos_x ) > 0.5 ) || ( fabs( wlan_network->pos_vec[2] - real_node_pos_z ) > 0.5 ) ) {
 
@@ -173,7 +173,7 @@
 					wlan_network->bssid_id = s3d_draw_string( wlan_network->bssid, &wlan_network->bssid_len );
 					s3d_link( wlan_network->bssid_id, wlan_network->obj_id );
 					s3d_translate( wlan_network->bssid_id, - wlan_network->bssid_len / 2, -2, 0 );
-					s3d_scale( wlan_network->bssid_id, 0.2 );
+					s3d_scale( wlan_network->bssid_id, BSSID_SCALE );
 					s3d_flags_on( wlan_network->bssid_id, S3D_OF_VISIBLE );
 
 				}
@@ -211,7 +211,7 @@
 
 			s3d_rotate( wlan_network->bssid_id, 0, angle , 0 );
 
-			s3d_translate( wlan_network->bssid_id, -cos(angle_rad) * wlan_network->bssid_len / 2 ,-1.5, sin(angle_rad) * wlan_network->bssid_len / 2 );
+			s3d_translate( wlan_network->bssid_id, -cos(angle_rad) * BSSID_SCALE * wlan_network->bssid_len / 2 ,-1.5, sin(angle_rad) * BSSID_SCALE * wlan_network->bssid_len / 2 );
 
 			wlan_network->rotation = ( wlan_network->rotation + 1 ) % 360;
 			s3d_rotate( wlan_network->wrsphr_id, 0, wlan_network->rotation, 0 );
@@ -300,4 +300,4 @@
 	Kism3d_aborted = 1;
 	return(0);
 
-}
\ No newline at end of file
+}



From dotslash at mail.berlios.de  Tue Nov 28 13:27:46 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Tue, 28 Nov 2006 13:27:46 +0100
Subject: [S3d-svn] r493 - trunk/apps/s3dosm
Message-ID: <200611281227.kASCRkrY026768@sheep.berlios.de>

Author: dotslash
Date: 2006-11-28 13:27:46 +0100 (Tue, 28 Nov 2006)
New Revision: 493

Modified:
   trunk/apps/s3dosm/db.c
   trunk/apps/s3dosm/s3dosm.h
Log:
- insert segment and ways into database
- turn off stackability by cpp-flag

Modified: trunk/apps/s3dosm/db.c
===================================================================
--- trunk/apps/s3dosm/db.c	2006-11-27 16:10:05 UTC (rev 492)
+++ trunk/apps/s3dosm/db.c	2006-11-28 12:27:46 UTC (rev 493)
@@ -73,13 +73,6 @@
 	char addquery[MAXQ];
 	tagid= db_insert_tags(node->base.tag_n,node->base.tag_p);
 	
-/*	snprintf(addquery,MAXQ,"INSERT INTO node (layer_id,latitude,longitude,altitude, visible, tag_id) VALUES (%d, %f, %f, %f, %d, %d);",
-					(int)node->base.layerid,
-					node->lat,
-					node->lon,
-					node->alt,
-					node->visible, 
-					tagid);*/
 	if (node->base.id==-1) /* give own id */
 		snprintf(addquery,MAXQ,"INSERT INTO node (layer_id, latitude, longitude, altitude, visible, tag_id) VALUES (%d, %f, %f, %f, %d, %d);",
 						(int)node->base.layerid,				node->lat,		node->lon,		node->alt,		node->visible, 		tagid);
@@ -93,12 +86,31 @@
 
 int db_insert_segment(segment_t *seg)
 {
-	/* TODO */
+	int tagid;
+	char addquery[MAXQ];
+	tagid= db_insert_tags(seg->base.tag_n,seg->base.tag_p);
+
+/*	if (seg->base.id==-1) / * give own id * /
+		snprintf(addquery,MAXQ,"INSERT INTO segment (layer_id, node_from, node_to, tag_id) VALUES (%d, %d, %d), %d;",
+						(int)seg->base.layerid,				(int)seg->from, (int)seg->to,	tagid );
+	else*/
+		snprintf(addquery,MAXQ,"INSERT INTO segment (layer_id, seg_id, node_from, node_to, tag_id) VALUES (%d, %d, %d, %d, %d);",
+						(int)seg->base.layerid,(int)seg->base.id,(int)seg->from, (int)seg->to,	tagid );
+	db_exec(addquery, NULL, 0);
+
 	return(0);
 }
 int db_insert_way(way_t *way)
 {
-	/* TODO */
+	int tagid,i;
+	char addquery[MAXQ];
+	tagid= db_insert_tags(way->base.tag_n,way->base.tag_p);
+	snprintf(addquery,MAXQ,"INSERT INTO way (layer_id, way_id, tag_id) VALUES (%d, %d, %d);",(int)way->base.layerid, (int)way->base.id, tagid );
+	db_exec(addquery, NULL, 0);
+	for (i=0;i<way->seg_n;i++) {
+		snprintf(addquery,MAXQ,"UPDATE segment SET way_id=%d WHERE seg_id=%d AND layer_id=%d;",(int)way->base.id,(int)way->seg_p[i],(int)way->base.layerid );
+		db_exec(addquery, NULL, 0);
+	}
 	return(0);
 }
 int db_insert_layer(char *layer_name)
@@ -172,17 +184,20 @@
 }
 int db_exec(const char *query, sqlite3_callback callback, void *arg)
 {
-	int len;
 	int ret;
+#ifdef DB_STACK
 	if (callback==NULL) /* we can stack it */
 	{
+		int len;
 		len=strlen(query);
 		if (len+qlen>=QBUF)
 			db_flush();
 		strncat(qbuf,query,QBUF);
 		qlen+=strlen(query);
 		ret=0;
-	} else {
+	} else 
+#endif
+	{
 		ret=db_really_exec(query,callback,arg);		/* pass it to the real function */
 	}
 	return(ret);
@@ -216,8 +231,8 @@
 	db_exec("CREATE TABLE tag (tag_id INT, tagkey TEXT, tagvalue TEXT);", NULL, 0);
 	db_exec("CREATE TABLE layer (layer_id INTEGER PRIMARY KEY, name TEXT, UNIQUE(layer_id));", NULL, 0);
 	db_exec("CREATE TABLE node (layer_id INT, node_id INTEGER PRIMARY KEY, latitude DOUBLE PRECISION, longitude DOUBLE PRECISION, altitude DOUBLE PRECISION, visible BOOLEAN, tag_id INT, UNIQUE(layer_id,node_id));",NULL,0);
-	db_exec("CREATE TABLE segment (layer INT, seg_id INTEGER PRIMARY KEY, node_from INT, node_to INT, tag_id INT, way_id INT,UNIQUE(layer,seg_id));", NULL, 0);
-	db_exec("CREATE TABLE way (way_id INTEGER PRIMARY KEY, tag_id INT, UNIQUE(way_id));", NULL, 0);
+	db_exec("CREATE TABLE segment (layer_id INT, seg_id INTEGER PRIMARY KEY, node_from INT, node_to INT, tag_id INT, way_id INT,UNIQUE(layer_id,seg_id));", NULL, 0);
+	db_exec("CREATE TABLE way (layer_id INTEGER, way_id INTEGER PRIMARY KEY, tag_id INT, UNIQUE(layer_id,way_id));", NULL, 0);
 	db_flush();
 	return(0);
 }

Modified: trunk/apps/s3dosm/s3dosm.h
===================================================================
--- trunk/apps/s3dosm/s3dosm.h	2006-11-27 16:10:05 UTC (rev 492)
+++ trunk/apps/s3dosm/s3dosm.h	2006-11-28 12:27:46 UTC (rev 493)
@@ -1,5 +1,7 @@
 #define	ESIZE	637800		/* earth size */
 #define	RESCALE	1
+/* stack it */
+/* #define DB_STACK	1*/
 
 typedef struct _layer_t layer_t;
 typedef struct _adj_t adj_t;



From dotslash at mail.berlios.de  Tue Nov 28 13:46:45 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Tue, 28 Nov 2006 13:46:45 +0100
Subject: [S3d-svn] r494 - trunk/apps/kism3d
Message-ID: <200611281246.kASCkjCl030742@sheep.berlios.de>

Author: dotslash
Date: 2006-11-28 13:46:45 +0100 (Tue, 28 Nov 2006)
New Revision: 494

Modified:
   trunk/apps/kism3d/gui.c
Log:
- text above the spheres (somehow ;)

Modified: trunk/apps/kism3d/gui.c
===================================================================
--- trunk/apps/kism3d/gui.c	2006-11-28 12:27:46 UTC (rev 493)
+++ trunk/apps/kism3d/gui.c	2006-11-28 12:46:45 UTC (rev 494)
@@ -139,7 +139,7 @@
 
 
 			wlan_network->scale_fac = wlan_network->num_wlan_clients + 2;
-			s3d_translate( wlan_network->wrsphr_id, 0, -6 + wlan_network->scale_fac, wlan_network->scale_fac );
+			s3d_translate( wlan_network->wrsphr_id, 0, /*-6 + wlan_network->scale_fac*/ 0, 0);
 			s3d_scale( wlan_network->obj_id, wlan_network->scale_fac );
 
 			real_node_pos_x = sin( 2.0* M_PI * network_index / ((float) Num_networks ) ) * ( ( ( 1 * Num_networks ) / 2 * M_PI ) );
@@ -172,7 +172,7 @@
 
 					wlan_network->bssid_id = s3d_draw_string( wlan_network->bssid, &wlan_network->bssid_len );
 					s3d_link( wlan_network->bssid_id, wlan_network->obj_id );
-					s3d_translate( wlan_network->bssid_id, - wlan_network->bssid_len / 2, -2, 0 );
+					s3d_translate( wlan_network->bssid_id, - wlan_network->bssid_len / 2, 2+ wlan_network->scale_fac, 0 );
 					s3d_scale( wlan_network->bssid_id, BSSID_SCALE );
 					s3d_flags_on( wlan_network->bssid_id, S3D_OF_VISIBLE );
 
@@ -180,7 +180,7 @@
 
 				wlan_network->ssid_id = s3d_draw_string( wlan_network->ssid, NULL );
 				s3d_link( wlan_network->ssid_id, wlan_network->bssid_id );
-				s3d_translate( wlan_network->ssid_id, 0, -2, 0 );
+				s3d_translate( wlan_network->ssid_id, 0, -1, 0 );
 				s3d_flags_on( wlan_network->ssid_id, S3D_OF_VISIBLE );
 
 				label_str = alloc_memory( 100 );
@@ -188,7 +188,7 @@
 
 				wlan_network->misc_id = s3d_draw_string( label_str, NULL );
 				s3d_link( wlan_network->misc_id, wlan_network->ssid_id );
-				s3d_translate( wlan_network->misc_id, 0, -2, 0 );
+				s3d_translate( wlan_network->misc_id, 0, -1, 0 );
 				s3d_flags_on( wlan_network->misc_id, S3D_OF_VISIBLE );
 
 			}
@@ -211,7 +211,7 @@
 
 			s3d_rotate( wlan_network->bssid_id, 0, angle , 0 );
 
-			s3d_translate( wlan_network->bssid_id, -cos(angle_rad) * BSSID_SCALE * wlan_network->bssid_len / 2 ,-1.5, sin(angle_rad) * BSSID_SCALE * wlan_network->bssid_len / 2 );
+			s3d_translate( wlan_network->bssid_id, -cos(angle_rad) * BSSID_SCALE * wlan_network->bssid_len / 2 ,2 , sin(angle_rad) * BSSID_SCALE * wlan_network->bssid_len / 2 );
 
 			wlan_network->rotation = ( wlan_network->rotation + 1 ) % 360;
 			s3d_rotate( wlan_network->wrsphr_id, 0, wlan_network->rotation, 0 );



From dotslash at mail.berlios.de  Thu Nov 30 18:34:17 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Thu, 30 Nov 2006 18:34:17 +0100
Subject: [S3d-svn] r495 - trunk/apps/s3dosm
Message-ID: <200611301734.kAUHYHiN022099@sheep.berlios.de>

Author: dotslash
Date: 2006-11-30 18:34:15 +0100 (Thu, 30 Nov 2006)
New Revision: 495

Modified:
   trunk/apps/s3dosm/db.c
   trunk/apps/s3dosm/draw.c
   trunk/apps/s3dosm/main.c
   trunk/apps/s3dosm/s3dosm.h
Log:
- draw from db ... (not finished)

Modified: trunk/apps/s3dosm/db.c
===================================================================
--- trunk/apps/s3dosm/db.c	2006-11-28 12:46:45 UTC (rev 494)
+++ trunk/apps/s3dosm/db.c	2006-11-30 17:34:15 UTC (rev 495)
@@ -27,8 +27,6 @@
 #include <string.h> /* stdup() */
 #include <unistd.h>	/* unlink() */
 #include <stdlib.h>	/* atoi() */
-#define MAXQ	4096	
-#define QBUF	1024*128
 static char qbuf[QBUF];
 static int qlen=0;
 
@@ -37,7 +35,6 @@
 static char *dbFile=NULL;
 int db_exec(const char *query, sqlite3_callback callback, void *arg);
 static int db_getint(void *tagid, int argc, char **argv, char **azColName);
-/*static int callback(void *NotUsed, int argc, char **argv, char **azColName);*/
 
 /* TODO: remove '' for security reasons */
 char *clean_string(char *dirty)
@@ -153,16 +150,14 @@
 	  *((int *)tagid)=atoi(argv[0]);
   return 0;
 }
-/*
-static int callback(void *NotUsed, int argc, char **argv, char **azColName){
+int callback(void *NotUsed, int argc, char **argv, char **azColName){
   int i;
   for(i=0; i<argc; i++){
     printf("%s = %s\n", azColName[i], argv[i] ? argv[i] : "NULL");
   }
   printf("\n");
   return 0;
-}*/
-
+}
 int static db_really_exec(const char *query, sqlite3_callback callback, void *arg)
 {
 	char *zErrMsg = 0;

Modified: trunk/apps/s3dosm/draw.c
===================================================================
--- trunk/apps/s3dosm/draw.c	2006-11-28 12:46:45 UTC (rev 494)
+++ trunk/apps/s3dosm/draw.c	2006-11-30 17:34:15 UTC (rev 495)
@@ -25,7 +25,7 @@
 #include <math.h>	/* sin(), cos() */
 #include <stdio.h>	/* printf() */
 #include <string.h>	/* strcmp() */
-
+#include <stdlib.h> /* atoi() */
 struct vdata{
 	layer_t *layer;
 	double lonsum,latsum;
@@ -145,9 +145,47 @@
 	s3d_flags_on(oid,S3D_OF_VISIBLE);
 	return(0);
 }
+static int lastid=-1;
+int way_group(void *NotUsed, int argc, char **argv, char **azColName){
+	int i;
+	int id;
+	for(i=0; i<argc; i++){
+		if (argv[i])
+		if (0==strcmp(azColName[i],"way_id")){
+			id=(argv[i]==NULL)?-2:atoi(argv[i]);
+		}
+		printf("%s = %s\n", azColName[i], argv[i] ? argv[i] : "NULL"); 
+	}
+	if ((lastid!=id) && (id!=-1)) {
+		/* flush/draw the list, add new  */
+		printf("new list: %d\n",id);
+	} else {
+		/* add id to the list */
+	}
+	lastid=id;
+	sleep(1);
+		
+	return 0;
+}
+
+void draw_ways(char *filter)
+{
+	char query[MAXQ];
+	snprintf(query,MAXQ,"SELECT * FROM segment JOIN node WHERE %s AND (node.node_id=segment.node_to OR node.node_id=segment.node_from) ORDER BY way_id;",filter);
+/*	snprintf(query,MAXQ,"SELECT DISTINCT way_id,segment.layer_id,node_id,node_from,node_to,longitude,latitude FROM segment JOIN node WHERE %s AND (node.node_id=segment.node_to OR node.node_id=segment.node_from) ORDER BY way_id;",filter);*/
+	printf("query: %s\n",query);
+	db_exec(query, way_group,0);
+	printf("[done]\n");
+}
+void draw_osm()
+{
+	draw_ways("segment.layer_id='osm'");
+}
 void draw_all_layers()
 {
-	int i;
+	draw_osm();
+/*	int i;
 	for (i=0;i<layerset.n;i++)
 		draw_layer(layerset.p[i]);
+	*/
 }

Modified: trunk/apps/s3dosm/main.c
===================================================================
--- trunk/apps/s3dosm/main.c	2006-11-28 12:46:45 UTC (rev 494)
+++ trunk/apps/s3dosm/main.c	2006-11-30 17:34:15 UTC (rev 495)
@@ -38,7 +38,7 @@
 	if (db_create()) return(-1);
 	if (process_args(argc,argv)) return(-1);
 	nav_init();
-/*	draw_all_layers();*/
+	draw_all_layers();
 	nav_autocenter();
 	return(0);
 }

Modified: trunk/apps/s3dosm/s3dosm.h
===================================================================
--- trunk/apps/s3dosm/s3dosm.h	2006-11-28 12:46:45 UTC (rev 494)
+++ trunk/apps/s3dosm/s3dosm.h	2006-11-30 17:34:15 UTC (rev 495)
@@ -1,5 +1,9 @@
+#include <sqlite3.h>
 #define	ESIZE	637800		/* earth size */
 #define	RESCALE	1
+#define MAXQ	4096	
+#define QBUF	1024*128
+
 /* stack it */
 /* #define DB_STACK	1*/
 
@@ -141,6 +145,7 @@
 char *read_file(char *fname, int *fsize);
 int process_args(int argc, char **argv);
 /* db.c */
+int db_exec(const char *query, sqlite3_callback callback, void *arg);
 int db_insert_node(node_t *node);
 int db_insert_segment(segment_t *seg);
 int db_insert_way(way_t *way);
@@ -150,3 +155,4 @@
 int db_create();
 int db_insert_layer(char *layer_name);
 void db_flush();
+int callback(void *NotUsed, int argc, char **argv, char **azColName);



From dotslash at mail.berlios.de  Thu Nov 30 22:07:27 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Thu, 30 Nov 2006 22:07:27 +0100
Subject: [S3d-svn] r496 - in trunk: . apps/s3dosm
Message-ID: <200611302107.kAUL7RwK021245@sheep.berlios.de>

Author: dotslash
Date: 2006-11-30 22:07:27 +0100 (Thu, 30 Nov 2006)
New Revision: 496

Modified:
   trunk/
   trunk/apps/s3dosm/db.c
   trunk/apps/s3dosm/draw.c
   trunk/apps/s3dosm/main.c
   trunk/apps/s3dosm/nav.c
   trunk/apps/s3dosm/s3dosm.h
Log:
 r1184 at kero:  dotslash | 2006-11-30 22:07:20 +0100
 - draw with sqlite backend
 - some colors to the ways



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1169
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1184

Modified: trunk/apps/s3dosm/db.c
===================================================================
--- trunk/apps/s3dosm/db.c	2006-11-30 17:34:15 UTC (rev 495)
+++ trunk/apps/s3dosm/db.c	2006-11-30 21:07:27 UTC (rev 496)
@@ -223,11 +223,11 @@
 }
 int db_create()
 {
-	db_exec("CREATE TABLE tag (tag_id INT, tagkey TEXT, tagvalue TEXT);", NULL, 0);
-	db_exec("CREATE TABLE layer (layer_id INTEGER PRIMARY KEY, name TEXT, UNIQUE(layer_id));", NULL, 0);
 	db_exec("CREATE TABLE node (layer_id INT, node_id INTEGER PRIMARY KEY, latitude DOUBLE PRECISION, longitude DOUBLE PRECISION, altitude DOUBLE PRECISION, visible BOOLEAN, tag_id INT, UNIQUE(layer_id,node_id));",NULL,0);
 	db_exec("CREATE TABLE segment (layer_id INT, seg_id INTEGER PRIMARY KEY, node_from INT, node_to INT, tag_id INT, way_id INT,UNIQUE(layer_id,seg_id));", NULL, 0);
 	db_exec("CREATE TABLE way (layer_id INTEGER, way_id INTEGER PRIMARY KEY, tag_id INT, UNIQUE(layer_id,way_id));", NULL, 0);
+	db_exec("CREATE TABLE layer (layer_id INTEGER PRIMARY KEY, name TEXT, UNIQUE(layer_id));", NULL, 0);
+	db_exec("CREATE TABLE tag (tag_id INT, tagkey TEXT, tagvalue TEXT);", NULL, 0);
 	db_flush();
 	return(0);
 }

Modified: trunk/apps/s3dosm/draw.c
===================================================================
--- trunk/apps/s3dosm/draw.c	2006-11-30 17:34:15 UTC (rev 495)
+++ trunk/apps/s3dosm/draw.c	2006-11-30 21:07:27 UTC (rev 496)
@@ -25,18 +25,18 @@
 #include <math.h>	/* sin(), cos() */
 #include <stdio.h>	/* printf() */
 #include <string.h>	/* strcmp() */
-#include <stdlib.h> /* atoi() */
+#include <stdlib.h> /* atoi(),malloc(), calloc(), free() */
 struct vdata{
 	layer_t *layer;
-	double lonsum,latsum;
+	float lonsum,latsum;
 	int n;
 	int oid;
 	int vnum;
 };
 
-void calc_earth_to_eukl(double lon, double lat, double *x)
+void calc_earth_to_eukl(float lon, float lat, float *x)
 {
-	double la,lo;
+	float la,lo;
 	la=lat*M_PI/180.0;
 	lo=lon*M_PI/180.0;
 	x[0]=ESIZE*sin(lo) *cos(la);
@@ -50,7 +50,7 @@
 	
 	if (t->type==T_NODE)
 	{
-		double x[3];
+		float x[3];
 		node_t *node=NODE_T(t);
 		node->vid=v->vnum;
 		calc_earth_to_eukl(node->lon,node->lat,x);
@@ -90,80 +90,144 @@
 	}
 }
 
-void draw_add_segments(object_t *t, void *data)
-{/*
-	struct vdata *v=data;
-	tag_t *tag;
-	int color;
+
+static int lastid=-1;
+struct waylist {
+	int node_from,node_to;
+	int seg_id;
+	int node_from_l,node_from_r;	/* vertex id's for corners */
+	int node_to_l,node_to_r;
 	
-	if (t->type==T_SEGMENT)
+};
+struct nodelist {
+	float la,lo,alt;		
+};
+struct nodelist nodelist_p[2];
+int				nodelist_n=0;
+
+struct waylist 	*waylist_p=NULL;
+int 			waylist_n=0;
+int 			waylist_bufn=0;
+
+/* just fetches node information and puts it in some simple 6x float buffer */
+int insert_node(void *data, int argc, char **argv, char **azColName)
+{
+	struct nodelist *np=data;	/* get the nodepointer */
+	int i;
+	for(i=0; i<argc; i++){
+		if (argv[i]) {
+			if (0==strcmp(azColName[i],"longitude"))			np[nodelist_n].lo=strtod(argv[i],NULL);
+			else if (0==strcmp(azColName[i],"latitude"))		np[nodelist_n].la=strtod(argv[i],NULL);
+			else if (0==strcmp(azColName[i],"altitude"))		np[nodelist_n].alt=strtod(argv[i],NULL);
+		}
+	}
+	nodelist_n++;
+	return(0);
+}
+int select_waytype(void *data, int argc, char **argv, char **azColName)
+{
+	int i;
+	for(i=0; i<argc; i++){
+		if (argv[i]) {
+			if (0==strcmp(argv[i],"motorway"))				*((int *) data)=1;	
+			else if (0==strcmp(argv[i],"motorway_link"))	*((int *) data)=2;	
+			else if (0==strcmp(argv[i],"primary"))			*((int *) data)=3;	
+			else if (0==strcmp(argv[i],"secondary"))		*((int *) data)=4;	
+			else if (0==strcmp(argv[i],"residential"))		*((int *) data)=5;	
+		}
+	}
+	return(0);
+}
+/* draw waylist, clear the queue */
+void waylist_draw()
+{
+	char query[MAXQ];
+	float x[6];
+	int i,vert=0;
+	int way_obj;
+	int waytype=0;
+/*	printf("way: %d - %d segments\n",lastid,waylist_n);*/
+	way_obj=s3d_new_object();
+	if (lastid!=-1) {
+		snprintf(query,MAXQ,"SELECT tagvalue FROM tag WHERE tag_id=(SELECT tag_id FROM way WHERE way_id=%d) AND tagkey='highway';",lastid);
+		db_exec(query, select_waytype, &waytype);
+	}
+	switch (waytype)
 	{
-		node_t *from, *to;
-		segment_t *seg=SEGMENT_T(t);
-		from=NODE_T(avl_find(v->layer->tree,seg->from));
-		to=NODE_T(avl_find(v->layer->tree,seg->to));
+		case 1:s3d_push_material(way_obj,0.3,0.3,1,	0.3,0.3,1.0,	0.3,0.3,1.0);	/* motorway */
+		case 2:s3d_push_material(way_obj,0.5,0.5,0.8,	0.5,0.5,0.8,	0.5,0.5,0.8);	/* motorway_link*/
+		case 3:s3d_push_material(way_obj,1.0,0.6,0.2,	1.0,0.6,0.2, 	1.0,0.6,0.2);	/* primary */
+		case 4:s3d_push_material(way_obj,1.0,1.0,0.0,	1.0,1.0,0.0, 	1.0,1.0,0.0);	/* secondary */
+		case 5:s3d_push_material(way_obj,1.0,0.4,0.4,	1.0,0.4,0.4, 	1.0,0.4,0.4);	/* residential */
+		default:s3d_push_material(way_obj,1,1,1,		1,1,1,			1,1,1); /* default */
+	}
 
-		color=0;
-		/ * TODO: look at the ways using it, not the segments  * /
-		if (NULL!=(tag=tag_get(OBJECT_T(seg), "highway")))
+	for (i=0;i<waylist_n;i++)
+	{
+		float len;
+		nodelist_n=0;
+		snprintf(query,MAXQ,"SELECT longitude, latitude, altitude FROM node WHERE node_id IN (%d,%d);",waylist_p[i].node_from,waylist_p[i].node_to);
+		db_exec(query, insert_node,(void *)nodelist_p);
+		calc_earth_to_eukl(nodelist_p[0].lo,nodelist_p[0].la,x);
+		calc_earth_to_eukl(nodelist_p[1].lo,nodelist_p[1].la,x+3);
+		s3d_push_vertices(way_obj,x,2);
+		s3d_push_line(way_obj, vert,vert+1, 0);
+		vert+=2;
+		len=sqrt( (x[0]-x[3])*(x[0]-x[3]) + (x[1]-x[4])*(x[1]-x[4]) + (x[2]-x[5])*(x[2]-x[5]));
+		if (len>1000.0)
 		{
-			if (0==(strcmp(tag->v,"motorway"))) color=1;
-			else if (0==(strcmp(tag->v,"motorway_link"))) color=2;
-			else if (0==(strcmp(tag->v,"primary"))) color=3;
-			else if (0==(strcmp(tag->v,"secondary"))) color=4;
-			else if (0==(strcmp(tag->v,"residential"))) color=5;
+			printf("length of segment is %3.3f\n",len);
+			printf("segment id %d: from id %d to id %d\n",waylist_p[i].seg_id,waylist_p[i].node_from,waylist_p[i].node_to);
+			printf("segment no %d of way %d: %f %f %f -> ",i, lastid,nodelist_p[0].la, nodelist_p[0].lo, nodelist_p[0].alt);
+			printf("%f %f %f\n",nodelist_p[1].la, nodelist_p[1].lo, nodelist_p[1].alt);
 		}
-		if (from!=NULL && to!=NULL)
-		{
-			s3d_push_line(v->oid,from->vid,to->vid,color);
-			v->layer->visible=1;
-		}
-	}*/
+
+		s3d_link(way_obj,oidy);
+	}
+	s3d_flags_on(way_obj,S3D_OF_VISIBLE);
+	waylist_n=0;
+		
 }
-int draw_layer(layer_t *layer)
+void waylist_add(struct waylist *p)
 {
-	struct vdata v;
-	int oid;
-	oid=s3d_new_object();
-	s3d_link(oid,oidy);
-	v.layer=layer;
-	v.oid=oid;
-	v.vnum=0;
-	v.n=0;
-	v.lonsum=v.latsum=0;
-	s3d_push_material(oid,1,1,1,		1,1,1,		1,1,1); /* default */
-	s3d_push_material(oid,0.3,0.3,1,	0.3,0.3,1.0,	0.3,0.3,1.0);	/* motorway */
-	s3d_push_material(oid,0.5,0.5,0.8,	0.5,0.5,0.8,	0.5,0.5,0.8);	/* motorway_link*/
-	s3d_push_material(oid,1.0,1.0,0.0,	1.0,1.0,0.0, 	1.0,1.0,0.0);	/* primary */
-	s3d_push_material(oid,0.8,0.8,0.2,	0.8,0.8,0.2, 	0.8,0.8,0.2);	/* secondary */
-	s3d_push_material(oid,0.7,0.7,0.4,	0.7,0.7,0.4, 	0.7,0.7,0.4);	/* secondary */
-	/*
-	avl_tree_trav(layer->tree,draw_add_vertices,(void *)&v);
-	avl_tree_trav(layer->tree,draw_add_segments,(void *)&v);*/
-	layer->center_lo=(v.lonsum)/v.n;
-	layer->center_la=(v.latsum)/v.n;	
-	s3d_flags_on(oid,S3D_OF_VISIBLE);
-	return(0);
+	if (waylist_n>=waylist_bufn) {
+		waylist_bufn+=64;
+		waylist_p=realloc(waylist_p,sizeof(struct waylist)*waylist_bufn);
+	}
+	waylist_p[waylist_n].node_to= p->node_to;
+	waylist_p[waylist_n].node_from= p->node_from;
+	waylist_n++;
 }
-static int lastid=-1;
-int way_group(void *NotUsed, int argc, char **argv, char **azColName){
+
+int way_group(void *NotUsed, int argc, char **argv, char **azColName)
+{
 	int i;
-	int id;
+	int id=-1;
+	struct waylist p;
+	p.node_from=-1;
+	p.node_to=-1;
+	p.seg_id=-1;
 	for(i=0; i<argc; i++){
-		if (argv[i])
-		if (0==strcmp(azColName[i],"way_id")){
-			id=(argv[i]==NULL)?-2:atoi(argv[i]);
+		if (argv[i]) {
+			if (0==strcmp(azColName[i],"way_id"))				id=atoi(argv[i]);
+			else if (0==strcmp(azColName[i],"node_from"))		p.node_from=atoi(argv[i]);
+			else if (0==strcmp(azColName[i],"node_to"))			p.node_to=atoi(argv[i]);
+			else if (0==strcmp(azColName[i],"seg_id"))			p.seg_id=atoi(argv[i]);
 		}
-		printf("%s = %s\n", azColName[i], argv[i] ? argv[i] : "NULL"); 
+		/* 	printf("%s = %s\n", azColName[i], argv[i] ? argv[i] : "NULL");  */
 	}
+	if (p.node_from==p.node_to)	/* skip */
+		return(0);
 	if ((lastid!=id) && (id!=-1)) {
+		waylist_draw();
 		/* flush/draw the list, add new  */
-		printf("new list: %d\n",id);
+/*		printf("new list: %d\n",id);*/
+		waylist_add(&p);
 	} else {
 		/* add id to the list */
+		waylist_add(&p);
 	}
 	lastid=id;
-	sleep(1);
 		
 	return 0;
 }
@@ -171,15 +235,16 @@
 void draw_ways(char *filter)
 {
 	char query[MAXQ];
-	snprintf(query,MAXQ,"SELECT * FROM segment JOIN node WHERE %s AND (node.node_id=segment.node_to OR node.node_id=segment.node_from) ORDER BY way_id;",filter);
-/*	snprintf(query,MAXQ,"SELECT DISTINCT way_id,segment.layer_id,node_id,node_from,node_to,longitude,latitude FROM segment JOIN node WHERE %s AND (node.node_id=segment.node_to OR node.node_id=segment.node_from) ORDER BY way_id;",filter);*/
-	printf("query: %s\n",query);
+	snprintf(query,MAXQ,"SELECT * FROM segment WHERE %s ORDER BY way_id;",filter);
+/*	snprintf(query,MAXQ,"SELECT DISTINCT way_id,segment.layer_id,node_id,node_from,node_to,longitude,latitude FROM segment JOIN node WHERE %s AND (node.node_id=segment.node_to OR node.node_id=segment.node_from) ORDER BY way_id;",filter);
+	printf("query: %s\n",query);*/
 	db_exec(query, way_group,0);
+	waylist_draw(); /* last way */
 	printf("[done]\n");
 }
 void draw_osm()
 {
-	draw_ways("segment.layer_id='osm'");
+	draw_ways("segment.layer_id=(SELECT layer_id FROM layer WHERE name='osm')");
 }
 void draw_all_layers()
 {

Modified: trunk/apps/s3dosm/main.c
===================================================================
--- trunk/apps/s3dosm/main.c	2006-11-30 17:34:15 UTC (rev 495)
+++ trunk/apps/s3dosm/main.c	2006-11-30 21:07:27 UTC (rev 496)
@@ -38,8 +38,8 @@
 	if (db_create()) return(-1);
 	if (process_args(argc,argv)) return(-1);
 	nav_init();
+	nav_autocenter();
 	draw_all_layers();
-	nav_autocenter();
 	return(0);
 }
 int quit()

Modified: trunk/apps/s3dosm/nav.c
===================================================================
--- trunk/apps/s3dosm/nav.c	2006-11-30 17:34:15 UTC (rev 495)
+++ trunk/apps/s3dosm/nav.c	2006-11-30 21:07:27 UTC (rev 496)
@@ -1,5 +1,9 @@
 #include "s3dosm.h"
 #include <s3d.h>
+#include <string.h>	/* strcmp() */
+#include <stdlib.h>	/* strtod() */
+#include <stdio.h>	/* printf() */
+
 icon_t icons[ICON_NUM]={
 		{"objs/accesspoint.3ds",0},
 		{"objs/star.3ds",0},
@@ -25,27 +29,34 @@
 /* center to given latitude longitude */
 void nav_center(float la, float lo)
 {
-	double x[3];
+	float x[3];
 	s3d_rotate(oidy,0,-lo,0);
 	s3d_rotate(oidx,-(90-la),0,0);
 	calc_earth_to_eukl(lo,la,x);
 	s3d_translate(oidx,0,-ESIZE*RESCALE,0);
 	s3d_scale(oidx,RESCALE);
 }
-/* find some good center on our own */
-void nav_autocenter()
+
+int get_center(void *data, int argc, char **argv, char **azColName)
 {
+	float *med=(float *)data;
 	int i;
-	float la, lo, n;
-	la=lo=n=0;
-	for (i=0;i<layerset.n;i++)
-		if (layerset.p[i]->visible)
-		{
-			la+=layerset.p[i]->center_la;
-			lo+=layerset.p[i]->center_lo;
-			n+=1;
+	med[0]=0;
+	med[1]=0;
+	for(i=0; i<argc; i++){
+		if (argv[i]) {
+			if (0==strcmp(azColName[i],"la"))			med[0]=strtod(argv[i],NULL);
+			else if (0==strcmp(azColName[i],"lo"))		med[1]=strtod(argv[i],NULL);
 		}
-	if (n>0)
-		nav_center(la/n, lo/n);
-			
+	}
+	return(0);
 }
+/* find some good center on our own */
+void nav_autocenter()
+{
+	float med[2];
+	char query[]="SELECT avg(longitude) as lo, avg(latitude) as la FROM node; ";
+	db_exec(query,get_center,med);
+	nav_center(med[0],med[1]);
+	printf("center to %f,%f\n",med[0],med[1]);
+}

Modified: trunk/apps/s3dosm/s3dosm.h
===================================================================
--- trunk/apps/s3dosm/s3dosm.h	2006-11-30 17:34:15 UTC (rev 495)
+++ trunk/apps/s3dosm/s3dosm.h	2006-11-30 21:07:27 UTC (rev 496)
@@ -84,9 +84,9 @@
 
 struct _node_t {
 	object_t	 base;
-	double 		 lon;		/* longitude */
-	double 		 lat;		/* latitude */
-	double 		 alt;		/* altitude */
+	float 		 lon;		/* longitude */
+	float 		 lat;		/* latitude */
+	float 		 alt;		/* altitude */
 	char 		 visible;	/* node visible? 0 = no, 1 = yes, 2 = some sepcial object */
 	int 		 vid;		/* vertex id */
 /*	time_t time;*/
@@ -130,7 +130,7 @@
 layer_t *load_kismet_file(char *filename);
 /* draw.c */
 void draw_all_layers();
-void calc_earth_to_eukl(double lon, double lat, double *x);
+void calc_earth_to_eukl(float lon, float lat, float *x);
 int draw_layer(layer_t *layer);
 /* nav.c */
 void nav_init();



From dotslash at mail.berlios.de  Thu Nov 30 23:15:51 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Thu, 30 Nov 2006 23:15:51 +0100
Subject: [S3d-svn] r497 - in trunk: . libs3d server
Message-ID: <200611302215.kAUMFotY005314@sheep.berlios.de>

Author: dotslash
Date: 2006-11-30 23:15:50 +0100 (Thu, 30 Nov 2006)
New Revision: 497

Modified:
   trunk/
   trunk/configure.ac
   trunk/libs3d/config.h
   trunk/server/config.h
Log:
 r1186 at kero:  dotslash | 2006-11-30 23:15:46 +0100
 - disable debug by default, enable with --enable-debug
 - remove default DEBUG constants from configs



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1184
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1186

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2006-11-30 21:07:27 UTC (rev 496)
+++ trunk/configure.ac	2006-11-30 22:15:50 UTC (rev 497)
@@ -53,7 +53,7 @@
 DEVEL_CFLAGS=
 DEVEL_LDFLAGS=
 # XXX: switch default and help string for releases.
-AC_ARG_ENABLE([devel], AS_HELP_STRING([--disable-debug],[Disables debugging flags]), [enable_debug=$enableval], [enable_debug=yes])
+AC_ARG_ENABLE([debug], AS_HELP_STRING([--enable-debug],[Enables debugging flags]), [enable_debug=$enableval], [enable_debug=no])
 if test x$enable_debug = xyes; then
 	DEVEL_CFLAGS="$DEVEL_CFLAGS -ggdb -DDEBUG=LOW"
 	DEVEL_LDFLAGS="$DEVEL_LDFLAGS -ggdb"

Modified: trunk/libs3d/config.h
===================================================================
--- trunk/libs3d/config.h	2006-11-30 21:07:27 UTC (rev 496)
+++ trunk/libs3d/config.h	2006-11-30 22:15:50 UTC (rev 497)
@@ -29,6 +29,6 @@
 
 #define WITH_FONTCONFIG
 /*  our level of debug messages */
-#define DEBUG			LOW /*  standard debug level */
+/* #define DEBUG			LOW */ 	/*  standard debug level, should be set with compiler, e.g. -DDEBUG=LOW */
 #define SHM_MAX_IDLE	200	/* maximum wait for server timeout */
 #define	SEI_SS			200	/* seidel algorithm maximum point number */

Modified: trunk/server/config.h
===================================================================
--- trunk/server/config.h	2006-11-30 21:07:27 UTC (rev 496)
+++ trunk/server/config.h	2006-11-30 22:15:50 UTC (rev 497)
@@ -40,7 +40,7 @@
 #define HIGH	4
 #define	VHIGH	5
 /*  which is the minimum level of debugmessage we want to see? */
-#define DEBUG	LOW
+/* #define DEBUG	LOW */ 		/* should be set with compile, e.g. -DDEBUG=LOW */
 #ifndef DEBUG
 #define errds(...) /* nothing */
 #define s3dprintf(...) /* nothing */



From dotslash at mail.berlios.de  Thu Nov 30 23:47:08 2006
From: dotslash at mail.berlios.de (dotslash at BerliOS)
Date: Thu, 30 Nov 2006 23:47:08 +0100
Subject: [S3d-svn] r498 - in trunk: . apps/olsrs3d
Message-ID: <200611302247.kAUMl8KZ018120@sheep.berlios.de>

Author: dotslash
Date: 2006-11-30 23:47:08 +0100 (Thu, 30 Nov 2006)
New Revision: 498

Modified:
   trunk/
   trunk/apps/olsrs3d/Makefile.am
Log:
 r1188 at kero:  dotslash | 2006-11-30 23:47:04 +0100
 - profile yourself :D



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1186
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:1188

Modified: trunk/apps/olsrs3d/Makefile.am
===================================================================
--- trunk/apps/olsrs3d/Makefile.am	2006-11-30 22:15:50 UTC (rev 497)
+++ trunk/apps/olsrs3d/Makefile.am	2006-11-30 22:47:08 UTC (rev 498)
@@ -12,8 +12,9 @@
 	net.c \
 	search.c
 
-olsrs3d_CPPFLAGS=	-I$(top_srcdir)/libs3d -I$(top_srcdir)/libs3dw
+olsrs3d_CPPFLAGS=	-pg -I$(top_srcdir)/libs3d -I$(top_srcdir)/libs3dw
 olsrs3d_LDADD=		$(top_builddir)/libs3d/libs3d.la $(top_builddir)/libs3dw/libs3dw.la
+olsrs3d_LDFLAGS=	-pg
 
 EXTRA_DIST = \
 	output.sample TODO



