From ankon at berlios.de  Wed Feb  1 21:50:49 2006
From: ankon at berlios.de (ankon at berlios.de)
Date: Wed, 1 Feb 2006 21:50:49 +0100
Subject: [S3d-svn] r19 - in trunk: . config
Message-ID: <200602012050.k11Kon6N022671@sheep.berlios.de>

Author: ankon
Date: 2006-02-01 21:50:46 +0100 (Wed, 01 Feb 2006)
New Revision: 19

Added:
   trunk/config/simage.m4
Modified:
   trunk/configure.in
Log:
Check for simage.
simage.m4 is from simage package.



Added: trunk/config/simage.m4
===================================================================
--- trunk/config/simage.m4	2006-01-31 16:38:56 UTC (rev 18)
+++ trunk/config/simage.m4	2006-02-01 20:50:46 UTC (rev 19)
@@ -0,0 +1,109 @@
+# **************************************************************************
+# SIM_AC_HAVE_SIMAGE_IFELSE( IF-FOUND, IF-NOT-FOUND )
+#
+# Description:
+#   This macro locates the simage development system.  If it is found, the
+#   set of variables listed below are set up as described and made available
+#   to the configure script.
+#
+#   The $sim_ac_simage_desired variable can be set to false externally to
+#   make SoXt default to be excluded.
+#
+# Autoconf Variables:
+# > $sim_ac_simage_desired   true | false (defaults to true)
+# < $sim_ac_simage_avail     true | false
+# < $sim_ac_simage_cppflags  (extra flags the compiler needs for simage)
+# < $sim_ac_simage_ldflags   (extra flags the linker needs for simage)
+# < $sim_ac_simage_libs      (link libraries the linker needs for simage)
+# < $sim_ac_simage_version   (the libsimage version)
+#
+# Authors:
+#   Morten Eriksen <mortene at coin3d.org>
+#   Lars J. Aas <larsa at coin3d.org>
+#
+# TODO:
+# - rework variable name convention
+# - clean up shell scripting redundancy
+# - support debug symbols simage library
+#
+
+AC_DEFUN([SIM_AC_HAVE_SIMAGE_IFELSE],
+[AC_PREREQ([2.14a])
+
+# official variables
+sim_ac_simage_avail=false
+sim_ac_simage_cppflags=
+sim_ac_simage_ldflags=
+sim_ac_simage_libs=
+sim_ac_simage_version=
+
+# internal variables
+: ${sim_ac_simage_desired=true}
+sim_ac_simage_extrapath=
+
+AC_ARG_WITH(
+  simage,
+  AC_HELP_STRING([--with-simage=DIR],
+                 [use simage for loading texture files]),
+  [case $withval in
+   yes) sim_ac_simage_desired=true ;;
+   no)  sim_ac_simage_desired=false ;;
+   *)   sim_ac_simage_desired=true
+        sim_ac_simage_extrapath=$withval ;;
+  esac],
+  [])
+
+if $sim_ac_simage_desired; then
+  sim_ac_path=$PATH
+  test -z "$sim_ac_simage_extrapath" ||
+    sim_ac_path=$sim_ac_simage_extrapath/bin:$sim_ac_path
+  test x"$prefix" = xNONE ||
+    sim_ac_path=$sim_ac_path:$prefix/bin
+
+  AC_PATH_PROG(sim_ac_simage_configcmd, simage-config, false, $sim_ac_path)
+
+  if test "X$sim_ac_simage_configcmd" = "Xfalse"; then :; else
+    test -n "$CONFIG" &&
+      $sim_ac_simage_configcmd --alternate=$CONFIG >/dev/null 2>/dev/null &&
+      sim_ac_simage_configcmd="$sim_ac_simage_configcmd --alternate=$CONFIG"
+  fi
+
+  if $sim_ac_simage_configcmd; then
+    sim_ac_simage_cppflags=`$sim_ac_simage_configcmd --cppflags`
+    sim_ac_simage_ldflags=`$sim_ac_simage_configcmd --ldflags`
+    sim_ac_simage_libs=`$sim_ac_simage_configcmd --libs`
+    sim_ac_simage_version=`$sim_ac_simage_configcmd --version`
+    AC_CACHE_CHECK([whether the simage library is available],
+      sim_cv_simage_avail,
+      [sim_ac_save_cppflags=$CPPFLAGS
+      sim_ac_save_ldflags=$LDFLAGS
+      sim_ac_save_libs=$LIBS
+      CPPFLAGS="$CPPFLAGS $sim_ac_simage_cppflags"
+      LDFLAGS="$LDFLAGS $sim_ac_simage_ldflags"
+      LIBS="$sim_ac_simage_libs $LIBS"
+      AC_TRY_LINK(
+        [#include <simage.h>],
+        [(void)simage_read_image(0L, 0L, 0L, 0L);],
+        [sim_cv_simage_avail=true],
+        [sim_cv_simage_avail=false])
+      CPPFLAGS=$sim_ac_save_cppflags
+      LDFLAGS=$sim_ac_save_ldflags
+      LIBS=$sim_ac_save_libs
+    ])
+    sim_ac_simage_avail=$sim_cv_simage_avail
+  else
+    locations=`IFS=:
+               for p in $sim_ac_path; do echo " -> $p/simage-config"; done`
+    AC_MSG_WARN([cannot find 'simage-config' at any of these locations:
+$locations])
+  fi
+fi
+
+if $sim_ac_simage_avail; then
+  ifelse([$1], , :, [$1])
+else
+  ifelse([$2], , :, [$2])
+fi
+])
+
+# EOF **********************************************************************

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-01-31 16:38:56 UTC (rev 18)
+++ trunk/configure.in	2006-02-01 20:50:46 UTC (rev 19)
@@ -91,7 +91,6 @@
 dnl ##################################### EXAMPLES / APPS ######################
 
 AC_CHECK_LIB(gps, main, [HAVE_GPS=yes], [HAVE_GPS=no])
-AM_CONDITIONAL([BUILD_S3DGPS], [test x$HAVE_GPS = xyes])
 if test x$HAVE_GPS = xyes; then
 	GPS_CFLAGS=
 	GPS_LIBS=-lgps	
@@ -101,9 +100,18 @@
 	WARNS="$WARNS
  ### Sorry, you lack the gps library to compile the s3dgps application."
 fi
+SIM_AC_HAVE_SIMAGE_IFELSE([
+	SIMAGE_CFLAGS=$sim_ac_simage_cppflags
+	SIMAGE_LIBS="$sim_ac_simage_ldflags $sim_ac_simage_libs"
+	AC_SUBST(SIMAGE_CFLAGS)
+	AC_SUBST(SIMAGE_LIBS)
+],[
+	WARNS="$WARNS
+ ### Sorry, you lack the simage library to compile the s3dgps application."
+])
+AM_CONDITIONAL([BUILD_S3DGPS], [test x$HAVE_GPS = xyes && test x$sim_ac_simage_avail = xtrue])
 
 AC_CHECK_LIB(Xtst, main, [HAVE_Xtst=yes], [HAVE_Xtst=no], [$X_PRE_LIBS $X_LIBS $X_EXTRA_LIBS])
-AM_CONDITIONAL([BUILD_X11GATE], [test x$HAVE_Xtst = xyes])
 if test x$HAVE_Xtst = xyes; then
 	XTST_CFLAGS=
 	XTST_LIBS="$X_PRE_LIBS $X_LIBS $X_EXTRA_LIBS -lXtst"
@@ -113,6 +121,7 @@
 	WARNS="$WARNS
  ### Sorry, you lack the Xtest Extension to compile the s3d to X11 Gateway."
 fi
+AM_CONDITIONAL([BUILD_X11GATE], [test x$HAVE_Xtst = xyes])
 
 HAVE_PTHREAD
 



From ankon at berlios.de  Wed Feb  1 21:51:06 2006
From: ankon at berlios.de (ankon at berlios.de)
Date: Wed, 1 Feb 2006 21:51:06 +0100
Subject: [S3d-svn] r20 - trunk/apps/s3dgps
Message-ID: <200602012051.k11Kp6eI022704@sheep.berlios.de>

Author: ankon
Date: 2006-02-01 21:51:05 +0100 (Wed, 01 Feb 2006)
New Revision: 20

Modified:
   trunk/apps/s3dgps/Makefile.am
Log:
Use SIMAGE.



Modified: trunk/apps/s3dgps/Makefile.am
===================================================================
--- trunk/apps/s3dgps/Makefile.am	2006-02-01 20:50:46 UTC (rev 19)
+++ trunk/apps/s3dgps/Makefile.am	2006-02-01 20:51:05 UTC (rev 20)
@@ -3,8 +3,8 @@
 s3dgps_SOURCES =  \
 	s3dgps.c
 
-s3dgps_CPPFLAGS=	-I${top_srcdir}/client @GPS_CFLAGS@
-s3dgps_LDADD=		${top_builddir}/client/libs3d.la @GPS_LIBS@
+s3dgps_CPPFLAGS=	-I${top_srcdir}/client @GPS_CFLAGS@ @SIMAGE_CFLAGS@
+s3dgps_LDADD=		${top_builddir}/client/libs3d.la @GPS_LIBS@ @SIMAGE_LIBS@
 
 EXTRA_DIST =  \
 	arrow.3ds



From marec at berlios.de  Fri Feb  3 14:26:23 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 3 Feb 2006 14:26:23 +0100
Subject: [S3d-svn] r21 - trunk/apps/olsrs3d
Message-ID: <200602031326.k13DQNle001391@sheep.berlios.de>

Author: marec
Date: 2006-02-03 14:26:01 +0100 (Fri, 03 Feb 2006)
New Revision: 21

Modified:
   trunk/apps/olsrs3d/process.c
Log:
comments added to olsr3d source

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-01 20:51:05 UTC (rev 20)
+++ trunk/apps/olsrs3d/process.c	2006-02-03 13:26:01 UTC (rev 21)
@@ -8,12 +8,24 @@
 float 	*adj,*new_adj;
 int		*adj_obj,*new_adj_obj;
 
+
+/***
+ *
+ * create new or alter connection between 2 nodes
+ *
+ *   n1   =>   node id 1
+ *   n2   =>   node id 2
+ *   l    =>   length ? ETX ?
+ *
+ ***/
+
 int add_adj(int n1, int n2, float l)
 {
 	int o,i,j;
 	i=n1<n2?n1:n2;
 	j=n1>n2?n1:n2;
 	if ((n1<max) && (n2<max))
+		/* connection already exists */
 		o=adj_obj[i*max+j];
 	else o=-1;
 	if (o==-1)
@@ -27,23 +39,34 @@
 		s3d_push_polygon(o,3,1,2,0);
 
 /*		printf("new adjacent object %d between %d and %d\n",o,i,j);*/
-	} 
+	}
 	new_adj_obj[i*new_max+j]=o;
 	new_adj[i*new_max+j]=l;
 	new_adj[j*new_max+i]=l;
-		
+
 	return(0);
 }
+
+
+
+/***
+ *
+ * redo all connections between nodes ?
+ *
+ ***/
+
 int resize_adj()
 {
 	int i,ind;
-	new_adj=	realloc(new_adj,	sizeof(float)*new_max*new_max);
+	new_adj=realloc(new_adj,sizeof(float)*new_max*new_max);
 	new_adj_obj=realloc(new_adj_obj,sizeof(int)*new_max*new_max);
+
 	if (new_max>1)
-	{		
+	{
+		/* leave out one ? */
 		for (i=(new_max-2);i>=0;i--)
 		{
-			memmove(new_adj+	new_max*i,new_adj	+(new_max-1)*i,sizeof(float)*(new_max-1));
+			memmove(new_adj+new_max*i,new_adj+(new_max-1)*i,sizeof(float)*(new_max-1));
 			memmove(new_adj_obj+new_max*i,new_adj_obj+(new_max-1)*i,sizeof(float)*(new_max-1));
 			ind=i*new_max+(new_max-1);				/* the right edge */
 			new_adj[ind]=0.0f;
@@ -57,39 +80,57 @@
 	new_adj_obj[new_max*new_max-1]=-1;			/* the right bottom corner */
 	return(0);
 }
+
+
+
+/***
+ *
+ * get node id or create new node if node string could not be found
+ *
+ *   *str   =>   node description
+ *
+ *   return node id
+ *
+ ***/
+
 int get_node_num(char *str)
 {
-	int i,j;
-	float f;
+	int i,j;   /* inc vars */
+	float f;   /* where does it get its value from ? */
+
 	for (i=0;i<new_max;i++)
 	{
 		if (strncmp(node[i].name,str,NAMEMAX)==0)
 		{
 			return(i); /* return the index */
 		}
-	} 
-	
+	}
+
 	/* i==new_max now */
 	new_max++;
 
 	node=realloc(node,sizeof(struct t_node)*new_max);
-	
+
+	/* create new node */
 	strncpy(node[i].name,str,NAMEMAX);
 	node[i].obj=s3d_clone(obj);
 	s3d_flags_on(node[i].obj,S3D_OF_VISIBLE);
-	
+
+	/* create node text and attach (link) it to the node */
 	node[i].s_obj=s3d_draw_string(str,&f);
 	s3d_link(node[i].s_obj, node[i].obj);
 	s3d_translate(node[i].s_obj,-f/2,-2,0);
 	/*s3d_rotate(node[i].s_obj,0,180,0);*/
 	s3d_flags_on(node[i].s_obj,S3D_OF_VISIBLE);
-	
+
 	printf("new %s [%d], obj nr. %d - %d\n",str,i,node[i].obj,node[i].s_obj);
+
 	for (j=0;j<3;j++)
 	{
 		node[i].pos[j]=((float)2.0*rand())/RAND_MAX-1.0;
 		node[i].mov[j]=0.0;
 	}
+
 	resize_adj();
 
 	return(i);
@@ -102,6 +143,7 @@
 	int  	*swap_adj_obj;
 	char	nc_str[20];
 	printf("committing input ... \n");
+
 	/* remove old adjacent objects ... */
 	for (i=0;i<max;i++)
 		for (j=i+1;j<max;j++)
@@ -115,10 +157,13 @@
 	/* swap the matrices */
 	swap_adj=adj;
 	swap_adj_obj=adj_obj;
-	
+
 	adj=new_adj;
 	adj_obj=new_adj_obj;
-	
+
+
+	/* if we have more nodes redraw node count */
+	/* what if we have less nodes ?? */
 	if (new_max>max)
 	{
 		swap_adj=realloc(swap_adj,sizeof(float)*new_max*new_max);
@@ -132,6 +177,8 @@
 		s3d_translate(node_count,left*3.0,-bottom*3.0-0.2,-3.0);
 
 	}
+
+
 	new_adj=swap_adj;
 	new_adj_obj=swap_adj_obj;
 	/* setting new maxsize */
@@ -167,7 +214,7 @@
 				}
 				dn++;
 				break;
-			case '}':	
+			case '}':
 				if (!(dn%2))	/* we don't end the input inside of strings ... this won't happen anyway, I guess */
 					commit_input();
 				break;
@@ -179,7 +226,7 @@
 /*		printf("######link from [%s] to [%s], label [%s]\n",data[0],data[1],data[2]);*/
 		n1=get_node_num(data[0]);
 		n2=get_node_num(data[1]);
-		f=5.0+strtod(data[2],NULL)/10.0;
+		f=10.0+strtod(data[2],NULL)/10.0;
 /*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
 		if (f>=5) /* just to prevent ascii to float converting inconsistency ... */
 			add_adj(n1,n2,f);



From marec at berlios.de  Fri Feb  3 14:27:02 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 3 Feb 2006 14:27:02 +0100
Subject: [S3d-svn] r22 - trunk/apps/olsrs3d
Message-ID: <200602031327.k13DR2Bw001673@sheep.berlios.de>

Author: marec
Date: 2006-02-03 14:26:47 +0100 (Fri, 03 Feb 2006)
New Revision: 22

Modified:
   trunk/apps/olsrs3d/main.c
Log:
comments added to olsr3d source

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-03 13:26:01 UTC (rev 21)
+++ trunk/apps/olsrs3d/main.c	2006-02-03 13:26:47 UTC (rev 22)
@@ -13,6 +13,17 @@
 float bottom=-1.0;
 float left=-1.0;
 
+/***
+ *
+ * calculate distance between 2 vectors => http://en.wikipedia.org/wiki/Euclidean_distance
+ *
+ *   p1   =>   vector of node 1
+ *   p2   =>   vector of node 2
+ *
+ *   return distance
+ *
+ ***/
+
 float dist(float p1[], float p2[])
 {
 	float p[3];
@@ -22,6 +33,21 @@
 	return (sqrt(p[0]*p[0]   +  p[1]*p[1]  +  p[2]*p[2]));
 
 }
+
+
+
+/***
+ *
+ * calculate distance between 2 vectors and substract vector1 from vector2
+ *  => http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction
+ *
+ *   p1   =>   vector of node 1
+ *   p2   =>   vector of node 2
+ *
+ *   return distance
+ *
+ ***/
+
 float dirt(float p1[], float p2[], float p3[])
 {
 	float d;
@@ -36,6 +62,20 @@
 	}
 	return(d);
 }
+
+
+
+/***
+ *
+ * calculate new movement of node by adding the product of the factor and the vector to the movement vector
+ *  => http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication
+ *
+ *   mov  =>   current mov vector
+ *   p    =>   vector of node
+ *   fac  =>   factor which is
+ *
+ ***/
+
 void mov_add(float mov[], float p[], float fac)
 {
 /*	if (fac>1000)
@@ -45,6 +85,9 @@
 	mov[1]+=fac*p[1];
 	mov[2]+=fac*p[2];
 }
+
+
+
 void mainloop()
 {
 	int i,j,o,r;
@@ -101,17 +144,17 @@
 				s3d_push_vertex(o,node[i].pos[0],	 node[i].pos[1],node[i].pos[2]);
 				s3d_push_vertex(o,node[i].pos[0]+0.2,node[i].pos[1],node[i].pos[2]);
 				s3d_push_vertex(o,node[i].pos[0]-0.2,node[i].pos[1],node[i].pos[2]);
-				
+
 				s3d_push_vertex(o,node[j].pos[0],	 node[j].pos[1],node[j].pos[2]);
 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]+0.2,node[j].pos[2]);
 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]-0.2,node[j].pos[2]);
-				
+
 /*				s3d_push_polygon(o,0,4,5,0);
 				s3d_push_polygon(o,3,1,2,0);*/
 			}
 	}
-	while (0!=(r=net_main())) 
-		if (r==-1) 
+	while (0!=(r=net_main()))
+		if (r==-1)
 		{
 			s3d_quit();
 			break;
@@ -155,7 +198,7 @@
 	if (!net_init(host))
 	{
 
-		if (!s3d_init(&argc,&argv,"olsrs3d")) 
+		if (!s3d_init(&argc,&argv,"olsrs3d"))
 		{
 			s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);
 			if (s3d_select_font("vera"))
@@ -167,7 +210,7 @@
 			s3d_scale(mesh,0.15);
 
 			s3d_mainloop(mainloop);
-			s3d_quit(); 
+			s3d_quit();
 			net_quit();
 			process_quit();
 		}



From marec at berlios.de  Fri Feb  3 17:13:50 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 3 Feb 2006 17:13:50 +0100
Subject: [S3d-svn] r23 - trunk/apps/olsrs3d
Message-ID: <200602031613.k13GDoun008510@sheep.berlios.de>

Author: marec
Date: 2006-02-03 17:13:48 +0100 (Fri, 03 Feb 2006)
New Revision: 23

Modified:
   trunk/apps/olsrs3d/main.c
Log:
svn tests

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-03 13:26:47 UTC (rev 22)
+++ trunk/apps/olsrs3d/main.c	2006-02-03 16:13:48 UTC (rev 23)
@@ -1,11 +1,15 @@
 #include <stdio.h>
 #include <s3d.h>
-#include <unistd.h>	/* sleep() */
-#include <string.h> /* strncpy() */
-#include <math.h>	/* sqrt() */
+#include <unistd.h>		/* sleep() */
+#include <string.h> 		/* strncpy() */
+#include <math.h>		/* sqrt() */
+#include <getopt.h>		/*  getopt() */
 #include "olsrs3d.h"
 #define SPEED		10.0
 
+int DEBUG = 0;
+char OLSR_HOST[256];
+
 int node_count=-1;
 int alpha=0;
 int obj,mesh;
@@ -13,8 +17,28 @@
 float bottom=-1.0;
 float left=-1.0;
 
+
+
 /***
  *
+ * print usage info
+ *
+ ***/
+
+void print_usage( void ) {
+
+	printf( "Usage is olsrs3d [options]\n" );
+	printf( "Options:\n" );
+	printf( "   -?\tprint this short help\n" );
+	printf( "   -d\tenable debug mode\n" );
+	printf( "   -h\tconnect to olsr node [default: localhost]\n" );
+
+}
+
+
+
+/***
+ *
  * calculate distance between 2 vectors => http://en.wikipedia.org/wiki/Euclidean_distance
  *
  *   p1   =>   vector of node 1
@@ -185,17 +209,50 @@
 		s3d_flags_on(mesh,S3D_OF_VISIBLE);
 	}
 }
-int main(int argc, char **argv)
-{
 
-	char host[256];
-    if (argc > 1) {
-		strncpy(host,argv[1],256);
-    } else {
-		strncpy(host,"127.0.0.1",256);
+
+
+int main( int argc, char *argv[] ) {
+
+	char s3d_options[256];
+
+	strncpy(OLSR_HOST,"127.0.0.1",256);
+
+	while ( ( argc > 1 ) && ( argv[1][0] == '-' ) ) {
+
+		switch ( argv[1][1] ) {
+
+			case 'd':
+				DEBUG = 1;
+				printf( "debug mode enabled ...\n" );
+				break;
+
+			case '?':
+				print_usage();
+				return (0);
+
+			case 'h':
+				strncpy(OLSR_HOST,argv[1][1],256);
+				break;
+
+			default:
+				printf( "Bad option %s\n", argv[1] );
+				print_usage();
+				return (0);
+
+		}
+
+		++argv;
+		--argc;
+
 	}
-	process_init(host);
-	if (!net_init(host))
+
+	printf( "OLSR_HOST: %s\n", OLSR_HOST );
+
+	return (0);
+
+	process_init(OLSR_HOST);
+	if (!net_init(OLSR_HOST))
 	{
 
 		if (!s3d_init(&argc,&argv,"olsrs3d"))



From marec at berlios.de  Fri Feb  3 19:20:39 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 3 Feb 2006 19:20:39 +0100
Subject: [S3d-svn] r24 - trunk/apps/olsrs3d
Message-ID: <200602031820.k13IKdeV018596@sheep.berlios.de>

Author: marec
Date: 2006-02-03 19:20:24 +0100 (Fri, 03 Feb 2006)
New Revision: 24

Modified:
   trunk/apps/olsrs3d/main.c
Log:
getopts

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-03 16:13:48 UTC (rev 23)
+++ trunk/apps/olsrs3d/main.c	2006-02-03 18:20:24 UTC (rev 24)
@@ -215,12 +215,13 @@
 int main( int argc, char *argv[] ) {
 
 	char s3d_options[256];
+	int optchar;
 
-	strncpy(OLSR_HOST,"127.0.0.1",256);
+	strncpy( OLSR_HOST, "127.0.0.1", 256 );
 
-	while ( ( argc > 1 ) && ( argv[1][0] == '-' ) ) {
+	while ( ( optchar = getopt ( argc, argv, "d?h:" ) ) != -1 ) {
 
-		switch ( argv[1][1] ) {
+		switch ( optchar ) {
 
 			case 'd':
 				DEBUG = 1;
@@ -232,19 +233,16 @@
 				return (0);
 
 			case 'h':
-				strncpy(OLSR_HOST,argv[1][1],256);
+				strncpy( OLSR_HOST, optarg, 256 );
 				break;
 
 			default:
-				printf( "Bad option %s\n", argv[1] );
+				printf( "Bad option %s\n", optarg );
 				print_usage();
 				return (0);
 
 		}
 
-		++argv;
-		--argc;
-
 	}
 
 	printf( "OLSR_HOST: %s\n", OLSR_HOST );



From marec at berlios.de  Sun Feb  5 01:50:38 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sun, 5 Feb 2006 01:50:38 +0100
Subject: [S3d-svn] r25 - trunk/apps/olsrs3d
Message-ID: <200602050050.k150ocZn007828@sheep.berlios.de>

Author: marec
Date: 2006-02-05 01:50:18 +0100 (Sun, 05 Feb 2006)
New Revision: 25

Modified:
   trunk/apps/olsrs3d/main.c
Log:
s3d options

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-03 18:20:24 UTC (rev 24)
+++ trunk/apps/olsrs3d/main.c	2006-02-05 00:50:18 UTC (rev 25)
@@ -7,8 +7,8 @@
 #include "olsrs3d.h"
 #define SPEED		10.0
 
-int DEBUG = 0;
-char OLSR_HOST[256];
+int Debug = 0;
+char Olsr_host[256];
 
 int node_count=-1;
 int alpha=0;
@@ -27,11 +27,11 @@
 
 void print_usage( void ) {
 
-	printf( "Usage is olsrs3d [options]\n" );
-	printf( "Options:\n" );
-	printf( "   -?\tprint this short help\n" );
+	printf( "Usage is olsrs3d [options] [-- [s3d options]]\n" );
+	printf( "olsrs3d options:\n" );
+	printf( "   -h\tprint this short help\n" );
 	printf( "   -d\tenable debug mode\n" );
-	printf( "   -h\tconnect to olsr node [default: localhost]\n" );
+	printf( "   -H\tconnect to olsr node [default: localhost]\n" );
 
 }
 
@@ -214,30 +214,23 @@
 
 int main( int argc, char *argv[] ) {
 
-	char s3d_options[256];
 	int optchar;
+	strncpy( Olsr_host, "127.0.0.1", 256 );
 
-	strncpy( OLSR_HOST, "127.0.0.1", 256 );
+	while ( ( optchar = getopt ( argc, argv, "dhH:" ) ) != -1 ) {
 
-	while ( ( optchar = getopt ( argc, argv, "d?h:" ) ) != -1 ) {
-
 		switch ( optchar ) {
 
 			case 'd':
-				DEBUG = 1;
-				printf( "debug mode enabled ...\n" );
+				Debug = 1;
 				break;
 
-			case '?':
-				print_usage();
-				return (0);
-
-			case 'h':
-				strncpy( OLSR_HOST, optarg, 256 );
+			case 'H':
+				strncpy( Olsr_host, optarg, 256 );
 				break;
 
+			case 'h':
 			default:
-				printf( "Bad option %s\n", optarg );
 				print_usage();
 				return (0);
 
@@ -245,12 +238,18 @@
 
 	}
 
-	printf( "OLSR_HOST: %s\n", OLSR_HOST );
+	if ( Debug ) printf( "debug mode enabled ...\n" );
 
-	return (0);
+	/* delete olsrs3d options */
+	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;   /* optind may point to ip addr of '-H' */
+	optind--;
+	argv[optind] = argv[0];   /* save program path */
+	argc -= optind;   /* jump over olsrs3d options */
+	argv += optind;
 
-	process_init(OLSR_HOST);
-	if (!net_init(OLSR_HOST))
+
+	process_init(Olsr_host);
+	if (!net_init(Olsr_host))
 	{
 
 		if (!s3d_init(&argc,&argv,"olsrs3d"))



From nichtsnutz at berlios.de  Sun Feb  5 23:43:44 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sun, 5 Feb 2006 23:43:44 +0100
Subject: [S3d-svn] r26 - trunk/apps/olsrs3d
Message-ID: <200602052243.k15Mhiua027971@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-05 23:42:38 +0100 (Sun, 05 Feb 2006)
New Revision: 26

Modified:
   trunk/apps/olsrs3d/main.c
Log:
fix argv for s3d_init()

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-05 00:50:18 UTC (rev 25)
+++ trunk/apps/olsrs3d/main.c	2006-02-05 22:42:38 UTC (rev 26)
@@ -210,8 +210,46 @@
 	}
 }
 
+/*
+int main(int argc, char **argv)
+{
 
+	char host[256];
+    if (argc > 2) {
+		strncpy(host,argv[1],256);
+    } else {
+		strncpy(host,"127.0.0.1",256);
+	}
+	process_init(host);
+	if (!net_init(host))
+	{
 
+		if (!s3d_init(&argc,&argv,"olsrs3d")) 
+		{
+			int i;
+			for(i=0;i<argc;i++) {
+				printf("arg %d = %s\n",i,argv[i]);
+			}
+			s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);
+			if (s3d_select_font("vera"))
+				printf("font not found\n");
+
+			obj=s3d_import_3ds_file("accesspoint.3ds");
+			mesh=s3d_import_3ds_file("meshnode.3ds");
+			s3d_link(mesh,0);
+			s3d_scale(mesh,0.15);
+
+			s3d_mainloop(mainloop);
+			s3d_quit(); 
+			net_quit();
+			process_quit();
+		}
+	}
+	return(0);
+}
+*/
+
+
 int main( int argc, char *argv[] ) {
 
 	int optchar;
@@ -241,17 +279,19 @@
 	if ( Debug ) printf( "debug mode enabled ...\n" );
 
 	/* delete olsrs3d options */
-	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;   /* optind may point to ip addr of '-H' */
+	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;		/* optind may point to ip addr of '-H' */
 	optind--;
-	argv[optind] = argv[0];   /* save program path */
-	argc -= optind;   /* jump over olsrs3d options */
+	argv[optind] = argv[0];		/* save program path */
+	argc -= optind;					/* jump over olsrs3d options */
 	argv += optind;
 
-
+	/* push the ip addr back in the array */
+	argv[argc] = Olsr_host;
+	argc++;
+	
 	process_init(Olsr_host);
 	if (!net_init(Olsr_host))
 	{
-
 		if (!s3d_init(&argc,&argv,"olsrs3d"))
 		{
 			s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);



From nichtsnutz at berlios.de  Mon Feb  6 16:44:39 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Mon, 6 Feb 2006 16:44:39 +0100
Subject: [S3d-svn] r27 - trunk/apps/olsrs3d
Message-ID: <200602061544.k16FidN0013756@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-06 16:44:37 +0100 (Mon, 06 Feb 2006)
New Revision: 27

Modified:
   trunk/apps/olsrs3d/main.c
Log:
fix optind for parse_args in io.c

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-05 22:42:38 UTC (rev 26)
+++ trunk/apps/olsrs3d/main.c	2006-02-06 15:44:37 UTC (rev 27)
@@ -210,46 +210,6 @@
 	}
 }
 
-/*
-int main(int argc, char **argv)
-{
-
-	char host[256];
-    if (argc > 2) {
-		strncpy(host,argv[1],256);
-    } else {
-		strncpy(host,"127.0.0.1",256);
-	}
-	process_init(host);
-	if (!net_init(host))
-	{
-
-		if (!s3d_init(&argc,&argv,"olsrs3d")) 
-		{
-			int i;
-			for(i=0;i<argc;i++) {
-				printf("arg %d = %s\n",i,argv[i]);
-			}
-			s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);
-			if (s3d_select_font("vera"))
-				printf("font not found\n");
-
-			obj=s3d_import_3ds_file("accesspoint.3ds");
-			mesh=s3d_import_3ds_file("meshnode.3ds");
-			s3d_link(mesh,0);
-			s3d_scale(mesh,0.15);
-
-			s3d_mainloop(mainloop);
-			s3d_quit(); 
-			net_quit();
-			process_quit();
-		}
-	}
-	return(0);
-}
-*/
-
-
 int main( int argc, char *argv[] ) {
 
 	int optchar;
@@ -278,17 +238,16 @@
 
 	if ( Debug ) printf( "debug mode enabled ...\n" );
 
-	/* delete olsrs3d options */
-	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;		/* optind may point to ip addr of '-H' */
+	// delete olsrs3d options
+	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;		// optind may point to ip addr of '-H'
 	optind--;
-	argv[optind] = argv[0];		/* save program path */
-	argc -= optind;					/* jump over olsrs3d options */
+	argv[optind] = argv[0];		// save program path
+	argc -= optind;					// jump over olsrs3d options
 	argv += optind;
 
-	/* push the ip addr back in the array */
-	argv[argc] = Olsr_host;
-	argc++;
-	
+	// set extern int optind = 0 for parse_args in io.c
+	optind = 0;
+
 	process_init(Olsr_host);
 	if (!net_init(Olsr_host))
 	{



From marec at berlios.de  Tue Feb  7 19:01:56 2006
From: marec at berlios.de (marec at berlios.de)
Date: Tue, 7 Feb 2006 19:01:56 +0100
Subject: [S3d-svn] r28 - trunk/apps/olsrs3d
Message-ID: <200602071801.k17I1u73010977@sheep.berlios.de>

Author: marec
Date: 2006-02-07 19:01:46 +0100 (Tue, 07 Feb 2006)
New Revision: 28

Added:
   trunk/apps/olsrs3d/output.sample
Log:
olsr output sample

Added: trunk/apps/olsrs3d/output.sample
===================================================================
--- trunk/apps/olsrs3d/output.sample	2006-02-06 15:44:37 UTC (rev 27)
+++ trunk/apps/olsrs3d/output.sample	2006-02-07 18:01:46 UTC (rev 28)
@@ -0,0 +1,2419 @@
+digraph topology
+{
+"104.131.131.1" -> "104.131.21.1"[label="0.00", style=dashed];
+"104.131.131.1" -> "104.131.9.1"[label="0.00", style=dashed];
+"104.131.131.1" -> "104.131.131.2"[label="61.00", style=solid];
+"104.131.131.2"[shape=box];
+"104.131.131.1" -> "104.131.0.3"[label="0.00", style=solid];
+"104.131.0.3"[shape=box];
+"104.131.131.1" -> "104.131.131.99"[label="2.68", style=solid];
+"104.131.131.99"[shape=box];
+"104.131.131.1" -> "104.131.131.4"[label="4.26", style=solid];
+"104.131.131.4"[shape=box];
+"104.131.131.1" -> "104.131.0.28"[label="0.00", style=solid];
+"104.131.0.28"[shape=box];
+"104.131.131.1" -> "104.129.29.29"[label="0.00", style=dashed];
+"104.129.0.32" -> "104.129.17.4"[label="3.22"];
+"104.129.0.33" -> "104.129.17.4"[label="1.03"];
+"104.131.2.1" -> "104.130.11.66"[label="13.62"];
+"104.131.2.1" -> "104.131.21.1"[label="30.53"];
+"104.131.2.1" -> "104.131.9.1"[label="3.36"];
+"104.131.2.1" -> "104.131.2.2"[label="1.96"];
+"104.192.192.225" -> "104.0.192.129"[label="3.79"];
+"104.192.192.225" -> "104.192.192.1"[label="3.97"];
+"104.192.192.225" -> "104.192.192.33"[label="4.41"];
+"104.192.192.225" -> "104.192.192.66"[label="3.57"];
+"104.192.192.225" -> "104.192.192.99"[label="4.20"];
+"104.192.192.225" -> "104.192.192.133"[label="3.28"];
+"104.192.192.225" -> "104.192.192.166"[label="3.41"];
+"104.192.192.225" -> "104.192.192.199"[label="4.30"];
+"104.129.0.129" -> "104.129.103.1"[label="6.11"];
+"104.129.0.129" -> "104.129.105.1"[label="0.00"];
+"104.129.11.33" -> "104.129.95.1"[label="0.00"];
+"104.129.11.33" -> "104.0.0.14"[label="154.82"];
+"104.129.11.33" -> "104.129.0.78"[label="61.11"];
+"104.129.11.33" -> "104.129.81.1"[label="5.64"];
+"104.129.11.33" -> "104.129.43.1"[label="15.18"];
+"104.129.11.33" -> "104.129.46.100"[label="9.99"];
+"104.129.11.33" -> "104.129.0.8"[label="21.50"];
+"104.129.11.33" -> "104.129.0.107"[label="29.97"];
+"104.129.11.33" -> "104.129.11.11"[label="3.53"];
+"104.129.11.33" -> "104.130.1.14"[label="0.00"];
+"104.129.11.33" -> "104.129.11.22"[label="19.35"];
+"104.129.11.33" -> "104.129.29.29"[label="5.14"];
+"104.129.100.1" -> "104.129.43.1"[label="1.50"];
+"104.131.9.1" -> "104.131.131.1"[label="0.00"];
+"104.131.9.1" -> "104.131.2.1"[label="6.47"];
+"104.131.9.1" -> "104.131.21.1"[label="1.41"];
+"104.131.9.1" -> "104.131.9.66"[label="2.71"];
+"104.131.9.1" -> "104.130.11.66"[label="8.23"];
+"104.131.9.1" -> "104.131.9.2"[label="1.75"];
+"104.131.9.1" -> "104.130.1.67"[label="94.93"];
+"104.131.9.1" -> "104.131.131.4"[label="34.13"];
+"104.131.9.1" -> "104.129.0.165"[label="520.20"];
+"104.131.9.1" -> "104.131.9.11"[label="1.26"];
+"104.131.9.1" -> "104.131.0.47"[label="6.20"];
+"104.131.9.1" -> "104.131.9.15"[label="2.69"];
+"104.131.9.1" -> "104.131.0.82"[label="1.39"];
+"104.131.9.1" -> "104.129.29.29"[label="76.14"];
+"104.131.21.1" -> "104.131.2.1"[label="0.00"];
+"104.131.21.1" -> "104.131.9.1"[label="1.39"];
+"104.131.21.1" -> "104.130.11.66"[label="120.42"];
+"104.131.21.1" -> "104.131.21.34"[label="5.67"];
+"104.131.21.1" -> "104.131.131.4"[label="23.06"];
+"104.131.21.1" -> "104.131.21.12"[label="3.87"];
+"104.131.21.1" -> "104.131.0.82"[label="8.39"];
+"104.131.21.1" -> "104.129.29.29"[label="72.25"];
+"104.129.103.1" -> "104.129.0.77"[label="0.00"];
+"104.129.103.1" -> "104.129.95.1"[label="38.25"];
+"104.129.103.1" -> "104.129.108.1"[label="1.92"];
+"104.129.103.1" -> "104.129.0.129"[label="5.57"];
+"104.129.103.1" -> "104.129.105.2"[label="3.32"];
+"104.129.103.1" -> "104.129.0.165"[label="1.76"];
+"104.129.103.1" -> "104.129.105.10"[label="10.93"];
+"104.129.103.1" -> "104.129.0.78"[label="21.98"];
+"104.129.103.1" -> "104.129.0.91"[label="1.85"];
+"104.130.30.1" -> "104.130.1.65"[label="118.23"];
+"104.130.30.1" -> "104.130.1.67"[label="2.44"];
+"104.198.23.1" -> "104.130.1.66"[label="3.15"];
+"104.65.63.1" -> "104.6.0.6"[label="10.48"];
+"104.65.63.1" -> "104.0.0.14"[label="72.25"];
+"104.129.108.1" -> "104.129.103.1"[label="13.60"];
+"104.129.108.1" -> "104.129.105.2"[label="1.40"];
+"104.129.108.1" -> "104.129.0.165"[label="1.44"];
+"104.129.108.1" -> "104.129.105.10"[label="1.28"];
+"104.129.108.1" -> "104.129.0.78"[label="102.08"];
+"104.129.108.1" -> "104.129.0.91"[label="2.20"];
+"104.129.105.1" -> "104.129.17.9"[label="0.00"];
+"104.129.105.1" -> "104.129.17.1"[label="32.11"];
+"104.129.105.1" -> "104.129.105.2"[label="1.88"];
+"104.129.105.1" -> "104.129.17.8"[label="16.06"];
+"104.129.105.1" -> "104.129.105.10"[label="1.54"];
+"104.129.105.1" -> "104.129.17.13"[label="2.26"];
+"104.129.105.1" -> "104.129.0.141"[label="7.35"];
+"104.129.17.1" -> "104.129.105.1"[label="15.52"];
+"104.129.17.1" -> "104.129.17.8"[label="1.82"];
+"104.129.17.1" -> "104.129.17.9"[label="1.33"];
+"104.129.17.1" -> "104.129.17.13"[label="1.36"];
+"104.129.95.1" -> "104.129.81.1"[label="6.27"];
+"104.129.95.1" -> "104.129.0.5"[label="22.65"];
+"104.129.95.1" -> "104.129.0.107"[label="32.71"];
+"104.129.95.1" -> "104.129.0.77"[label="0.00"];
+"104.129.95.1" -> "104.129.0.78"[label="21.39"];
+"104.129.95.1" -> "104.129.11.33"[label="0.00"];
+"104.129.95.1" -> "104.129.103.1"[label="136.61"];
+"104.129.43.1" -> "104.129.11.33"[label="9.11"];
+"104.129.43.1" -> "104.129.100.1"[label="1.83"];
+"104.129.43.1" -> "104.129.14.10"[label="6.25"];
+"104.129.43.1" -> "104.129.11.11"[label="51.00"];
+"104.129.43.1" -> "104.130.1.14"[label="4.29"];
+"104.129.43.1" -> "104.129.0.48"[label="1.47"];
+"104.129.43.1" -> "104.129.29.29"[label="73.06"];
+"104.129.43.1" -> "104.129.0.32"[label="28.08"];
+"104.129.81.1" -> "104.129.95.1"[label="31.26"];
+"104.129.81.1" -> "104.129.11.33"[label="5.18"];
+"104.129.81.1" -> "104.129.0.5"[label="8.73"];
+"104.129.81.1" -> "104.129.0.107"[label="2.34"];
+"104.129.81.1" -> "104.129.0.77"[label="60.21"];
+"104.129.81.1" -> "104.0.0.14"[label="72.98"];
+"104.129.81.1" -> "104.129.29.29"[label="5.85"];
+"104.65.65.97" -> "104.65.65.65"[label="1.00"];
+"104.65.65.97" -> "104.6.0.6"[label="3.96"];
+"104.130.1.65" -> "104.130.30.1"[label="32.84"];
+"104.130.1.65" -> "104.0.4.65"[label="1.00"];
+"104.130.1.65" -> "104.130.1.66"[label="1.00"];
+"104.130.1.65" -> "104.130.1.67"[label="1.02"];
+"104.130.1.65" -> "104.193.0.5"[label="0.00"];
+"104.130.1.65" -> "104.130.1.76"[label="1.78"];
+"104.130.1.65" -> "104.130.77.77"[label="3.52"];
+"104.130.1.65" -> "104.130.1.6"[label="104.88"];
+"104.0.4.65" -> "104.130.1.65"[label="1.00"];
+"104.0.4.65" -> "104.130.1.66"[label="1.00"];
+"104.0.4.65" -> "104.130.1.67"[label="1.00"];
+"104.0.4.65" -> "104.0.4.200"[label="23.70"];
+"104.0.4.65" -> "104.0.0.13"[label="1.37"];
+"104.0.23.1" -> "104.66.25.2"[label="774.11"];
+"104.0.23.1" -> "104.0.23.2"[label="1.00"];
+"104.0.23.1" -> "104.0.23.3"[label="1.00"];
+"104.0.23.1" -> "104.65.23.100"[label="1.80"];
+"104.0.23.1" -> "104.0.0.5"[label="1.02"];
+"104.0.23.1" -> "104.66.0.8"[label="1.08"];
+"104.0.23.1" -> "104.0.3.13"[label="129.02"];
+"104.0.23.1" -> "104.0.23.23"[label="1.01"];
+"104.65.65.65" -> "104.65.65.97"[label="1.00"];
+"104.65.65.65" -> "104.0.0.6"[label="1.33"];
+"104.130.11.1" -> "104.130.11.66"[label="1.00"];
+"104.66.0.33" -> "104.66.24.113"[label="2.14"];
+"104.66.0.33" -> "104.66.0.18"[label="1.43"];
+"104.131.9.66" -> "104.131.9.1"[label="2.78"];
+"104.131.9.2" -> "104.131.9.1"[label="1.58"];
+"104.131.9.2" -> "104.131.9.11"[label="1.54"];
+"104.131.9.2" -> "104.131.9.15"[label="1.26"];
+"104.131.9.2" -> "104.131.0.82"[label="1.56"];
+"104.66.25.2" -> "104.0.23.1"[label="774.11"];
+"104.66.25.2" -> "104.66.0.2"[label="2.83"];
+"104.66.25.2" -> "104.0.0.6"[label="14.43"];
+"104.66.25.2" -> "104.66.7.7"[label="6.07"];
+"104.66.25.2" -> "104.66.28.11"[label="3.10"];
+"104.66.25.2" -> "104.66.0.23"[label="2.58"];
+"104.66.25.2" -> "104.66.0.24"[label="2.87"];
+"104.193.0.2" -> "104.192.192.66"[label="4.87"];
+"104.192.192.66" -> "104.192.192.33"[label="3.83"];
+"104.192.192.66" -> "104.0.192.129"[label="3.34"];
+"104.192.192.66" -> "104.192.192.225"[label="3.79"];
+"104.192.192.66" -> "104.192.192.1"[label="3.89"];
+"104.192.192.66" -> "104.193.0.2"[label="1.18"];
+"104.192.192.66" -> "104.192.192.99"[label="3.35"];
+"104.192.192.66" -> "104.193.24.100"[label="7.30"];
+"104.192.192.66" -> "104.192.192.133"[label="3.57"];
+"104.192.192.66" -> "104.192.192.166"[label="2.50"];
+"104.192.192.66" -> "104.192.192.199"[label="5.09"];
+"104.192.192.66" -> "104.192.99.111"[label="23.84"];
+"104.192.192.66" -> "104.192.0.20"[label="1.22"];
+"104.131.21.34" -> "104.131.21.1"[label="2.51"];
+"104.131.21.34" -> "104.131.21.12"[label="1.46"];
+"104.130.11.66" -> "104.131.21.1"[label="70.07"];
+"104.130.11.66" -> "104.131.9.1"[label="11.99"];
+"104.130.11.66" -> "104.130.11.1"[label="1.00"];
+"104.130.11.66" -> "104.131.2.2"[label="0.00"];
+"104.131.2.2" -> "104.131.2.1"[label="1.85"];
+"104.131.2.2" -> "104.130.11.66"[label="0.00"];
+"104.66.0.2" -> "104.66.25.2"[label="2.19"];
+"104.202.0.2" -> "104.202.19.1"[label="1.54"];
+"104.129.105.2" -> "104.129.105.1"[label="22.39"];
+"104.129.105.2" -> "104.129.11.33"[label="0.00"];
+"104.129.105.2" -> "104.129.108.1"[label="1.48"];
+"104.129.105.2" -> "104.129.103.1"[label="4.09"];
+"104.129.105.2" -> "104.129.0.165"[label="1.59"];
+"104.129.105.2" -> "104.129.105.10"[label="1.70"];
+"104.129.105.2" -> "104.129.0.91"[label="4.92"];
+"104.131.131.2" -> "104.131.131.1"[label="79.69"];
+"104.131.131.2" -> "104.131.131.4"[label="1.93"];
+"104.131.131.2" -> "104.131.1.10"[label="5.59"];
+"104.130.1.66" -> "104.198.23.1"[label="2.87"];
+"104.130.1.66" -> "104.130.1.65"[label="1.00"];
+"104.130.1.66" -> "104.0.4.65"[label="1.00"];
+"104.130.1.66" -> "104.130.1.67"[label="1.00"];
+"104.130.1.66" -> "104.130.1.6"[label="1.44"];
+"104.130.1.66" -> "104.130.1.76"[label="7.92"];
+"104.130.1.66" -> "104.130.77.77"[label="1.79"];
+"104.130.1.66" -> "104.130.77.78"[label="1.93"];
+"104.0.192.130" -> "104.0.192.129"[label="39.70"];
+"104.0.192.130" -> "104.129.29.29"[label="1.00"];
+"104.0.23.2" -> "104.0.23.1"[label="1.00"];
+"104.0.23.2" -> "104.0.23.3"[label="2.01"];
+"104.0.23.2" -> "104.0.23.22"[label="1.00"];
+"104.131.131.99" -> "104.131.131.1"[label="3.34"];
+"104.131.131.99" -> "104.131.0.3"[label="2.36"];
+"104.131.131.99" -> "104.130.1.67"[label="22.77"];
+"104.131.131.99" -> "104.131.131.4"[label="2.33"];
+"104.131.131.99" -> "104.131.0.42"[label="2.40"];
+"104.131.131.99" -> "104.131.1.10"[label="3.30"];
+"104.192.192.99" -> "104.0.192.129"[label="6.01"];
+"104.192.192.99" -> "104.192.192.1"[label="6.14"];
+"104.192.192.99" -> "104.192.192.33"[label="6.24"];
+"104.192.192.99" -> "104.192.192.225"[label="4.99"];
+"104.192.192.99" -> "104.192.192.66"[label="0.00"];
+"104.192.192.99" -> "104.192.192.133"[label="2.82"];
+"104.192.192.99" -> "104.192.192.166"[label="3.79"];
+"104.192.192.99" -> "104.192.192.199"[label="9.05"];
+"104.192.192.99" -> "104.192.0.20"[label="1.85"];
+"104.130.1.67" -> "104.130.30.1"[label="2.07"];
+"104.130.1.67" -> "104.0.4.65"[label="1.00"];
+"104.130.1.67" -> "104.130.1.65"[label="1.00"];
+"104.130.1.67" -> "104.130.1.66"[label="1.00"];
+"104.130.1.67" -> "104.131.131.99"[label="28.67"];
+"104.130.1.67" -> "104.130.1.6"[label="2.74"];
+"104.130.1.67" -> "104.130.77.77"[label="34.96"];
+"104.0.23.3" -> "104.0.23.1"[label="0.00"];
+"104.0.23.3" -> "104.0.23.2"[label="2.01"];
+"104.0.23.3" -> "104.0.23.23"[label="1.03"];
+"104.193.24.100" -> "104.192.192.66"[label="8.12"];
+"104.193.24.100" -> "104.192.99.111"[label="98.52"];
+"104.131.131.4" -> "104.131.131.1"[label="7.81"];
+"104.131.131.4" -> "104.131.21.1"[label="34.96"];
+"104.131.131.4" -> "104.131.9.1"[label="51.20"];
+"104.131.131.4" -> "104.131.131.2"[label="2.33"];
+"104.131.131.4" -> "104.131.0.3"[label="2.66"];
+"104.131.131.4" -> "104.131.131.99"[label="1.55"];
+"104.131.131.4" -> "104.131.0.42"[label="1.75"];
+"104.131.131.4" -> "104.129.29.29"[label="0.00"];
+"104.129.17.4" -> "104.129.0.32"[label="1.60"];
+"104.129.17.4" -> "104.129.0.33"[label="1.03"];
+"104.129.17.4" -> "104.129.17.8"[label="2.75"];
+"104.65.23.100" -> "104.0.23.1"[label="1.82"];
+"104.65.23.100" -> "104.66.0.8"[label="1.08"];
+"104.129.46.100" -> "104.129.11.11"[label="0.00"];
+"104.129.46.100" -> "104.129.0.77"[label="34.40"];
+"104.129.46.100" -> "104.129.11.33"[label="9.80"];
+"104.129.46.100" -> "104.129.0.165"[label="34.22"];
+"104.129.46.100" -> "104.129.0.7"[label="0.00"];
+"104.129.46.100" -> "104.129.0.138"[label="105.56"];
+"104.129.46.100" -> "104.0.0.14"[label="1.99"];
+"104.129.46.100" -> "104.129.29.29"[label="342.24"];
+"104.192.192.133" -> "104.192.192.33"[label="4.30"];
+"104.192.192.133" -> "104.192.192.225"[label="3.05"];
+"104.192.192.133" -> "104.192.192.1"[label="3.64"];
+"104.192.192.133" -> "104.0.192.129"[label="2.68"];
+"104.192.192.133" -> "104.192.192.66"[label="2.41"];
+"104.192.192.133" -> "104.192.192.99"[label="3.10"];
+"104.192.192.133" -> "104.192.192.166"[label="2.50"];
+"104.192.192.133" -> "104.192.192.199"[label="3.32"];
+"104.129.0.165" -> "104.131.9.1"[label="289.00"];
+"104.129.0.165" -> "104.131.21.1"[label="0.00"];
+"104.129.0.165" -> "104.129.0.7"[label="0.00"];
+"104.129.0.165" -> "104.129.0.173"[label="70.30"];
+"104.129.0.165" -> "104.0.0.14"[label="5.16"];
+"104.129.0.165" -> "104.130.1.14"[label="0.00"];
+"104.129.0.165" -> "104.129.0.144"[label="32.92"];
+"104.129.0.165" -> "104.129.0.125"[label="2.83"];
+"104.129.0.165" -> "104.129.108.1"[label="0.00"];
+"104.129.0.165" -> "104.129.11.33"[label="0.00"];
+"104.129.0.165" -> "104.129.103.1"[label="2.01"];
+"104.129.0.165" -> "104.129.105.2"[label="1.23"];
+"104.129.0.165" -> "104.129.105.10"[label="2.32"];
+"104.129.0.165" -> "104.129.0.91"[label="1.68"];
+"104.193.0.5" -> "104.130.1.65"[label="28.67"];
+"104.193.0.5" -> "104.192.192.1"[label="2.01"];
+"104.129.0.5" -> "104.129.95.1"[label="18.96"];
+"104.129.0.5" -> "104.129.81.1"[label="5.67"];
+"104.129.0.5" -> "104.129.0.107"[label="35.19"];
+"104.129.0.5" -> "104.129.0.78"[label="6.68"];
+"104.0.0.5" -> "104.0.23.1"[label="1.05"];
+"104.0.0.5" -> "104.0.0.6"[label="1.00"];
+"104.0.0.5" -> "104.0.0.13"[label="1.34"];
+"104.0.0.5" -> "104.0.3.13"[label="5.93"];
+"104.192.192.166" -> "104.192.192.1"[label="1.43"];
+"104.192.192.166" -> "104.0.192.129"[label="1.30"];
+"104.192.192.166" -> "104.192.192.33"[label="1.43"];
+"104.192.192.166" -> "104.192.192.225"[label="1.14"];
+"104.192.192.166" -> "104.192.192.66"[label="1.27"];
+"104.192.192.166" -> "104.192.192.99"[label="1.27"];
+"104.192.192.166" -> "104.192.192.133"[label="1.21"];
+"104.192.192.166" -> "104.192.192.199"[label="1.16"];
+"104.0.0.6" -> "104.202.19.1"[label="51.61"];
+"104.0.0.6" -> "104.65.65.65"[label="1.53"];
+"104.0.0.6" -> "104.66.25.2"[label="10.07"];
+"104.0.0.6" -> "104.0.0.5"[label="1.00"];
+"104.130.1.6" -> "104.130.1.65"[label="0.00"];
+"104.130.1.6" -> "104.130.1.66"[label="2.38"];
+"104.130.1.6" -> "104.130.1.67"[label="4.30"];
+"104.6.0.6" -> "104.65.65.97"[label="3.80"];
+"104.6.0.6" -> "104.65.63.1"[label="10.48"];
+"104.6.0.6" -> "104.0.0.14"[label="108.01"];
+"104.129.0.7" -> "104.129.46.100"[label="0.00"];
+"104.129.0.7" -> "104.129.0.165"[label="9.04"];
+"104.129.0.7" -> "104.129.0.8"[label="2.59"];
+"104.129.0.7" -> "104.129.0.105"[label="8.41"];
+"104.129.0.7" -> "104.129.31.12"[label="11.91"];
+"104.129.0.7" -> "104.129.0.173"[label="13.58"];
+"104.129.0.7" -> "104.0.0.14"[label="2.88"];
+"104.129.0.7" -> "104.129.0.110"[label="3.35"];
+"104.129.0.7" -> "104.129.0.83"[label="2.91"];
+"104.129.0.7" -> "104.129.0.158"[label="4.69"];
+"104.129.0.7" -> "104.129.0.95"[label="6.48"];
+"104.129.1.71" -> "104.0.0.14"[label="1.46"];
+"104.192.99.103" -> "104.192.103.33"[label="3.01"];
+"104.192.99.103" -> "104.192.103.200"[label="2.86"];
+"104.192.99.103" -> "104.192.103.109"[label="2.58"];
+"104.66.7.7" -> "104.66.25.2"[label="4.47"];
+"104.129.0.136" -> "104.129.0.149"[label="1.60"];
+"104.131.0.8" -> "104.131.0.3"[label="1.87"];
+"104.131.0.8" -> "104.131.0.12"[label="11.36"];
+"104.131.0.8" -> "104.131.0.28"[label="2.65"];
+"104.192.103.200" -> "104.192.103.33"[label="2.68"];
+"104.192.103.200" -> "104.192.103.3"[label="1.00"];
+"104.192.103.200" -> "104.192.99.103"[label="1.79"];
+"104.192.103.200" -> "104.192.103.109"[label="91.07"];
+"104.66.0.8" -> "104.0.23.1"[label="1.09"];
+"104.66.0.8" -> "104.65.23.100"[label="1.02"];
+"104.129.17.8" -> "104.129.17.1"[label="1.18"];
+"104.129.17.8" -> "104.129.105.1"[label="7.24"];
+"104.129.17.8" -> "104.129.17.4"[label="2.52"];
+"104.129.17.8" -> "104.129.17.9"[label="1.82"];
+"104.129.17.8" -> "104.129.17.13"[label="1.37"];
+"104.0.4.200" -> "104.0.4.65"[label="27.00"];
+"104.0.4.200" -> "104.0.0.13"[label="1.10"];
+"104.129.0.105" -> "104.129.0.7"[label="16.47"];
+"104.129.0.105" -> "104.129.0.8"[label="18.45"];
+"104.129.0.105" -> "104.129.11.11"[label="12.27"];
+"104.129.0.105" -> "104.129.0.108"[label="11.38"];
+"104.129.17.9" -> "104.129.105.1"[label="394.09"];
+"104.129.17.9" -> "104.129.95.1"[label="5.96"];
+"104.129.17.9" -> "104.129.17.1"[label="1.43"];
+"104.129.17.9" -> "104.129.17.8"[label="2.12"];
+"104.129.17.9" -> "104.129.17.13"[label="1.28"];
+"104.129.0.138" -> "104.129.46.100"[label="309.64"];
+"104.131.1.10" -> "104.131.131.99"[label="1.77"];
+"104.131.0.42" -> "104.131.131.99"[label="2.40"];
+"104.131.0.42" -> "104.131.131.4"[label="2.01"];
+"104.66.28.11" -> "104.66.25.2"[label="2.26"];
+"104.129.0.107" -> "104.129.95.1"[label="38.71"];
+"104.129.0.107" -> "104.129.81.1"[label="3.23"];
+"104.129.0.107" -> "104.129.11.33"[label="6.07"];
+"104.129.0.107" -> "104.129.0.77"[label="2.55"];
+"104.129.0.107" -> "104.0.0.14"[label="0.00"];
+"104.129.0.107" -> "104.129.11.22"[label="55.29"];
+"104.131.9.11" -> "104.131.9.1"[label="1.26"];
+"104.131.9.11" -> "104.131.9.2"[label="1.15"];
+"104.131.9.11" -> "104.131.9.15"[label="1.26"];
+"104.131.9.11" -> "104.131.0.82"[label="1.21"];
+"104.129.11.11" -> "104.129.43.1"[label="71.30"];
+"104.129.11.11" -> "104.129.11.33"[label="14.25"];
+"104.129.11.11" -> "104.129.0.8"[label="0.00"];
+"104.129.11.11" -> "104.129.0.105"[label="21.25"];
+"104.129.11.11" -> "104.0.0.14"[label="2.88"];
+"104.129.11.11" -> "104.129.0.83"[label="0.00"];
+"104.129.11.11" -> "104.129.11.22"[label="1.99"];
+"104.129.11.11" -> "104.129.0.125"[label="20.45"];
+"104.129.11.11" -> "104.129.29.29"[label="16.35"];
+"104.129.11.11" -> "104.129.0.173"[label="66.35"];
+"104.131.0.12" -> "104.131.0.3"[label="2.23"];
+"104.131.0.12" -> "104.131.0.8"[label="7.16"];
+"104.131.0.12" -> "104.131.0.28"[label="1.05"];
+"104.129.0.108" -> "104.129.31.12"[label="0.00"];
+"104.129.0.108" -> "104.129.0.7"[label="34.15"];
+"104.129.0.108" -> "104.129.0.8"[label="15.48"];
+"104.129.0.108" -> "104.129.0.110"[label="84.45"];
+"104.129.0.108" -> "104.129.29.29"[label="0.00"];
+"104.129.0.108" -> "104.129.0.158"[label="3.71"];
+"104.129.0.108" -> "104.129.0.95"[label="5.99"];
+"104.129.31.12" -> "104.129.0.110"[label="92.89"];
+"104.129.31.12" -> "104.129.0.95"[label="0.00"];
+"104.129.31.12" -> "104.129.0.7"[label="6.88"];
+"104.129.31.12" -> "104.129.0.108"[label="14.14"];
+"104.129.31.12" -> "104.0.0.14"[label="2.98"];
+"104.129.31.12" -> "104.129.0.83"[label="51.20"];
+"104.129.31.12" -> "104.129.0.158"[label="27.00"];
+"104.130.1.76" -> "104.130.1.65"[label="1.68"];
+"104.130.1.76" -> "104.130.1.66"[label="10.15"];
+"104.130.1.76" -> "104.130.1.67"[label="9.24"];
+"104.131.21.12" -> "104.131.21.1"[label="2.19"];
+"104.131.21.12" -> "104.131.21.34"[label="1.62"];
+"104.129.0.77" -> "104.129.46.100"[label="27.00"];
+"104.129.0.77" -> "104.129.0.5"[label="66.35"];
+"104.129.0.77" -> "104.129.81.1"[label="52.10"];
+"104.129.0.77" -> "104.129.0.107"[label="2.26"];
+"104.129.0.77" -> "104.0.0.14"[label="33.85"];
+"104.129.0.77" -> "104.129.29.29"[label="0.00"];
+"104.129.0.173" -> "104.131.9.1"[label="0.00"];
+"104.129.0.173" -> "104.129.0.7"[label="20.87"];
+"104.129.0.173" -> "104.0.0.14"[label="10.65"];
+"104.129.0.173" -> "104.129.0.165"[label="225.78"];
+"104.129.0.173" -> "104.129.11.11"[label="0.00"];
+"104.0.3.13" -> "104.0.23.1"[label="64.51"];
+"104.0.3.13" -> "104.0.0.5"[label="5.00"];
+"104.0.3.13" -> "104.66.24.113"[label="1.68"];
+"104.129.17.13" -> "104.129.105.1"[label="1.98"];
+"104.129.17.13" -> "104.129.17.1"[label="1.60"];
+"104.129.17.13" -> "104.129.17.8"[label="1.99"];
+"104.129.17.13" -> "104.129.17.9"[label="2.32"];
+"104.130.77.77" -> "104.130.1.65"[label="3.83"];
+"104.130.77.77" -> "104.130.1.66"[label="2.99"];
+"104.130.77.77" -> "104.130.1.67"[label="41.68"];
+"104.0.0.13" -> "104.0.4.65"[label="1.70"];
+"104.0.0.13" -> "104.0.0.5"[label="1.36"];
+"104.0.0.13" -> "104.0.4.200"[label="1.78"];
+"104.0.0.13" -> "104.0.0.14"[label="1.00"];
+"104.130.77.78" -> "104.130.1.66"[label="1.93"];
+"104.129.0.78" -> "104.129.108.1"[label="19.14"];
+"104.129.0.78" -> "104.129.11.33"[label="54.01"];
+"104.129.0.78" -> "104.129.95.1"[label="23.91"];
+"104.129.0.78" -> "104.129.103.1"[label="20.07"];
+"104.129.0.78" -> "104.129.0.5"[label="7.87"];
+"104.0.0.14" -> "104.202.53.1"[label="106.25"];
+"104.0.0.14" -> "104.129.11.33"[label="0.00"];
+"104.0.0.14" -> "104.65.63.1"[label="58.06"];
+"104.0.0.14" -> "104.129.81.1"[label="54.23"];
+"104.0.0.14" -> "104.129.46.100"[label="1.54"];
+"104.0.0.14" -> "104.129.0.165"[label="0.00"];
+"104.0.0.14" -> "104.129.0.7"[label="1.72"];
+"104.0.0.14" -> "104.129.1.71"[label="2.62"];
+"104.0.0.14" -> "104.129.0.8"[label="5.69"];
+"104.0.0.14" -> "104.129.0.107"[label="38.25"];
+"104.0.0.14" -> "104.129.11.11"[label="2.87"];
+"104.0.0.14" -> "104.129.0.108"[label="55.77"];
+"104.0.0.14" -> "104.129.31.12"[label="3.39"];
+"104.0.0.14" -> "104.129.0.77"[label="61.93"];
+"104.0.0.14" -> "104.129.0.173"[label="5.68"];
+"104.0.0.14" -> "104.0.0.13"[label="1.00"];
+"104.0.0.14" -> "104.129.0.110"[label="3.18"];
+"104.0.0.14" -> "104.129.0.83"[label="2.19"];
+"104.0.0.14" -> "104.129.29.29"[label="14.63"];
+"104.0.0.14" -> "104.0.0.29"[label="1.16"];
+"104.0.0.14" -> "104.129.0.158"[label="0.00"];
+"104.0.0.14" -> "104.129.0.95"[label="5.59"];
+"104.129.0.110" -> "104.129.0.7"[label="0.00"];
+"104.129.0.110" -> "104.129.0.108"[label="96.33"];
+"104.129.0.110" -> "104.0.0.14"[label="4.32"];
+"104.129.0.110" -> "104.129.0.144"[label="5.09"];
+"104.129.0.110" -> "104.129.0.149"[label="4.70"];
+"104.129.0.110" -> "104.129.0.158"[label="0.00"];
+"104.129.0.110" -> "104.129.0.8"[label="11.38"];
+"104.129.0.110" -> "104.129.0.83"[label="44.23"];
+"104.130.1.14" -> "104.129.11.33"[label="3.48"];
+"104.130.1.14" -> "104.129.43.1"[label="2.68"];
+"104.130.1.14" -> "104.129.29.29"[label="3.45"];
+"104.130.1.14" -> "104.0.0.14"[label="464.46"];
+"104.131.0.47" -> "104.131.9.1"[label="6.20"];
+"104.192.99.111" -> "104.192.192.66"[label="89.69"];
+"104.192.99.111" -> "104.193.24.100"[label="65.03"];
+"104.192.99.111" -> "104.192.0.20"[label="1.95"];
+"104.131.9.15" -> "104.131.9.1"[label="2.84"];
+"104.131.9.15" -> "104.131.9.2"[label="1.16"];
+"104.131.9.15" -> "104.131.9.11"[label="1.29"];
+"104.131.9.15" -> "104.131.0.82"[label="1.37"];
+"104.129.0.144" -> "104.129.0.165"[label="51.00"];
+"104.129.0.144" -> "104.129.0.110"[label="4.20"];
+"104.129.0.144" -> "104.129.0.149"[label="1.19"];
+"104.129.0.48" -> "104.129.43.1"[label="1.29"];
+"104.66.24.113" -> "104.66.0.33"[label="1.98"];
+"104.66.24.113" -> "104.0.3.13"[label="3.91"];
+"104.66.24.113" -> "104.66.0.18"[label="1.82"];
+"104.129.0.113" -> "104.129.0.125"[label="18.43"];
+"104.129.0.113" -> "104.129.0.95"[label="144.50"];
+"104.131.0.82" -> "104.131.21.1"[label="11.35"];
+"104.131.0.82" -> "104.131.9.1"[label="1.36"];
+"104.131.0.82" -> "104.131.9.2"[label="1.23"];
+"104.131.0.82" -> "104.131.9.11"[label="1.29"];
+"104.131.0.82" -> "104.131.9.15"[label="1.14"];
+"104.66.0.18" -> "104.66.0.33"[label="1.08"];
+"104.66.0.18" -> "104.66.24.113"[label="2.06"];
+"104.129.0.83" -> "104.131.9.1"[label="0.00"];
+"104.129.0.83" -> "104.129.0.7"[label="2.91"];
+"104.129.0.83" -> "104.129.11.11"[label="0.00"];
+"104.129.0.83" -> "104.129.31.12"[label="15.52"];
+"104.129.0.83" -> "104.0.0.14"[label="1.81"];
+"104.129.0.83" -> "104.129.0.95"[label="58.06"];
+"104.192.0.20" -> "104.192.192.33"[label="1.22"];
+"104.192.0.20" -> "104.192.192.66"[label="1.19"];
+"104.192.0.20" -> "104.192.192.99"[label="2.65"];
+"104.192.0.20" -> "104.192.99.111"[label="1.60"];
+"104.129.0.149" -> "104.129.0.110"[label="10.69"];
+"104.129.0.149" -> "104.129.0.144"[label="1.70"];
+"104.129.11.22" -> "104.129.11.33"[label="22.12"];
+"104.129.11.22" -> "104.129.0.107"[label="0.00"];
+"104.129.11.22" -> "104.129.11.11"[label="2.67"];
+"104.129.11.22" -> "104.129.29.29"[label="0.00"];
+"104.0.23.22" -> "104.0.23.2"[label="1.01"];
+"104.66.0.23" -> "104.66.25.2"[label="2.28"];
+"104.66.0.23" -> "104.66.0.24"[label="1.01"];
+"104.0.23.23" -> "104.0.23.1"[label="1.03"];
+"104.0.23.23" -> "104.0.23.3"[label="1.05"];
+"104.66.0.24" -> "104.66.25.2"[label="1.75"];
+"104.66.0.24" -> "104.66.0.23"[label="1.00"];
+"104.129.0.91" -> "104.129.95.1"[label="0.00"];
+"104.129.0.91" -> "104.129.108.1"[label="2.06"];
+"104.129.0.91" -> "104.129.103.1"[label="1.93"];
+"104.129.0.91" -> "104.129.105.2"[label="3.93"];
+"104.129.0.91" -> "104.129.0.165"[label="1.61"];
+"104.129.0.91" -> "104.129.105.10"[label="0.00"];
+"104.131.0.28" -> "104.131.0.3"[label="1.67"];
+"104.131.0.28" -> "104.131.0.8"[label="1.25"];
+"104.131.0.28" -> "104.131.0.12"[label="2.80"];
+"104.129.0.125" -> "104.129.11.33"[label="27.32"];
+"104.129.0.125" -> "104.129.0.165"[label="4.52"];
+"104.129.0.125" -> "104.129.0.8"[label="0.00"];
+"104.129.0.125" -> "104.129.11.11"[label="0.00"];
+"104.129.0.125" -> "104.129.0.173"[label="0.00"];
+"104.129.0.125" -> "104.129.0.113"[label="15.18"];
+"104.129.0.125" -> "104.129.0.158"[label="0.00"];
+"104.129.29.29" -> "104.129.100.1"[label="0.00"];
+"104.129.29.29" -> "104.131.9.1"[label="26.22"];
+"104.129.29.29" -> "104.129.43.1"[label="70.99"];
+"104.129.29.29" -> "104.129.81.1"[label="4.98"];
+"104.129.29.29" -> "104.131.21.1"[label="71.46"];
+"104.129.29.29" -> "104.129.11.33"[label="7.28"];
+"104.129.29.29" -> "104.0.192.130"[label="1.00"];
+"104.129.29.29" -> "104.129.46.100"[label="0.00"];
+"104.129.29.29" -> "104.131.131.4"[label="0.00"];
+"104.129.29.29" -> "104.129.14.10"[label="0.00"];
+"104.129.29.29" -> "104.129.11.11"[label="16.14"];
+"104.129.29.29" -> "104.0.0.14"[label="6.83"];
+"104.129.29.29" -> "104.130.1.14"[label="0.00"];
+"104.0.0.29" -> "104.0.0.14"[label="1.10"];
+"104.129.0.158" -> "104.129.0.7"[label="7.30"];
+"104.129.0.158" -> "104.129.0.8"[label="1.64"];
+"104.129.0.158" -> "104.129.0.108"[label="3.35"];
+"104.129.0.158" -> "104.129.31.12"[label="6.39"];
+"104.129.0.158" -> "104.129.0.110"[label="10.49"];
+"104.129.0.158" -> "104.0.0.14"[label="19.18"];
+"104.129.0.158" -> "104.129.0.95"[label="5.66"];
+"104.129.0.95" -> "104.129.0.7"[label="3.16"];
+"104.129.0.95" -> "104.129.31.12"[label="53.08"];
+"104.129.0.95" -> "104.129.0.108"[label="4.55"];
+"104.129.0.95" -> "104.0.0.14"[label="14.07"];
+"104.129.0.95" -> "104.129.0.110"[label="8.94"];
+"104.129.0.95" -> "104.129.0.113"[label="9.10"];
+"104.129.0.95" -> "104.129.0.158"[label="5.61"];
+"104.129.0.95" -> "104.129.0.8"[label="2.85"];
+"104.129.0.95" -> "104.129.0.83"[label="6.50"];
+"104.129.43.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.81.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.81.1" -> "104.129.81.11/255.255.255.255"[label="HNA"];
+"104.129.81.11/255.255.255.255"[shape=diamond];
+"104.129.81.1" -> "104.129.111.111/255.255.255.255"[label="HNA"];
+"104.129.111.111/255.255.255.255"[shape=diamond];
+"104.129.17.1" -> "104.129.17.220/255.255.255.255"[label="HNA"];
+"104.129.17.220/255.255.255.255"[shape=diamond];
+"104.131.21.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.202.19.1" -> "104.202.19.0/255.255.255.0"[label="HNA"];
+"104.202.19.0/255.255.255.0"[shape=diamond];
+"104.202.19.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.130.11.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.65.65.97" -> "104.65.65.102/255.255.255.255"[label="HNA"];
+"104.65.65.102/255.255.255.255"[shape=diamond];
+"104.65.65.97" -> "104.65.65.98/255.255.255.255"[label="HNA"];
+"104.65.65.98/255.255.255.255"[shape=diamond];
+"104.131.9.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.9.1" -> "104.131.9.229/255.255.255.255"[label="HNA"];
+"104.131.9.229/255.255.255.255"[shape=diamond];
+"104.131.9.1" -> "104.131.9.9/255.255.255.255"[label="HNA"];
+"104.131.9.9/255.255.255.255"[shape=diamond];
+"104.0.23.3" -> "104.0.23.99/255.255.255.255"[label="HNA"];
+"104.0.23.99/255.255.255.255"[shape=diamond];
+"104.131.131.99" -> "104.131.1.9/255.255.255.255"[label="HNA"];
+"104.131.1.9/255.255.255.255"[shape=diamond];
+"104.129.46.100" -> "104.129.46.96/255.255.255.224"[label="HNA"];
+"104.129.46.96/255.255.255.224"[shape=diamond];
+"104.129.46.100" -> "104.129.46.0/255.255.255.192"[label="HNA"];
+"104.129.46.0/255.255.255.192"[shape=diamond];
+"104.193.0.5" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.21.12" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.31.12" -> "104.129.31.0/255.255.255.0"[label="HNA"];
+"104.129.31.0/255.255.255.0"[shape=diamond];
+"104.130.1.14" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.9.15" -> "104.131.9.16/255.255.255.248"[label="HNA"];
+"104.131.9.16/255.255.255.248"[shape=diamond];
+"104.66.0.24" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.29.29" -> "104.129.29.224/255.255.255.224"[label="HNA"];
+"104.129.29.224/255.255.255.224"[shape=diamond];
+"104.0.0.29" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.0.0.29" -> "104.0.0.41/255.255.255.255"[label="HNA"];
+"104.0.0.41/255.255.255.255"[shape=diamond];
+}
+
+digraph topology
+{
+"104.131.131.1" -> "104.131.21.1"[label="0.00", style=dashed];
+"104.131.131.1" -> "104.131.9.1"[label="0.00", style=dashed];
+"104.131.131.1" -> "104.131.131.2"[label="55.92", style=solid];
+"104.131.131.2"[shape=box];
+"104.131.131.1" -> "104.131.0.3"[label="0.00", style=solid];
+"104.131.0.3"[shape=box];
+"104.131.131.1" -> "104.131.131.99"[label="2.68", style=solid];
+"104.131.131.99"[shape=box];
+"104.131.131.1" -> "104.131.131.4"[label="4.26", style=solid];
+"104.131.131.4"[shape=box];
+"104.131.131.1" -> "104.131.0.28"[label="0.00", style=solid];
+"104.131.0.28"[shape=box];
+"104.131.131.1" -> "104.129.29.29"[label="0.00", style=dashed];
+"104.129.0.32" -> "104.129.17.4"[label="3.22"];
+"104.129.0.33" -> "104.129.17.4"[label="1.03"];
+"104.131.2.1" -> "104.130.11.66"[label="13.62"];
+"104.131.2.1" -> "104.131.21.1"[label="30.53"];
+"104.131.2.1" -> "104.131.9.1"[label="3.36"];
+"104.131.2.1" -> "104.131.2.2"[label="1.96"];
+"104.192.192.225" -> "104.0.192.129"[label="3.79"];
+"104.192.192.225" -> "104.192.192.1"[label="3.97"];
+"104.192.192.225" -> "104.192.192.33"[label="4.41"];
+"104.192.192.225" -> "104.192.192.66"[label="3.57"];
+"104.192.192.225" -> "104.192.192.99"[label="4.20"];
+"104.192.192.225" -> "104.192.192.133"[label="3.28"];
+"104.192.192.225" -> "104.192.192.166"[label="3.41"];
+"104.192.192.225" -> "104.192.192.199"[label="4.30"];
+"104.129.0.129" -> "104.129.103.1"[label="6.11"];
+"104.129.0.129" -> "104.129.105.1"[label="0.00"];
+"104.129.11.33" -> "104.129.95.1"[label="0.00"];
+"104.129.11.33" -> "104.0.0.14"[label="154.82"];
+"104.129.11.33" -> "104.129.0.78"[label="61.11"];
+"104.129.11.33" -> "104.129.81.1"[label="5.64"];
+"104.129.11.33" -> "104.129.43.1"[label="15.18"];
+"104.129.11.33" -> "104.129.46.100"[label="9.99"];
+"104.129.11.33" -> "104.129.0.8"[label="21.50"];
+"104.129.11.33" -> "104.129.0.107"[label="29.97"];
+"104.129.11.33" -> "104.129.11.11"[label="3.53"];
+"104.129.11.33" -> "104.130.1.14"[label="0.00"];
+"104.129.11.33" -> "104.129.11.22"[label="19.35"];
+"104.129.11.33" -> "104.129.29.29"[label="5.14"];
+"104.129.100.1" -> "104.129.43.1"[label="1.50"];
+"104.131.9.1" -> "104.131.131.1"[label="0.00"];
+"104.131.9.1" -> "104.131.2.1"[label="6.47"];
+"104.131.9.1" -> "104.131.21.1"[label="1.41"];
+"104.131.9.1" -> "104.131.9.66"[label="2.71"];
+"104.131.9.1" -> "104.130.11.66"[label="8.23"];
+"104.131.9.1" -> "104.131.9.2"[label="1.75"];
+"104.131.9.1" -> "104.130.1.67"[label="94.93"];
+"104.131.9.1" -> "104.131.131.4"[label="34.13"];
+"104.131.9.1" -> "104.129.0.165"[label="520.20"];
+"104.131.9.1" -> "104.131.9.11"[label="1.26"];
+"104.131.9.1" -> "104.131.0.47"[label="6.20"];
+"104.131.9.1" -> "104.131.9.15"[label="2.69"];
+"104.131.9.1" -> "104.131.0.82"[label="1.39"];
+"104.131.9.1" -> "104.129.29.29"[label="76.14"];
+"104.131.21.1" -> "104.131.2.1"[label="0.00"];
+"104.131.21.1" -> "104.131.9.1"[label="1.39"];
+"104.131.21.1" -> "104.130.11.66"[label="120.42"];
+"104.131.21.1" -> "104.131.21.34"[label="5.67"];
+"104.131.21.1" -> "104.131.131.4"[label="23.06"];
+"104.131.21.1" -> "104.131.21.12"[label="3.87"];
+"104.131.21.1" -> "104.131.0.82"[label="8.39"];
+"104.131.21.1" -> "104.129.29.29"[label="72.25"];
+"104.129.103.1" -> "104.129.0.77"[label="0.00"];
+"104.129.103.1" -> "104.129.95.1"[label="38.25"];
+"104.129.103.1" -> "104.129.108.1"[label="1.92"];
+"104.129.103.1" -> "104.129.0.129"[label="5.57"];
+"104.129.103.1" -> "104.129.105.2"[label="3.32"];
+"104.129.103.1" -> "104.129.0.165"[label="1.76"];
+"104.129.103.1" -> "104.129.105.10"[label="10.93"];
+"104.129.103.1" -> "104.129.0.78"[label="21.98"];
+"104.129.103.1" -> "104.129.0.91"[label="1.85"];
+"104.130.30.1" -> "104.130.1.65"[label="118.23"];
+"104.130.30.1" -> "104.130.1.67"[label="2.44"];
+"104.198.23.1" -> "104.130.1.66"[label="3.15"];
+"104.65.63.1" -> "104.6.0.6"[label="10.48"];
+"104.65.63.1" -> "104.0.0.14"[label="72.25"];
+"104.129.108.1" -> "104.129.103.1"[label="13.60"];
+"104.129.108.1" -> "104.129.105.2"[label="1.40"];
+"104.129.108.1" -> "104.129.0.165"[label="1.44"];
+"104.129.108.1" -> "104.129.105.10"[label="1.28"];
+"104.129.108.1" -> "104.129.0.78"[label="102.08"];
+"104.129.108.1" -> "104.129.0.91"[label="2.20"];
+"104.129.105.1" -> "104.129.17.9"[label="0.00"];
+"104.129.105.1" -> "104.129.17.1"[label="32.11"];
+"104.129.105.1" -> "104.129.105.2"[label="1.88"];
+"104.129.105.1" -> "104.129.17.8"[label="16.06"];
+"104.129.105.1" -> "104.129.105.10"[label="1.54"];
+"104.129.105.1" -> "104.129.17.13"[label="2.26"];
+"104.129.105.1" -> "104.129.0.141"[label="7.35"];
+"104.129.17.1" -> "104.129.105.1"[label="15.52"];
+"104.129.17.1" -> "104.129.17.8"[label="1.82"];
+"104.129.17.1" -> "104.129.17.9"[label="1.33"];
+"104.129.17.1" -> "104.129.17.13"[label="1.36"];
+"104.129.95.1" -> "104.129.81.1"[label="6.27"];
+"104.129.95.1" -> "104.129.0.5"[label="22.65"];
+"104.129.95.1" -> "104.129.0.107"[label="32.71"];
+"104.129.95.1" -> "104.129.0.77"[label="0.00"];
+"104.129.95.1" -> "104.129.0.78"[label="21.39"];
+"104.129.95.1" -> "104.129.11.33"[label="0.00"];
+"104.129.95.1" -> "104.129.103.1"[label="136.61"];
+"104.129.43.1" -> "104.129.11.33"[label="9.11"];
+"104.129.43.1" -> "104.129.100.1"[label="1.83"];
+"104.129.43.1" -> "104.129.14.10"[label="6.25"];
+"104.129.43.1" -> "104.129.11.11"[label="51.00"];
+"104.129.43.1" -> "104.130.1.14"[label="4.29"];
+"104.129.43.1" -> "104.129.0.48"[label="1.47"];
+"104.129.43.1" -> "104.129.29.29"[label="73.06"];
+"104.129.43.1" -> "104.129.0.32"[label="28.08"];
+"104.129.81.1" -> "104.129.95.1"[label="8.17"];
+"104.129.81.1" -> "104.129.11.33"[label="4.92"];
+"104.129.81.1" -> "104.129.0.5"[label="8.82"];
+"104.129.81.1" -> "104.129.0.107"[label="2.53"];
+"104.129.81.1" -> "104.129.0.77"[label="79.40"];
+"104.129.81.1" -> "104.0.0.14"[label="57.95"];
+"104.129.81.1" -> "104.129.29.29"[label="8.18"];
+"104.65.65.97" -> "104.65.65.65"[label="1.00"];
+"104.65.65.97" -> "104.6.0.6"[label="4.07"];
+"104.130.1.65" -> "104.130.30.1"[label="32.84"];
+"104.130.1.65" -> "104.0.4.65"[label="1.00"];
+"104.130.1.65" -> "104.130.1.66"[label="1.00"];
+"104.130.1.65" -> "104.130.1.67"[label="1.02"];
+"104.130.1.65" -> "104.193.0.5"[label="0.00"];
+"104.130.1.65" -> "104.130.1.76"[label="1.78"];
+"104.130.1.65" -> "104.130.77.77"[label="3.52"];
+"104.130.1.65" -> "104.130.1.6"[label="104.88"];
+"104.0.4.65" -> "104.130.1.65"[label="1.00"];
+"104.0.4.65" -> "104.130.1.66"[label="1.00"];
+"104.0.4.65" -> "104.130.1.67"[label="1.00"];
+"104.0.4.65" -> "104.0.4.200"[label="23.70"];
+"104.0.4.65" -> "104.0.0.13"[label="1.37"];
+"104.0.23.1" -> "104.66.25.2"[label="774.11"];
+"104.0.23.1" -> "104.0.23.2"[label="1.00"];
+"104.0.23.1" -> "104.0.23.3"[label="1.00"];
+"104.0.23.1" -> "104.65.23.100"[label="1.80"];
+"104.0.23.1" -> "104.0.0.5"[label="1.02"];
+"104.0.23.1" -> "104.66.0.8"[label="1.08"];
+"104.0.23.1" -> "104.0.3.13"[label="129.02"];
+"104.0.23.1" -> "104.0.23.23"[label="1.01"];
+"104.65.65.65" -> "104.65.65.97"[label="1.00"];
+"104.65.65.65" -> "104.0.0.6"[label="1.33"];
+"104.130.11.1" -> "104.130.11.66"[label="1.00"];
+"104.66.0.33" -> "104.66.24.113"[label="2.30"];
+"104.66.0.33" -> "104.66.0.18"[label="1.47"];
+"104.131.9.66" -> "104.131.9.1"[label="2.78"];
+"104.131.9.2" -> "104.131.9.1"[label="1.58"];
+"104.131.9.2" -> "104.131.9.11"[label="1.54"];
+"104.131.9.2" -> "104.131.9.15"[label="1.26"];
+"104.131.9.2" -> "104.131.0.82"[label="1.56"];
+"104.66.25.2" -> "104.0.23.1"[label="774.11"];
+"104.66.25.2" -> "104.66.0.2"[label="2.83"];
+"104.66.25.2" -> "104.0.0.6"[label="14.43"];
+"104.66.25.2" -> "104.66.7.7"[label="6.07"];
+"104.66.25.2" -> "104.66.28.11"[label="3.10"];
+"104.66.25.2" -> "104.66.0.23"[label="2.58"];
+"104.66.25.2" -> "104.66.0.24"[label="2.87"];
+"104.193.0.2" -> "104.192.192.66"[label="4.87"];
+"104.192.192.66" -> "104.192.192.33"[label="3.83"];
+"104.192.192.66" -> "104.0.192.129"[label="3.34"];
+"104.192.192.66" -> "104.192.192.225"[label="3.79"];
+"104.192.192.66" -> "104.192.192.1"[label="3.89"];
+"104.192.192.66" -> "104.193.0.2"[label="1.18"];
+"104.192.192.66" -> "104.192.192.99"[label="3.35"];
+"104.192.192.66" -> "104.193.24.100"[label="7.30"];
+"104.192.192.66" -> "104.192.192.133"[label="3.57"];
+"104.192.192.66" -> "104.192.192.166"[label="2.50"];
+"104.192.192.66" -> "104.192.192.199"[label="5.09"];
+"104.192.192.66" -> "104.192.99.111"[label="23.84"];
+"104.192.192.66" -> "104.192.0.20"[label="1.22"];
+"104.131.21.34" -> "104.131.21.1"[label="2.51"];
+"104.131.21.34" -> "104.131.21.12"[label="1.46"];
+"104.130.11.66" -> "104.131.2.1"[label="11.69"];
+"104.130.11.66" -> "104.131.21.1"[label="0.00"];
+"104.130.11.66" -> "104.131.9.1"[label="10.59"];
+"104.130.11.66" -> "104.130.11.1"[label="1.00"];
+"104.130.11.66" -> "104.131.2.2"[label="0.00"];
+"104.131.2.2" -> "104.131.2.1"[label="1.85"];
+"104.131.2.2" -> "104.130.11.66"[label="0.00"];
+"104.66.0.2" -> "104.66.25.2"[label="2.19"];
+"104.202.0.2" -> "104.202.19.1"[label="1.54"];
+"104.129.105.2" -> "104.129.105.1"[label="22.39"];
+"104.129.105.2" -> "104.129.11.33"[label="0.00"];
+"104.129.105.2" -> "104.129.108.1"[label="1.48"];
+"104.129.105.2" -> "104.129.103.1"[label="4.09"];
+"104.129.105.2" -> "104.129.0.165"[label="1.59"];
+"104.129.105.2" -> "104.129.105.10"[label="1.70"];
+"104.129.105.2" -> "104.129.0.91"[label="4.92"];
+"104.131.131.2" -> "104.131.131.1"[label="75.00"];
+"104.131.131.2" -> "104.131.131.4"[label="1.53"];
+"104.131.131.2" -> "104.131.1.10"[label="8.50"];
+"104.130.1.66" -> "104.198.23.1"[label="3.39"];
+"104.130.1.66" -> "104.130.1.65"[label="1.00"];
+"104.130.1.66" -> "104.0.4.65"[label="1.00"];
+"104.130.1.66" -> "104.130.1.67"[label="1.09"];
+"104.130.1.66" -> "104.130.1.6"[label="2.72"];
+"104.130.1.66" -> "104.130.1.76"[label="13.66"];
+"104.130.1.66" -> "104.130.77.77"[label="2.57"];
+"104.130.1.66" -> "104.130.77.78"[label="2.01"];
+"104.0.192.130" -> "104.129.29.29"[label="1.00"];
+"104.0.192.130" -> "104.0.192.129"[label="0.00"];
+"104.0.23.2" -> "104.0.23.1"[label="1.00"];
+"104.0.23.2" -> "104.0.23.3"[label="2.01"];
+"104.0.23.2" -> "104.0.23.22"[label="1.01"];
+"104.131.131.99" -> "104.131.131.1"[label="3.34"];
+"104.131.131.99" -> "104.131.0.3"[label="2.36"];
+"104.131.131.99" -> "104.130.1.67"[label="22.77"];
+"104.131.131.99" -> "104.131.131.4"[label="2.33"];
+"104.131.131.99" -> "104.131.0.42"[label="2.40"];
+"104.131.131.99" -> "104.131.1.10"[label="3.30"];
+"104.192.192.99" -> "104.0.192.129"[label="6.01"];
+"104.192.192.99" -> "104.192.192.1"[label="6.14"];
+"104.192.192.99" -> "104.192.192.33"[label="6.24"];
+"104.192.192.99" -> "104.192.192.225"[label="4.99"];
+"104.192.192.99" -> "104.192.192.66"[label="0.00"];
+"104.192.192.99" -> "104.192.192.133"[label="2.82"];
+"104.192.192.99" -> "104.192.192.166"[label="3.79"];
+"104.192.192.99" -> "104.192.192.199"[label="9.05"];
+"104.192.192.99" -> "104.192.0.20"[label="1.85"];
+"104.130.1.67" -> "104.130.30.1"[label="2.25"];
+"104.130.1.67" -> "104.0.4.65"[label="1.14"];
+"104.130.1.67" -> "104.130.1.65"[label="1.09"];
+"104.130.1.67" -> "104.130.1.66"[label="1.07"];
+"104.130.1.67" -> "104.130.1.6"[label="3.27"];
+"104.130.1.67" -> "104.130.1.76"[label="11.27"];
+"104.130.1.67" -> "104.130.77.77"[label="55.29"];
+"104.130.1.67" -> "104.131.131.99"[label="17.01"];
+"104.0.23.3" -> "104.0.23.1"[label="0.00"];
+"104.0.23.3" -> "104.0.23.2"[label="2.01"];
+"104.0.23.3" -> "104.0.23.23"[label="1.03"];
+"104.193.24.100" -> "104.192.192.66"[label="8.12"];
+"104.193.24.100" -> "104.192.99.111"[label="98.52"];
+"104.131.131.4" -> "104.131.131.1"[label="7.81"];
+"104.131.131.4" -> "104.131.21.1"[label="34.96"];
+"104.131.131.4" -> "104.131.9.1"[label="51.20"];
+"104.131.131.4" -> "104.131.131.2"[label="2.33"];
+"104.131.131.4" -> "104.131.0.3"[label="2.66"];
+"104.131.131.4" -> "104.131.131.99"[label="1.55"];
+"104.131.131.4" -> "104.131.0.42"[label="1.75"];
+"104.131.131.4" -> "104.129.29.29"[label="0.00"];
+"104.129.17.4" -> "104.129.0.32"[label="1.60"];
+"104.129.17.4" -> "104.129.0.33"[label="1.03"];
+"104.129.17.4" -> "104.129.17.8"[label="2.75"];
+"104.65.23.100" -> "104.0.23.1"[label="2.12"];
+"104.65.23.100" -> "104.66.0.8"[label="1.02"];
+"104.129.46.100" -> "104.129.11.11"[label="0.00"];
+"104.129.46.100" -> "104.129.0.77"[label="34.40"];
+"104.129.46.100" -> "104.129.11.33"[label="9.80"];
+"104.129.46.100" -> "104.129.0.165"[label="34.22"];
+"104.129.46.100" -> "104.129.0.7"[label="0.00"];
+"104.129.46.100" -> "104.129.0.138"[label="105.56"];
+"104.129.46.100" -> "104.0.0.14"[label="1.99"];
+"104.129.46.100" -> "104.129.29.29"[label="342.24"];
+"104.192.192.133" -> "104.192.192.33"[label="4.30"];
+"104.192.192.133" -> "104.192.192.225"[label="3.05"];
+"104.192.192.133" -> "104.192.192.1"[label="3.64"];
+"104.192.192.133" -> "104.0.192.129"[label="2.68"];
+"104.192.192.133" -> "104.192.192.66"[label="2.41"];
+"104.192.192.133" -> "104.192.192.99"[label="3.10"];
+"104.192.192.133" -> "104.192.192.166"[label="2.50"];
+"104.192.192.133" -> "104.192.192.199"[label="3.32"];
+"104.129.0.165" -> "104.131.9.1"[label="289.00"];
+"104.129.0.165" -> "104.131.21.1"[label="0.00"];
+"104.129.0.165" -> "104.129.0.7"[label="0.00"];
+"104.129.0.165" -> "104.129.0.173"[label="70.30"];
+"104.129.0.165" -> "104.0.0.14"[label="5.16"];
+"104.129.0.165" -> "104.130.1.14"[label="0.00"];
+"104.129.0.165" -> "104.129.0.144"[label="32.92"];
+"104.129.0.165" -> "104.129.0.125"[label="2.83"];
+"104.129.0.165" -> "104.129.108.1"[label="0.00"];
+"104.129.0.165" -> "104.129.11.33"[label="0.00"];
+"104.129.0.165" -> "104.129.103.1"[label="2.01"];
+"104.129.0.165" -> "104.129.105.2"[label="1.23"];
+"104.129.0.165" -> "104.129.105.10"[label="2.32"];
+"104.129.0.165" -> "104.129.0.91"[label="1.68"];
+"104.193.0.5" -> "104.130.1.65"[label="28.67"];
+"104.193.0.5" -> "104.192.192.1"[label="2.01"];
+"104.129.0.5" -> "104.129.95.1"[label="11.75"];
+"104.129.0.5" -> "104.129.81.1"[label="2.55"];
+"104.129.0.5" -> "104.129.0.107"[label="35.19"];
+"104.129.0.5" -> "104.129.0.78"[label="3.13"];
+"104.0.0.5" -> "104.0.23.1"[label="1.09"];
+"104.0.0.5" -> "104.0.0.6"[label="1.00"];
+"104.0.0.5" -> "104.0.0.13"[label="1.39"];
+"104.0.0.5" -> "104.0.3.13"[label="3.49"];
+"104.192.192.166" -> "104.192.192.1"[label="1.43"];
+"104.192.192.166" -> "104.0.192.129"[label="1.30"];
+"104.192.192.166" -> "104.192.192.33"[label="1.43"];
+"104.192.192.166" -> "104.192.192.225"[label="1.14"];
+"104.192.192.166" -> "104.192.192.66"[label="1.27"];
+"104.192.192.166" -> "104.192.192.99"[label="1.27"];
+"104.192.192.166" -> "104.192.192.133"[label="1.21"];
+"104.192.192.166" -> "104.192.192.199"[label="1.16"];
+"104.0.0.6" -> "104.202.19.1"[label="51.61"];
+"104.0.0.6" -> "104.65.65.65"[label="1.53"];
+"104.0.0.6" -> "104.66.25.2"[label="10.07"];
+"104.0.0.6" -> "104.0.0.5"[label="1.00"];
+"104.130.1.6" -> "104.130.1.66"[label="2.73"];
+"104.130.1.6" -> "104.130.1.67"[label="3.78"];
+"104.6.0.6" -> "104.65.65.97"[label="3.51"];
+"104.6.0.6" -> "104.65.63.1"[label="10.59"];
+"104.6.0.6" -> "104.0.0.14"[label="108.01"];
+"104.129.0.7" -> "104.129.46.100"[label="0.00"];
+"104.129.0.7" -> "104.129.0.165"[label="9.04"];
+"104.129.0.7" -> "104.129.0.8"[label="2.59"];
+"104.129.0.7" -> "104.129.0.105"[label="8.41"];
+"104.129.0.7" -> "104.129.31.12"[label="11.91"];
+"104.129.0.7" -> "104.129.0.173"[label="13.58"];
+"104.129.0.7" -> "104.0.0.14"[label="2.88"];
+"104.129.0.7" -> "104.129.0.110"[label="3.35"];
+"104.129.0.7" -> "104.129.0.83"[label="2.91"];
+"104.129.0.7" -> "104.129.0.158"[label="4.69"];
+"104.129.0.7" -> "104.129.0.95"[label="6.48"];
+"104.129.1.71" -> "104.0.0.14"[label="1.46"];
+"104.192.99.103" -> "104.192.103.33"[label="3.01"];
+"104.192.99.103" -> "104.192.103.200"[label="2.86"];
+"104.192.99.103" -> "104.192.103.109"[label="2.58"];
+"104.66.7.7" -> "104.66.25.2"[label="4.47"];
+"104.129.0.136" -> "104.129.0.149"[label="1.60"];
+"104.131.0.8" -> "104.131.0.3"[label="1.87"];
+"104.131.0.8" -> "104.131.0.12"[label="11.36"];
+"104.131.0.8" -> "104.131.0.28"[label="2.65"];
+"104.192.103.200" -> "104.192.103.33"[label="2.68"];
+"104.192.103.200" -> "104.192.103.3"[label="1.00"];
+"104.192.103.200" -> "104.192.99.103"[label="1.79"];
+"104.192.103.200" -> "104.192.103.109"[label="91.07"];
+"104.66.0.8" -> "104.0.23.1"[label="1.09"];
+"104.66.0.8" -> "104.65.23.100"[label="1.02"];
+"104.129.17.8" -> "104.129.17.1"[label="1.18"];
+"104.129.17.8" -> "104.129.105.1"[label="7.24"];
+"104.129.17.8" -> "104.129.17.4"[label="2.52"];
+"104.129.17.8" -> "104.129.17.9"[label="1.82"];
+"104.129.17.8" -> "104.129.17.13"[label="1.37"];
+"104.0.4.200" -> "104.0.4.65"[label="0.00"];
+"104.0.4.200" -> "104.0.0.13"[label="1.06"];
+"104.129.0.105" -> "104.129.0.7"[label="16.47"];
+"104.129.0.105" -> "104.129.0.8"[label="18.45"];
+"104.129.0.105" -> "104.129.11.11"[label="12.27"];
+"104.129.0.105" -> "104.129.0.108"[label="11.38"];
+"104.129.17.9" -> "104.129.105.1"[label="394.09"];
+"104.129.17.9" -> "104.129.95.1"[label="5.96"];
+"104.129.17.9" -> "104.129.17.1"[label="1.43"];
+"104.129.17.9" -> "104.129.17.8"[label="2.12"];
+"104.129.17.9" -> "104.129.17.13"[label="1.28"];
+"104.129.14.10" -> "104.129.43.1"[label="2.49"];
+"104.129.0.138" -> "104.129.46.100"[label="309.64"];
+"104.131.1.10" -> "104.131.131.99"[label="1.77"];
+"104.131.0.42" -> "104.131.131.99"[label="2.40"];
+"104.131.0.42" -> "104.131.131.4"[label="2.01"];
+"104.66.28.11" -> "104.66.25.2"[label="2.26"];
+"104.129.0.107" -> "104.129.95.1"[label="38.71"];
+"104.129.0.107" -> "104.129.81.1"[label="3.23"];
+"104.129.0.107" -> "104.129.11.33"[label="6.07"];
+"104.129.0.107" -> "104.129.0.77"[label="2.55"];
+"104.129.0.107" -> "104.0.0.14"[label="0.00"];
+"104.129.0.107" -> "104.129.11.22"[label="55.29"];
+"104.131.9.11" -> "104.131.9.1"[label="1.26"];
+"104.131.9.11" -> "104.131.9.2"[label="1.15"];
+"104.131.9.11" -> "104.131.9.15"[label="1.26"];
+"104.131.9.11" -> "104.131.0.82"[label="1.21"];
+"104.129.11.11" -> "104.129.43.1"[label="71.30"];
+"104.129.11.11" -> "104.129.11.33"[label="14.25"];
+"104.129.11.11" -> "104.129.0.8"[label="0.00"];
+"104.129.11.11" -> "104.129.0.105"[label="21.25"];
+"104.129.11.11" -> "104.0.0.14"[label="2.88"];
+"104.129.11.11" -> "104.129.0.83"[label="0.00"];
+"104.129.11.11" -> "104.129.11.22"[label="1.99"];
+"104.129.11.11" -> "104.129.0.125"[label="20.45"];
+"104.129.11.11" -> "104.129.29.29"[label="16.35"];
+"104.129.11.11" -> "104.129.0.173"[label="66.35"];
+"104.131.0.12" -> "104.131.0.3"[label="2.23"];
+"104.131.0.12" -> "104.131.0.8"[label="7.16"];
+"104.131.0.12" -> "104.131.0.28"[label="1.05"];
+"104.129.0.108" -> "104.129.31.12"[label="0.00"];
+"104.129.0.108" -> "104.129.0.7"[label="34.15"];
+"104.129.0.108" -> "104.129.0.8"[label="15.48"];
+"104.129.0.108" -> "104.129.0.110"[label="84.45"];
+"104.129.0.108" -> "104.129.29.29"[label="0.00"];
+"104.129.0.108" -> "104.129.0.158"[label="3.71"];
+"104.129.0.108" -> "104.129.0.95"[label="5.99"];
+"104.129.31.12" -> "104.129.0.110"[label="92.89"];
+"104.129.31.12" -> "104.129.0.95"[label="0.00"];
+"104.129.31.12" -> "104.129.0.7"[label="6.88"];
+"104.129.31.12" -> "104.129.0.108"[label="14.14"];
+"104.129.31.12" -> "104.0.0.14"[label="2.98"];
+"104.129.31.12" -> "104.129.0.83"[label="51.20"];
+"104.129.31.12" -> "104.129.0.158"[label="27.00"];
+"104.130.1.76" -> "104.130.1.65"[label="1.65"];
+"104.130.1.76" -> "104.130.1.66"[label="10.63"];
+"104.130.1.76" -> "104.130.1.67"[label="0.00"];
+"104.131.21.12" -> "104.131.21.1"[label="2.19"];
+"104.131.21.12" -> "104.131.21.34"[label="1.62"];
+"104.129.0.77" -> "104.129.46.100"[label="27.00"];
+"104.129.0.77" -> "104.129.0.5"[label="66.35"];
+"104.129.0.77" -> "104.129.81.1"[label="52.10"];
+"104.129.0.77" -> "104.129.0.107"[label="2.26"];
+"104.129.0.77" -> "104.0.0.14"[label="33.85"];
+"104.129.0.77" -> "104.129.29.29"[label="0.00"];
+"104.129.0.173" -> "104.131.9.1"[label="0.00"];
+"104.129.0.173" -> "104.129.0.7"[label="20.87"];
+"104.129.0.173" -> "104.0.0.14"[label="10.65"];
+"104.129.0.173" -> "104.129.0.165"[label="225.78"];
+"104.129.0.173" -> "104.129.11.11"[label="0.00"];
+"104.0.3.13" -> "104.0.23.1"[label="64.51"];
+"104.0.3.13" -> "104.0.0.5"[label="5.00"];
+"104.0.3.13" -> "104.66.24.113"[label="1.68"];
+"104.129.17.13" -> "104.129.105.1"[label="1.98"];
+"104.129.17.13" -> "104.129.17.1"[label="1.60"];
+"104.129.17.13" -> "104.129.17.8"[label="1.99"];
+"104.129.17.13" -> "104.129.17.9"[label="2.32"];
+"104.130.77.77" -> "104.130.1.65"[label="3.83"];
+"104.130.77.77" -> "104.130.1.66"[label="2.99"];
+"104.130.77.77" -> "104.130.1.67"[label="41.68"];
+"104.0.0.13" -> "104.0.4.65"[label="1.70"];
+"104.0.0.13" -> "104.0.0.5"[label="1.36"];
+"104.0.0.13" -> "104.0.4.200"[label="1.78"];
+"104.0.0.13" -> "104.0.0.14"[label="1.00"];
+"104.130.77.78" -> "104.130.1.66"[label="1.93"];
+"104.129.0.78" -> "104.129.108.1"[label="19.14"];
+"104.129.0.78" -> "104.129.11.33"[label="54.01"];
+"104.129.0.78" -> "104.129.95.1"[label="23.91"];
+"104.129.0.78" -> "104.129.103.1"[label="20.07"];
+"104.129.0.78" -> "104.129.0.5"[label="7.87"];
+"104.0.0.14" -> "104.202.53.1"[label="106.25"];
+"104.0.0.14" -> "104.129.11.33"[label="0.00"];
+"104.0.0.14" -> "104.65.63.1"[label="58.06"];
+"104.0.0.14" -> "104.129.81.1"[label="54.23"];
+"104.0.0.14" -> "104.129.46.100"[label="1.54"];
+"104.0.0.14" -> "104.129.0.165"[label="0.00"];
+"104.0.0.14" -> "104.129.0.7"[label="1.72"];
+"104.0.0.14" -> "104.129.1.71"[label="2.62"];
+"104.0.0.14" -> "104.129.0.8"[label="5.69"];
+"104.0.0.14" -> "104.129.0.107"[label="38.25"];
+"104.0.0.14" -> "104.129.11.11"[label="2.87"];
+"104.0.0.14" -> "104.129.0.108"[label="55.77"];
+"104.0.0.14" -> "104.129.31.12"[label="3.39"];
+"104.0.0.14" -> "104.129.0.77"[label="61.93"];
+"104.0.0.14" -> "104.129.0.173"[label="5.68"];
+"104.0.0.14" -> "104.0.0.13"[label="1.00"];
+"104.0.0.14" -> "104.129.0.110"[label="3.18"];
+"104.0.0.14" -> "104.129.0.83"[label="2.19"];
+"104.0.0.14" -> "104.129.29.29"[label="14.63"];
+"104.0.0.14" -> "104.0.0.29"[label="1.16"];
+"104.0.0.14" -> "104.129.0.158"[label="0.00"];
+"104.0.0.14" -> "104.129.0.95"[label="5.59"];
+"104.129.0.110" -> "104.129.0.7"[label="0.00"];
+"104.129.0.110" -> "104.129.0.108"[label="96.33"];
+"104.129.0.110" -> "104.0.0.14"[label="4.32"];
+"104.129.0.110" -> "104.129.0.144"[label="5.09"];
+"104.129.0.110" -> "104.129.0.149"[label="4.70"];
+"104.129.0.110" -> "104.129.0.158"[label="0.00"];
+"104.129.0.110" -> "104.129.0.8"[label="11.38"];
+"104.129.0.110" -> "104.129.0.83"[label="44.23"];
+"104.130.1.14" -> "104.129.11.33"[label="3.48"];
+"104.130.1.14" -> "104.129.43.1"[label="2.68"];
+"104.130.1.14" -> "104.129.29.29"[label="3.45"];
+"104.130.1.14" -> "104.0.0.14"[label="464.46"];
+"104.131.0.47" -> "104.131.9.1"[label="6.20"];
+"104.192.99.111" -> "104.192.192.66"[label="89.69"];
+"104.192.99.111" -> "104.193.24.100"[label="65.03"];
+"104.192.99.111" -> "104.192.0.20"[label="1.95"];
+"104.131.9.15" -> "104.131.9.1"[label="2.05"];
+"104.131.9.15" -> "104.131.9.2"[label="1.33"];
+"104.131.9.15" -> "104.131.9.11"[label="1.82"];
+"104.131.9.15" -> "104.131.0.82"[label="1.46"];
+"104.129.0.144" -> "104.129.0.165"[label="51.00"];
+"104.129.0.144" -> "104.129.0.110"[label="4.20"];
+"104.129.0.144" -> "104.129.0.149"[label="1.19"];
+"104.129.0.48" -> "104.129.43.1"[label="1.29"];
+"104.66.24.113" -> "104.66.0.33"[label="1.55"];
+"104.66.24.113" -> "104.0.3.13"[label="3.19"];
+"104.66.24.113" -> "104.66.0.18"[label="1.34"];
+"104.129.0.113" -> "104.129.0.125"[label="18.43"];
+"104.129.0.113" -> "104.129.0.95"[label="144.50"];
+"104.131.0.82" -> "104.131.21.1"[label="11.35"];
+"104.131.0.82" -> "104.131.9.1"[label="1.36"];
+"104.131.0.82" -> "104.131.9.2"[label="1.23"];
+"104.131.0.82" -> "104.131.9.11"[label="1.29"];
+"104.131.0.82" -> "104.131.9.15"[label="1.14"];
+"104.66.0.18" -> "104.66.0.33"[label="1.08"];
+"104.66.0.18" -> "104.66.24.113"[label="2.06"];
+"104.129.0.83" -> "104.131.9.1"[label="0.00"];
+"104.129.0.83" -> "104.129.0.7"[label="2.91"];
+"104.129.0.83" -> "104.129.11.11"[label="0.00"];
+"104.129.0.83" -> "104.129.31.12"[label="15.52"];
+"104.129.0.83" -> "104.0.0.14"[label="1.81"];
+"104.129.0.83" -> "104.129.0.95"[label="58.06"];
+"104.192.0.20" -> "104.192.192.33"[label="1.22"];
+"104.192.0.20" -> "104.192.192.66"[label="1.19"];
+"104.192.0.20" -> "104.192.192.99"[label="2.65"];
+"104.192.0.20" -> "104.192.99.111"[label="1.60"];
+"104.129.0.149" -> "104.129.0.110"[label="10.69"];
+"104.129.0.149" -> "104.129.0.144"[label="1.70"];
+"104.129.11.22" -> "104.129.11.33"[label="22.12"];
+"104.129.11.22" -> "104.129.0.107"[label="0.00"];
+"104.129.11.22" -> "104.129.11.11"[label="2.67"];
+"104.129.11.22" -> "104.129.29.29"[label="0.00"];
+"104.0.23.22" -> "104.0.23.2"[label="1.01"];
+"104.66.0.23" -> "104.66.25.2"[label="2.28"];
+"104.66.0.23" -> "104.66.0.24"[label="1.01"];
+"104.0.23.23" -> "104.0.23.1"[label="1.02"];
+"104.0.23.23" -> "104.0.23.3"[label="1.02"];
+"104.66.0.24" -> "104.66.25.2"[label="1.75"];
+"104.66.0.24" -> "104.66.0.23"[label="1.00"];
+"104.129.0.91" -> "104.129.95.1"[label="0.00"];
+"104.129.0.91" -> "104.129.108.1"[label="2.06"];
+"104.129.0.91" -> "104.129.103.1"[label="1.93"];
+"104.129.0.91" -> "104.129.105.2"[label="3.93"];
+"104.129.0.91" -> "104.129.0.165"[label="1.61"];
+"104.129.0.91" -> "104.129.105.10"[label="0.00"];
+"104.131.0.28" -> "104.131.0.3"[label="1.67"];
+"104.131.0.28" -> "104.131.0.8"[label="1.25"];
+"104.131.0.28" -> "104.131.0.12"[label="2.80"];
+"104.129.0.125" -> "104.129.11.33"[label="27.32"];
+"104.129.0.125" -> "104.129.0.165"[label="4.52"];
+"104.129.0.125" -> "104.129.0.8"[label="0.00"];
+"104.129.0.125" -> "104.129.11.11"[label="0.00"];
+"104.129.0.125" -> "104.129.0.173"[label="0.00"];
+"104.129.0.125" -> "104.129.0.113"[label="15.18"];
+"104.129.0.125" -> "104.129.0.158"[label="0.00"];
+"104.129.29.29" -> "104.129.100.1"[label="0.00"];
+"104.129.29.29" -> "104.131.9.1"[label="26.22"];
+"104.129.29.29" -> "104.129.43.1"[label="70.99"];
+"104.129.29.29" -> "104.129.81.1"[label="4.98"];
+"104.129.29.29" -> "104.131.21.1"[label="71.46"];
+"104.129.29.29" -> "104.129.11.33"[label="7.28"];
+"104.129.29.29" -> "104.0.192.130"[label="1.00"];
+"104.129.29.29" -> "104.129.46.100"[label="0.00"];
+"104.129.29.29" -> "104.131.131.4"[label="0.00"];
+"104.129.29.29" -> "104.129.14.10"[label="0.00"];
+"104.129.29.29" -> "104.129.11.11"[label="16.14"];
+"104.129.29.29" -> "104.0.0.14"[label="6.83"];
+"104.129.29.29" -> "104.130.1.14"[label="0.00"];
+"104.0.0.29" -> "104.0.0.14"[label="1.10"];
+"104.129.0.158" -> "104.129.0.7"[label="7.30"];
+"104.129.0.158" -> "104.129.0.8"[label="1.64"];
+"104.129.0.158" -> "104.129.0.108"[label="3.35"];
+"104.129.0.158" -> "104.129.31.12"[label="6.39"];
+"104.129.0.158" -> "104.129.0.110"[label="10.49"];
+"104.129.0.158" -> "104.0.0.14"[label="19.18"];
+"104.129.0.158" -> "104.129.0.95"[label="5.66"];
+"104.129.0.95" -> "104.129.0.7"[label="3.16"];
+"104.129.0.95" -> "104.129.31.12"[label="53.08"];
+"104.129.0.95" -> "104.129.0.108"[label="4.55"];
+"104.129.0.95" -> "104.0.0.14"[label="14.07"];
+"104.129.0.95" -> "104.129.0.110"[label="8.94"];
+"104.129.0.95" -> "104.129.0.113"[label="9.10"];
+"104.129.0.95" -> "104.129.0.158"[label="5.61"];
+"104.129.0.95" -> "104.129.0.8"[label="2.85"];
+"104.129.0.95" -> "104.129.0.83"[label="6.50"];
+"104.129.43.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.81.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.81.1" -> "104.129.81.11/255.255.255.255"[label="HNA"];
+"104.129.81.11/255.255.255.255"[shape=diamond];
+"104.129.81.1" -> "104.129.111.111/255.255.255.255"[label="HNA"];
+"104.129.111.111/255.255.255.255"[shape=diamond];
+"104.129.17.1" -> "104.129.17.220/255.255.255.255"[label="HNA"];
+"104.129.17.220/255.255.255.255"[shape=diamond];
+"104.131.21.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.202.19.1" -> "104.202.19.0/255.255.255.0"[label="HNA"];
+"104.202.19.0/255.255.255.0"[shape=diamond];
+"104.202.19.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.130.11.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.65.65.97" -> "104.65.65.102/255.255.255.255"[label="HNA"];
+"104.65.65.102/255.255.255.255"[shape=diamond];
+"104.65.65.97" -> "104.65.65.98/255.255.255.255"[label="HNA"];
+"104.65.65.98/255.255.255.255"[shape=diamond];
+"104.131.9.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.9.1" -> "104.131.9.229/255.255.255.255"[label="HNA"];
+"104.131.9.229/255.255.255.255"[shape=diamond];
+"104.131.9.1" -> "104.131.9.9/255.255.255.255"[label="HNA"];
+"104.131.9.9/255.255.255.255"[shape=diamond];
+"104.0.23.3" -> "104.0.23.99/255.255.255.255"[label="HNA"];
+"104.0.23.99/255.255.255.255"[shape=diamond];
+"104.131.131.99" -> "104.131.1.9/255.255.255.255"[label="HNA"];
+"104.131.1.9/255.255.255.255"[shape=diamond];
+"104.129.46.100" -> "104.129.46.96/255.255.255.224"[label="HNA"];
+"104.129.46.96/255.255.255.224"[shape=diamond];
+"104.129.46.100" -> "104.129.46.0/255.255.255.192"[label="HNA"];
+"104.129.46.0/255.255.255.192"[shape=diamond];
+"104.193.0.5" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.21.12" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.31.12" -> "104.129.31.0/255.255.255.0"[label="HNA"];
+"104.129.31.0/255.255.255.0"[shape=diamond];
+"104.130.1.14" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.9.15" -> "104.131.9.16/255.255.255.248"[label="HNA"];
+"104.131.9.16/255.255.255.248"[shape=diamond];
+"104.66.0.24" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.29.29" -> "104.129.29.224/255.255.255.224"[label="HNA"];
+"104.129.29.224/255.255.255.224"[shape=diamond];
+"104.0.0.29" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.0.0.29" -> "104.0.0.41/255.255.255.255"[label="HNA"];
+"104.0.0.41/255.255.255.255"[shape=diamond];
+}
+
+digraph topology
+{
+"104.131.131.1" -> "104.131.21.1"[label="0.00", style=dashed];
+"104.131.131.1" -> "104.131.131.2"[label="55.92", style=solid];
+"104.131.131.2"[shape=box];
+"104.131.131.1" -> "104.131.0.3"[label="0.00", style=solid];
+"104.131.0.3"[shape=box];
+"104.131.131.1" -> "104.131.131.99"[label="2.68", style=solid];
+"104.131.131.99"[shape=box];
+"104.131.131.1" -> "104.131.131.4"[label="4.26", style=solid];
+"104.131.131.4"[shape=box];
+"104.131.131.1" -> "104.131.0.28"[label="0.00", style=solid];
+"104.131.0.28"[shape=box];
+"104.131.131.1" -> "104.129.29.29"[label="0.00", style=dashed];
+"104.129.0.32" -> "104.129.17.4"[label="3.22"];
+"104.131.2.1" -> "104.130.11.66"[label="13.62"];
+"104.131.2.1" -> "104.131.21.1"[label="30.53"];
+"104.131.2.1" -> "104.131.9.1"[label="3.36"];
+"104.131.2.1" -> "104.131.2.2"[label="1.96"];
+"104.192.192.225" -> "104.0.192.129"[label="3.79"];
+"104.192.192.225" -> "104.192.192.1"[label="3.97"];
+"104.192.192.225" -> "104.192.192.33"[label="4.41"];
+"104.192.192.225" -> "104.192.192.66"[label="3.57"];
+"104.192.192.225" -> "104.192.192.99"[label="4.20"];
+"104.192.192.225" -> "104.192.192.133"[label="3.28"];
+"104.192.192.225" -> "104.192.192.166"[label="3.41"];
+"104.192.192.225" -> "104.192.192.199"[label="4.30"];
+"104.129.0.129" -> "104.129.103.1"[label="6.11"];
+"104.129.0.129" -> "104.129.105.1"[label="0.00"];
+"104.129.11.33" -> "104.129.95.1"[label="0.00"];
+"104.129.11.33" -> "104.0.0.14"[label="154.82"];
+"104.129.11.33" -> "104.129.0.78"[label="61.11"];
+"104.129.11.33" -> "104.129.81.1"[label="5.64"];
+"104.129.11.33" -> "104.129.43.1"[label="15.18"];
+"104.129.11.33" -> "104.129.46.100"[label="9.99"];
+"104.129.11.33" -> "104.129.0.8"[label="21.50"];
+"104.129.11.33" -> "104.129.0.107"[label="29.97"];
+"104.129.11.33" -> "104.129.11.11"[label="3.53"];
+"104.129.11.33" -> "104.130.1.14"[label="0.00"];
+"104.129.11.33" -> "104.129.11.22"[label="19.35"];
+"104.129.11.33" -> "104.129.29.29"[label="5.14"];
+"104.129.100.1" -> "104.129.43.1"[label="1.50"];
+"104.131.9.1" -> "104.131.131.1"[label="0.00"];
+"104.131.9.1" -> "104.131.2.1"[label="6.47"];
+"104.131.9.1" -> "104.131.21.1"[label="1.41"];
+"104.131.9.1" -> "104.131.9.66"[label="2.71"];
+"104.131.9.1" -> "104.130.11.66"[label="8.23"];
+"104.131.9.1" -> "104.131.9.2"[label="1.75"];
+"104.131.9.1" -> "104.130.1.67"[label="94.93"];
+"104.131.9.1" -> "104.131.131.4"[label="34.13"];
+"104.131.9.1" -> "104.129.0.165"[label="520.20"];
+"104.131.9.1" -> "104.131.9.11"[label="1.26"];
+"104.131.9.1" -> "104.131.0.47"[label="6.20"];
+"104.131.9.1" -> "104.131.9.15"[label="2.69"];
+"104.131.9.1" -> "104.131.0.82"[label="1.39"];
+"104.131.9.1" -> "104.129.29.29"[label="76.14"];
+"104.131.21.1" -> "104.131.2.1"[label="0.00"];
+"104.131.21.1" -> "104.131.9.1"[label="1.39"];
+"104.131.21.1" -> "104.130.11.66"[label="120.42"];
+"104.131.21.1" -> "104.131.21.34"[label="5.67"];
+"104.131.21.1" -> "104.131.131.4"[label="23.06"];
+"104.131.21.1" -> "104.131.21.12"[label="3.87"];
+"104.131.21.1" -> "104.131.0.82"[label="8.39"];
+"104.131.21.1" -> "104.129.29.29"[label="72.25"];
+"104.129.103.1" -> "104.129.0.77"[label="0.00"];
+"104.129.103.1" -> "104.129.95.1"[label="38.25"];
+"104.129.103.1" -> "104.129.108.1"[label="1.92"];
+"104.129.103.1" -> "104.129.0.129"[label="5.57"];
+"104.129.103.1" -> "104.129.105.2"[label="3.32"];
+"104.129.103.1" -> "104.129.0.165"[label="1.76"];
+"104.129.103.1" -> "104.129.105.10"[label="10.93"];
+"104.129.103.1" -> "104.129.0.78"[label="21.98"];
+"104.129.103.1" -> "104.129.0.91"[label="1.85"];
+"104.130.30.1" -> "104.130.1.65"[label="118.23"];
+"104.130.30.1" -> "104.130.1.67"[label="2.44"];
+"104.198.23.1" -> "104.130.1.66"[label="3.15"];
+"104.65.63.1" -> "104.6.0.6"[label="10.48"];
+"104.65.63.1" -> "104.0.0.14"[label="72.25"];
+"104.129.108.1" -> "104.129.103.1"[label="13.60"];
+"104.129.108.1" -> "104.129.105.2"[label="1.40"];
+"104.129.108.1" -> "104.129.0.165"[label="1.44"];
+"104.129.108.1" -> "104.129.105.10"[label="1.28"];
+"104.129.108.1" -> "104.129.0.78"[label="102.08"];
+"104.129.108.1" -> "104.129.0.91"[label="2.20"];
+"104.129.105.1" -> "104.129.17.9"[label="0.00"];
+"104.129.105.1" -> "104.129.17.1"[label="32.11"];
+"104.129.105.1" -> "104.129.105.2"[label="1.88"];
+"104.129.105.1" -> "104.129.17.8"[label="16.06"];
+"104.129.105.1" -> "104.129.105.10"[label="1.54"];
+"104.129.105.1" -> "104.129.17.13"[label="2.26"];
+"104.129.105.1" -> "104.129.0.141"[label="7.35"];
+"104.129.17.1" -> "104.129.105.1"[label="15.52"];
+"104.129.17.1" -> "104.129.17.8"[label="1.82"];
+"104.129.17.1" -> "104.129.17.9"[label="1.33"];
+"104.129.17.1" -> "104.129.17.13"[label="1.36"];
+"104.129.95.1" -> "104.129.81.1"[label="6.27"];
+"104.129.95.1" -> "104.129.0.5"[label="22.65"];
+"104.129.95.1" -> "104.129.0.107"[label="32.71"];
+"104.129.95.1" -> "104.129.0.77"[label="0.00"];
+"104.129.95.1" -> "104.129.0.78"[label="21.39"];
+"104.129.95.1" -> "104.129.11.33"[label="0.00"];
+"104.129.95.1" -> "104.129.103.1"[label="136.61"];
+"104.129.43.1" -> "104.129.11.33"[label="9.11"];
+"104.129.43.1" -> "104.129.100.1"[label="1.83"];
+"104.129.43.1" -> "104.129.14.10"[label="6.25"];
+"104.129.43.1" -> "104.129.11.11"[label="51.00"];
+"104.129.43.1" -> "104.130.1.14"[label="4.29"];
+"104.129.43.1" -> "104.129.0.48"[label="1.47"];
+"104.129.43.1" -> "104.129.29.29"[label="73.06"];
+"104.129.43.1" -> "104.129.0.32"[label="28.08"];
+"104.129.81.1" -> "104.129.95.1"[label="8.17"];
+"104.129.81.1" -> "104.129.11.33"[label="4.92"];
+"104.129.81.1" -> "104.129.0.5"[label="8.82"];
+"104.129.81.1" -> "104.129.0.107"[label="2.53"];
+"104.129.81.1" -> "104.129.0.77"[label="79.40"];
+"104.129.81.1" -> "104.0.0.14"[label="57.95"];
+"104.129.81.1" -> "104.129.29.29"[label="8.18"];
+"104.65.65.97" -> "104.65.65.65"[label="1.00"];
+"104.65.65.97" -> "104.6.0.6"[label="4.07"];
+"104.130.1.65" -> "104.130.30.1"[label="32.84"];
+"104.130.1.65" -> "104.0.4.65"[label="1.00"];
+"104.130.1.65" -> "104.130.1.66"[label="1.00"];
+"104.130.1.65" -> "104.130.1.67"[label="1.02"];
+"104.130.1.65" -> "104.193.0.5"[label="0.00"];
+"104.130.1.65" -> "104.130.1.76"[label="1.78"];
+"104.130.1.65" -> "104.130.77.77"[label="3.52"];
+"104.130.1.65" -> "104.130.1.6"[label="104.88"];
+"104.0.4.65" -> "104.130.1.65"[label="1.00"];
+"104.0.4.65" -> "104.130.1.66"[label="1.00"];
+"104.0.4.65" -> "104.130.1.67"[label="1.00"];
+"104.0.4.65" -> "104.0.4.200"[label="23.70"];
+"104.0.4.65" -> "104.0.0.13"[label="1.37"];
+"104.0.23.1" -> "104.66.25.2"[label="774.11"];
+"104.0.23.1" -> "104.0.23.2"[label="1.00"];
+"104.0.23.1" -> "104.0.23.3"[label="1.00"];
+"104.0.23.1" -> "104.65.23.100"[label="1.80"];
+"104.0.23.1" -> "104.0.0.5"[label="1.02"];
+"104.0.23.1" -> "104.66.0.8"[label="1.08"];
+"104.0.23.1" -> "104.0.3.13"[label="129.02"];
+"104.0.23.1" -> "104.0.23.23"[label="1.01"];
+"104.65.65.65" -> "104.65.65.97"[label="1.00"];
+"104.65.65.65" -> "104.0.0.6"[label="1.33"];
+"104.130.11.1" -> "104.130.11.66"[label="1.00"];
+"104.66.0.33" -> "104.66.24.113"[label="2.30"];
+"104.66.0.33" -> "104.66.0.18"[label="1.47"];
+"104.131.9.66" -> "104.131.9.1"[label="2.78"];
+"104.131.9.2" -> "104.131.9.1"[label="1.58"];
+"104.131.9.2" -> "104.131.9.11"[label="1.54"];
+"104.131.9.2" -> "104.131.9.15"[label="1.26"];
+"104.131.9.2" -> "104.131.0.82"[label="1.56"];
+"104.66.25.2" -> "104.0.23.1"[label="774.11"];
+"104.66.25.2" -> "104.66.0.2"[label="2.83"];
+"104.66.25.2" -> "104.0.0.6"[label="14.43"];
+"104.66.25.2" -> "104.66.7.7"[label="6.07"];
+"104.66.25.2" -> "104.66.28.11"[label="3.10"];
+"104.66.25.2" -> "104.66.0.23"[label="2.58"];
+"104.66.25.2" -> "104.66.0.24"[label="2.87"];
+"104.193.0.2" -> "104.192.192.66"[label="4.87"];
+"104.192.192.66" -> "104.192.192.33"[label="3.83"];
+"104.192.192.66" -> "104.0.192.129"[label="3.34"];
+"104.192.192.66" -> "104.192.192.225"[label="3.79"];
+"104.192.192.66" -> "104.192.192.1"[label="3.89"];
+"104.192.192.66" -> "104.193.0.2"[label="1.18"];
+"104.192.192.66" -> "104.192.192.99"[label="3.35"];
+"104.192.192.66" -> "104.193.24.100"[label="7.30"];
+"104.192.192.66" -> "104.192.192.133"[label="3.57"];
+"104.192.192.66" -> "104.192.192.166"[label="2.50"];
+"104.192.192.66" -> "104.192.192.199"[label="5.09"];
+"104.192.192.66" -> "104.192.99.111"[label="23.84"];
+"104.192.192.66" -> "104.192.0.20"[label="1.22"];
+"104.131.21.34" -> "104.131.21.1"[label="2.51"];
+"104.131.21.34" -> "104.131.21.12"[label="1.46"];
+"104.130.11.66" -> "104.131.2.1"[label="11.69"];
+"104.130.11.66" -> "104.131.21.1"[label="0.00"];
+"104.130.11.66" -> "104.131.9.1"[label="10.59"];
+"104.130.11.66" -> "104.130.11.1"[label="1.00"];
+"104.130.11.66" -> "104.131.2.2"[label="0.00"];
+"104.131.2.2" -> "104.131.2.1"[label="1.85"];
+"104.131.2.2" -> "104.130.11.66"[label="0.00"];
+"104.66.0.2" -> "104.66.25.2"[label="2.19"];
+"104.202.0.2" -> "104.202.19.1"[label="1.54"];
+"104.129.105.2" -> "104.129.105.1"[label="22.39"];
+"104.129.105.2" -> "104.129.11.33"[label="0.00"];
+"104.129.105.2" -> "104.129.108.1"[label="1.48"];
+"104.129.105.2" -> "104.129.103.1"[label="4.09"];
+"104.129.105.2" -> "104.129.0.165"[label="1.59"];
+"104.129.105.2" -> "104.129.105.10"[label="1.70"];
+"104.129.105.2" -> "104.129.0.91"[label="4.92"];
+"104.131.131.2" -> "104.131.131.1"[label="75.00"];
+"104.131.131.2" -> "104.131.131.4"[label="1.53"];
+"104.131.131.2" -> "104.131.1.10"[label="8.50"];
+"104.130.1.66" -> "104.198.23.1"[label="3.39"];
+"104.130.1.66" -> "104.130.1.65"[label="1.00"];
+"104.130.1.66" -> "104.0.4.65"[label="1.00"];
+"104.130.1.66" -> "104.130.1.67"[label="1.09"];
+"104.130.1.66" -> "104.130.1.6"[label="2.72"];
+"104.130.1.66" -> "104.130.1.76"[label="13.66"];
+"104.130.1.66" -> "104.130.77.77"[label="2.57"];
+"104.130.1.66" -> "104.130.77.78"[label="2.01"];
+"104.0.192.130" -> "104.129.29.29"[label="1.00"];
+"104.0.192.130" -> "104.0.192.129"[label="0.00"];
+"104.0.23.2" -> "104.0.23.1"[label="1.00"];
+"104.0.23.2" -> "104.0.23.3"[label="2.01"];
+"104.0.23.2" -> "104.0.23.22"[label="1.01"];
+"104.131.131.99" -> "104.131.131.1"[label="3.34"];
+"104.131.131.99" -> "104.131.0.3"[label="2.36"];
+"104.131.131.99" -> "104.130.1.67"[label="22.77"];
+"104.131.131.99" -> "104.131.131.4"[label="2.33"];
+"104.131.131.99" -> "104.131.0.42"[label="2.40"];
+"104.131.131.99" -> "104.131.1.10"[label="3.30"];
+"104.192.192.99" -> "104.0.192.129"[label="6.01"];
+"104.192.192.99" -> "104.192.192.1"[label="6.14"];
+"104.192.192.99" -> "104.192.192.33"[label="6.24"];
+"104.192.192.99" -> "104.192.192.225"[label="4.99"];
+"104.192.192.99" -> "104.192.192.66"[label="0.00"];
+"104.192.192.99" -> "104.192.192.133"[label="2.82"];
+"104.192.192.99" -> "104.192.192.166"[label="3.79"];
+"104.192.192.99" -> "104.192.192.199"[label="9.05"];
+"104.192.192.99" -> "104.192.0.20"[label="1.85"];
+"104.130.1.67" -> "104.130.30.1"[label="2.25"];
+"104.130.1.67" -> "104.0.4.65"[label="1.14"];
+"104.130.1.67" -> "104.130.1.65"[label="1.09"];
+"104.130.1.67" -> "104.130.1.66"[label="1.07"];
+"104.130.1.67" -> "104.130.1.6"[label="3.27"];
+"104.130.1.67" -> "104.130.1.76"[label="11.27"];
+"104.130.1.67" -> "104.130.77.77"[label="55.29"];
+"104.130.1.67" -> "104.131.131.99"[label="17.01"];
+"104.0.23.3" -> "104.0.23.1"[label="0.00"];
+"104.0.23.3" -> "104.0.23.2"[label="2.01"];
+"104.0.23.3" -> "104.0.23.23"[label="1.03"];
+"104.193.24.100" -> "104.192.192.66"[label="8.12"];
+"104.193.24.100" -> "104.192.99.111"[label="98.52"];
+"104.131.131.4" -> "104.131.131.1"[label="7.81"];
+"104.131.131.4" -> "104.131.21.1"[label="34.96"];
+"104.131.131.4" -> "104.131.9.1"[label="51.20"];
+"104.131.131.4" -> "104.131.131.2"[label="2.33"];
+"104.131.131.4" -> "104.131.0.3"[label="2.66"];
+"104.131.131.4" -> "104.131.131.99"[label="1.55"];
+"104.131.131.4" -> "104.131.0.42"[label="1.75"];
+"104.131.131.4" -> "104.129.29.29"[label="0.00"];
+"104.129.17.4" -> "104.129.0.32"[label="1.60"];
+"104.129.17.4" -> "104.129.0.33"[label="1.03"];
+"104.129.17.4" -> "104.129.17.8"[label="2.75"];
+"104.65.23.100" -> "104.0.23.1"[label="2.12"];
+"104.65.23.100" -> "104.66.0.8"[label="1.02"];
+"104.129.46.100" -> "104.129.11.11"[label="0.00"];
+"104.129.46.100" -> "104.129.0.77"[label="34.40"];
+"104.129.46.100" -> "104.129.11.33"[label="9.80"];
+"104.129.46.100" -> "104.129.0.165"[label="34.22"];
+"104.129.46.100" -> "104.129.0.7"[label="0.00"];
+"104.129.46.100" -> "104.129.0.138"[label="105.56"];
+"104.129.46.100" -> "104.0.0.14"[label="1.99"];
+"104.129.46.100" -> "104.129.29.29"[label="342.24"];
+"104.192.192.133" -> "104.192.192.33"[label="4.30"];
+"104.192.192.133" -> "104.192.192.225"[label="3.05"];
+"104.192.192.133" -> "104.192.192.1"[label="3.64"];
+"104.192.192.133" -> "104.0.192.129"[label="2.68"];
+"104.192.192.133" -> "104.192.192.66"[label="2.41"];
+"104.192.192.133" -> "104.192.192.99"[label="3.10"];
+"104.192.192.133" -> "104.192.192.166"[label="2.50"];
+"104.192.192.133" -> "104.192.192.199"[label="3.32"];
+"104.129.0.165" -> "104.131.9.1"[label="289.00"];
+"104.129.0.165" -> "104.131.21.1"[label="0.00"];
+"104.129.0.165" -> "104.129.0.7"[label="0.00"];
+"104.129.0.165" -> "104.129.0.173"[label="70.30"];
+"104.129.0.165" -> "104.0.0.14"[label="5.16"];
+"104.129.0.165" -> "104.130.1.14"[label="0.00"];
+"104.129.0.165" -> "104.129.0.144"[label="32.92"];
+"104.129.0.165" -> "104.129.0.125"[label="2.83"];
+"104.129.0.165" -> "104.129.108.1"[label="0.00"];
+"104.129.0.165" -> "104.129.11.33"[label="0.00"];
+"104.129.0.165" -> "104.129.103.1"[label="2.01"];
+"104.129.0.165" -> "104.129.105.2"[label="1.23"];
+"104.129.0.165" -> "104.129.105.10"[label="2.32"];
+"104.129.0.165" -> "104.129.0.91"[label="1.68"];
+"104.193.0.5" -> "104.130.1.65"[label="28.67"];
+"104.193.0.5" -> "104.192.192.1"[label="2.01"];
+"104.129.0.5" -> "104.129.95.1"[label="11.75"];
+"104.129.0.5" -> "104.129.81.1"[label="2.55"];
+"104.129.0.5" -> "104.129.0.107"[label="35.19"];
+"104.129.0.5" -> "104.129.0.78"[label="3.13"];
+"104.0.0.5" -> "104.0.23.1"[label="1.09"];
+"104.0.0.5" -> "104.0.0.6"[label="1.00"];
+"104.0.0.5" -> "104.0.0.13"[label="1.39"];
+"104.0.0.5" -> "104.0.3.13"[label="3.49"];
+"104.192.192.166" -> "104.192.192.1"[label="1.43"];
+"104.192.192.166" -> "104.0.192.129"[label="1.30"];
+"104.192.192.166" -> "104.192.192.33"[label="1.43"];
+"104.192.192.166" -> "104.192.192.225"[label="1.14"];
+"104.192.192.166" -> "104.192.192.66"[label="1.27"];
+"104.192.192.166" -> "104.192.192.99"[label="1.27"];
+"104.192.192.166" -> "104.192.192.133"[label="1.21"];
+"104.192.192.166" -> "104.192.192.199"[label="1.16"];
+"104.0.0.6" -> "104.202.19.1"[label="51.61"];
+"104.0.0.6" -> "104.65.65.65"[label="1.53"];
+"104.0.0.6" -> "104.66.25.2"[label="10.07"];
+"104.0.0.6" -> "104.0.0.5"[label="1.00"];
+"104.130.1.6" -> "104.130.1.66"[label="2.73"];
+"104.130.1.6" -> "104.130.1.67"[label="3.78"];
+"104.6.0.6" -> "104.65.65.97"[label="3.51"];
+"104.6.0.6" -> "104.65.63.1"[label="10.59"];
+"104.6.0.6" -> "104.0.0.14"[label="108.01"];
+"104.129.0.7" -> "104.129.46.100"[label="0.00"];
+"104.129.0.7" -> "104.129.0.165"[label="9.04"];
+"104.129.0.7" -> "104.129.0.8"[label="2.59"];
+"104.129.0.7" -> "104.129.0.105"[label="8.41"];
+"104.129.0.7" -> "104.129.31.12"[label="11.91"];
+"104.129.0.7" -> "104.129.0.173"[label="13.58"];
+"104.129.0.7" -> "104.0.0.14"[label="2.88"];
+"104.129.0.7" -> "104.129.0.110"[label="3.35"];
+"104.129.0.7" -> "104.129.0.83"[label="2.91"];
+"104.129.0.7" -> "104.129.0.158"[label="4.69"];
+"104.129.0.7" -> "104.129.0.95"[label="6.48"];
+"104.129.1.71" -> "104.0.0.14"[label="1.46"];
+"104.192.99.103" -> "104.192.103.33"[label="3.01"];
+"104.192.99.103" -> "104.192.103.200"[label="2.86"];
+"104.192.99.103" -> "104.192.103.109"[label="2.58"];
+"104.66.7.7" -> "104.66.25.2"[label="4.47"];
+"104.129.0.136" -> "104.129.0.149"[label="1.60"];
+"104.131.0.8" -> "104.131.0.3"[label="1.87"];
+"104.131.0.8" -> "104.131.0.12"[label="11.36"];
+"104.131.0.8" -> "104.131.0.28"[label="2.65"];
+"104.192.103.200" -> "104.192.103.33"[label="2.68"];
+"104.192.103.200" -> "104.192.103.3"[label="1.00"];
+"104.192.103.200" -> "104.192.99.103"[label="1.79"];
+"104.192.103.200" -> "104.192.103.109"[label="91.07"];
+"104.66.0.8" -> "104.0.23.1"[label="1.09"];
+"104.66.0.8" -> "104.65.23.100"[label="1.02"];
+"104.129.17.8" -> "104.129.17.1"[label="1.18"];
+"104.129.17.8" -> "104.129.105.1"[label="7.24"];
+"104.129.17.8" -> "104.129.17.4"[label="2.52"];
+"104.129.17.8" -> "104.129.17.9"[label="1.82"];
+"104.129.17.8" -> "104.129.17.13"[label="1.37"];
+"104.0.4.200" -> "104.0.4.65"[label="0.00"];
+"104.0.4.200" -> "104.0.0.13"[label="1.06"];
+"104.129.0.105" -> "104.129.0.7"[label="16.47"];
+"104.129.0.105" -> "104.129.0.8"[label="18.45"];
+"104.129.0.105" -> "104.129.11.11"[label="12.27"];
+"104.129.0.105" -> "104.129.0.108"[label="11.38"];
+"104.129.17.9" -> "104.129.105.1"[label="394.09"];
+"104.129.17.9" -> "104.129.95.1"[label="5.96"];
+"104.129.17.9" -> "104.129.17.1"[label="1.43"];
+"104.129.17.9" -> "104.129.17.8"[label="2.12"];
+"104.129.17.9" -> "104.129.17.13"[label="1.28"];
+"104.129.14.10" -> "104.129.43.1"[label="2.49"];
+"104.129.0.138" -> "104.129.46.100"[label="309.64"];
+"104.131.1.10" -> "104.131.131.99"[label="1.77"];
+"104.131.0.42" -> "104.131.131.99"[label="2.40"];
+"104.131.0.42" -> "104.131.131.4"[label="2.01"];
+"104.66.28.11" -> "104.66.25.2"[label="2.26"];
+"104.129.0.107" -> "104.129.95.1"[label="38.71"];
+"104.129.0.107" -> "104.129.81.1"[label="3.23"];
+"104.129.0.107" -> "104.129.11.33"[label="6.07"];
+"104.129.0.107" -> "104.129.0.77"[label="2.55"];
+"104.129.0.107" -> "104.0.0.14"[label="0.00"];
+"104.129.0.107" -> "104.129.11.22"[label="55.29"];
+"104.131.9.11" -> "104.131.9.1"[label="1.26"];
+"104.131.9.11" -> "104.131.9.2"[label="1.15"];
+"104.131.9.11" -> "104.131.9.15"[label="1.26"];
+"104.131.9.11" -> "104.131.0.82"[label="1.21"];
+"104.129.11.11" -> "104.129.43.1"[label="71.30"];
+"104.129.11.11" -> "104.129.11.33"[label="14.25"];
+"104.129.11.11" -> "104.129.0.8"[label="0.00"];
+"104.129.11.11" -> "104.129.0.105"[label="21.25"];
+"104.129.11.11" -> "104.0.0.14"[label="2.88"];
+"104.129.11.11" -> "104.129.0.83"[label="0.00"];
+"104.129.11.11" -> "104.129.11.22"[label="1.99"];
+"104.129.11.11" -> "104.129.0.125"[label="20.45"];
+"104.129.11.11" -> "104.129.29.29"[label="16.35"];
+"104.129.11.11" -> "104.129.0.173"[label="66.35"];
+"104.131.0.12" -> "104.131.0.3"[label="2.23"];
+"104.131.0.12" -> "104.131.0.8"[label="7.16"];
+"104.131.0.12" -> "104.131.0.28"[label="1.05"];
+"104.129.0.108" -> "104.129.31.12"[label="0.00"];
+"104.129.0.108" -> "104.129.0.7"[label="34.15"];
+"104.129.0.108" -> "104.129.0.8"[label="15.48"];
+"104.129.0.108" -> "104.129.0.110"[label="84.45"];
+"104.129.0.108" -> "104.129.29.29"[label="0.00"];
+"104.129.0.108" -> "104.129.0.158"[label="3.71"];
+"104.129.0.108" -> "104.129.0.95"[label="5.99"];
+"104.129.31.12" -> "104.129.0.110"[label="92.89"];
+"104.129.31.12" -> "104.129.0.95"[label="0.00"];
+"104.129.31.12" -> "104.129.0.7"[label="6.88"];
+"104.129.31.12" -> "104.129.0.108"[label="14.14"];
+"104.129.31.12" -> "104.0.0.14"[label="2.98"];
+"104.129.31.12" -> "104.129.0.83"[label="51.20"];
+"104.129.31.12" -> "104.129.0.158"[label="27.00"];
+"104.130.1.76" -> "104.130.1.65"[label="1.65"];
+"104.130.1.76" -> "104.130.1.66"[label="10.63"];
+"104.130.1.76" -> "104.130.1.67"[label="0.00"];
+"104.131.21.12" -> "104.131.21.1"[label="2.19"];
+"104.131.21.12" -> "104.131.21.34"[label="1.62"];
+"104.129.0.77" -> "104.129.46.100"[label="27.00"];
+"104.129.0.77" -> "104.129.0.5"[label="66.35"];
+"104.129.0.77" -> "104.129.81.1"[label="52.10"];
+"104.129.0.77" -> "104.129.0.107"[label="2.26"];
+"104.129.0.77" -> "104.0.0.14"[label="33.85"];
+"104.129.0.77" -> "104.129.29.29"[label="0.00"];
+"104.129.0.173" -> "104.131.9.1"[label="0.00"];
+"104.129.0.173" -> "104.129.0.7"[label="20.87"];
+"104.129.0.173" -> "104.0.0.14"[label="10.65"];
+"104.129.0.173" -> "104.129.0.165"[label="225.78"];
+"104.129.0.173" -> "104.129.11.11"[label="0.00"];
+"104.0.3.13" -> "104.0.23.1"[label="64.51"];
+"104.0.3.13" -> "104.0.0.5"[label="5.00"];
+"104.0.3.13" -> "104.66.24.113"[label="1.68"];
+"104.129.17.13" -> "104.129.105.1"[label="1.98"];
+"104.129.17.13" -> "104.129.17.1"[label="1.60"];
+"104.129.17.13" -> "104.129.17.8"[label="1.99"];
+"104.129.17.13" -> "104.129.17.9"[label="2.32"];
+"104.130.77.77" -> "104.130.1.65"[label="3.83"];
+"104.130.77.77" -> "104.130.1.66"[label="2.99"];
+"104.130.77.77" -> "104.130.1.67"[label="41.68"];
+"104.0.0.13" -> "104.0.4.65"[label="1.70"];
+"104.0.0.13" -> "104.0.0.5"[label="1.36"];
+"104.0.0.13" -> "104.0.4.200"[label="1.78"];
+"104.0.0.13" -> "104.0.0.14"[label="1.00"];
+"104.130.77.78" -> "104.130.1.66"[label="1.93"];
+"104.129.0.78" -> "104.129.108.1"[label="19.14"];
+"104.129.0.78" -> "104.129.11.33"[label="54.01"];
+"104.129.0.78" -> "104.129.95.1"[label="23.91"];
+"104.129.0.78" -> "104.129.103.1"[label="20.07"];
+"104.129.0.78" -> "104.129.0.5"[label="7.87"];
+"104.0.0.14" -> "104.202.53.1"[label="106.25"];
+"104.0.0.14" -> "104.129.11.33"[label="0.00"];
+"104.0.0.14" -> "104.65.63.1"[label="58.06"];
+"104.0.0.14" -> "104.129.81.1"[label="54.23"];
+"104.0.0.14" -> "104.129.46.100"[label="1.54"];
+"104.0.0.14" -> "104.129.0.165"[label="0.00"];
+"104.0.0.14" -> "104.129.0.7"[label="1.72"];
+"104.0.0.14" -> "104.129.1.71"[label="2.62"];
+"104.0.0.14" -> "104.129.0.8"[label="5.69"];
+"104.0.0.14" -> "104.129.0.107"[label="38.25"];
+"104.0.0.14" -> "104.129.11.11"[label="2.87"];
+"104.0.0.14" -> "104.129.0.108"[label="55.77"];
+"104.0.0.14" -> "104.129.31.12"[label="3.39"];
+"104.0.0.14" -> "104.129.0.77"[label="61.93"];
+"104.0.0.14" -> "104.129.0.173"[label="5.68"];
+"104.0.0.14" -> "104.0.0.13"[label="1.00"];
+"104.0.0.14" -> "104.129.0.110"[label="3.18"];
+"104.0.0.14" -> "104.129.0.83"[label="2.19"];
+"104.0.0.14" -> "104.129.29.29"[label="14.63"];
+"104.0.0.14" -> "104.0.0.29"[label="1.16"];
+"104.0.0.14" -> "104.129.0.158"[label="0.00"];
+"104.0.0.14" -> "104.129.0.95"[label="5.59"];
+"104.129.0.110" -> "104.129.0.7"[label="0.00"];
+"104.129.0.110" -> "104.129.0.108"[label="96.33"];
+"104.129.0.110" -> "104.0.0.14"[label="4.32"];
+"104.129.0.110" -> "104.129.0.144"[label="5.09"];
+"104.129.0.110" -> "104.129.0.149"[label="4.70"];
+"104.129.0.110" -> "104.129.0.158"[label="0.00"];
+"104.129.0.110" -> "104.129.0.8"[label="11.38"];
+"104.129.0.110" -> "104.129.0.83"[label="44.23"];
+"104.130.1.14" -> "104.129.11.33"[label="3.48"];
+"104.130.1.14" -> "104.129.43.1"[label="2.68"];
+"104.130.1.14" -> "104.129.29.29"[label="3.45"];
+"104.130.1.14" -> "104.0.0.14"[label="464.46"];
+"104.131.0.47" -> "104.131.9.1"[label="6.20"];
+"104.192.99.111" -> "104.192.192.66"[label="89.69"];
+"104.192.99.111" -> "104.193.24.100"[label="65.03"];
+"104.192.99.111" -> "104.192.0.20"[label="1.95"];
+"104.131.9.15" -> "104.131.9.1"[label="2.05"];
+"104.131.9.15" -> "104.131.9.2"[label="1.33"];
+"104.131.9.15" -> "104.131.9.11"[label="1.82"];
+"104.131.9.15" -> "104.131.0.82"[label="1.46"];
+"104.129.0.144" -> "104.129.0.165"[label="51.00"];
+"104.129.0.144" -> "104.129.0.110"[label="4.20"];
+"104.129.0.144" -> "104.129.0.149"[label="1.19"];
+"104.129.0.48" -> "104.129.43.1"[label="1.29"];
+"104.66.24.113" -> "104.66.0.33"[label="1.55"];
+"104.66.24.113" -> "104.0.3.13"[label="3.19"];
+"104.66.24.113" -> "104.66.0.18"[label="1.34"];
+"104.129.0.113" -> "104.129.0.125"[label="18.43"];
+"104.129.0.113" -> "104.129.0.95"[label="144.50"];
+"104.131.0.82" -> "104.131.21.1"[label="11.35"];
+"104.131.0.82" -> "104.131.9.1"[label="1.36"];
+"104.131.0.82" -> "104.131.9.2"[label="1.23"];
+"104.131.0.82" -> "104.131.9.11"[label="1.29"];
+"104.131.0.82" -> "104.131.9.15"[label="1.14"];
+"104.66.0.18" -> "104.66.0.33"[label="1.08"];
+"104.66.0.18" -> "104.66.24.113"[label="2.06"];
+"104.129.0.83" -> "104.131.9.1"[label="0.00"];
+"104.129.0.83" -> "104.129.0.7"[label="2.91"];
+"104.129.0.83" -> "104.129.11.11"[label="0.00"];
+"104.129.0.83" -> "104.129.31.12"[label="15.52"];
+"104.129.0.83" -> "104.0.0.14"[label="1.81"];
+"104.129.0.83" -> "104.129.0.95"[label="58.06"];
+"104.192.0.20" -> "104.192.192.33"[label="1.22"];
+"104.192.0.20" -> "104.192.192.66"[label="1.19"];
+"104.192.0.20" -> "104.192.192.99"[label="2.65"];
+"104.192.0.20" -> "104.192.99.111"[label="1.60"];
+"104.129.0.149" -> "104.129.0.110"[label="10.69"];
+"104.129.0.149" -> "104.129.0.144"[label="1.70"];
+"104.0.23.22" -> "104.0.23.2"[label="1.01"];
+"104.66.0.23" -> "104.66.25.2"[label="2.28"];
+"104.66.0.23" -> "104.66.0.24"[label="1.01"];
+"104.0.23.23" -> "104.0.23.1"[label="1.02"];
+"104.0.23.23" -> "104.0.23.3"[label="1.02"];
+"104.66.0.24" -> "104.66.25.2"[label="1.75"];
+"104.66.0.24" -> "104.66.0.23"[label="1.00"];
+"104.129.0.91" -> "104.129.95.1"[label="0.00"];
+"104.129.0.91" -> "104.129.108.1"[label="2.06"];
+"104.129.0.91" -> "104.129.103.1"[label="1.93"];
+"104.129.0.91" -> "104.129.105.2"[label="3.93"];
+"104.129.0.91" -> "104.129.0.165"[label="1.61"];
+"104.129.0.91" -> "104.129.105.10"[label="0.00"];
+"104.131.0.28" -> "104.131.0.3"[label="1.67"];
+"104.131.0.28" -> "104.131.0.8"[label="1.25"];
+"104.131.0.28" -> "104.131.0.12"[label="2.80"];
+"104.129.0.125" -> "104.129.11.33"[label="27.32"];
+"104.129.0.125" -> "104.129.0.165"[label="4.52"];
+"104.129.0.125" -> "104.129.0.8"[label="0.00"];
+"104.129.0.125" -> "104.129.11.11"[label="0.00"];
+"104.129.0.125" -> "104.129.0.173"[label="0.00"];
+"104.129.0.125" -> "104.129.0.113"[label="15.18"];
+"104.129.0.125" -> "104.129.0.158"[label="0.00"];
+"104.129.29.29" -> "104.129.100.1"[label="0.00"];
+"104.129.29.29" -> "104.131.9.1"[label="26.22"];
+"104.129.29.29" -> "104.129.43.1"[label="70.99"];
+"104.129.29.29" -> "104.129.81.1"[label="4.98"];
+"104.129.29.29" -> "104.131.21.1"[label="71.46"];
+"104.129.29.29" -> "104.129.11.33"[label="7.28"];
+"104.129.29.29" -> "104.0.192.130"[label="1.00"];
+"104.129.29.29" -> "104.129.46.100"[label="0.00"];
+"104.129.29.29" -> "104.131.131.4"[label="0.00"];
+"104.129.29.29" -> "104.129.14.10"[label="0.00"];
+"104.129.29.29" -> "104.129.11.11"[label="16.14"];
+"104.129.29.29" -> "104.0.0.14"[label="6.83"];
+"104.129.29.29" -> "104.130.1.14"[label="0.00"];
+"104.0.0.29" -> "104.0.0.14"[label="1.10"];
+"104.129.0.158" -> "104.129.0.7"[label="7.30"];
+"104.129.0.158" -> "104.129.0.8"[label="1.64"];
+"104.129.0.158" -> "104.129.0.108"[label="3.35"];
+"104.129.0.158" -> "104.129.31.12"[label="6.39"];
+"104.129.0.158" -> "104.129.0.110"[label="10.49"];
+"104.129.0.158" -> "104.0.0.14"[label="19.18"];
+"104.129.0.158" -> "104.129.0.95"[label="5.66"];
+"104.129.0.95" -> "104.129.0.7"[label="3.16"];
+"104.129.0.95" -> "104.129.31.12"[label="53.08"];
+"104.129.0.95" -> "104.129.0.108"[label="4.55"];
+"104.129.0.95" -> "104.0.0.14"[label="14.07"];
+"104.129.0.95" -> "104.129.0.110"[label="8.94"];
+"104.129.0.95" -> "104.129.0.113"[label="9.10"];
+"104.129.0.95" -> "104.129.0.158"[label="5.61"];
+"104.129.0.95" -> "104.129.0.8"[label="2.85"];
+"104.129.0.95" -> "104.129.0.83"[label="6.50"];
+"104.129.43.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.81.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.81.1" -> "104.129.81.11/255.255.255.255"[label="HNA"];
+"104.129.81.11/255.255.255.255"[shape=diamond];
+"104.129.81.1" -> "104.129.111.111/255.255.255.255"[label="HNA"];
+"104.129.111.111/255.255.255.255"[shape=diamond];
+"104.129.17.1" -> "104.129.17.220/255.255.255.255"[label="HNA"];
+"104.129.17.220/255.255.255.255"[shape=diamond];
+"104.131.21.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.202.19.1" -> "104.202.19.0/255.255.255.0"[label="HNA"];
+"104.202.19.0/255.255.255.0"[shape=diamond];
+"104.202.19.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.130.11.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.65.65.97" -> "104.65.65.102/255.255.255.255"[label="HNA"];
+"104.65.65.102/255.255.255.255"[shape=diamond];
+"104.65.65.97" -> "104.65.65.98/255.255.255.255"[label="HNA"];
+"104.65.65.98/255.255.255.255"[shape=diamond];
+"104.131.9.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.9.1" -> "104.131.9.229/255.255.255.255"[label="HNA"];
+"104.131.9.229/255.255.255.255"[shape=diamond];
+"104.131.9.1" -> "104.131.9.9/255.255.255.255"[label="HNA"];
+"104.131.9.9/255.255.255.255"[shape=diamond];
+"104.0.23.3" -> "104.0.23.99/255.255.255.255"[label="HNA"];
+"104.0.23.99/255.255.255.255"[shape=diamond];
+"104.131.131.99" -> "104.131.1.9/255.255.255.255"[label="HNA"];
+"104.131.1.9/255.255.255.255"[shape=diamond];
+"104.129.46.100" -> "104.129.46.96/255.255.255.224"[label="HNA"];
+"104.129.46.96/255.255.255.224"[shape=diamond];
+"104.129.46.100" -> "104.129.46.0/255.255.255.192"[label="HNA"];
+"104.129.46.0/255.255.255.192"[shape=diamond];
+"104.193.0.5" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.21.12" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.31.12" -> "104.129.31.0/255.255.255.0"[label="HNA"];
+"104.129.31.0/255.255.255.0"[shape=diamond];
+"104.130.1.14" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.9.15" -> "104.131.9.16/255.255.255.248"[label="HNA"];
+"104.131.9.16/255.255.255.248"[shape=diamond];
+"104.66.0.24" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.29.29" -> "104.129.29.224/255.255.255.224"[label="HNA"];
+"104.129.29.224/255.255.255.224"[shape=diamond];
+"104.0.0.29" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.0.0.29" -> "104.0.0.41/255.255.255.255"[label="HNA"];
+"104.0.0.41/255.255.255.255"[shape=diamond];
+}
+
+digraph topology
+{
+"104.131.131.1" -> "104.131.21.1"[label="0.00", style=dashed];
+"104.131.131.1" -> "104.131.131.2"[label="55.92", style=solid];
+"104.131.131.2"[shape=box];
+"104.131.131.1" -> "104.131.0.3"[label="0.00", style=solid];
+"104.131.0.3"[shape=box];
+"104.131.131.1" -> "104.131.131.99"[label="2.68", style=solid];
+"104.131.131.99"[shape=box];
+"104.131.131.1" -> "104.131.131.4"[label="4.26", style=solid];
+"104.131.131.4"[shape=box];
+"104.131.131.1" -> "104.131.0.28"[label="0.00", style=solid];
+"104.131.0.28"[shape=box];
+"104.131.131.1" -> "104.129.29.29"[label="0.00", style=dashed];
+"104.129.0.32" -> "104.129.17.4"[label="3.22"];
+"104.131.2.1" -> "104.130.11.66"[label="13.62"];
+"104.131.2.1" -> "104.131.21.1"[label="30.53"];
+"104.131.2.1" -> "104.131.9.1"[label="3.36"];
+"104.131.2.1" -> "104.131.2.2"[label="1.96"];
+"104.192.192.225" -> "104.0.192.129"[label="3.79"];
+"104.192.192.225" -> "104.192.192.1"[label="3.97"];
+"104.192.192.225" -> "104.192.192.33"[label="4.41"];
+"104.192.192.225" -> "104.192.192.66"[label="3.57"];
+"104.192.192.225" -> "104.192.192.99"[label="4.20"];
+"104.192.192.225" -> "104.192.192.133"[label="3.28"];
+"104.192.192.225" -> "104.192.192.166"[label="3.41"];
+"104.192.192.225" -> "104.192.192.199"[label="4.30"];
+"104.129.0.129" -> "104.129.103.1"[label="6.11"];
+"104.129.0.129" -> "104.129.105.1"[label="0.00"];
+"104.129.11.33" -> "104.129.95.1"[label="0.00"];
+"104.129.11.33" -> "104.0.0.14"[label="154.82"];
+"104.129.11.33" -> "104.129.0.78"[label="61.11"];
+"104.129.11.33" -> "104.129.81.1"[label="5.64"];
+"104.129.11.33" -> "104.129.43.1"[label="15.18"];
+"104.129.11.33" -> "104.129.46.100"[label="9.99"];
+"104.129.11.33" -> "104.129.0.8"[label="21.50"];
+"104.129.11.33" -> "104.129.0.107"[label="29.97"];
+"104.129.11.33" -> "104.129.11.11"[label="3.53"];
+"104.129.11.33" -> "104.130.1.14"[label="0.00"];
+"104.129.11.33" -> "104.129.11.22"[label="19.35"];
+"104.129.11.33" -> "104.129.29.29"[label="5.14"];
+"104.129.100.1" -> "104.129.43.1"[label="1.50"];
+"104.131.9.1" -> "104.131.131.1"[label="0.00"];
+"104.131.9.1" -> "104.131.2.1"[label="6.47"];
+"104.131.9.1" -> "104.131.21.1"[label="1.41"];
+"104.131.9.1" -> "104.131.9.66"[label="2.71"];
+"104.131.9.1" -> "104.130.11.66"[label="8.23"];
+"104.131.9.1" -> "104.131.9.2"[label="1.75"];
+"104.131.9.1" -> "104.130.1.67"[label="94.93"];
+"104.131.9.1" -> "104.131.131.4"[label="34.13"];
+"104.131.9.1" -> "104.129.0.165"[label="520.20"];
+"104.131.9.1" -> "104.131.9.11"[label="1.26"];
+"104.131.9.1" -> "104.131.0.47"[label="6.20"];
+"104.131.9.1" -> "104.131.9.15"[label="2.69"];
+"104.131.9.1" -> "104.131.0.82"[label="1.39"];
+"104.131.9.1" -> "104.129.29.29"[label="76.14"];
+"104.131.21.1" -> "104.131.2.1"[label="0.00"];
+"104.131.21.1" -> "104.131.9.1"[label="1.39"];
+"104.131.21.1" -> "104.130.11.66"[label="120.42"];
+"104.131.21.1" -> "104.131.21.34"[label="5.67"];
+"104.131.21.1" -> "104.131.131.4"[label="23.06"];
+"104.131.21.1" -> "104.131.21.12"[label="3.87"];
+"104.131.21.1" -> "104.131.0.82"[label="8.39"];
+"104.131.21.1" -> "104.129.29.29"[label="72.25"];
+"104.129.103.1" -> "104.129.0.77"[label="0.00"];
+"104.129.103.1" -> "104.129.95.1"[label="38.25"];
+"104.129.103.1" -> "104.129.108.1"[label="1.92"];
+"104.129.103.1" -> "104.129.0.129"[label="5.57"];
+"104.129.103.1" -> "104.129.105.2"[label="3.32"];
+"104.129.103.1" -> "104.129.0.165"[label="1.76"];
+"104.129.103.1" -> "104.129.105.10"[label="10.93"];
+"104.129.103.1" -> "104.129.0.78"[label="21.98"];
+"104.129.103.1" -> "104.129.0.91"[label="1.85"];
+"104.130.30.1" -> "104.130.1.65"[label="118.23"];
+"104.130.30.1" -> "104.130.1.67"[label="2.52"];
+"104.198.23.1" -> "104.130.1.66"[label="3.15"];
+"104.65.63.1" -> "104.6.0.6"[label="10.48"];
+"104.65.63.1" -> "104.0.0.14"[label="72.25"];
+"104.129.108.1" -> "104.129.103.1"[label="3.54"];
+"104.129.108.1" -> "104.129.105.2"[label="1.39"];
+"104.129.108.1" -> "104.129.0.165"[label="1.43"];
+"104.129.108.1" -> "104.129.105.10"[label="1.23"];
+"104.129.108.1" -> "104.129.0.78"[label="42.78"];
+"104.129.108.1" -> "104.129.0.91"[label="2.03"];
+"104.129.105.1" -> "104.129.17.9"[label="0.00"];
+"104.129.105.1" -> "104.129.17.1"[label="32.11"];
+"104.129.105.1" -> "104.129.105.2"[label="1.88"];
+"104.129.105.1" -> "104.129.17.8"[label="16.06"];
+"104.129.105.1" -> "104.129.105.10"[label="1.54"];
+"104.129.105.1" -> "104.129.17.13"[label="2.26"];
+"104.129.105.1" -> "104.129.0.141"[label="7.35"];
+"104.129.17.1" -> "104.129.105.1"[label="15.52"];
+"104.129.17.1" -> "104.129.17.8"[label="1.82"];
+"104.129.17.1" -> "104.129.17.9"[label="1.33"];
+"104.129.17.1" -> "104.129.17.13"[label="1.36"];
+"104.129.95.1" -> "104.129.81.1"[label="6.27"];
+"104.129.95.1" -> "104.129.0.5"[label="22.65"];
+"104.129.95.1" -> "104.129.0.107"[label="32.71"];
+"104.129.95.1" -> "104.129.0.77"[label="0.00"];
+"104.129.95.1" -> "104.129.0.78"[label="21.39"];
+"104.129.95.1" -> "104.129.11.33"[label="0.00"];
+"104.129.95.1" -> "104.129.103.1"[label="136.61"];
+"104.129.43.1" -> "104.129.11.33"[label="9.11"];
+"104.129.43.1" -> "104.129.100.1"[label="1.83"];
+"104.129.43.1" -> "104.129.14.10"[label="6.25"];
+"104.129.43.1" -> "104.129.11.11"[label="51.00"];
+"104.129.43.1" -> "104.130.1.14"[label="4.29"];
+"104.129.43.1" -> "104.129.0.48"[label="1.47"];
+"104.129.43.1" -> "104.129.29.29"[label="73.06"];
+"104.129.43.1" -> "104.129.0.32"[label="28.08"];
+"104.129.81.1" -> "104.129.95.1"[label="8.17"];
+"104.129.81.1" -> "104.129.11.33"[label="4.92"];
+"104.129.81.1" -> "104.129.0.5"[label="8.82"];
+"104.129.81.1" -> "104.129.0.107"[label="2.53"];
+"104.129.81.1" -> "104.129.0.77"[label="79.40"];
+"104.129.81.1" -> "104.0.0.14"[label="57.95"];
+"104.129.81.1" -> "104.129.29.29"[label="8.18"];
+"104.65.65.97" -> "104.65.65.65"[label="1.00"];
+"104.65.65.97" -> "104.6.0.6"[label="5.16"];
+"104.130.1.65" -> "104.130.30.1"[label="16.81"];
+"104.130.1.65" -> "104.0.4.65"[label="1.00"];
+"104.130.1.65" -> "104.130.1.66"[label="1.00"];
+"104.130.1.65" -> "104.130.1.67"[label="1.00"];
+"104.130.1.65" -> "104.193.0.5"[label="21.66"];
+"104.130.1.65" -> "104.130.1.6"[label="20.90"];
+"104.130.1.65" -> "104.130.1.76"[label="1.55"];
+"104.130.1.65" -> "104.130.77.77"[label="2.18"];
+"104.0.4.65" -> "104.130.1.65"[label="1.00"];
+"104.0.4.65" -> "104.130.1.66"[label="1.00"];
+"104.0.4.65" -> "104.130.1.67"[label="1.00"];
+"104.0.4.65" -> "104.0.4.200"[label="23.70"];
+"104.0.4.65" -> "104.0.0.13"[label="1.30"];
+"104.0.23.1" -> "104.66.25.2"[label="774.11"];
+"104.0.23.1" -> "104.0.23.2"[label="1.00"];
+"104.0.23.1" -> "104.0.23.3"[label="1.00"];
+"104.0.23.1" -> "104.65.23.100"[label="1.80"];
+"104.0.23.1" -> "104.0.0.5"[label="1.02"];
+"104.0.23.1" -> "104.66.0.8"[label="1.08"];
+"104.0.23.1" -> "104.0.3.13"[label="129.02"];
+"104.0.23.1" -> "104.0.23.23"[label="1.01"];
+"104.65.65.65" -> "104.65.65.97"[label="1.00"];
+"104.65.65.65" -> "104.0.0.6"[label="1.33"];
+"104.130.11.1" -> "104.130.11.66"[label="1.00"];
+"104.66.0.33" -> "104.66.24.113"[label="1.41"];
+"104.66.0.33" -> "104.66.0.18"[label="1.32"];
+"104.131.9.66" -> "104.131.9.1"[label="2.78"];
+"104.131.9.2" -> "104.131.9.1"[label="1.58"];
+"104.131.9.2" -> "104.131.9.11"[label="1.54"];
+"104.131.9.2" -> "104.131.9.15"[label="1.26"];
+"104.131.9.2" -> "104.131.0.82"[label="1.56"];
+"104.66.25.2" -> "104.0.23.1"[label="774.11"];
+"104.66.25.2" -> "104.66.0.2"[label="2.83"];
+"104.66.25.2" -> "104.0.0.6"[label="14.43"];
+"104.66.25.2" -> "104.66.7.7"[label="6.07"];
+"104.66.25.2" -> "104.66.28.11"[label="3.10"];
+"104.66.25.2" -> "104.66.0.23"[label="2.58"];
+"104.66.25.2" -> "104.66.0.24"[label="2.87"];
+"104.193.0.2" -> "104.192.192.66"[label="4.87"];
+"104.192.192.66" -> "104.192.192.33"[label="3.83"];
+"104.192.192.66" -> "104.0.192.129"[label="3.34"];
+"104.192.192.66" -> "104.192.192.225"[label="3.79"];
+"104.192.192.66" -> "104.192.192.1"[label="3.89"];
+"104.192.192.66" -> "104.193.0.2"[label="1.18"];
+"104.192.192.66" -> "104.192.192.99"[label="3.35"];
+"104.192.192.66" -> "104.193.24.100"[label="7.30"];
+"104.192.192.66" -> "104.192.192.133"[label="3.57"];
+"104.192.192.66" -> "104.192.192.166"[label="2.50"];
+"104.192.192.66" -> "104.192.192.199"[label="5.09"];
+"104.192.192.66" -> "104.192.99.111"[label="23.84"];
+"104.192.192.66" -> "104.192.0.20"[label="1.22"];
+"104.131.21.34" -> "104.131.21.1"[label="2.51"];
+"104.131.21.34" -> "104.131.21.12"[label="1.46"];
+"104.130.11.66" -> "104.131.21.1"[label="111.54"];
+"104.130.11.66" -> "104.131.9.1"[label="11.12"];
+"104.130.11.66" -> "104.131.2.1"[label="55.29"];
+"104.130.11.66" -> "104.130.11.1"[label="1.00"];
+"104.130.11.66" -> "104.131.2.2"[label="0.00"];
+"104.131.2.2" -> "104.131.2.1"[label="1.85"];
+"104.131.2.2" -> "104.130.11.66"[label="0.00"];
+"104.66.0.2" -> "104.66.25.2"[label="2.19"];
+"104.202.0.2" -> "104.202.19.1"[label="1.54"];
+"104.129.105.2" -> "104.129.105.1"[label="22.39"];
+"104.129.105.2" -> "104.129.11.33"[label="0.00"];
+"104.129.105.2" -> "104.129.108.1"[label="1.48"];
+"104.129.105.2" -> "104.129.103.1"[label="4.09"];
+"104.129.105.2" -> "104.129.0.165"[label="1.59"];
+"104.129.105.2" -> "104.129.105.10"[label="1.70"];
+"104.129.105.2" -> "104.129.0.91"[label="4.92"];
+"104.131.131.2" -> "104.131.131.1"[label="75.00"];
+"104.131.131.2" -> "104.131.131.4"[label="1.53"];
+"104.131.131.2" -> "104.131.1.10"[label="8.50"];
+"104.130.1.66" -> "104.198.23.1"[label="2.87"];
+"104.130.1.66" -> "104.130.1.65"[label="1.00"];
+"104.130.1.66" -> "104.0.4.65"[label="1.00"];
+"104.130.1.66" -> "104.130.1.67"[label="1.00"];
+"104.130.1.66" -> "104.130.1.6"[label="1.47"];
+"104.130.1.66" -> "104.130.1.76"[label="7.49"];
+"104.130.1.66" -> "104.130.77.77"[label="1.70"];
+"104.130.1.66" -> "104.130.77.78"[label="1.98"];
+"104.0.192.130" -> "104.129.29.29"[label="1.00"];
+"104.0.23.2" -> "104.0.23.1"[label="1.00"];
+"104.0.23.2" -> "104.0.23.3"[label="2.01"];
+"104.0.23.2" -> "104.0.23.22"[label="1.00"];
+"104.131.131.99" -> "104.131.131.1"[label="3.34"];
+"104.131.131.99" -> "104.131.0.3"[label="2.36"];
+"104.131.131.99" -> "104.130.1.67"[label="22.77"];
+"104.131.131.99" -> "104.131.131.4"[label="2.33"];
+"104.131.131.99" -> "104.131.0.42"[label="2.40"];
+"104.131.131.99" -> "104.131.1.10"[label="3.30"];
+"104.192.192.99" -> "104.0.192.129"[label="6.01"];
+"104.192.192.99" -> "104.192.192.1"[label="6.14"];
+"104.192.192.99" -> "104.192.192.33"[label="6.24"];
+"104.192.192.99" -> "104.192.192.225"[label="4.99"];
+"104.192.192.99" -> "104.192.192.66"[label="0.00"];
+"104.192.192.99" -> "104.192.192.133"[label="2.82"];
+"104.192.192.99" -> "104.192.192.166"[label="3.79"];
+"104.192.192.99" -> "104.192.192.199"[label="9.05"];
+"104.192.192.99" -> "104.192.0.20"[label="1.85"];
+"104.130.1.67" -> "104.130.30.1"[label="2.25"];
+"104.130.1.67" -> "104.0.4.65"[label="1.14"];
+"104.130.1.67" -> "104.130.1.65"[label="1.09"];
+"104.130.1.67" -> "104.130.1.66"[label="1.07"];
+"104.130.1.67" -> "104.130.1.6"[label="3.27"];
+"104.130.1.67" -> "104.130.1.76"[label="11.27"];
+"104.130.1.67" -> "104.130.77.77"[label="55.29"];
+"104.130.1.67" -> "104.131.131.99"[label="17.01"];
+"104.0.23.3" -> "104.0.23.1"[label="0.00"];
+"104.0.23.3" -> "104.0.23.2"[label="2.01"];
+"104.0.23.3" -> "104.0.23.23"[label="1.03"];
+"104.193.24.100" -> "104.192.192.66"[label="8.12"];
+"104.193.24.100" -> "104.192.99.111"[label="98.52"];
+"104.131.131.4" -> "104.131.131.1"[label="7.81"];
+"104.131.131.4" -> "104.131.21.1"[label="34.96"];
+"104.131.131.4" -> "104.131.9.1"[label="51.20"];
+"104.131.131.4" -> "104.131.131.2"[label="2.33"];
+"104.131.131.4" -> "104.131.0.3"[label="2.66"];
+"104.131.131.4" -> "104.131.131.99"[label="1.55"];
+"104.131.131.4" -> "104.131.0.42"[label="1.75"];
+"104.131.131.4" -> "104.129.29.29"[label="0.00"];
+"104.129.17.4" -> "104.129.0.32"[label="1.60"];
+"104.129.17.4" -> "104.129.0.33"[label="1.03"];
+"104.129.17.4" -> "104.129.17.8"[label="2.75"];
+"104.65.23.100" -> "104.0.23.1"[label="2.06"];
+"104.65.23.100" -> "104.66.0.8"[label="1.02"];
+"104.129.46.100" -> "104.129.11.11"[label="0.00"];
+"104.129.46.100" -> "104.129.0.77"[label="34.40"];
+"104.129.46.100" -> "104.129.11.33"[label="9.80"];
+"104.129.46.100" -> "104.129.0.165"[label="34.22"];
+"104.129.46.100" -> "104.129.0.7"[label="0.00"];
+"104.129.46.100" -> "104.129.0.138"[label="105.56"];
+"104.129.46.100" -> "104.0.0.14"[label="1.99"];
+"104.129.46.100" -> "104.129.29.29"[label="342.24"];
+"104.192.192.133" -> "104.192.192.33"[label="4.30"];
+"104.192.192.133" -> "104.192.192.225"[label="3.05"];
+"104.192.192.133" -> "104.192.192.1"[label="3.64"];
+"104.192.192.133" -> "104.0.192.129"[label="2.68"];
+"104.192.192.133" -> "104.192.192.66"[label="2.41"];
+"104.192.192.133" -> "104.192.192.99"[label="3.10"];
+"104.192.192.133" -> "104.192.192.166"[label="2.50"];
+"104.192.192.133" -> "104.192.192.199"[label="3.32"];
+"104.129.0.165" -> "104.131.9.1"[label="289.00"];
+"104.129.0.165" -> "104.131.21.1"[label="0.00"];
+"104.129.0.165" -> "104.129.0.7"[label="0.00"];
+"104.129.0.165" -> "104.129.0.173"[label="70.30"];
+"104.129.0.165" -> "104.0.0.14"[label="5.16"];
+"104.129.0.165" -> "104.130.1.14"[label="0.00"];
+"104.129.0.165" -> "104.129.0.144"[label="32.92"];
+"104.129.0.165" -> "104.129.0.125"[label="2.83"];
+"104.129.0.165" -> "104.129.108.1"[label="0.00"];
+"104.129.0.165" -> "104.129.11.33"[label="0.00"];
+"104.129.0.165" -> "104.129.103.1"[label="2.01"];
+"104.129.0.165" -> "104.129.105.2"[label="1.23"];
+"104.129.0.165" -> "104.129.105.10"[label="2.32"];
+"104.129.0.165" -> "104.129.0.91"[label="1.68"];
+"104.193.0.5" -> "104.130.1.65"[label="28.67"];
+"104.193.0.5" -> "104.192.192.1"[label="2.01"];
+"104.129.0.5" -> "104.129.11.33"[label="0.00"];
+"104.129.0.5" -> "104.129.0.77"[label="129.02"];
+"104.129.0.5" -> "104.129.95.1"[label="30.88"];
+"104.129.0.5" -> "104.129.81.1"[label="11.31"];
+"104.129.0.5" -> "104.129.0.107"[label="35.19"];
+"104.129.0.5" -> "104.129.0.78"[label="8.04"];
+"104.0.0.5" -> "104.0.23.1"[label="1.09"];
+"104.0.0.5" -> "104.0.0.6"[label="1.00"];
+"104.0.0.5" -> "104.0.0.13"[label="1.39"];
+"104.0.0.5" -> "104.0.3.13"[label="3.49"];
+"104.192.192.166" -> "104.192.192.1"[label="1.43"];
+"104.192.192.166" -> "104.0.192.129"[label="1.30"];
+"104.192.192.166" -> "104.192.192.33"[label="1.43"];
+"104.192.192.166" -> "104.192.192.225"[label="1.14"];
+"104.192.192.166" -> "104.192.192.66"[label="1.27"];
+"104.192.192.166" -> "104.192.192.99"[label="1.27"];
+"104.192.192.166" -> "104.192.192.133"[label="1.21"];
+"104.192.192.166" -> "104.192.192.199"[label="1.16"];
+"104.0.0.6" -> "104.202.19.1"[label="51.61"];
+"104.0.0.6" -> "104.65.65.65"[label="1.32"];
+"104.0.0.6" -> "104.66.25.2"[label="23.18"];
+"104.0.0.6" -> "104.0.0.5"[label="1.00"];
+"104.130.1.6" -> "104.130.1.65"[label="18.57"];
+"104.130.1.6" -> "104.130.1.66"[label="1.43"];
+"104.130.1.6" -> "104.130.1.67"[label="1.99"];
+"104.6.0.6" -> "104.65.65.97"[label="3.51"];
+"104.6.0.6" -> "104.65.63.1"[label="10.59"];
+"104.6.0.6" -> "104.0.0.14"[label="108.01"];
+"104.129.0.7" -> "104.129.46.100"[label="0.00"];
+"104.129.0.7" -> "104.129.0.165"[label="9.04"];
+"104.129.0.7" -> "104.129.0.8"[label="2.59"];
+"104.129.0.7" -> "104.129.0.105"[label="8.41"];
+"104.129.0.7" -> "104.129.31.12"[label="11.91"];
+"104.129.0.7" -> "104.129.0.173"[label="13.58"];
+"104.129.0.7" -> "104.0.0.14"[label="2.88"];
+"104.129.0.7" -> "104.129.0.110"[label="3.35"];
+"104.129.0.7" -> "104.129.0.83"[label="2.91"];
+"104.129.0.7" -> "104.129.0.158"[label="4.69"];
+"104.129.0.7" -> "104.129.0.95"[label="6.48"];
+"104.129.1.71" -> "104.0.0.14"[label="1.46"];
+"104.192.99.103" -> "104.192.103.33"[label="3.01"];
+"104.192.99.103" -> "104.192.103.200"[label="2.86"];
+"104.192.99.103" -> "104.192.103.109"[label="2.58"];
+"104.66.7.7" -> "104.66.25.2"[label="4.47"];
+"104.129.0.136" -> "104.129.0.149"[label="1.60"];
+"104.131.0.8" -> "104.131.0.3"[label="1.87"];
+"104.131.0.8" -> "104.131.0.12"[label="11.36"];
+"104.131.0.8" -> "104.131.0.28"[label="2.65"];
+"104.192.103.200" -> "104.192.103.33"[label="2.68"];
+"104.192.103.200" -> "104.192.103.3"[label="1.00"];
+"104.192.103.200" -> "104.192.99.103"[label="1.79"];
+"104.192.103.200" -> "104.192.103.109"[label="91.07"];
+"104.66.0.8" -> "104.0.23.1"[label="1.09"];
+"104.66.0.8" -> "104.65.23.100"[label="1.02"];
+"104.129.17.8" -> "104.129.17.1"[label="1.18"];
+"104.129.17.8" -> "104.129.105.1"[label="7.24"];
+"104.129.17.8" -> "104.129.17.4"[label="2.52"];
+"104.129.17.8" -> "104.129.17.9"[label="1.82"];
+"104.129.17.8" -> "104.129.17.13"[label="1.37"];
+"104.0.4.200" -> "104.0.4.65"[label="0.00"];
+"104.0.4.200" -> "104.0.0.13"[label="1.06"];
+"104.129.0.105" -> "104.129.0.7"[label="16.47"];
+"104.129.0.105" -> "104.129.0.8"[label="18.45"];
+"104.129.0.105" -> "104.129.11.11"[label="12.27"];
+"104.129.0.105" -> "104.129.0.108"[label="11.38"];
+"104.129.17.9" -> "104.129.105.1"[label="394.09"];
+"104.129.17.9" -> "104.129.95.1"[label="5.96"];
+"104.129.17.9" -> "104.129.17.1"[label="1.43"];
+"104.129.17.9" -> "104.129.17.8"[label="2.12"];
+"104.129.17.9" -> "104.129.17.13"[label="1.28"];
+"104.129.14.10" -> "104.129.43.1"[label="2.49"];
+"104.129.0.138" -> "104.129.46.100"[label="309.64"];
+"104.131.1.10" -> "104.131.131.99"[label="1.77"];
+"104.131.0.42" -> "104.131.131.99"[label="2.40"];
+"104.131.0.42" -> "104.131.131.4"[label="2.01"];
+"104.66.28.11" -> "104.66.25.2"[label="2.26"];
+"104.129.0.107" -> "104.129.95.1"[label="38.71"];
+"104.129.0.107" -> "104.129.81.1"[label="3.23"];
+"104.129.0.107" -> "104.129.11.33"[label="6.07"];
+"104.129.0.107" -> "104.129.0.77"[label="2.55"];
+"104.129.0.107" -> "104.0.0.14"[label="0.00"];
+"104.129.0.107" -> "104.129.11.22"[label="55.29"];
+"104.131.9.11" -> "104.131.9.1"[label="1.26"];
+"104.131.9.11" -> "104.131.9.2"[label="1.15"];
+"104.131.9.11" -> "104.131.9.15"[label="1.26"];
+"104.131.9.11" -> "104.131.0.82"[label="1.21"];
+"104.129.11.11" -> "104.129.43.1"[label="71.30"];
+"104.129.11.11" -> "104.129.11.33"[label="14.25"];
+"104.129.11.11" -> "104.129.0.8"[label="0.00"];
+"104.129.11.11" -> "104.129.0.105"[label="21.25"];
+"104.129.11.11" -> "104.0.0.14"[label="2.88"];
+"104.129.11.11" -> "104.129.0.83"[label="0.00"];
+"104.129.11.11" -> "104.129.11.22"[label="1.99"];
+"104.129.11.11" -> "104.129.0.125"[label="20.45"];
+"104.129.11.11" -> "104.129.29.29"[label="16.35"];
+"104.129.11.11" -> "104.129.0.173"[label="66.35"];
+"104.131.0.12" -> "104.131.0.3"[label="2.23"];
+"104.131.0.12" -> "104.131.0.8"[label="7.16"];
+"104.131.0.12" -> "104.131.0.28"[label="1.05"];
+"104.129.0.108" -> "104.129.31.12"[label="0.00"];
+"104.129.0.108" -> "104.129.0.7"[label="34.15"];
+"104.129.0.108" -> "104.129.0.8"[label="15.48"];
+"104.129.0.108" -> "104.129.0.110"[label="84.45"];
+"104.129.0.108" -> "104.129.29.29"[label="0.00"];
+"104.129.0.108" -> "104.129.0.158"[label="3.71"];
+"104.129.0.108" -> "104.129.0.95"[label="5.99"];
+"104.129.31.12" -> "104.129.0.110"[label="92.89"];
+"104.129.31.12" -> "104.129.0.95"[label="0.00"];
+"104.129.31.12" -> "104.129.0.7"[label="6.88"];
+"104.129.31.12" -> "104.129.0.108"[label="14.14"];
+"104.129.31.12" -> "104.0.0.14"[label="2.98"];
+"104.129.31.12" -> "104.129.0.83"[label="51.20"];
+"104.129.31.12" -> "104.129.0.158"[label="27.00"];
+"104.130.1.76" -> "104.130.1.65"[label="1.65"];
+"104.130.1.76" -> "104.130.1.66"[label="10.63"];
+"104.130.1.76" -> "104.130.1.67"[label="0.00"];
+"104.131.21.12" -> "104.131.21.1"[label="4.96"];
+"104.131.21.12" -> "104.131.21.34"[label="1.71"];
+"104.129.0.77" -> "104.129.46.100"[label="27.00"];
+"104.129.0.77" -> "104.129.0.5"[label="66.35"];
+"104.129.0.77" -> "104.129.81.1"[label="52.10"];
+"104.129.0.77" -> "104.129.0.107"[label="2.26"];
+"104.129.0.77" -> "104.0.0.14"[label="33.85"];
+"104.129.0.77" -> "104.129.29.29"[label="0.00"];
+"104.129.0.173" -> "104.131.9.1"[label="0.00"];
+"104.129.0.173" -> "104.129.0.7"[label="20.87"];
+"104.129.0.173" -> "104.0.0.14"[label="10.65"];
+"104.129.0.173" -> "104.129.0.165"[label="225.78"];
+"104.129.0.173" -> "104.129.11.11"[label="0.00"];
+"104.0.3.13" -> "104.0.23.1"[label="64.51"];
+"104.0.3.13" -> "104.0.0.5"[label="5.00"];
+"104.0.3.13" -> "104.66.24.113"[label="1.68"];
+"104.129.17.13" -> "104.129.105.1"[label="1.98"];
+"104.129.17.13" -> "104.129.17.1"[label="1.60"];
+"104.129.17.13" -> "104.129.17.8"[label="1.99"];
+"104.129.17.13" -> "104.129.17.9"[label="2.32"];
+"104.130.77.77" -> "104.130.1.65"[label="3.11"];
+"104.130.77.77" -> "104.130.1.66"[label="0.00"];
+"104.130.77.77" -> "104.130.1.67"[label="26.60"];
+"104.0.0.13" -> "104.0.4.65"[label="1.70"];
+"104.0.0.13" -> "104.0.0.5"[label="1.36"];
+"104.0.0.13" -> "104.0.4.200"[label="1.78"];
+"104.0.0.13" -> "104.0.0.14"[label="1.00"];
+"104.130.77.78" -> "104.130.1.66"[label="1.93"];
+"104.129.0.78" -> "104.129.108.1"[label="19.14"];
+"104.129.0.78" -> "104.129.11.33"[label="54.01"];
+"104.129.0.78" -> "104.129.95.1"[label="23.91"];
+"104.129.0.78" -> "104.129.103.1"[label="20.07"];
+"104.129.0.78" -> "104.129.0.5"[label="7.87"];
+"104.0.0.14" -> "104.202.53.1"[label="106.25"];
+"104.0.0.14" -> "104.129.11.33"[label="0.00"];
+"104.0.0.14" -> "104.65.63.1"[label="58.06"];
+"104.0.0.14" -> "104.129.81.1"[label="54.23"];
+"104.0.0.14" -> "104.129.46.100"[label="1.54"];
+"104.0.0.14" -> "104.129.0.165"[label="0.00"];
+"104.0.0.14" -> "104.129.0.7"[label="1.72"];
+"104.0.0.14" -> "104.129.1.71"[label="2.62"];
+"104.0.0.14" -> "104.129.0.8"[label="5.69"];
+"104.0.0.14" -> "104.129.0.107"[label="38.25"];
+"104.0.0.14" -> "104.129.11.11"[label="2.87"];
+"104.0.0.14" -> "104.129.0.108"[label="55.77"];
+"104.0.0.14" -> "104.129.31.12"[label="3.39"];
+"104.0.0.14" -> "104.129.0.77"[label="61.93"];
+"104.0.0.14" -> "104.129.0.173"[label="5.68"];
+"104.0.0.14" -> "104.0.0.13"[label="1.00"];
+"104.0.0.14" -> "104.129.0.110"[label="3.18"];
+"104.0.0.14" -> "104.129.0.83"[label="2.19"];
+"104.0.0.14" -> "104.129.29.29"[label="14.63"];
+"104.0.0.14" -> "104.0.0.29"[label="1.16"];
+"104.0.0.14" -> "104.129.0.158"[label="0.00"];
+"104.0.0.14" -> "104.129.0.95"[label="5.59"];
+"104.129.0.110" -> "104.129.0.7"[label="0.00"];
+"104.129.0.110" -> "104.129.0.108"[label="96.33"];
+"104.129.0.110" -> "104.0.0.14"[label="4.32"];
+"104.129.0.110" -> "104.129.0.144"[label="5.09"];
+"104.129.0.110" -> "104.129.0.149"[label="4.70"];
+"104.129.0.110" -> "104.129.0.158"[label="0.00"];
+"104.129.0.110" -> "104.129.0.8"[label="11.38"];
+"104.129.0.110" -> "104.129.0.83"[label="44.23"];
+"104.130.1.14" -> "104.129.11.33"[label="3.48"];
+"104.130.1.14" -> "104.129.43.1"[label="2.68"];
+"104.130.1.14" -> "104.129.29.29"[label="3.45"];
+"104.130.1.14" -> "104.0.0.14"[label="464.46"];
+"104.131.0.47" -> "104.131.9.1"[label="6.20"];
+"104.192.99.111" -> "104.192.192.66"[label="89.69"];
+"104.192.99.111" -> "104.193.24.100"[label="65.03"];
+"104.192.99.111" -> "104.192.0.20"[label="1.95"];
+"104.131.9.15" -> "104.131.9.1"[label="1.91"];
+"104.131.9.15" -> "104.131.9.2"[label="0.00"];
+"104.131.9.15" -> "104.131.9.11"[label="1.48"];
+"104.131.9.15" -> "104.131.0.82"[label="0.00"];
+"104.129.0.144" -> "104.129.0.165"[label="51.00"];
+"104.129.0.144" -> "104.129.0.110"[label="4.20"];
+"104.129.0.144" -> "104.129.0.149"[label="1.19"];
+"104.129.0.48" -> "104.129.43.1"[label="2.60"];
+"104.66.24.113" -> "104.66.0.33"[label="1.55"];
+"104.66.24.113" -> "104.0.3.13"[label="3.19"];
+"104.66.24.113" -> "104.66.0.18"[label="1.34"];
+"104.129.0.113" -> "104.129.0.125"[label="18.43"];
+"104.129.0.113" -> "104.129.0.95"[label="144.50"];
+"104.131.0.82" -> "104.131.21.1"[label="11.35"];
+"104.131.0.82" -> "104.131.9.1"[label="1.36"];
+"104.131.0.82" -> "104.131.9.2"[label="1.23"];
+"104.131.0.82" -> "104.131.9.11"[label="1.29"];
+"104.131.0.82" -> "104.131.9.15"[label="1.14"];
+"104.66.0.18" -> "104.66.0.33"[label="1.08"];
+"104.66.0.18" -> "104.66.24.113"[label="2.06"];
+"104.129.0.83" -> "104.131.9.1"[label="0.00"];
+"104.129.0.83" -> "104.129.0.7"[label="2.91"];
+"104.129.0.83" -> "104.129.11.11"[label="0.00"];
+"104.129.0.83" -> "104.129.31.12"[label="15.52"];
+"104.129.0.83" -> "104.0.0.14"[label="1.81"];
+"104.129.0.83" -> "104.129.0.95"[label="58.06"];
+"104.192.0.20" -> "104.192.192.33"[label="1.22"];
+"104.192.0.20" -> "104.192.192.66"[label="1.19"];
+"104.192.0.20" -> "104.192.192.99"[label="2.65"];
+"104.192.0.20" -> "104.192.99.111"[label="1.60"];
+"104.129.0.149" -> "104.129.0.110"[label="10.69"];
+"104.129.0.149" -> "104.129.0.144"[label="1.70"];
+"104.0.23.22" -> "104.0.23.2"[label="1.01"];
+"104.66.0.23" -> "104.66.25.2"[label="2.28"];
+"104.66.0.23" -> "104.66.0.24"[label="1.01"];
+"104.0.23.23" -> "104.0.23.1"[label="1.00"];
+"104.0.23.23" -> "104.0.23.3"[label="1.02"];
+"104.66.0.24" -> "104.66.25.2"[label="1.75"];
+"104.66.0.24" -> "104.66.0.23"[label="1.00"];
+"104.129.0.91" -> "104.129.95.1"[label="0.00"];
+"104.129.0.91" -> "104.129.108.1"[label="2.06"];
+"104.129.0.91" -> "104.129.103.1"[label="1.93"];
+"104.129.0.91" -> "104.129.105.2"[label="3.93"];
+"104.129.0.91" -> "104.129.0.165"[label="1.61"];
+"104.129.0.91" -> "104.129.105.10"[label="0.00"];
+"104.131.0.28" -> "104.131.0.3"[label="1.67"];
+"104.131.0.28" -> "104.131.0.8"[label="1.25"];
+"104.131.0.28" -> "104.131.0.12"[label="2.80"];
+"104.129.0.125" -> "104.129.11.33"[label="27.32"];
+"104.129.0.125" -> "104.129.0.165"[label="4.52"];
+"104.129.0.125" -> "104.129.0.8"[label="0.00"];
+"104.129.0.125" -> "104.129.11.11"[label="0.00"];
+"104.129.0.125" -> "104.129.0.173"[label="0.00"];
+"104.129.0.125" -> "104.129.0.113"[label="15.18"];
+"104.129.0.125" -> "104.129.0.158"[label="0.00"];
+"104.129.29.29" -> "104.129.100.1"[label="0.00"];
+"104.129.29.29" -> "104.131.9.1"[label="26.22"];
+"104.129.29.29" -> "104.129.43.1"[label="70.99"];
+"104.129.29.29" -> "104.129.81.1"[label="4.98"];
+"104.129.29.29" -> "104.131.21.1"[label="71.46"];
+"104.129.29.29" -> "104.129.11.33"[label="7.28"];
+"104.129.29.29" -> "104.0.192.130"[label="1.00"];
+"104.129.29.29" -> "104.129.46.100"[label="0.00"];
+"104.129.29.29" -> "104.131.131.4"[label="0.00"];
+"104.129.29.29" -> "104.129.14.10"[label="0.00"];
+"104.129.29.29" -> "104.129.11.11"[label="16.14"];
+"104.129.29.29" -> "104.0.0.14"[label="6.83"];
+"104.129.29.29" -> "104.130.1.14"[label="0.00"];
+"104.0.0.29" -> "104.0.0.14"[label="0.00"];
+"104.129.0.158" -> "104.129.0.7"[label="7.30"];
+"104.129.0.158" -> "104.129.0.8"[label="1.64"];
+"104.129.0.158" -> "104.129.0.108"[label="3.35"];
+"104.129.0.158" -> "104.129.31.12"[label="6.39"];
+"104.129.0.158" -> "104.129.0.110"[label="10.49"];
+"104.129.0.158" -> "104.0.0.14"[label="19.18"];
+"104.129.0.158" -> "104.129.0.95"[label="5.66"];
+"104.129.0.95" -> "104.129.0.7"[label="3.16"];
+"104.129.0.95" -> "104.129.31.12"[label="53.08"];
+"104.129.0.95" -> "104.129.0.108"[label="4.55"];
+"104.129.0.95" -> "104.0.0.14"[label="14.07"];
+"104.129.0.95" -> "104.129.0.110"[label="8.94"];
+"104.129.0.95" -> "104.129.0.113"[label="9.10"];
+"104.129.0.95" -> "104.129.0.158"[label="5.61"];
+"104.129.0.95" -> "104.129.0.8"[label="2.85"];
+"104.129.0.95" -> "104.129.0.83"[label="6.50"];
+"104.129.43.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.81.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.81.1" -> "104.129.81.11/255.255.255.255"[label="HNA"];
+"104.129.81.11/255.255.255.255"[shape=diamond];
+"104.129.81.1" -> "104.129.111.111/255.255.255.255"[label="HNA"];
+"104.129.111.111/255.255.255.255"[shape=diamond];
+"104.129.17.1" -> "104.129.17.220/255.255.255.255"[label="HNA"];
+"104.129.17.220/255.255.255.255"[shape=diamond];
+"104.131.21.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.202.19.1" -> "104.202.19.0/255.255.255.0"[label="HNA"];
+"104.202.19.0/255.255.255.0"[shape=diamond];
+"104.202.19.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.130.11.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.65.65.97" -> "104.65.65.102/255.255.255.255"[label="HNA"];
+"104.65.65.102/255.255.255.255"[shape=diamond];
+"104.65.65.97" -> "104.65.65.98/255.255.255.255"[label="HNA"];
+"104.65.65.98/255.255.255.255"[shape=diamond];
+"104.131.9.1" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.9.1" -> "104.131.9.229/255.255.255.255"[label="HNA"];
+"104.131.9.229/255.255.255.255"[shape=diamond];
+"104.131.9.1" -> "104.131.9.9/255.255.255.255"[label="HNA"];
+"104.131.9.9/255.255.255.255"[shape=diamond];
+"104.0.23.3" -> "104.0.23.99/255.255.255.255"[label="HNA"];
+"104.0.23.99/255.255.255.255"[shape=diamond];
+"104.131.131.99" -> "104.131.1.9/255.255.255.255"[label="HNA"];
+"104.131.1.9/255.255.255.255"[shape=diamond];
+"104.129.46.100" -> "104.129.46.96/255.255.255.224"[label="HNA"];
+"104.129.46.96/255.255.255.224"[shape=diamond];
+"104.129.46.100" -> "104.129.46.0/255.255.255.192"[label="HNA"];
+"104.129.46.0/255.255.255.192"[shape=diamond];
+"104.193.0.5" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.21.12" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.31.12" -> "104.129.31.0/255.255.255.0"[label="HNA"];
+"104.129.31.0/255.255.255.0"[shape=diamond];
+"104.130.1.14" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.131.9.15" -> "104.131.9.16/255.255.255.248"[label="HNA"];
+"104.131.9.16/255.255.255.248"[shape=diamond];
+"104.66.0.24" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.129.29.29" -> "104.129.29.224/255.255.255.224"[label="HNA"];
+"104.129.29.224/255.255.255.224"[shape=diamond];
+"104.0.0.29" -> "0.0.0.0/0.0.0.0"[label="HNA"];
+"0.0.0.0/0.0.0.0"[shape=diamond];
+"104.0.0.29" -> "104.0.0.41/255.255.255.255"[label="HNA"];
+"104.0.0.41/255.255.255.255"[shape=diamond];
+}



From marec at berlios.de  Wed Feb  8 18:21:38 2006
From: marec at berlios.de (marec at berlios.de)
Date: Wed, 8 Feb 2006 18:21:38 +0100
Subject: [S3d-svn] r29 - trunk/apps/olsrs3d
Message-ID: <200602081721.k18HLcOB031425@sheep.berlios.de>

Author: marec
Date: 2006-02-08 18:21:36 +0100 (Wed, 08 Feb 2006)
New Revision: 29

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
inet gw part I

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-07 18:01:46 UTC (rev 28)
+++ trunk/apps/olsrs3d/main.c	2006-02-08 17:21:36 UTC (rev 29)
@@ -3,7 +3,7 @@
 #include <unistd.h>		/* sleep() */
 #include <string.h> 		/* strncpy() */
 #include <math.h>		/* sqrt() */
-#include <getopt.h>		/*  getopt() */
+#include <getopt.h>		/* getopt() */
 #include "olsrs3d.h"
 #define SPEED		10.0
 
@@ -12,7 +12,7 @@
 
 int node_count=-1;
 int alpha=0;
-int obj,mesh;
+int Olsr_node_obj,Olsr_node_inet_obj,mesh;
 float asp=1.0;
 float bottom=-1.0;
 float left=-1.0;
@@ -239,10 +239,10 @@
 	if ( Debug ) printf( "debug mode enabled ...\n" );
 
 	// delete olsrs3d options
-	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;		// optind may point to ip addr of '-H'
+	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;   // optind may point to ip addr of '-H'
 	optind--;
-	argv[optind] = argv[0];		// save program path
-	argc -= optind;					// jump over olsrs3d options
+	argv[optind] = argv[0];   // save program path
+	argc -= optind;   // jump over olsrs3d options
 	argv += optind;
 
 	// set extern int optind = 0 for parse_args in io.c
@@ -257,7 +257,8 @@
 			if (s3d_select_font("vera"))
 				printf("font not found\n");
 
-			obj=s3d_import_3ds_file("accesspoint.3ds");
+			Olsr_node_obj=s3d_import_3ds_file("accesspoint.3ds");
+			Olsr_node_inet_obj=s3d_import_3ds_file("accesspoint_inet.3ds");
 			mesh=s3d_import_3ds_file("meshnode.3ds");
 			s3d_link(mesh,0);
 			s3d_scale(mesh,0.15);

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-07 18:01:46 UTC (rev 28)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-08 17:21:36 UTC (rev 29)
@@ -5,11 +5,12 @@
 	int obj,s_obj;
 };
 
-extern int 		max, new_max;
+extern int 	max, new_max;
 extern float 	*adj;
-extern int		*adj_obj;
-extern int		obj;
-extern int		node_count;
+extern int	*adj_obj;
+extern int	Olsr_node_obj;
+extern int	Olsr_node_inet_obj;
+extern int	node_count;
 extern float 	bottom,left;
 
 struct t_node 	*node;

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-07 18:01:46 UTC (rev 28)
+++ trunk/apps/olsrs3d/process.c	2006-02-08 17:21:36 UTC (rev 29)
@@ -113,7 +113,7 @@
 
 	/* create new node */
 	strncpy(node[i].name,str,NAMEMAX);
-	node[i].obj=s3d_clone(obj);
+	node[i].obj=s3d_clone(Olsr_node_obj);
 	s3d_flags_on(node[i].obj,S3D_OF_VISIBLE);
 
 	/* create node text and attach (link) it to the node */
@@ -123,7 +123,7 @@
 	/*s3d_rotate(node[i].s_obj,0,180,0);*/
 	s3d_flags_on(node[i].s_obj,S3D_OF_VISIBLE);
 
-	printf("new %s [%d], obj nr. %d - %d\n",str,i,node[i].obj,node[i].s_obj);
+	printf("new %s [%d], Olsr_node_obj nr. %d - %d\n",str,i,node[i].obj,node[i].s_obj);
 
 	for (j=0;j<3;j++)
 	{
@@ -224,12 +224,28 @@
 	if (dn>=6)
 	{
 /*		printf("######link from [%s] to [%s], label [%s]\n",data[0],data[1],data[2]);*/
-		n1=get_node_num(data[0]);
-		n2=get_node_num(data[1]);
-		f=10.0+strtod(data[2],NULL)/10.0;
+		// announced network via HNA
+		if ( strcmp( data[2], "HNA" ) == 0 ) {
+
+			// connection to internet
+			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
+				n1=get_node_num(data[0]);
+				node[n1].obj=s3d_clone(Olsr_node_inet_obj);
+				s3d_flags_on(node[n1].obj,S3D_OF_VISIBLE);
+
+			}
+
+			// TODO: other HNA hast to be done
+
+		// normal node
+		} else {
+			n1=get_node_num(data[0]);
+			n2=get_node_num(data[1]);
+			f=10.0+strtod(data[2],NULL)/10.0;
 /*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
-		if (f>=5) /* just to prevent ascii to float converting inconsistency ... */
-			add_adj(n1,n2,f);
+			if (f>=5) /* just to prevent ascii to float converting inconsistency ... */
+				add_adj(n1,n2,f);
+		}
 	}
 	return(0);
 }



From nichtsnutz at berlios.de  Wed Feb  8 18:49:44 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Wed, 8 Feb 2006 18:49:44 +0100
Subject: [S3d-svn] r30 - trunk/apps/olsrs3d
Message-ID: <200602081749.k18Hnia0015723@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-08 18:49:37 +0100 (Wed, 08 Feb 2006)
New Revision: 30

Added:
   trunk/apps/olsrs3d/internet.3ds
Log:
neue grafik

Added: trunk/apps/olsrs3d/internet.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/apps/olsrs3d/internet.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From marec at berlios.de  Wed Feb  8 18:56:50 2006
From: marec at berlios.de (marec at berlios.de)
Date: Wed, 8 Feb 2006 18:56:50 +0100
Subject: [S3d-svn] r31 - trunk/apps/olsrs3d
Message-ID: <200602081756.k18Huo6r021003@sheep.berlios.de>

Author: marec
Date: 2006-02-08 18:56:44 +0100 (Wed, 08 Feb 2006)
New Revision: 31

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/process.c
Log:
inet gw part II

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-08 17:49:37 UTC (rev 30)
+++ trunk/apps/olsrs3d/main.c	2006-02-08 17:56:44 UTC (rev 31)
@@ -258,7 +258,7 @@
 				printf("font not found\n");
 
 			Olsr_node_obj=s3d_import_3ds_file("accesspoint.3ds");
-			Olsr_node_inet_obj=s3d_import_3ds_file("accesspoint_inet.3ds");
+			Olsr_node_inet_obj=s3d_import_3ds_file("internet.3ds");
 			mesh=s3d_import_3ds_file("meshnode.3ds");
 			s3d_link(mesh,0);
 			s3d_scale(mesh,0.15);

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-08 17:49:37 UTC (rev 30)
+++ trunk/apps/olsrs3d/process.c	2006-02-08 17:56:44 UTC (rev 31)
@@ -230,8 +230,10 @@
 			// connection to internet
 			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
 				n1=get_node_num(data[0]);
+				s3d_del_object(node[n1].obj);
 				node[n1].obj=s3d_clone(Olsr_node_inet_obj);
 				s3d_flags_on(node[n1].obj,S3D_OF_VISIBLE);
+				s3d_link(node[n1].s_obj, node[n1].obj);
 
 			}
 



From dotslash at berlios.de  Wed Feb  8 19:05:23 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Wed, 8 Feb 2006 19:05:23 +0100
Subject: [S3d-svn] r32 - in trunk: . client
Message-ID: <200602081805.k18I5NLe022294@sheep.berlios.de>

Author: dotslash
Date: 2006-02-08 19:04:45 +0100 (Wed, 08 Feb 2006)
New Revision: 32

Modified:
   trunk/
   trunk/client/io.c
   trunk/client/s3d.h
Log:
 r45 at balthasar:  dotslash | 2006-02-08 19:04:32 +0100
 s3d_usage()



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:27
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:45

Modified: trunk/client/io.c
===================================================================
--- trunk/client/io.c	2006-02-08 17:56:44 UTC (rev 31)
+++ trunk/client/io.c	2006-02-08 18:04:45 UTC (rev 32)
@@ -37,6 +37,12 @@
 }
 
 #endif
+int s3d_usage()
+{
+	printf("s3d-parameters:");
+	printf(" --s3d-url <url>: skip S3D enviroment and connect to this url");
+	printf(" --help, -?, -h, --s3d-help: this helpful text");
+}
 
 static int parse_args(int *argc, char ***argv)
 {
@@ -65,10 +71,8 @@
 			break;
 		case '?':
 		case 'h':
-			dprintf(VHIGH,"usage: %s [options]",(*argv)[0]);
-			dprintf(VHIGH,"s3d-parameters:");
-			dprintf(VHIGH," --s3d-url <url>: skip S3D enviroment and connect to this url");
-			dprintf(VHIGH," --help, -?, -h, --s3d-help: this helpful text");
+			printf("usage: %s [options]",(*argv)[0]);
+			s3d_usage();
 			return(-1);
 		}
 	}

Modified: trunk/client/s3d.h
===================================================================
--- trunk/client/s3d.h	2006-02-08 17:56:44 UTC (rev 31)
+++ trunk/client/s3d.h	2006-02-08 18:04:45 UTC (rev 32)
@@ -6,6 +6,7 @@
 };
 
 typedef void (*s3d_cb)(struct s3d_evt *);
+int s3d_usage();
 int s3d_init(int *argc, char ***argv, char *name);
 int s3d_quit();
 int s3d_mainloop(void (*f)());



From marec at berlios.de  Wed Feb  8 19:38:43 2006
From: marec at berlios.de (marec at berlios.de)
Date: Wed, 8 Feb 2006 19:38:43 +0100
Subject: [S3d-svn] r34 - trunk/apps/olsrs3d
Message-ID: <200602081838.k18Ich2q003000@sheep.berlios.de>

Author: marec
Date: 2006-02-08 19:38:32 +0100 (Wed, 08 Feb 2006)
New Revision: 34

Modified:
   trunk/apps/olsrs3d/main.c
Log:
s3d_usage()

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-08 18:37:23 UTC (rev 33)
+++ trunk/apps/olsrs3d/main.c	2006-02-08 18:38:32 UTC (rev 34)
@@ -32,6 +32,7 @@
 	printf( "   -h\tprint this short help\n" );
 	printf( "   -d\tenable debug mode\n" );
 	printf( "   -H\tconnect to olsr node [default: localhost]\n" );
+	s3d_usage();
 
 }
 



From marec at berlios.de  Wed Feb  8 19:37:27 2006
From: marec at berlios.de (marec at berlios.de)
Date: Wed, 8 Feb 2006 19:37:27 +0100
Subject: [S3d-svn] r33 - trunk/client
Message-ID: <200602081837.k18IbRxd002106@sheep.berlios.de>

Author: marec
Date: 2006-02-08 19:37:23 +0100 (Wed, 08 Feb 2006)
New Revision: 33

Modified:
   trunk/client/io.c
Log:
s3d_usage fix

Modified: trunk/client/io.c
===================================================================
--- trunk/client/io.c	2006-02-08 18:04:45 UTC (rev 32)
+++ trunk/client/io.c	2006-02-08 18:37:23 UTC (rev 33)
@@ -18,7 +18,7 @@
 	#include <netdb.h>		 /*  gethostbyname()  */
 #endif
 
-static char				*url=NULL; 
+static char				*url=NULL;
 extern int 				con_type;
 /*  this file is the client-lib-implementation which holds the function to connect and control the server. */
 #ifdef WITH_SIGNALS
@@ -39,16 +39,16 @@
 #endif
 int s3d_usage()
 {
-	printf("s3d-parameters:");
-	printf(" --s3d-url <url>: skip S3D enviroment and connect to this url");
-	printf(" --help, -?, -h, --s3d-help: this helpful text");
+	printf("s3d-parameters:\n");
+	printf(" --s3d-url <url>: skip S3D enviroment and connect to this url\n");
+	printf(" --help, -?, -h, --s3d-help: this helpful text\n");
 }
 
 static int parse_args(int *argc, char ***argv)
 {
 	char				 c;
 	int					 lopt_idx;
-	struct option long_options[] = 
+	struct option long_options[] =
 	{
 		{"s3d-url",1,0,0},
 		{"help",0,0,'h'},
@@ -67,7 +67,7 @@
 					url=optarg;
 					dprintf(HIGH,"connecting to %s",url);
 				}
-			} 
+			}
 			break;
 		case '?':
 		case 'h':
@@ -81,7 +81,7 @@
 		*argc-=(optind-1); 				 /*  hide s3d-options */
 		(*argv)[optind-1]=(*argv)[0]; 	 /*  restore program path */
 		*argv+=(optind-1); 				 /*  set the string pointer at the right position */
-	}	
+	}
 	return(0);
 }
 /*  external functions go here ... */
@@ -121,7 +121,7 @@
 	} else {
 		strncpy(urlc,url,256);	 /*  this should keep buffer overflows away, maybe */
 		urlc[256]=0;			 /*  just to make sure */
-		if (!strncmp(urlc, "s3d:// ",6)) 
+		if (!strncmp(urlc, "s3d:// ",6))
 		{
 			if (s3d_net_init(urlc)==CON_NULL) return(-1);
 		} else {
@@ -135,9 +135,9 @@
 	 /*  TODO: we should wait for the INIT-event here before proceeding. */
 	_queue_init();
 #ifdef SIGNAL
-    if (signal(SIGINT, (sig_t)sigint_handler) == SIG_ERR) 
+    if (signal(SIGINT, (sig_t)sigint_handler) == SIG_ERR)
 		errn("s3d_init():signal()",errno);
-    if (signal(SIGTERM, (sig_t)sigint_handler) == SIG_ERR) 
+    if (signal(SIGTERM, (sig_t)sigint_handler) == SIG_ERR)
 		errn("s3d_init():signal()",errno);
 
 #endif
@@ -201,7 +201,7 @@
 	{
 		errn("s3d_open_3ds_file():malloc()",errno);
 		exit(-1);
-	} 
+	}
 	fread(buf, filesize, 1, fp);
 	fclose(fp);
 	*pointer=buf;



From dotslash at berlios.de  Wed Feb  8 20:04:08 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Wed, 8 Feb 2006 20:04:08 +0100
Subject: [S3d-svn] r35 - in trunk: . example
Message-ID: <200602081904.k18J48lm012590@sheep.berlios.de>

Author: dotslash
Date: 2006-02-08 20:04:05 +0100 (Wed, 08 Feb 2006)
New Revision: 35

Modified:
   trunk/
   trunk/example/dot_mcp.c
Log:
 r47 at balthasar:  dotslash | 2006-02-08 20:03:47 +0100
 debugging aspect



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:45
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:47

Modified: trunk/example/dot_mcp.c
===================================================================
--- trunk/example/dot_mcp.c	2006-02-08 18:38:32 UTC (rev 34)
+++ trunk/example/dot_mcp.c	2006-02-08 19:04:05 UTC (rev 35)
@@ -295,6 +295,7 @@
 	if (inf->object==0)
 	{
 		asp=inf->scale;
+		printf("screen aspect: %f\n",asp);
 		if (asp>1.0) /* wide screen */
 		{
 			bottom=-1.0;



From marec at berlios.de  Thu Feb  9 16:40:34 2006
From: marec at berlios.de (marec at berlios.de)
Date: Thu, 9 Feb 2006 16:40:34 +0100
Subject: [S3d-svn] r36 - trunk/apps/olsrs3d
Message-ID: <200602091540.k19FeYPd010165@sheep.berlios.de>

Author: marec
Date: 2006-02-09 16:40:31 +0100 (Thu, 09 Feb 2006)
New Revision: 36

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
adj-liste

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-08 19:04:05 UTC (rev 35)
+++ trunk/apps/olsrs3d/main.c	2006-02-09 15:40:31 UTC (rev 36)
@@ -8,8 +8,11 @@
 #define SPEED		10.0
 
 int Debug = 0;
-char Olsr_host[256];
 
+char Olsr_host[256];   // ip or hostname of olsr node with running dot_draw plugin
+
+static struct olsr_node *Root = NULL;   // top of olsr node tree
+
 int node_count=-1;
 int alpha=0;
 int Olsr_node_obj,Olsr_node_inet_obj,mesh;
@@ -40,6 +43,21 @@
 
 /***
  *
+ * print error and exit
+ *
+ ***/
+
+void out_of_mem( void ) {
+
+	printf( "Sorry - you ran out of memory !\n" );
+	exit( 8 );
+
+}
+
+
+
+/***
+ *
  * calculate distance between 2 vectors => http://en.wikipedia.org/wiki/Euclidean_distance
  *
  *   p1   =>   vector of node 1
@@ -113,19 +131,76 @@
 
 
 
+/***
+ *
+ * check whether is a new / modified node and handle it accordingly
+ *
+ *   *olsr_node =>   pointer to current olsr_node
+ *
+ ***/
+
+void handle_olsr_node( struct olsr_node *olsr_node ) {
+
+	float f;
+
+	// no more node left
+	if ( olsr_node == NULL ) return;
+
+	// reset movement vector
+	olsr_node->mov_vec[0] = olsr_node->mov_vec[1] = olsr_node->mov_vec[2] = 0.0;
+
+	// olsr node shape has been modified
+	if ( olsr_node->inet_gw_modified ) {
+
+		/* delete old shape */
+		if ( olsr_node->obj_id != NULL ) s3d_del_object( olsr_node->obj_id );
+		if ( olsr_node->desc_id != NULL ) s3d_del_object( olsr_node->desc_id );
+
+		/* create new shape */
+		if ( olsr_node->inet_gw ) {
+			// olsr node offers internet access
+			olsr_node->obj_id = s3d_clone( Olsr_node_inet_obj );
+		} else {
+			// normal olsr node
+			olsr_node->obj_id = s3d_clone( Olsr_node_obj );
+		}
+
+		s3d_flags_on( olsr_node->obj_id, S3D_OF_VISIBLE );
+
+		/* create olsr node text and attach (link) it to the node */
+		node->desc_id = s3d_draw_string( olsr_node->ip, &f );
+		s3d_link( olsr_node->desc_id, olsr_node->obj_id );
+		s3d_translate( olsr_node->desc_id, -f/2,-2,0 );
+		s3d_flags_on( olsr_node->desc_id, S3D_OF_VISIBLE );
+
+		olsr_node->inet_gw_modified = 0;
+
+	}
+
+	handle_olsr_node( olsr_node->left );
+	handle_olsr_node( olsr_node->right );
+
+}
+
+
+
 void mainloop()
 {
 	int i,j,o,r;
 	float d,gd,f,m[3];
 	float z[3]={0,0,0};
+// 	for (i=0;i<max;i++)
+// 	{
+// 		node[i].mov[0]=
+// 		node[i].mov[1]=
+// 		node[i].mov[2]=0.0;
+// 	}
+
+	// prepare nodes
+	handle_olsr_node( &Root );
+
 	for (i=0;i<max;i++)
 	{
-		node[i].mov[0]=
-		node[i].mov[1]=
-		node[i].mov[2]=0.0;
-	}
-	for (i=0;i<max;i++)
-	{
 		for (j=i+1;j<max;j++)
 		{
 			if (i!=j)

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-08 19:04:05 UTC (rev 35)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-09 15:40:31 UTC (rev 36)
@@ -5,6 +5,35 @@
 	int obj,s_obj;
 };
 
+
+// binary tree for the connections
+struct olsr_con {
+
+	struct olsr_con *next_olsr_con;   // pointer to next connection
+	struct olsr_node *olsr_node;   // pointer to end point of the connection
+	int obj_id;   // id of connection object in s3d
+	float etx;
+
+}
+
+
+// we contruct a binary tree to handle the nodes
+struct olsr_node {
+
+	struct olsr_node *left;
+	struct olsr_node *right;
+	char ip[NAMEMAX];   // host ip
+	int inet_gw;   // internet gateway flag
+	int inet_gw_modified;   // internet gateway modified flag
+	float pos_vec[3];   // position vector in 3d "space"
+	float mov_vec[3];   // move vector
+	int obj_id;   // id of node object in s3d
+	int desc_id;   // id of node description object in s3d
+	struct olsr_con *olsr_con;   // pointer to first connection
+
+};
+
+
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-08 19:04:05 UTC (rev 35)
+++ trunk/apps/olsrs3d/process.c	2006-02-09 15:40:31 UTC (rev 36)
@@ -13,6 +13,54 @@
  *
  * create new or alter connection between 2 nodes
  *
+ *   olsr_con =>   pointer to current olsr connection
+ *   con_to   =>   node to connect to
+ *   l        =>   length ? ETX ?
+ *
+ ***/
+
+int add_olsr_con( struct olsr_con **olsr_con, struct olsr_node *con_to, float l ) {
+
+	// new connection
+	if ( (*olsr_con) == NULL ) {
+
+		(*olsr_con) = malloc( sizeof( struct olsr_con ) );
+		if ( (*olsr_con) == NULL ) out_of_mem();
+
+		// create connection object
+		(*olsr_con)->obj_id = s3d_new_object();
+		s3d_push_material((*olsr_con)->obj_id,
+				  1.0,1.0,1.0,
+				  1.0,1.0,1.0,
+				  1.0,1.0,1.0);
+		s3d_push_polygon((*olsr_con)->obj_id,0,4,5,0);
+		s3d_push_polygon((*olsr_con)->obj_id,3,1,2,0);
+
+		(*olsr_con)->next_olsr_con = NULL;
+		(*olsr_con)->etx = l;
+
+		return( 0 );
+
+	}
+
+	// existing connection
+	if ( (*olsr_con)->olsr_node == con_to ) {
+
+		(*olsr_con)->etx = l;
+		return( 0 );
+
+	}
+
+	add_olsr_con( &(*olsr_con)->next_olsr_con, con_to, l );
+
+}
+
+
+
+/***
+ *
+ * create new or alter connection between 2 nodes
+ *
  *   n1   =>   node id 1
  *   n2   =>   node id 2
  *   l    =>   length ? ETX ?
@@ -85,6 +133,63 @@
 
 /***
  *
+ * get pointer to olsr node or create new node if node string could not be found
+ *
+ *   **node =>   pointer to current olsr_node
+ *   *ip    =>   node ip
+ *
+ *   return olsr node pointer
+ *
+ ***/
+
+void *get_olsr_node( struct olsr_node **node, char *ip ) {
+
+	int i;   // inc var
+	int result;   // result of strcmp
+
+	// if node is NULL we reached the end of the tree and must create a new olsr_node
+	if ( (*node) == NULL ) {
+
+		(*node) = malloc( sizeof( struct olsr_node ) );
+		if ( (*node) == NULL ) out_of_mem();
+
+		(*node)->left = NULL;
+		(*node)->right = NULL;
+		strncpy((*node)->ip,ip,NAMEMAX);
+		(*node)->inet_gw = 0;
+		(*node)->inet_gw_modified = 1;
+
+		for ( i=0; i<3; i++ ) {
+			(*node)->pos_vec[i] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+			(*node)->mov_vec[i] = 0.0;
+		}
+
+		(*node)->obj_id = NULL;
+		(*node)->desc_id = NULL;
+		(*node)->olsr_con = NULL;
+
+		return (*node);
+
+	}
+
+	result = strncmp( (*node)->ip, ip, NAMEMAX );
+
+	// we found the node
+	if ( result == 0 ) return (*node);
+
+	// the searched node must be in the subtree
+	if ( result < 0 ) {
+		get_olsr_node( &(*node)->right, ip );
+	} else {
+		get_olsr_node( &(*node)->left, ip );
+	}
+
+}
+
+
+
+/***
+ *
  * get node id or create new node if node string could not be found
  *
  *   *str   =>   node description
@@ -145,23 +250,23 @@
 	printf("committing input ... \n");
 
 	/* remove old adjacent objects ... */
-	for (i=0;i<max;i++)
-		for (j=i+1;j<max;j++)
-			if (adj_obj[i*max+j]!=-1)
-				if (new_adj_obj[i*new_max+j]==-1)
-				{
-/*					printf("old link does not exist anymore ...\n");*/
-					/* this link does not exist anymore ... */
-					s3d_del_object(adj_obj[i*max+j]);
-				}
+// 	for (i=0;i<max;i++)
+// 		for (j=i+1;j<max;j++)
+// 			if (adj_obj[i*max+j]!=-1)
+// 				if (new_adj_obj[i*new_max+j]==-1)
+// 				{
+// /*					printf("old link does not exist anymore ...\n");*/
+// 					/* this link does not exist anymore ... */
+// 					s3d_del_object(adj_obj[i*max+j]);
+// 				}
 	/* swap the matrices */
-	swap_adj=adj;
-	swap_adj_obj=adj_obj;
+// 	swap_adj=adj;
+// 	swap_adj_obj=adj_obj;
+//
+// 	adj=new_adj;
+// 	adj_obj=new_adj_obj;
 
-	adj=new_adj;
-	adj_obj=new_adj_obj;
 
-
 	/* if we have more nodes redraw node count */
 	/* what if we have less nodes ?? */
 	if (new_max>max)
@@ -179,22 +284,24 @@
 	}
 
 
-	new_adj=swap_adj;
-	new_adj_obj=swap_adj_obj;
+// 	new_adj=swap_adj;
+// 	new_adj_obj=swap_adj_obj;
 	/* setting new maxsize */
 	max=new_max;
 	/* resetting the input-matrices*/
-	for (i=0;i<max;i++)
-	for (j=0;j<max;j++)
-	{
-		new_adj[i*max+j]=0.0;
-		new_adj_obj[i*max+j]=-1;
-	}
+// 	for (i=0;i<max;i++)
+// 	for (j=0;j<max;j++)
+// 	{
+// 		new_adj[i*max+j]=0.0;
+// 		new_adj_obj[i*max+j]=-1;
+// 	}
 	return(0);
 }
 int parse_line(int n)
 {
-	char *data[3]; /* in this order: ip_from, ip_to, label */
+	char *data[3];   // in this order: ip_from, ip_to, label
+	struct olsr_node *olsr_node1;   // pointer to olsr nodes
+	struct olsr_node *olsr_node2;
 	int i,dn,n1,n2;
 	float f;
 	data[0]=data[1]=data[2]=NULL;
@@ -225,29 +332,32 @@
 	{
 /*		printf("######link from [%s] to [%s], label [%s]\n",data[0],data[1],data[2]);*/
 		// announced network via HNA
-		if ( strcmp( data[2], "HNA" ) == 0 ) {
-
-			// connection to internet
-			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
-				n1=get_node_num(data[0]);
-				s3d_del_object(node[n1].obj);
-				node[n1].obj=s3d_clone(Olsr_node_inet_obj);
-				s3d_flags_on(node[n1].obj,S3D_OF_VISIBLE);
-				s3d_link(node[n1].s_obj, node[n1].obj);
-
-			}
-
-			// TODO: other HNA hast to be done
-
-		// normal node
-		} else {
-			n1=get_node_num(data[0]);
-			n2=get_node_num(data[1]);
+// 		if ( strcmp( data[2], "HNA" ) == 0 ) {
+//
+// 			// connection to internet
+// 			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
+// 				n1=get_node_num(data[0]);
+// 				s3d_del_object(node[n1].obj);
+// 				node[n1].obj=s3d_clone(Olsr_node_inet_obj);
+// 				s3d_flags_on(node[n1].obj,S3D_OF_VISIBLE);
+// 				s3d_link(node[n1].s_obj, node[n1].obj);
+//
+// 			}
+//
+// 			// TODO: other HNA hast to be done
+//
+// 		// normal node
+// 		} else {
+// 			n1=get_node_num(data[0]);
+// 			n2=get_node_num(data[1]);
+			olsr_node1 = get_olsr_node( &Root, data[0] );
+			olsr_node2 = get_olsr_node( &Root, data[1] );
 			f=10.0+strtod(data[2],NULL)/10.0;
 /*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
 			if (f>=5) /* just to prevent ascii to float converting inconsistency ... */
-				add_adj(n1,n2,f);
-		}
+// 				add_adj(n1,n2,f);
+				add_olsr_con( olsr_node1->olsr_con, olsr_node2, f );
+// 		}
 	}
 	return(0);
 }



From marec at berlios.de  Thu Feb  9 18:28:41 2006
From: marec at berlios.de (marec at berlios.de)
Date: Thu, 9 Feb 2006 18:28:41 +0100
Subject: [S3d-svn] r37 - trunk/apps/olsrs3d
Message-ID: <200602091728.k19HSf2Z030242@sheep.berlios.de>

Author: marec
Date: 2006-02-09 18:28:33 +0100 (Thu, 09 Feb 2006)
New Revision: 37

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
adj-list

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-09 15:40:31 UTC (rev 36)
+++ trunk/apps/olsrs3d/main.c	2006-02-09 17:28:33 UTC (rev 37)
@@ -11,7 +11,6 @@
 
 char Olsr_host[256];   // ip or hostname of olsr node with running dot_draw plugin
 
-static struct olsr_node *Root = NULL;   // top of olsr node tree
 
 int node_count=-1;
 int alpha=0;
@@ -141,14 +140,13 @@
 
 void handle_olsr_node( struct olsr_node *olsr_node ) {
 
-	float f;
+	float f, distance;
+	float tmp_mov_vec[3];
+	struct olsr_con **olsr_con;
 
 	// no more node left
 	if ( olsr_node == NULL ) return;
-
-	// reset movement vector
-	olsr_node->mov_vec[0] = olsr_node->mov_vec[1] = olsr_node->mov_vec[2] = 0.0;
-
+printf( "durchlauf: %s\n", olsr_node );
 	// olsr node shape has been modified
 	if ( olsr_node->inet_gw_modified ) {
 
@@ -168,7 +166,7 @@
 		s3d_flags_on( olsr_node->obj_id, S3D_OF_VISIBLE );
 
 		/* create olsr node text and attach (link) it to the node */
-		node->desc_id = s3d_draw_string( olsr_node->ip, &f );
+		olsr_node->desc_id = s3d_draw_string( olsr_node->ip, &f );
 		s3d_link( olsr_node->desc_id, olsr_node->obj_id );
 		s3d_translate( olsr_node->desc_id, -f/2,-2,0 );
 		s3d_flags_on( olsr_node->desc_id, S3D_OF_VISIBLE );
@@ -177,6 +175,23 @@
 
 	}
 
+	/* reset movement vector */
+	olsr_node->mov_vec[0] = olsr_node->mov_vec[1] = olsr_node->mov_vec[2] = 0.0;
+
+	/* calculate new movement vector */
+// 	olsr_con = &olsr_node->olsr_con;
+//
+// 	while ( (*olsr_con) != NULL ) {
+//
+// 		distance = dirt( olsr_node->pos_vec, (*olsr_con)->olsr_node->pos_vec, tmp_mov_vec );
+// 		f = ( (*olsr_con)->etx ) / distance;
+// 		if ( f < 0.3 ) f = 0.3;
+// 		mov_add( olsr_node->mov_vec, tmp_mov_vec, 1/f-1);
+//
+// 		olsr_con = &(*olsr_con)->next_olsr_con;
+//
+// 	}
+
 	handle_olsr_node( olsr_node->left );
 	handle_olsr_node( olsr_node->right );
 
@@ -197,62 +212,62 @@
 // 	}
 
 	// prepare nodes
-	handle_olsr_node( &Root );
+	handle_olsr_node( Root );
 
-	for (i=0;i<max;i++)
-	{
-		for (j=i+1;j<max;j++)
-		{
-			if (i!=j)
-			{
-				gd=adj[i*max+j];
-				d=dirt(node[i].pos,node[j].pos,m);
-				if (gd==0.0)	/* points are not connected */
-				{
+	/*	for (i=0;i<max;i++)*/
+	/*	{*/
+	/*		for (j=i+1;j<max;j++)*/
+	/*		{*/
+	/*			if (i!=j)*/
+	/*			{*/
+	/*				gd=adj[i*max+j];*/
+	/*				d=dirt(node[i].pos,node[j].pos,m);*/
+	/*				if (gd==0.0)*/	/* points are not connected */
+	/*				{*/
 /*					printf("distance between i and j: %f\n",d);*/
-					if (d<0.1) d=0.1;
-					mov_add(node[j].mov,m,100/(d*d));
-					mov_add(node[i].mov,m,-100/(d*d));
-				} else { /* connected!! */
+	/*					if (d<0.1) d=0.1;*/
+	/*					mov_add(node[j].mov,m,100/(d*d));*/
+	/*					mov_add(node[i].mov,m,-100/(d*d));*/
+	/*				} else {*/ /* connected!! */
 
-					f=(gd)/d;
-					if (f<0.3) f=0.3;
-					mov_add(node[i].mov,m,1/f-1);
-					mov_add(node[j].mov,m,-(1/f-1));
+	/*					f=(gd)/d;*/
+	/*					if (f<0.3) f=0.3;*/
+	/*					mov_add(node[i].mov,m,1/f-1);*/
+	/*					mov_add(node[j].mov,m,-(1/f-1));*/
 /*					printf("distance between %d and %d: %f / %f = %f\n",i,j,gd,d,f);*/
-				}
-			}
-		}
-		d=dirt(node[i].pos,z,m);
+	/*				}*/
+	/*			}*/
+	/*		}*/
+	/*		d=dirt(node[i].pos,z,m);*/
 /*		mov_add(node[i].mov,m,d/100); * move a little bit to point zero */
-		mov_add(node[i].mov,m,1); /* move a little bit to point zero */
-	}
+/*		mov_add(node[i].mov,m,1); * move a little bit to point zero */
+/*	}
 	/* move it!! */
-	for (i=0;i<max;i++)
-	{
+// 	for (i=0;i<max;i++)
+// 	{
 /*		printf("applying move vector for point %d: %f:%f:%f\n",i,node[i].mov[0],node[i].mov[1],node[i].mov[2]);*/
-		if ((d=dist(node[i].mov,z))>10.0)
-			mov_add(node[i].pos,node[i].mov,1.0/((float )d)); /* normalize */
-		else
-			mov_add(node[i].pos,node[i].mov,0.1);
-		s3d_translate(node[i].obj,node[i].pos[0],node[i].pos[1],node[i].pos[2]);
-		for (j=i+1;j<max;j++)
-			if ((o=adj_obj[max*i+j])!=-1)
-			{
-				s3d_pop_vertex(o,6);
+// 		if ((d=dist(node[i].mov,z))>10.0)
+// 			mov_add(node[i].pos,node[i].mov,1.0/((float )d)); /* normalize */
+// 		else
+// 			mov_add(node[i].pos,node[i].mov,0.1);
+// 		s3d_translate(node[i].obj,node[i].pos[0],node[i].pos[1],node[i].pos[2]);
+// 		for (j=i+1;j<max;j++)
+// 			if ((o=adj_obj[max*i+j])!=-1)
+// 			{
+// 				s3d_pop_vertex(o,6);
 /*				s3d_pop_polygon(o,2);*/
-				s3d_push_vertex(o,node[i].pos[0],	 node[i].pos[1],node[i].pos[2]);
-				s3d_push_vertex(o,node[i].pos[0]+0.2,node[i].pos[1],node[i].pos[2]);
-				s3d_push_vertex(o,node[i].pos[0]-0.2,node[i].pos[1],node[i].pos[2]);
+// 				s3d_push_vertex(o,node[i].pos[0],	 node[i].pos[1],node[i].pos[2]);
+// 				s3d_push_vertex(o,node[i].pos[0]+0.2,node[i].pos[1],node[i].pos[2]);
+// 				s3d_push_vertex(o,node[i].pos[0]-0.2,node[i].pos[1],node[i].pos[2]);
 
-				s3d_push_vertex(o,node[j].pos[0],	 node[j].pos[1],node[j].pos[2]);
-				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]+0.2,node[j].pos[2]);
-				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]-0.2,node[j].pos[2]);
+// 				s3d_push_vertex(o,node[j].pos[0],	 node[j].pos[1],node[j].pos[2]);
+// 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]+0.2,node[j].pos[2]);
+// 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]-0.2,node[j].pos[2]);
 
 /*				s3d_push_polygon(o,0,4,5,0);
 				s3d_push_polygon(o,3,1,2,0);*/
-			}
-	}
+// 			}
+// 	}
 	while (0!=(r=net_main()))
 		if (r==-1)
 		{

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-09 15:40:31 UTC (rev 36)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-09 17:28:33 UTC (rev 37)
@@ -6,7 +6,7 @@
 };
 
 
-// binary tree for the connections
+// linked list for the connections
 struct olsr_con {
 
 	struct olsr_con *next_olsr_con;   // pointer to next connection
@@ -14,7 +14,7 @@
 	int obj_id;   // id of connection object in s3d
 	float etx;
 
-}
+};
 
 
 // we contruct a binary tree to handle the nodes
@@ -34,6 +34,10 @@
 };
 
 
+
+static struct olsr_node *Root = NULL;   // top of olsr node tree
+
+
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-09 15:40:31 UTC (rev 36)
+++ trunk/apps/olsrs3d/process.c	2006-02-09 17:28:33 UTC (rev 37)
@@ -142,46 +142,47 @@
  *
  ***/
 
-void *get_olsr_node( struct olsr_node **node, char *ip ) {
+void *get_olsr_node( struct olsr_node **olsr_node, char *ip ) {
 
 	int i;   // inc var
 	int result;   // result of strcmp
 
 	// if node is NULL we reached the end of the tree and must create a new olsr_node
-	if ( (*node) == NULL ) {
+	if ( (*olsr_node) == NULL ) {
 
-		(*node) = malloc( sizeof( struct olsr_node ) );
-		if ( (*node) == NULL ) out_of_mem();
+		(*olsr_node) = malloc( sizeof( struct olsr_node ) );
+		if ( (*olsr_node) == NULL ) out_of_mem();
 
-		(*node)->left = NULL;
-		(*node)->right = NULL;
-		strncpy((*node)->ip,ip,NAMEMAX);
-		(*node)->inet_gw = 0;
-		(*node)->inet_gw_modified = 1;
+		(*olsr_node)->left = NULL;
+		(*olsr_node)->right = NULL;
+		strncpy((*olsr_node)->ip,ip,NAMEMAX);
+		(*olsr_node)->inet_gw = 0;
+		(*olsr_node)->inet_gw_modified = 1;
+		printf( "add: %s\n", (*olsr_node)->ip );
 
 		for ( i=0; i<3; i++ ) {
-			(*node)->pos_vec[i] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
-			(*node)->mov_vec[i] = 0.0;
+			(*olsr_node)->pos_vec[i] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+			(*olsr_node)->mov_vec[i] = 0.0;
 		}
 
-		(*node)->obj_id = NULL;
-		(*node)->desc_id = NULL;
-		(*node)->olsr_con = NULL;
+		(*olsr_node)->obj_id = NULL;
+		(*olsr_node)->desc_id = NULL;
+		(*olsr_node)->olsr_con = NULL;
 
-		return (*node);
+		return (*olsr_node);
 
 	}
 
-	result = strncmp( (*node)->ip, ip, NAMEMAX );
+	result = strncmp( (*olsr_node)->ip, ip, NAMEMAX );
 
 	// we found the node
-	if ( result == 0 ) return (*node);
+	if ( result == 0 ) return (*olsr_node);
 
 	// the searched node must be in the subtree
 	if ( result < 0 ) {
-		get_olsr_node( &(*node)->right, ip );
+		get_olsr_node( &(*olsr_node)->right, ip );
 	} else {
-		get_olsr_node( &(*node)->left, ip );
+		get_olsr_node( &(*olsr_node)->left, ip );
 	}
 
 }
@@ -332,22 +333,27 @@
 	{
 /*		printf("######link from [%s] to [%s], label [%s]\n",data[0],data[1],data[2]);*/
 		// announced network via HNA
-// 		if ( strcmp( data[2], "HNA" ) == 0 ) {
-//
-// 			// connection to internet
-// 			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
-// 				n1=get_node_num(data[0]);
-// 				s3d_del_object(node[n1].obj);
-// 				node[n1].obj=s3d_clone(Olsr_node_inet_obj);
-// 				s3d_flags_on(node[n1].obj,S3D_OF_VISIBLE);
-// 				s3d_link(node[n1].s_obj, node[n1].obj);
-//
-// 			}
-//
-// 			// TODO: other HNA hast to be done
-//
-// 		// normal node
-// 		} else {
+		if ( strcmp( data[2], "HNA" ) == 0 ) {
+
+			// connection to internet
+			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
+
+				olsr_node1 = get_olsr_node( &Root, data[0] );
+
+				if ( olsr_node1->inet_gw == 0 ) {
+
+					olsr_node1->inet_gw = 1;
+					olsr_node1->inet_gw_modified = 1;
+					printf( "new internet: %s\n", olsr_node1->ip );
+
+				}
+
+			}
+
+			/* TODO: other HNA hast to be done */
+
+		// normal node
+		} else {
 // 			n1=get_node_num(data[0]);
 // 			n2=get_node_num(data[1]);
 			olsr_node1 = get_olsr_node( &Root, data[0] );
@@ -356,8 +362,8 @@
 /*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
 			if (f>=5) /* just to prevent ascii to float converting inconsistency ... */
 // 				add_adj(n1,n2,f);
-				add_olsr_con( olsr_node1->olsr_con, olsr_node2, f );
-// 		}
+				add_olsr_con( &(olsr_node1)->olsr_con, olsr_node2, f );
+		}
 	}
 	return(0);
 }



From marec at berlios.de  Fri Feb 10 21:07:22 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 10 Feb 2006 21:07:22 +0100
Subject: [S3d-svn] r38 - trunk/apps/olsrs3d
Message-ID: <200602102007.k1AK7Mjn008637@sheep.berlios.de>

Author: marec
Date: 2006-02-10 21:07:04 +0100 (Fri, 10 Feb 2006)
New Revision: 38

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
adj-list

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-09 17:28:33 UTC (rev 37)
+++ trunk/apps/olsrs3d/main.c	2006-02-10 20:07:04 UTC (rev 38)
@@ -11,7 +11,9 @@
 
 char Olsr_host[256];   // ip or hostname of olsr node with running dot_draw plugin
 
+struct olsr_node *Root = NULL;   // top of olsr node tree
 
+
 int node_count=-1;
 int alpha=0;
 int Olsr_node_obj,Olsr_node_inet_obj,mesh;
@@ -144,22 +146,22 @@
 	float tmp_mov_vec[3];
 	struct olsr_con **olsr_con;
 
-	// no more node left
+	/* no more nodes left */
 	if ( olsr_node == NULL ) return;
-printf( "durchlauf: %s\n", olsr_node );
-	// olsr node shape has been modified
+
+	/* olsr node shape has been modified */
 	if ( olsr_node->inet_gw_modified ) {
 
 		/* delete old shape */
-		if ( olsr_node->obj_id != NULL ) s3d_del_object( olsr_node->obj_id );
-		if ( olsr_node->desc_id != NULL ) s3d_del_object( olsr_node->desc_id );
+		if ( olsr_node->obj_id != -1 ) s3d_del_object( olsr_node->obj_id );
+		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
 
 		/* create new shape */
 		if ( olsr_node->inet_gw ) {
-			// olsr node offers internet access
+			/* olsr node offers internet access */
 			olsr_node->obj_id = s3d_clone( Olsr_node_inet_obj );
 		} else {
-			// normal olsr node
+			/* normal olsr node */
 			olsr_node->obj_id = s3d_clone( Olsr_node_obj );
 		}
 
@@ -179,17 +181,18 @@
 	olsr_node->mov_vec[0] = olsr_node->mov_vec[1] = olsr_node->mov_vec[2] = 0.0;
 
 	/* calculate new movement vector */
-// 	olsr_con = &olsr_node->olsr_con;
-//
+	(*olsr_con) = &olsr_node->olsr_con;
+
 // 	while ( (*olsr_con) != NULL ) {
-//
+
+// 		printf( "distance: %i\n", olsr_con->olsr_node );
 // 		distance = dirt( olsr_node->pos_vec, (*olsr_con)->olsr_node->pos_vec, tmp_mov_vec );
-// 		f = ( (*olsr_con)->etx ) / distance;
+// 		f = (*olsr_con)->etx / distance;
 // 		if ( f < 0.3 ) f = 0.3;
 // 		mov_add( olsr_node->mov_vec, tmp_mov_vec, 1/f-1);
-//
-// 		olsr_con = &(*olsr_con)->next_olsr_con;
-//
+
+// 		(*olsr_con) = &olsr_con->next_olsr_con;
+
 // 	}
 
 	handle_olsr_node( olsr_node->left );
@@ -329,14 +332,14 @@
 
 	if ( Debug ) printf( "debug mode enabled ...\n" );
 
-	// delete olsrs3d options
-	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;   // optind may point to ip addr of '-H'
+	/* delete olsrs3d options */
+	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;   /* optind may point to ip addr of '-H' */
 	optind--;
-	argv[optind] = argv[0];   // save program path
-	argc -= optind;   // jump over olsrs3d options
+	argv[optind] = argv[0];   /* save program path */
+	argc -= optind;   /* jump over olsrs3d options */
 	argv += optind;
 
-	// set extern int optind = 0 for parse_args in io.c
+	/* set extern int optind = 0 for parse_args in io.c */
 	optind = 0;
 
 	process_init(Olsr_host);

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-09 17:28:33 UTC (rev 37)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-10 20:07:04 UTC (rev 38)
@@ -35,9 +35,7 @@
 
 
 
-static struct olsr_node *Root = NULL;   // top of olsr node tree
-
-
+extern struct olsr_node *Root;   // top of olsr node tree
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-09 17:28:33 UTC (rev 37)
+++ trunk/apps/olsrs3d/process.c	2006-02-10 20:07:04 UTC (rev 38)
@@ -39,18 +39,22 @@
 		(*olsr_con)->next_olsr_con = NULL;
 		(*olsr_con)->etx = l;
 
+		printf( "new connection to %s: %f\n", con_to->ip, l );
+
 		return( 0 );
 
 	}
 
 	// existing connection
-	if ( (*olsr_con)->olsr_node == con_to ) {
+	printf( "connected to: %f\n", (*olsr_con)->olsr_node );
+	if ( strncmp( (*olsr_con)->olsr_node->ip, con_to->ip, NAMEMAX ) == 0 ) {
 
+		printf( "modified connection to %s: %f\n", con_to->ip, l );
 		(*olsr_con)->etx = l;
 		return( 0 );
 
 	}
-
+	printf( "connection not found %s: %f\n", con_to->ip, l );
 	add_olsr_con( &(*olsr_con)->next_olsr_con, con_to, l );
 
 }
@@ -165,8 +169,8 @@
 			(*olsr_node)->mov_vec[i] = 0.0;
 		}
 
-		(*olsr_node)->obj_id = NULL;
-		(*olsr_node)->desc_id = NULL;
+		(*olsr_node)->obj_id = -1;
+		(*olsr_node)->desc_id = -1;
 		(*olsr_node)->olsr_con = NULL;
 
 		return (*olsr_node);



From marec at berlios.de  Fri Feb 10 21:07:53 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 10 Feb 2006 21:07:53 +0100
Subject: [S3d-svn] r39 - trunk/apps/olsrs3d
Message-ID: <200602102007.k1AK7rRn008933@sheep.berlios.de>

Author: marec
Date: 2006-02-10 21:07:48 +0100 (Fri, 10 Feb 2006)
New Revision: 39

Modified:
   trunk/apps/olsrs3d/process.c
Log:
adj-list

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-10 20:07:04 UTC (rev 38)
+++ trunk/apps/olsrs3d/process.c	2006-02-10 20:07:48 UTC (rev 39)
@@ -46,7 +46,7 @@
 	}
 
 	// existing connection
-	printf( "connected to: %f\n", (*olsr_con)->olsr_node );
+	printf( "connected to: %s\n", (*olsr_con)->olsr_node ->ip);
 	if ( strncmp( (*olsr_con)->olsr_node->ip, con_to->ip, NAMEMAX ) == 0 ) {
 
 		printf( "modified connection to %s: %f\n", con_to->ip, l );



From marec at berlios.de  Fri Feb 10 21:43:13 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 10 Feb 2006 21:43:13 +0100
Subject: [S3d-svn] r40 - trunk/apps/olsrs3d
Message-ID: <200602102043.k1AKhDQ4022150@sheep.berlios.de>

Author: marec
Date: 2006-02-10 21:43:08 +0100 (Fri, 10 Feb 2006)
New Revision: 40

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/process.c
Log:
adj-list

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-10 20:07:48 UTC (rev 39)
+++ trunk/apps/olsrs3d/main.c	2006-02-10 20:43:08 UTC (rev 40)
@@ -181,19 +181,18 @@
 	olsr_node->mov_vec[0] = olsr_node->mov_vec[1] = olsr_node->mov_vec[2] = 0.0;
 
 	/* calculate new movement vector */
-	(*olsr_con) = &olsr_node->olsr_con;
+	olsr_con = &olsr_node->olsr_con;
 
-// 	while ( (*olsr_con) != NULL ) {
+	while ( (*olsr_con) != NULL ) {
 
-// 		printf( "distance: %i\n", olsr_con->olsr_node );
-// 		distance = dirt( olsr_node->pos_vec, (*olsr_con)->olsr_node->pos_vec, tmp_mov_vec );
-// 		f = (*olsr_con)->etx / distance;
-// 		if ( f < 0.3 ) f = 0.3;
-// 		mov_add( olsr_node->mov_vec, tmp_mov_vec, 1/f-1);
+		distance = dirt( olsr_node->pos_vec, (*olsr_con)->olsr_node->pos_vec, tmp_mov_vec );
+		f = (*olsr_con)->etx / distance;
+		if ( f < 0.3 ) f = 0.3;
+		mov_add( olsr_node->mov_vec, tmp_mov_vec, 1/f-1);
 
-// 		(*olsr_con) = &olsr_con->next_olsr_con;
+		olsr_con = &(*olsr_con)->next_olsr_con;
 
-// 	}
+	}
 
 	handle_olsr_node( olsr_node->left );
 	handle_olsr_node( olsr_node->right );

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-10 20:07:48 UTC (rev 39)
+++ trunk/apps/olsrs3d/process.c	2006-02-10 20:43:08 UTC (rev 40)
@@ -21,7 +21,7 @@
 
 int add_olsr_con( struct olsr_con **olsr_con, struct olsr_node *con_to, float l ) {
 
-	// new connection
+	/* new connection */
 	if ( (*olsr_con) == NULL ) {
 
 		(*olsr_con) = malloc( sizeof( struct olsr_con ) );
@@ -37,24 +37,21 @@
 		s3d_push_polygon((*olsr_con)->obj_id,3,1,2,0);
 
 		(*olsr_con)->next_olsr_con = NULL;
+		(*olsr_con)->olsr_node = con_to;
 		(*olsr_con)->etx = l;
 
-		printf( "new connection to %s: %f\n", con_to->ip, l );
-
 		return( 0 );
 
 	}
 
-	// existing connection
-	printf( "connected to: %s\n", (*olsr_con)->olsr_node ->ip);
+	/* existing connection */
 	if ( strncmp( (*olsr_con)->olsr_node->ip, con_to->ip, NAMEMAX ) == 0 ) {
 
-		printf( "modified connection to %s: %f\n", con_to->ip, l );
 		(*olsr_con)->etx = l;
 		return( 0 );
 
 	}
-	printf( "connection not found %s: %f\n", con_to->ip, l );
+
 	add_olsr_con( &(*olsr_con)->next_olsr_con, con_to, l );
 
 }



From nichtsnutz at berlios.de  Fri Feb 10 21:46:18 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Fri, 10 Feb 2006 21:46:18 +0100
Subject: [S3d-svn] r41 - trunk/apps/olsrs3d
Message-ID: <200602102046.k1AKkI6H024730@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-10 21:46:14 +0100 (Fri, 10 Feb 2006)
New Revision: 41

Added:
   trunk/apps/olsrs3d/accesspoint_inet.3ds
Log:
a spehre for inet symbol

Added: trunk/apps/olsrs3d/accesspoint_inet.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/apps/olsrs3d/accesspoint_inet.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From nichtsnutz at berlios.de  Fri Feb 10 21:49:40 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Fri, 10 Feb 2006 21:49:40 +0100
Subject: [S3d-svn] r42 - trunk/apps/olsrs3d
Message-ID: <200602102049.k1AKne0N027281@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-10 21:49:37 +0100 (Fri, 10 Feb 2006)
New Revision: 42

Modified:
   trunk/apps/olsrs3d/main.c
Log:
change .3ds for inet gateway

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-10 20:46:14 UTC (rev 41)
+++ trunk/apps/olsrs3d/main.c	2006-02-10 20:49:37 UTC (rev 42)
@@ -351,7 +351,7 @@
 				printf("font not found\n");
 
 			Olsr_node_obj=s3d_import_3ds_file("accesspoint.3ds");
-			Olsr_node_inet_obj=s3d_import_3ds_file("internet.3ds");
+			Olsr_node_inet_obj=s3d_import_3ds_file("accesspoint_inet.3ds");
 			mesh=s3d_import_3ds_file("meshnode.3ds");
 			s3d_link(mesh,0);
 			s3d_scale(mesh,0.15);



From marec at berlios.de  Fri Feb 10 22:25:06 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 10 Feb 2006 22:25:06 +0100
Subject: [S3d-svn] r43 - trunk/apps/olsrs3d
Message-ID: <200602102125.k1ALP6qk001707@sheep.berlios.de>

Author: marec
Date: 2006-02-10 22:25:03 +0100 (Fri, 10 Feb 2006)
New Revision: 43

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
adj-list finishing I

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-10 20:49:37 UTC (rev 42)
+++ trunk/apps/olsrs3d/main.c	2006-02-10 21:25:03 UTC (rev 43)
@@ -194,6 +194,30 @@
 
 	}
 
+	/* move it */
+	mov_add( olsr_node->pos_vec, olsr_node->mov_vec, 0.1 );
+	s3d_translate( olsr_node->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
+
+	olsr_con = &olsr_node->olsr_con;
+	while ( (*olsr_con) != NULL ) {
+
+		s3d_pop_vertex( (*olsr_con)->obj_id, 6 );
+		s3d_pop_polygon( (*olsr_con)->obj_id, 2 );
+		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]+0.2, olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]-0.2, olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
+
+		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1]+0.2, olsr_node->pos_vec[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1]-0.2, olsr_node->pos_vec[2] );
+
+		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0);
+		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0);
+
+		olsr_con = &(*olsr_con)->next_olsr_con;
+
+	}
+
 	handle_olsr_node( olsr_node->left );
 	handle_olsr_node( olsr_node->right );
 

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-10 20:49:37 UTC (rev 42)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-10 21:25:03 UTC (rev 43)
@@ -6,36 +6,36 @@
 };
 
 
-// linked list for the connections
+/* linked list for the connections */
 struct olsr_con {
 
-	struct olsr_con *next_olsr_con;   // pointer to next connection
-	struct olsr_node *olsr_node;   // pointer to end point of the connection
-	int obj_id;   // id of connection object in s3d
+	struct olsr_con *next_olsr_con;   /* pointer to next connection */
+	struct olsr_node *olsr_node;   /* pointer to end point of the connection */
+	int obj_id;   /* id of connection object in s3d */
 	float etx;
 
 };
 
 
-// we contruct a binary tree to handle the nodes
+/* we contruct a binary tree to handle the nodes */
 struct olsr_node {
 
 	struct olsr_node *left;
 	struct olsr_node *right;
-	char ip[NAMEMAX];   // host ip
-	int inet_gw;   // internet gateway flag
-	int inet_gw_modified;   // internet gateway modified flag
-	float pos_vec[3];   // position vector in 3d "space"
-	float mov_vec[3];   // move vector
-	int obj_id;   // id of node object in s3d
-	int desc_id;   // id of node description object in s3d
-	struct olsr_con *olsr_con;   // pointer to first connection
+	char ip[NAMEMAX];   /* host ip */
+	int inet_gw;   /* internet gateway flag */
+	int inet_gw_modified;   /* internet gateway modified flag */
+	float pos_vec[3];   /* position vector in 3d "space" */
+	float mov_vec[3];   /* move vector */
+	int obj_id;   /* id of node object in s3d */
+	int desc_id;   /* id of node description object in s3d */
+	struct olsr_con *olsr_con;   /* pointer to first connection */
 
 };
 
 
 
-extern struct olsr_node *Root;   // top of olsr node tree
+extern struct olsr_node *Root;   /* top of olsr node tree */
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-10 20:49:37 UTC (rev 42)
+++ trunk/apps/olsrs3d/process.c	2006-02-10 21:25:03 UTC (rev 43)
@@ -145,10 +145,10 @@
 
 void *get_olsr_node( struct olsr_node **olsr_node, char *ip ) {
 
-	int i;   // inc var
-	int result;   // result of strcmp
+	int i;   /* inc var */
+	int result;   /* result of strcmp */
 
-	// if node is NULL we reached the end of the tree and must create a new olsr_node
+	/* if node is NULL we reached the end of the tree and must create a new olsr_node */
 	if ( (*olsr_node) == NULL ) {
 
 		(*olsr_node) = malloc( sizeof( struct olsr_node ) );
@@ -176,10 +176,10 @@
 
 	result = strncmp( (*olsr_node)->ip, ip, NAMEMAX );
 
-	// we found the node
+	/* we found the node */
 	if ( result == 0 ) return (*olsr_node);
 
-	// the searched node must be in the subtree
+	/* the searched node must be in the subtree */
 	if ( result < 0 ) {
 		get_olsr_node( &(*olsr_node)->right, ip );
 	} else {



From marec at berlios.de  Fri Feb 10 22:56:59 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 10 Feb 2006 22:56:59 +0100
Subject: [S3d-svn] r44 - trunk/apps/olsrs3d
Message-ID: <200602102156.k1ALux8Q009218@sheep.berlios.de>

Author: marec
Date: 2006-02-10 22:56:56 +0100 (Fri, 10 Feb 2006)
New Revision: 44

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/process.c
Log:
adj-list finishing II

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-10 21:25:03 UTC (rev 43)
+++ trunk/apps/olsrs3d/main.c	2006-02-10 21:56:56 UTC (rev 44)
@@ -186,7 +186,7 @@
 	while ( (*olsr_con) != NULL ) {
 
 		distance = dirt( olsr_node->pos_vec, (*olsr_con)->olsr_node->pos_vec, tmp_mov_vec );
-		f = (*olsr_con)->etx / distance;
+		f = (*olsr_con)->etx * 5.0 / distance;
 		if ( f < 0.3 ) f = 0.3;
 		mov_add( olsr_node->mov_vec, tmp_mov_vec, 1/f-1);
 
@@ -203,13 +203,14 @@
 
 		s3d_pop_vertex( (*olsr_con)->obj_id, 6 );
 		s3d_pop_polygon( (*olsr_con)->obj_id, 2 );
+
 		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
 		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]+0.2, olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
 		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]-0.2, olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
 
-		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1]+0.2, olsr_node->pos_vec[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1]-0.2, olsr_node->pos_vec[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0], (*olsr_con)->olsr_node->pos_vec[1], (*olsr_con)->olsr_node->pos_vec[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0], (*olsr_con)->olsr_node->pos_vec[1]+0.2, (*olsr_con)->olsr_node->pos_vec[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0], (*olsr_con)->olsr_node->pos_vec[1]-0.2, (*olsr_con)->olsr_node->pos_vec[2] );
 
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0);
 		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0);

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-10 21:25:03 UTC (rev 43)
+++ trunk/apps/olsrs3d/process.c	2006-02-10 21:56:56 UTC (rev 44)
@@ -27,15 +27,18 @@
 		(*olsr_con) = malloc( sizeof( struct olsr_con ) );
 		if ( (*olsr_con) == NULL ) out_of_mem();
 
-		// create connection object
+		/* create connection object */
 		(*olsr_con)->obj_id = s3d_new_object();
-		s3d_push_material((*olsr_con)->obj_id,
+		s3d_push_material( (*olsr_con)->obj_id,
 				  1.0,1.0,1.0,
 				  1.0,1.0,1.0,
 				  1.0,1.0,1.0);
-		s3d_push_polygon((*olsr_con)->obj_id,0,4,5,0);
-		s3d_push_polygon((*olsr_con)->obj_id,3,1,2,0);
 
+		s3d_flags_on( (*olsr_con)->obj_id, S3D_OF_VISIBLE );
+
+		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
+		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
+
 		(*olsr_con)->next_olsr_con = NULL;
 		(*olsr_con)->olsr_node = con_to;
 		(*olsr_con)->etx = l;



From marec at berlios.de  Fri Feb 10 23:23:42 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 10 Feb 2006 23:23:42 +0100
Subject: [S3d-svn] r45 - trunk/apps/olsrs3d
Message-ID: <200602102223.k1AMNg51017648@sheep.berlios.de>

Author: marec
Date: 2006-02-10 23:23:41 +0100 (Fri, 10 Feb 2006)
New Revision: 45

Modified:
   trunk/apps/olsrs3d/process.c
Log:
get_olsr_node_by_id

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-10 21:56:56 UTC (rev 44)
+++ trunk/apps/olsrs3d/process.c	2006-02-10 22:23:41 UTC (rev 45)
@@ -43,7 +43,7 @@
 		(*olsr_con)->olsr_node = con_to;
 		(*olsr_con)->etx = l;
 
-		return( 0 );
+		return ( 0 );
 
 	}
 
@@ -51,7 +51,7 @@
 	if ( strncmp( (*olsr_con)->olsr_node->ip, con_to->ip, NAMEMAX ) == 0 ) {
 
 		(*olsr_con)->etx = l;
-		return( 0 );
+		return ( 0 );
 
 	}
 
@@ -146,7 +146,7 @@
  *
  ***/
 
-void *get_olsr_node( struct olsr_node **olsr_node, char *ip ) {
+void *get_olsr_node_by_ip( struct olsr_node **olsr_node, char *ip ) {
 
 	int i;   /* inc var */
 	int result;   /* result of strcmp */
@@ -184,9 +184,9 @@
 
 	/* the searched node must be in the subtree */
 	if ( result < 0 ) {
-		get_olsr_node( &(*olsr_node)->right, ip );
+		get_olsr_node_by_ip( &(*olsr_node)->right, ip );
 	} else {
-		get_olsr_node( &(*olsr_node)->left, ip );
+		get_olsr_node_by_ip( &(*olsr_node)->left, ip );
 	}
 
 }
@@ -195,6 +195,36 @@
 
 /***
  *
+ * get pointer to olsr node, search by node object id
+ *
+ *   **node =>   pointer to current olsr_node
+ *   *id    =>   node object id
+ *
+ *   return olsr node pointer
+ *
+ ***/
+
+void *get_olsr_node_by_id( struct olsr_node **olsr_node, int id ) {
+
+	int i;   /* inc var */
+	int result;   /* result of strcmp */
+
+	/* if node is NULL we reached the end of the tree and could not find the olsr node */
+	if ( (*olsr_node) == NULL ) return;
+
+	/* we found the node */
+	if ( (*olsr_node)->obj_id == id ) return (*olsr_node);
+
+	/* the searched node must be in the subtree */
+	get_olsr_node_by_id( &(*olsr_node)->right, id );
+	get_olsr_node_by_id( &(*olsr_node)->left, id );
+
+}
+
+
+
+/***
+ *
  * get node id or create new node if node string could not be found
  *
  *   *str   =>   node description
@@ -342,7 +372,7 @@
 			// connection to internet
 			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
 
-				olsr_node1 = get_olsr_node( &Root, data[0] );
+				olsr_node1 = get_olsr_node_by_ip( &Root, data[0] );
 
 				if ( olsr_node1->inet_gw == 0 ) {
 
@@ -360,8 +390,8 @@
 		} else {
 // 			n1=get_node_num(data[0]);
 // 			n2=get_node_num(data[1]);
-			olsr_node1 = get_olsr_node( &Root, data[0] );
-			olsr_node2 = get_olsr_node( &Root, data[1] );
+			olsr_node1 = get_olsr_node_by_ip( &Root, data[0] );
+			olsr_node2 = get_olsr_node_by_ip( &Root, data[1] );
 			f=10.0+strtod(data[2],NULL)/10.0;
 /*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
 			if (f>=5) /* just to prevent ascii to float converting inconsistency ... */



From marec at berlios.de  Fri Feb 10 23:41:07 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 10 Feb 2006 23:41:07 +0100
Subject: [S3d-svn] r46 - trunk/apps/olsrs3d
Message-ID: <200602102241.k1AMf7kS021201@sheep.berlios.de>

Author: marec
Date: 2006-02-10 23:41:04 +0100 (Fri, 10 Feb 2006)
New Revision: 46

Modified:
   trunk/apps/olsrs3d/process.c
Log:
del get_olsr_node_by_id

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-10 22:23:41 UTC (rev 45)
+++ trunk/apps/olsrs3d/process.c	2006-02-10 22:41:04 UTC (rev 46)
@@ -146,7 +146,7 @@
  *
  ***/
 
-void *get_olsr_node_by_ip( struct olsr_node **olsr_node, char *ip ) {
+void *get_olsr_node( struct olsr_node **olsr_node, char *ip ) {
 
 	int i;   /* inc var */
 	int result;   /* result of strcmp */
@@ -195,36 +195,6 @@
 
 /***
  *
- * get pointer to olsr node, search by node object id
- *
- *   **node =>   pointer to current olsr_node
- *   *id    =>   node object id
- *
- *   return olsr node pointer
- *
- ***/
-
-void *get_olsr_node_by_id( struct olsr_node **olsr_node, int id ) {
-
-	int i;   /* inc var */
-	int result;   /* result of strcmp */
-
-	/* if node is NULL we reached the end of the tree and could not find the olsr node */
-	if ( (*olsr_node) == NULL ) return;
-
-	/* we found the node */
-	if ( (*olsr_node)->obj_id == id ) return (*olsr_node);
-
-	/* the searched node must be in the subtree */
-	get_olsr_node_by_id( &(*olsr_node)->right, id );
-	get_olsr_node_by_id( &(*olsr_node)->left, id );
-
-}
-
-
-
-/***
- *
  * get node id or create new node if node string could not be found
  *
  *   *str   =>   node description



From marec at berlios.de  Sat Feb 11 00:01:21 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sat, 11 Feb 2006 00:01:21 +0100
Subject: [S3d-svn] r47 - trunk/apps/olsrs3d
Message-ID: <200602102301.k1AN1LmP023537@sheep.berlios.de>

Author: marec
Date: 2006-02-11 00:01:18 +0100 (Sat, 11 Feb 2006)
New Revision: 47

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
del get_olsr_node_by_id

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-10 22:41:04 UTC (rev 46)
+++ trunk/apps/olsrs3d/main.c	2006-02-10 23:01:18 UTC (rev 47)
@@ -9,9 +9,10 @@
 
 int Debug = 0;
 
-char Olsr_host[256];   // ip or hostname of olsr node with running dot_draw plugin
+char Olsr_host[256];   /* ip or hostname of olsr node with running dot_draw plugin */
 
-struct olsr_node *Root = NULL;   // top of olsr node tree
+struct olsr_node *Root = NULL;   /* top of olsr node tree */
+int *obj_to_ip;   /* save pointer to olsr nodes */
 
 
 int node_count=-1;
@@ -153,7 +154,12 @@
 	if ( olsr_node->inet_gw_modified ) {
 
 		/* delete old shape */
-		if ( olsr_node->obj_id != -1 ) s3d_del_object( olsr_node->obj_id );
+		if ( olsr_node->obj_id != -1 ) {
+			s3d_del_object( olsr_node->obj_id );
+		} else {
+			obj_to_ip = realloc( obj_to_ip, sizeof( int ) * sizeof( obj_to_ip ) + 1 );
+		}
+
 		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
 
 		/* create new shape */
@@ -167,6 +173,8 @@
 
 		s3d_flags_on( olsr_node->obj_id, S3D_OF_VISIBLE );
 
+		obj_to_ip[ olsr_node->obj_id ] = olsr_node;
+
 		/* create olsr node text and attach (link) it to the node */
 		olsr_node->desc_id = s3d_draw_string( olsr_node->ip, &f );
 		s3d_link( olsr_node->desc_id, olsr_node->obj_id );

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-10 22:41:04 UTC (rev 46)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-10 23:01:18 UTC (rev 47)
@@ -36,6 +36,7 @@
 
 
 extern struct olsr_node *Root;   /* top of olsr node tree */
+extern int	*obj_to_ip;
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-10 22:41:04 UTC (rev 46)
+++ trunk/apps/olsrs3d/process.c	2006-02-10 23:01:18 UTC (rev 47)
@@ -184,9 +184,9 @@
 
 	/* the searched node must be in the subtree */
 	if ( result < 0 ) {
-		get_olsr_node_by_ip( &(*olsr_node)->right, ip );
+		get_olsr_node( &(*olsr_node)->right, ip );
 	} else {
-		get_olsr_node_by_ip( &(*olsr_node)->left, ip );
+		get_olsr_node( &(*olsr_node)->left, ip );
 	}
 
 }
@@ -342,7 +342,7 @@
 			// connection to internet
 			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
 
-				olsr_node1 = get_olsr_node_by_ip( &Root, data[0] );
+				olsr_node1 = get_olsr_node( &Root, data[0] );
 
 				if ( olsr_node1->inet_gw == 0 ) {
 
@@ -360,8 +360,8 @@
 		} else {
 // 			n1=get_node_num(data[0]);
 // 			n2=get_node_num(data[1]);
-			olsr_node1 = get_olsr_node_by_ip( &Root, data[0] );
-			olsr_node2 = get_olsr_node_by_ip( &Root, data[1] );
+			olsr_node1 = get_olsr_node( &Root, data[0] );
+			olsr_node2 = get_olsr_node( &Root, data[1] );
 			f=10.0+strtod(data[2],NULL)/10.0;
 /*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
 			if (f>=5) /* just to prevent ascii to float converting inconsistency ... */



From nichtsnutz at berlios.de  Sat Feb 11 03:53:26 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sat, 11 Feb 2006 03:53:26 +0100
Subject: [S3d-svn] r48 - trunk/apps/olsrs3d
Message-ID: <200602110253.k1B2rQWD031763@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-11 03:53:15 +0100 (Sat, 11 Feb 2006)
New Revision: 48

Modified:
   trunk/apps/olsrs3d/olsrs3d.h
Log:
defines struct Obj_to_ip for a linked list to, find ip and coordinates per objekt_id in a binary tree

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-10 23:01:18 UTC (rev 47)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-11 02:53:15 UTC (rev 48)
@@ -33,10 +33,16 @@
 
 };
 
+struct Obj_to_ip {
+	int id;
+	struct olsr_node *olsr_node;
+	struct Obj_to_ip *next;
+};
 
 
-extern struct olsr_node *Root;   /* top of olsr node tree */
-extern int	*obj_to_ip;
+
+extern struct olsr_node *Root;   															/* top of olsr node tree */
+extern struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end;			/* struct list */
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;
@@ -57,3 +63,7 @@
 int net_init(char *host);
 int net_main();
 int net_quit();
+/* main obj2ip list*/
+void lst_add(int id,struct olsr_node **olsr_node);
+void lst_del(int id);
+struct olsr_node **lst_search(int id);
\ No newline at end of file



From nichtsnutz at berlios.de  Sat Feb 11 04:28:42 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sat, 11 Feb 2006 04:28:42 +0100
Subject: [S3d-svn] r49 - trunk/apps/olsrs3d
Message-ID: <200602110328.k1B3SgCT008337@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-11 04:28:16 +0100 (Sat, 11 Feb 2006)
New Revision: 49

Modified:
   trunk/apps/olsrs3d/main.c
Log:
add linked list to link obj_id with olsr_node.
add eventhandler for object_clicked
link nodes with a hidden object.

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-11 02:53:15 UTC (rev 48)
+++ trunk/apps/olsrs3d/main.c	2006-02-11 03:28:16 UTC (rev 49)
@@ -1,20 +1,18 @@
 #include <stdio.h>
 #include <s3d.h>
-#include <unistd.h>		/* sleep() */
-#include <string.h> 		/* strncpy() */
+#include <unistd.h>	/* sleep() */
+#include <string.h>	/* strncpy() */
 #include <math.h>		/* sqrt() */
-#include <getopt.h>		/* getopt() */
+#include <getopt.h>	/* getopt() */
 #include "olsrs3d.h"
 #define SPEED		10.0
 
 int Debug = 0;
 
-char Olsr_host[256];   /* ip or hostname of olsr node with running dot_draw plugin */
+char Olsr_host[256];   													/* ip or hostname of olsr node with running dot_draw plugin */
+struct olsr_node *Root = NULL;   									/* top of olsr node tree */
+struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end;			/* needed pointer for linked list */
 
-struct olsr_node *Root = NULL;   /* top of olsr node tree */
-int *obj_to_ip;   /* save pointer to olsr nodes */
-
-
 int node_count=-1;
 int alpha=0;
 int Olsr_node_obj,Olsr_node_inet_obj,mesh;
@@ -22,8 +20,13 @@
 float bottom=-1.0;
 float left=-1.0;
 
+float CamPosition[2][3];													/* CamPosition[trans|rot][x-z] */
+float ZeroPosition[3] = {0,0,0};										/* current position zero position */
+int ZeroPoint;																	/* object zeropoint */
 
 
+
+
 /***
  *
  * print usage info
@@ -52,7 +55,7 @@
 void out_of_mem( void ) {
 
 	printf( "Sorry - you ran out of memory !\n" );
-	exit( 8 );
+	exit(8);
 
 }
 
@@ -146,7 +149,7 @@
 	float f, distance;
 	float tmp_mov_vec[3];
 	struct olsr_con **olsr_con;
-
+	
 	/* no more nodes left */
 	if ( olsr_node == NULL ) return;
 
@@ -155,9 +158,8 @@
 
 		/* delete old shape */
 		if ( olsr_node->obj_id != -1 ) {
+			lst_del(olsr_node->obj_id);
 			s3d_del_object( olsr_node->obj_id );
-		} else {
-			obj_to_ip = realloc( obj_to_ip, sizeof( int ) * sizeof( obj_to_ip ) + 1 );
 		}
 
 		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
@@ -166,15 +168,17 @@
 		if ( olsr_node->inet_gw ) {
 			/* olsr node offers internet access */
 			olsr_node->obj_id = s3d_clone( Olsr_node_inet_obj );
+			s3d_link(olsr_node->obj_id,ZeroPoint);
 		} else {
 			/* normal olsr node */
 			olsr_node->obj_id = s3d_clone( Olsr_node_obj );
+			s3d_link(olsr_node->obj_id,ZeroPoint);
 		}
 
-		s3d_flags_on( olsr_node->obj_id, S3D_OF_VISIBLE );
-
-		obj_to_ip[ olsr_node->obj_id ] = olsr_node;
-
+		s3d_flags_on( olsr_node->obj_id, S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		/* add object_id and olsr_node to linked list */
+		lst_add(olsr_node->obj_id,&olsr_node);
+		
 		/* create olsr node text and attach (link) it to the node */
 		olsr_node->desc_id = s3d_draw_string( olsr_node->ip, &f );
 		s3d_link( olsr_node->desc_id, olsr_node->obj_id );
@@ -194,6 +198,7 @@
 	while ( (*olsr_con) != NULL ) {
 
 		distance = dirt( olsr_node->pos_vec, (*olsr_con)->olsr_node->pos_vec, tmp_mov_vec );
+		/* f = (*olsr_con)->etx / distance; */
 		f = (*olsr_con)->etx * 5.0 / distance;
 		if ( f < 0.3 ) f = 0.3;
 		mov_add( olsr_node->mov_vec, tmp_mov_vec, 1/f-1);
@@ -212,13 +217,13 @@
 		s3d_pop_vertex( (*olsr_con)->obj_id, 6 );
 		s3d_pop_polygon( (*olsr_con)->obj_id, 2 );
 
-		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]+0.2, olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]-0.2, olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]+ ZeroPosition[0], olsr_node->pos_vec[1]+ ZeroPosition[1], olsr_node->pos_vec[2]+ ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]+0.2+ ZeroPosition[0], olsr_node->pos_vec[1]+ ZeroPosition[1], olsr_node->pos_vec[2]+ ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]-0.2+ ZeroPosition[0], olsr_node->pos_vec[1]+ ZeroPosition[1], olsr_node->pos_vec[2]+ ZeroPosition[2] );
 
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0], (*olsr_con)->olsr_node->pos_vec[1], (*olsr_con)->olsr_node->pos_vec[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0], (*olsr_con)->olsr_node->pos_vec[1]+0.2, (*olsr_con)->olsr_node->pos_vec[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0], (*olsr_con)->olsr_node->pos_vec[1]-0.2, (*olsr_con)->olsr_node->pos_vec[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0]+ ZeroPosition[0], (*olsr_con)->olsr_node->pos_vec[1]+ ZeroPosition[1], (*olsr_con)->olsr_node->pos_vec[2]+ ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0]+ ZeroPosition[0], (*olsr_con)->olsr_node->pos_vec[1]+0.2+ ZeroPosition[1], (*olsr_con)->olsr_node->pos_vec[2] + ZeroPosition[2]);
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0]+ ZeroPosition[0], (*olsr_con)->olsr_node->pos_vec[1]-0.2+ ZeroPosition[1], (*olsr_con)->olsr_node->pos_vec[2] + ZeroPosition[2]);
 
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0);
 		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0);
@@ -232,8 +237,6 @@
 
 }
 
-
-
 void mainloop()
 {
 	int i,j,o,r;
@@ -315,12 +318,45 @@
 /*	sleep(1);*/
 	return;
 }
+
+/***
+ *
+ * eventhandler when object clicked
+ *
+ ***/
+
+void object_click(struct s3d_evt *evt) 
+{
+	int oid;
+	oid=(int)*((unsigned long *)evt->buf);
+	/*s3d_translate(ZeroPoint,0,50,40);
+	ZeroPosition[0] = 0;
+	ZeroPosition[1] = 50;
+	ZeroPosition[2] = 40;*/
+	struct olsr_node *olsr_node;
+	olsr_node = *lst_search(oid);
+	printf("obj2ip: search return %s\n",olsr_node->ip);
+}
+
+/***
+ *
+ * eventhandler when object change by user
+ * such as Cam
+ *
+ ***/
+
 void object_info(struct s3d_evt *hrmz)
 {
 	struct s3d_obj_info *inf;
 	inf=(struct s3d_obj_info *)hrmz->buf;
 	if (inf->object==0)
 	{
+		CamPosition[0][0] = inf->trans_x;
+		CamPosition[0][1] = inf->trans_y;
+		CamPosition[0][2] = inf->trans_z;
+		CamPosition[1][0] = inf->rot_x;
+		CamPosition[1][1] = inf->rot_y;
+		CamPosition[1][2] = inf->rot_z;
 		asp=inf->scale;
 		if (asp>1.0) /* wide screen */
 		{
@@ -336,6 +372,97 @@
 	}
 }
 
+/***
+ *
+ * initialize the struct for a linked list obj2ip
+ *
+ ***/
+
+void lst_initialize() {
+	Obj_to_ip_head = (struct Obj_to_ip*) malloc(sizeof(struct Obj_to_ip));
+	Obj_to_ip_end = (struct Obj_to_ip*) malloc(sizeof(struct Obj_to_ip));
+	if(Obj_to_ip_head == NULL || Obj_to_ip_end == NULL) {
+		printf("not enough memory to initialize struct list\n");
+		exit(8);
+	}
+	Obj_to_ip_head->next = Obj_to_ip_end->next = Obj_to_ip_end;
+}
+
+/***
+ *
+ * add a link object_id to olsr_node, to get ip adress and coordinates per object_id
+ *                 id => object_id, returned from s3d_clone or s3d_new_object
+ *  **olsr_node => pointer to pointer of current olsr_node 
+ *
+ ***/
+
+void lst_add(int id,struct olsr_node **olsr_node) {
+	struct Obj_to_ip *new, *lst_ptr;
+	new = (struct Obj_to_ip*) malloc(sizeof(struct Obj_to_ip));
+	if(new == NULL) {
+		printf("not enough memory to add element to struct list\n");
+		exit(8);
+	}
+	new->id = id;
+	new->olsr_node = *olsr_node;
+	printf("obj2ip: add object %d ip %s to list\n",new->id,new->olsr_node->ip);
+	lst_ptr = Obj_to_ip_head;
+	while(lst_ptr->next != lst_ptr->next->next) {
+		if(id > lst_ptr->next->id)
+			break;
+		lst_ptr = lst_ptr->next;
+	}
+	new->next = lst_ptr->next;
+	lst_ptr->next = new;
+}
+
+/***
+ *
+ * remove element from obj2ip linked list
+ * id => object_id, returned from s3d_clone or s3d_new_object
+ *	
+ ***/
+
+void lst_del(int id) {
+	struct Obj_to_ip *del, *lst_ptr;
+	lst_ptr = Obj_to_ip_head;
+	while(lst_ptr != lst_ptr->next) {
+		if(id == lst_ptr->next->id)
+			break;
+		lst_ptr = lst_ptr->next;
+	}
+	if(lst_ptr == lst_ptr->next)
+		printf("obj2ip: id to remove not found in list\n");
+	else {
+		printf("obj2ip: remove object %d ip %s from list\n",lst_ptr->next->id,lst_ptr->next->olsr_node->ip);
+		del = lst_ptr->next;
+		lst_ptr->next = lst_ptr->next->next;
+		free(del);
+	}
+}
+
+/***
+ *
+ * search a object_id in linked list and return pointer on struct olsr_node
+ *	id => object_id , returned from s3d_clone or s3d_new_object
+ * 
+ ***/
+
+struct olsr_node **lst_search(int id) {
+	struct Obj_to_ip *lst_ptr;
+	lst_ptr = Obj_to_ip_head;
+	while(lst_ptr != lst_ptr->next) {
+		if(id == lst_ptr->next->id)
+			break;
+		lst_ptr = lst_ptr->next;
+	}
+	if(lst_ptr == lst_ptr->next)
+		printf("obj2ip: search id....id not found\n");
+	else
+		printf("obj2ip: search found objekt_id=%d objekt_ip=%s\n",id,lst_ptr->next->olsr_node->ip);
+	return(&lst_ptr->next->olsr_node);
+}
+
 int main( int argc, char *argv[] ) {
 
 	int optchar;
@@ -363,7 +490,9 @@
 	}
 
 	if ( Debug ) printf( "debug mode enabled ...\n" );
-
+	/* initialize obj2ip linked list */
+	/* TODO: next step is a double linked list to search,add, remove faster */
+	lst_initialize();
 	/* delete olsrs3d options */
 	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;   /* optind may point to ip addr of '-H' */
 	optind--;
@@ -380,15 +509,15 @@
 		if (!s3d_init(&argc,&argv,"olsrs3d"))
 		{
 			s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);
+			s3d_set_callback(S3D_EVENT_OBJ_CLICK,object_click);
 			if (s3d_select_font("vera"))
 				printf("font not found\n");
-
 			Olsr_node_obj=s3d_import_3ds_file("accesspoint.3ds");
 			Olsr_node_inet_obj=s3d_import_3ds_file("accesspoint_inet.3ds");
 			mesh=s3d_import_3ds_file("meshnode.3ds");
 			s3d_link(mesh,0);
 			s3d_scale(mesh,0.15);
-
+			ZeroPoint = s3d_new_object();
 			s3d_mainloop(mainloop);
 			s3d_quit();
 			net_quit();



From nichtsnutz at berlios.de  Sat Feb 11 13:19:42 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sat, 11 Feb 2006 13:19:42 +0100
Subject: [S3d-svn] r50 - trunk/apps/olsrs3d
Message-ID: <200602111219.k1BCJgjk000367@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-11 13:19:38 +0100 (Sat, 11 Feb 2006)
New Revision: 50

Modified:
   trunk/apps/olsrs3d/olsrs3d.h
Log:
update linked list to double linked list with better search engine ;-)

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-11 03:28:16 UTC (rev 49)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-11 12:19:38 UTC (rev 50)
@@ -1,4 +1,5 @@
 #define NAMEMAX		128
+#define MAXLIST		100000		
 struct t_node {
 	float pos[3], mov[3];
 	char name[NAMEMAX];
@@ -37,12 +38,13 @@
 	int id;
 	struct olsr_node *olsr_node;
 	struct Obj_to_ip *next;
+	struct Obj_to_ip *prev;
 };
 
 
 
-extern struct olsr_node *Root;   															/* top of olsr node tree */
-extern struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end;			/* struct list */
+extern struct olsr_node *Root;   																/* top of olsr node tree */
+extern struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end,*List_ptr;			/* struct list */
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;
@@ -66,4 +68,5 @@
 /* main obj2ip list*/
 void lst_add(int id,struct olsr_node **olsr_node);
 void lst_del(int id);
+void move_lst_ptr(int *id);
 struct olsr_node **lst_search(int id);
\ No newline at end of file



From nichtsnutz at berlios.de  Sat Feb 11 13:21:21 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sat, 11 Feb 2006 13:21:21 +0100
Subject: [S3d-svn] r51 - trunk/apps/olsrs3d
Message-ID: <200602111221.k1BCLLjA000926@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-11 13:21:11 +0100 (Sat, 11 Feb 2006)
New Revision: 51

Modified:
   trunk/apps/olsrs3d/main.c
Log:
update linked list to double linked list with better search engine ;-)
add keyhandler, ESC quit olsrs3d
add quithandler

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-11 12:19:38 UTC (rev 50)
+++ trunk/apps/olsrs3d/main.c	2006-02-11 12:21:11 UTC (rev 51)
@@ -9,9 +9,9 @@
 
 int Debug = 0;
 
-char Olsr_host[256];   													/* ip or hostname of olsr node with running dot_draw plugin */
-struct olsr_node *Root = NULL;   									/* top of olsr node tree */
-struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end;			/* needed pointer for linked list */
+char Olsr_host[256];   											/* ip or hostname of olsr node with running dot_draw plugin */
+struct olsr_node *Root = NULL;   							/* top of olsr node tree */
+struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end,*List_ptr;			/* needed pointer for linked list */
 
 int node_count=-1;
 int alpha=0;
@@ -319,8 +319,29 @@
 	return;
 }
 
+void stop()
+{
+	s3d_quit();
+	net_quit();
+	process_quit();
+}
+
 /***
  *
+ * eventhandler when key pressed
+ *
+ ***/
+
+void keypress(struct s3d_evt *event) {
+	int key;
+	key=*((unsigned short *)event->buf);
+	/* ESC */
+	if(key = 27)
+		stop();
+}
+
+/***
+ *
  * eventhandler when object clicked
  *
  ***/
@@ -385,7 +406,11 @@
 		printf("not enough memory to initialize struct list\n");
 		exit(8);
 	}
+	Obj_to_ip_head->id = 0;
+	Obj_to_ip_end->id = -1;
+	Obj_to_ip_head->prev = Obj_to_ip_end->prev = Obj_to_ip_head;
 	Obj_to_ip_head->next = Obj_to_ip_end->next = Obj_to_ip_end;
+	List_ptr = Obj_to_ip_head;
 }
 
 /***
@@ -397,70 +422,95 @@
  ***/
 
 void lst_add(int id,struct olsr_node **olsr_node) {
-	struct Obj_to_ip *new, *lst_ptr;
+	struct Obj_to_ip *new;
 	new = (struct Obj_to_ip*) malloc(sizeof(struct Obj_to_ip));
 	if(new == NULL) {
-		printf("not enough memory to add element to struct list\n");
+		printf("not enough memory to add element to linked list\n");
 		exit(8);
 	}
 	new->id = id;
 	new->olsr_node = *olsr_node;
-	printf("obj2ip: add object %d ip %s to list\n",new->id,new->olsr_node->ip);
-	lst_ptr = Obj_to_ip_head;
-	while(lst_ptr->next != lst_ptr->next->next) {
-		if(id > lst_ptr->next->id)
-			break;
-		lst_ptr = lst_ptr->next;
-	}
-	new->next = lst_ptr->next;
-	lst_ptr->next = new;
+	move_lst_ptr(&id);
+	printf("obj2ip: add object %d between %d .. %d ip %s to list\n",new->id,List_ptr->id,List_ptr->next->id,new->olsr_node->ip);
+	new->prev = List_ptr;
+	new->next = List_ptr->next;
+	List_ptr->next->prev = new;
+	List_ptr->next = new;
 }
 
 /***
- *
+ *void move_lst_ptr(int *id)
  * remove element from obj2ip linked list
  * id => object_id, returned from s3d_clone or s3d_new_object
  *	
  ***/
 
 void lst_del(int id) {
-	struct Obj_to_ip *del, *lst_ptr;
-	lst_ptr = Obj_to_ip_head;
-	while(lst_ptr != lst_ptr->next) {
-		if(id == lst_ptr->next->id)
-			break;
-		lst_ptr = lst_ptr->next;
-	}
-	if(lst_ptr == lst_ptr->next)
-		printf("obj2ip: id to remove not found in list\n");
+	struct Obj_to_ip *del;
+	move_lst_ptr(&id);
+	if(id != List_ptr->next->id)
+		printf("obj2ip: remove id %d failed move_lst_ptr return id %d\n",id,List_ptr->next->id);
 	else {
-		printf("obj2ip: remove object %d ip %s from list\n",lst_ptr->next->id,lst_ptr->next->olsr_node->ip);
-		del = lst_ptr->next;
-		lst_ptr->next = lst_ptr->next->next;
+		printf("obj2ip: remove object %d ip %s from list\n",List_ptr->next->id,List_ptr->next->olsr_node->ip);
+		del = List_ptr->next;
+		List_ptr->next = List_ptr->next->next;
+		List_ptr->next->prev = List_ptr;
 		free(del);
 	}
 }
 
 /***
  *
+ * move the List_ptr one positon ahead the searched element
+ *	*id => pointer of object_id , returned from s3d_clone or s3d_new_object
+ * 
+ ***/
+ 
+void move_lst_ptr(int *id) {
+	printf("obj2ip: move for %d\n",*id);
+	/* head to point at end or id lass then first element in linked list*/
+ 	if(Obj_to_ip_head->next->id == -1 || *id < Obj_to_ip_head->next->id)
+		List_ptr = Obj_to_ip_head;
+ 	/* id is greather then last element in linked list */
+	else if(*id > Obj_to_ip_end->prev->id)
+		List_ptr = Obj_to_ip_end->prev;
+	else {
+		printf("obj2ip: ok i search deeper ;-) for id=%d\n",*id);
+		if(*id < (int)(Obj_to_ip_end->prev->id - Obj_to_ip_head->next->id) / 2) {
+			List_ptr = Obj_to_ip_head->next;
+			printf("obj2ip: start at head id %d < %d (last-first)/2\n",*id,(Obj_to_ip_end->prev->id - Obj_to_ip_head->next->id) / 2);
+			while(*id > List_ptr->next->id) {
+				List_ptr = List_ptr->next;
+				printf("obj2ip: move --> %d\n",List_ptr->next->id);
+			}
+		} else {
+			List_ptr = Obj_to_ip_end->prev;
+			printf("obj2ip: start at end id %d > %d (last-first)/2\n",*id,(Obj_to_ip_end->prev->id - Obj_to_ip_head->next->id) / 2);
+			//do List_ptr = List_ptr->prev; while(*id > List_ptr->prev->id);
+			while(*id < List_ptr->prev->id) {
+				List_ptr = List_ptr->prev;
+				printf("obj2ip: move <-- %d\n",List_ptr->id);
+			}
+			List_ptr = List_ptr->prev->prev; 
+		}
+		printf("obj2ip: found id %d--> %d <--%d\n",List_ptr->id,List_ptr->next->id,List_ptr->next->next->id);
+	}
+}
+
+/***
+ *
  * search a object_id in linked list and return pointer on struct olsr_node
  *	id => object_id , returned from s3d_clone or s3d_new_object
  * 
  ***/
-
+ 
 struct olsr_node **lst_search(int id) {
-	struct Obj_to_ip *lst_ptr;
-	lst_ptr = Obj_to_ip_head;
-	while(lst_ptr != lst_ptr->next) {
-		if(id == lst_ptr->next->id)
-			break;
-		lst_ptr = lst_ptr->next;
-	}
-	if(lst_ptr == lst_ptr->next)
+	move_lst_ptr(&id);
+	if(id != List_ptr->next->id)
 		printf("obj2ip: search id....id not found\n");
 	else
-		printf("obj2ip: search found objekt_id=%d objekt_ip=%s\n",id,lst_ptr->next->olsr_node->ip);
-	return(&lst_ptr->next->olsr_node);
+		printf("obj2ip: search found objekt_id=%d objekt_ip=%s\n",id,List_ptr->next->olsr_node->ip);
+	return(&List_ptr->next->olsr_node);
 }
 
 int main( int argc, char *argv[] ) {
@@ -510,6 +560,8 @@
 		{
 			s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);
 			s3d_set_callback(S3D_EVENT_OBJ_CLICK,object_click);
+			s3d_set_callback(S3D_EVENT_KEY,keypress);
+			s3d_set_callback(S3D_EVENT_QUIT,stop);
 			if (s3d_select_font("vera"))
 				printf("font not found\n");
 			Olsr_node_obj=s3d_import_3ds_file("accesspoint.3ds");



From nichtsnutz at berlios.de  Sat Feb 11 13:24:02 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sat, 11 Feb 2006 13:24:02 +0100
Subject: [S3d-svn] r52 - trunk/apps/olsrs3d
Message-ID: <200602111224.k1BCO2li002003@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-11 13:23:57 +0100 (Sat, 11 Feb 2006)
New Revision: 52

Modified:
   trunk/apps/olsrs3d/olsrs3d.h
Log:
remove define MAXLIST

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-11 12:21:11 UTC (rev 51)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-11 12:23:57 UTC (rev 52)
@@ -1,5 +1,4 @@
-#define NAMEMAX		128
-#define MAXLIST		100000		
+#define NAMEMAX		128	
 struct t_node {
 	float pos[3], mov[3];
 	char name[NAMEMAX];



From nichtsnutz at berlios.de  Sat Feb 11 13:24:32 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sat, 11 Feb 2006 13:24:32 +0100
Subject: [S3d-svn] r53 - trunk/apps/olsrs3d
Message-ID: <200602111224.k1BCOWnj002356@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-11 13:24:29 +0100 (Sat, 11 Feb 2006)
New Revision: 53

Modified:
   trunk/apps/olsrs3d/main.c
Log:
remove a comment

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-11 12:23:57 UTC (rev 52)
+++ trunk/apps/olsrs3d/main.c	2006-02-11 12:24:29 UTC (rev 53)
@@ -541,7 +541,6 @@
 
 	if ( Debug ) printf( "debug mode enabled ...\n" );
 	/* initialize obj2ip linked list */
-	/* TODO: next step is a double linked list to search,add, remove faster */
 	lst_initialize();
 	/* delete olsrs3d options */
 	while ( ( optind < argc ) && ( argv[optind][0] != '-' ) ) optind++;   /* optind may point to ip addr of '-H' */



From marec at berlios.de  Sat Feb 11 13:52:54 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sat, 11 Feb 2006 13:52:54 +0100
Subject: [S3d-svn] r54 - trunk/apps/olsrs3d
Message-ID: <200602111252.k1BCqs61013425@sheep.berlios.de>

Author: marec
Date: 2006-02-11 13:52:30 +0100 (Sat, 11 Feb 2006)
New Revision: 54

Modified:
   trunk/apps/olsrs3d/process.c
Log:
olsr connection list

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-11 12:24:29 UTC (rev 53)
+++ trunk/apps/olsrs3d/process.c	2006-02-11 12:52:30 UTC (rev 54)
@@ -13,14 +13,35 @@
  *
  * create new or alter connection between 2 nodes
  *
- *   olsr_con =>   pointer to current olsr connection
+ *   con_from =>   current node
  *   con_to   =>   node to connect to
- *   l        =>   length ? ETX ?
+ *   etx      =>   ETX
  *
  ***/
 
-int add_olsr_con( struct olsr_con **olsr_con, struct olsr_node *con_to, float l ) {
+int add_olsr_con( struct olsr_node *con_from, struct olsr_node *con_to, float etx ) {
 
+	struct olsr_con **olsr_con = &Con_begin;
+
+	while ( (*olsr_con) != NULL ) {
+
+		/* connection already exists */
+		if ( ( strncmp( (*olsr_con)->left_olsr_node->ip, con_from->ip, NAMEMAX ) == 0 ) && ( strncmp( (*olsr_con)->right_olsr_node->ip, con_to->ip, NAMEMAX ) == 0 ) ) {
+
+			(*olsr_con)->left_etx = etx;
+			break;
+
+		} else if ( ( strncmp( (*olsr_con)->right_olsr_node->ip, con_from->ip, NAMEMAX ) == 0 ) && ( strncmp( (*olsr_con)->left_olsr_node->ip, con_to->ip, NAMEMAX ) == 0 ) ) {
+
+			(*olsr_con)->right_etx = etx;
+			break;
+
+		}
+
+		olsr_con = &(*olsr_con)->next_olsr_con;
+
+	}
+
 	/* new connection */
 	if ( (*olsr_con) == NULL ) {
 
@@ -39,24 +60,14 @@
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
 		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
 
+		(*olsr_con)->left_olsr_node = con_from;
+		(*olsr_con)->right_olsr_node = con_to;
+		(*olsr_con)->left_etx = etx;
+
 		(*olsr_con)->next_olsr_con = NULL;
-		(*olsr_con)->olsr_node = con_to;
-		(*olsr_con)->etx = l;
 
-		return ( 0 );
-
 	}
 
-	/* existing connection */
-	if ( strncmp( (*olsr_con)->olsr_node->ip, con_to->ip, NAMEMAX ) == 0 ) {
-
-		(*olsr_con)->etx = l;
-		return ( 0 );
-
-	}
-
-	add_olsr_con( &(*olsr_con)->next_olsr_con, con_to, l );
-
 }
 
 
@@ -151,6 +162,22 @@
 	int i;   /* inc var */
 	int result;   /* result of strcmp */
 
+	while ( (*olsr_node) != NULL ) {
+
+		result = strncmp( (*olsr_node)->ip, ip, NAMEMAX );
+
+		/* we found the node */
+		if ( result == 0 ) return (*olsr_node);
+
+		/* the searched node must be in the subtree */
+		if ( result < 0 ) {
+			olsr_node = &(*olsr_node)->right;
+		} else {
+			olsr_node = &(*olsr_node)->left;
+		}
+
+	}
+
 	/* if node is NULL we reached the end of the tree and must create a new olsr_node */
 	if ( (*olsr_node) == NULL ) {
 
@@ -162,8 +189,9 @@
 		strncpy((*olsr_node)->ip,ip,NAMEMAX);
 		(*olsr_node)->inet_gw = 0;
 		(*olsr_node)->inet_gw_modified = 1;
-		printf( "add: %s\n", (*olsr_node)->ip );
 
+		if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
+
 		for ( i=0; i<3; i++ ) {
 			(*olsr_node)->pos_vec[i] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
 			(*olsr_node)->mov_vec[i] = 0.0;
@@ -177,18 +205,6 @@
 
 	}
 
-	result = strncmp( (*olsr_node)->ip, ip, NAMEMAX );
-
-	/* we found the node */
-	if ( result == 0 ) return (*olsr_node);
-
-	/* the searched node must be in the subtree */
-	if ( result < 0 ) {
-		get_olsr_node( &(*olsr_node)->right, ip );
-	} else {
-		get_olsr_node( &(*olsr_node)->left, ip );
-	}
-
 }
 
 
@@ -342,13 +358,13 @@
 			// connection to internet
 			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
 
-				olsr_node1 = get_olsr_node( &Root, data[0] );
+				olsr_node1 = get_olsr_node( &Olsr_root, data[0] );
 
 				if ( olsr_node1->inet_gw == 0 ) {
 
 					olsr_node1->inet_gw = 1;
 					olsr_node1->inet_gw_modified = 1;
-					printf( "new internet: %s\n", olsr_node1->ip );
+					if ( Debug ) printf( "new internet: %s\n", olsr_node1->ip );
 
 				}
 
@@ -360,13 +376,13 @@
 		} else {
 // 			n1=get_node_num(data[0]);
 // 			n2=get_node_num(data[1]);
-			olsr_node1 = get_olsr_node( &Root, data[0] );
-			olsr_node2 = get_olsr_node( &Root, data[1] );
+			olsr_node1 = get_olsr_node( &Olsr_root, data[0] );
+			olsr_node2 = get_olsr_node( &Olsr_root, data[1] );
 			f=10.0+strtod(data[2],NULL)/10.0;
 /*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
 			if (f>=5) /* just to prevent ascii to float converting inconsistency ... */
 // 				add_adj(n1,n2,f);
-				add_olsr_con( &(olsr_node1)->olsr_con, olsr_node2, f );
+				add_olsr_con( olsr_node1, olsr_node2, f );
 		}
 	}
 	return(0);



From marec at berlios.de  Sat Feb 11 14:04:34 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sat, 11 Feb 2006 14:04:34 +0100
Subject: [S3d-svn] r55 - trunk/apps/olsrs3d
Message-ID: <200602111304.k1BD4YT4017220@sheep.berlios.de>

Author: marec
Date: 2006-02-11 14:04:30 +0100 (Sat, 11 Feb 2006)
New Revision: 55

Modified:
   trunk/apps/olsrs3d/olsrs3d.h
Log:
olsr connection list

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-11 12:52:30 UTC (rev 54)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-11 13:04:30 UTC (rev 55)
@@ -1,4 +1,4 @@
-#define NAMEMAX		128	
+#define NAMEMAX		128
 struct t_node {
 	float pos[3], mov[3];
 	char name[NAMEMAX];
@@ -10,9 +10,11 @@
 struct olsr_con {
 
 	struct olsr_con *next_olsr_con;   /* pointer to next connection */
-	struct olsr_node *olsr_node;   /* pointer to end point of the connection */
+	struct olsr_node *left_olsr_node;   /* pointer to left end point of the connection */
+	struct olsr_node *right_olsr_node;   /* pointer to right end point of the connection */
+	float left_etx;   /* etx of left olsr node */
+	float right_etx;   /* etx of right olsr node */
 	int obj_id;   /* id of connection object in s3d */
-	float etx;
 
 };
 
@@ -42,8 +44,12 @@
 
 
 
-extern struct olsr_node *Root;   																/* top of olsr node tree */
-extern struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end,*List_ptr;			/* struct list */
+extern int Debug;
+
+extern struct olsr_con *Con_begin;   /* begin of connection list */
+extern struct olsr_node *Olsr_root;   /* top of olsr node tree */
+extern struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end,*List_ptr;   /* struct list */
+
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;
@@ -68,4 +74,4 @@
 void lst_add(int id,struct olsr_node **olsr_node);
 void lst_del(int id);
 void move_lst_ptr(int *id);
-struct olsr_node **lst_search(int id);
\ No newline at end of file
+struct olsr_node **lst_search(int id);



From marec at berlios.de  Sat Feb 11 14:10:15 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sat, 11 Feb 2006 14:10:15 +0100
Subject: [S3d-svn] r56 - trunk/apps/olsrs3d
Message-ID: <200602111310.k1BDAFom019988@sheep.berlios.de>

Author: marec
Date: 2006-02-11 14:09:40 +0100 (Sat, 11 Feb 2006)
New Revision: 56

Modified:
   trunk/apps/olsrs3d/main.c
Log:
olsr connection list

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-11 13:04:30 UTC (rev 55)
+++ trunk/apps/olsrs3d/main.c	2006-02-11 13:09:40 UTC (rev 56)
@@ -2,17 +2,20 @@
 #include <s3d.h>
 #include <unistd.h>	/* sleep() */
 #include <string.h>	/* strncpy() */
-#include <math.h>		/* sqrt() */
+#include <math.h>	/* sqrt() */
 #include <getopt.h>	/* getopt() */
 #include "olsrs3d.h"
 #define SPEED		10.0
 
 int Debug = 0;
 
-char Olsr_host[256];   											/* ip or hostname of olsr node with running dot_draw plugin */
-struct olsr_node *Root = NULL;   							/* top of olsr node tree */
-struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end,*List_ptr;			/* needed pointer for linked list */
 
+char Olsr_host[256];   /* ip or hostname of olsr node with running dot_draw plugin */
+
+struct olsr_con *Con_begin = NULL;   /* begin of connection list */
+struct olsr_node *Olsr_root = NULL;   /* top of olsr node tree */
+struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end, *List_ptr;   /* needed pointer for linked list */
+
 int node_count=-1;
 int alpha=0;
 int Olsr_node_obj,Olsr_node_inet_obj,mesh;
@@ -20,9 +23,9 @@
 float bottom=-1.0;
 float left=-1.0;
 
-float CamPosition[2][3];													/* CamPosition[trans|rot][x-z] */
-float ZeroPosition[3] = {0,0,0};										/* current position zero position */
-int ZeroPoint;																	/* object zeropoint */
+float CamPosition[2][3];   /* CamPosition[trans|rot][x-z] */
+float ZeroPosition[3] = {0,0,0};   /* current position zero position */
+int ZeroPoint;   /* object zeropoint */
 
 
 
@@ -149,7 +152,7 @@
 	float f, distance;
 	float tmp_mov_vec[3];
 	struct olsr_con **olsr_con;
-	
+
 	/* no more nodes left */
 	if ( olsr_node == NULL ) return;
 
@@ -158,7 +161,7 @@
 
 		/* delete old shape */
 		if ( olsr_node->obj_id != -1 ) {
-			lst_del(olsr_node->obj_id);
+			lst_del( olsr_node->obj_id );
 			s3d_del_object( olsr_node->obj_id );
 		}
 
@@ -168,17 +171,18 @@
 		if ( olsr_node->inet_gw ) {
 			/* olsr node offers internet access */
 			olsr_node->obj_id = s3d_clone( Olsr_node_inet_obj );
-			s3d_link(olsr_node->obj_id,ZeroPoint);
 		} else {
 			/* normal olsr node */
 			olsr_node->obj_id = s3d_clone( Olsr_node_obj );
-			s3d_link(olsr_node->obj_id,ZeroPoint);
 		}
 
 		s3d_flags_on( olsr_node->obj_id, S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+
+		/* link newly created object to ZeroPoint */
+		s3d_link( olsr_node->obj_id, ZeroPoint );
 		/* add object_id and olsr_node to linked list */
 		lst_add(olsr_node->obj_id,&olsr_node);
-		
+
 		/* create olsr node text and attach (link) it to the node */
 		olsr_node->desc_id = s3d_draw_string( olsr_node->ip, &f );
 		s3d_link( olsr_node->desc_id, olsr_node->obj_id );
@@ -189,54 +193,112 @@
 
 	}
 
-	/* reset movement vector */
-	olsr_node->mov_vec[0] = olsr_node->mov_vec[1] = olsr_node->mov_vec[2] = 0.0;
+	handle_olsr_node( olsr_node->left );
+	handle_olsr_node( olsr_node->right );
 
-	/* calculate new movement vector */
-	olsr_con = &olsr_node->olsr_con;
+}
 
+
+
+/***
+ *
+ * calculate movement vector of all olsr nodes
+ *
+ ***/
+
+void calc_olsr_node_mov( void ) {
+
+	float f, distance;
+	float tmp_mov_vec[3];
+	struct olsr_con **olsr_con = &Con_begin;
+
 	while ( (*olsr_con) != NULL ) {
 
-		distance = dirt( olsr_node->pos_vec, (*olsr_con)->olsr_node->pos_vec, tmp_mov_vec );
-		/* f = (*olsr_con)->etx / distance; */
-		f = (*olsr_con)->etx * 5.0 / distance;
+		distance = dirt( (*olsr_con)->left_olsr_node->pos_vec, (*olsr_con)->right_olsr_node->pos_vec, tmp_mov_vec );
+		f = ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 * distance;
 		if ( f < 0.3 ) f = 0.3;
-		mov_add( olsr_node->mov_vec, tmp_mov_vec, 1/f-1);
 
+		mov_add( (*olsr_con)->left_olsr_node->mov_vec, tmp_mov_vec, 1 / f - 1 );
+		mov_add( (*olsr_con)->right_olsr_node->mov_vec, tmp_mov_vec, 1 / f - 1 );
+
 		olsr_con = &(*olsr_con)->next_olsr_con;
 
 	}
 
-	/* move it */
-	mov_add( olsr_node->pos_vec, olsr_node->mov_vec, 0.1 );
-	s3d_translate( olsr_node->obj_id, olsr_node->pos_vec[0], olsr_node->pos_vec[1], olsr_node->pos_vec[2] );
+}
 
-	olsr_con = &olsr_node->olsr_con;
+
+
+/***
+ *
+ * move all olsr nodes and their connections
+ *
+ ***/
+
+void move_olsr_nodes( void ) {
+
+	float z[3]={0,0,0};
+	float distance;
+	struct olsr_con **olsr_con = &Con_begin;
+
 	while ( (*olsr_con) != NULL ) {
 
+		/* move left olsr node if it has not been moved yet */
+		if ( !( ( (*olsr_con)->left_olsr_node->mov_vec[0] == 0 ) && ( (*olsr_con)->left_olsr_node->mov_vec[1] == 0 ) && ( (*olsr_con)->left_olsr_node->mov_vec[2] == 0 ) ) ) {
+
+			if ( ( distance = dist( (*olsr_con)->left_olsr_node->mov_vec, z ) ) > 10.0 ) {
+				mov_add( (*olsr_con)->left_olsr_node->pos_vec, (*olsr_con)->left_olsr_node->mov_vec, 1.0 / ( (float ) distance ) );
+			} else {
+				mov_add( (*olsr_con)->left_olsr_node->pos_vec, (*olsr_con)->left_olsr_node->mov_vec, 0.1 );
+			}
+
+			s3d_translate( (*olsr_con)->left_olsr_node->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0], (*olsr_con)->left_olsr_node->pos_vec[1], (*olsr_con)->left_olsr_node->pos_vec[2] );
+
+			/* reset movement vector */
+			(*olsr_con)->left_olsr_node->mov_vec[0] = (*olsr_con)->left_olsr_node->mov_vec[1] = (*olsr_con)->left_olsr_node->mov_vec[2] = 0.0;
+
+		}
+
+		/* move right olsr node if it has not been moved yet */
+		if ( !( ( (*olsr_con)->right_olsr_node->mov_vec[0] == 0 ) && ( (*olsr_con)->right_olsr_node->mov_vec[1] == 0 ) && ( (*olsr_con)->right_olsr_node->mov_vec[2] == 0 ) ) ) {
+
+			if ( ( distance = dist( (*olsr_con)->right_olsr_node->mov_vec, z ) ) > 10.0 ) {
+				mov_add( (*olsr_con)->right_olsr_node->pos_vec, (*olsr_con)->right_olsr_node->mov_vec, 1.0 / ( (float ) distance ) );
+			} else {
+				mov_add( (*olsr_con)->right_olsr_node->pos_vec, (*olsr_con)->right_olsr_node->mov_vec, 0.1 );
+			}
+
+			s3d_translate( (*olsr_con)->right_olsr_node->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0], (*olsr_con)->right_olsr_node->pos_vec[1], (*olsr_con)->right_olsr_node->pos_vec[2] );
+
+			/* reset movement vector */
+			(*olsr_con)->right_olsr_node->mov_vec[0] = (*olsr_con)->right_olsr_node->mov_vec[1] = (*olsr_con)->right_olsr_node->mov_vec[2] = 0.0;
+
+		}
+
+		/* move connection between left and right olsr node */
 		s3d_pop_vertex( (*olsr_con)->obj_id, 6 );
 		s3d_pop_polygon( (*olsr_con)->obj_id, 2 );
 
-		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]+ ZeroPosition[0], olsr_node->pos_vec[1]+ ZeroPosition[1], olsr_node->pos_vec[2]+ ZeroPosition[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]+0.2+ ZeroPosition[0], olsr_node->pos_vec[1]+ ZeroPosition[1], olsr_node->pos_vec[2]+ ZeroPosition[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, olsr_node->pos_vec[0]-0.2+ ZeroPosition[0], olsr_node->pos_vec[1]+ ZeroPosition[1], olsr_node->pos_vec[2]+ ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] - 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
 
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0]+ ZeroPosition[0], (*olsr_con)->olsr_node->pos_vec[1]+ ZeroPosition[1], (*olsr_con)->olsr_node->pos_vec[2]+ ZeroPosition[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0]+ ZeroPosition[0], (*olsr_con)->olsr_node->pos_vec[1]+0.2+ ZeroPosition[1], (*olsr_con)->olsr_node->pos_vec[2] + ZeroPosition[2]);
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->olsr_node->pos_vec[0]+ ZeroPosition[0], (*olsr_con)->olsr_node->pos_vec[1]-0.2+ ZeroPosition[1], (*olsr_con)->olsr_node->pos_vec[2] + ZeroPosition[2]);
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]- 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
 
-		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0);
-		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0);
+		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
+		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
 
 		olsr_con = &(*olsr_con)->next_olsr_con;
 
 	}
 
-	handle_olsr_node( olsr_node->left );
-	handle_olsr_node( olsr_node->right );
-
 }
 
+
+
+
 void mainloop()
 {
 	int i,j,o,r;
@@ -249,9 +311,15 @@
 // 		node[i].mov[2]=0.0;
 // 	}
 
+	// calculate new movement vector
+	calc_olsr_node_mov();
+
 	// prepare nodes
-	handle_olsr_node( Root );
+	handle_olsr_node( Olsr_root );
 
+	// move it
+	move_olsr_nodes();
+
 	/*	for (i=0;i<max;i++)*/
 	/*	{*/
 	/*		for (j=i+1;j<max;j++)*/
@@ -346,7 +414,7 @@
  *
  ***/
 
-void object_click(struct s3d_evt *evt) 
+void object_click(struct s3d_evt *evt)
 {
 	int oid;
 	oid=(int)*((unsigned long *)evt->buf);
@@ -417,7 +485,7 @@
  *
  * add a link object_id to olsr_node, to get ip adress and coordinates per object_id
  *                 id => object_id, returned from s3d_clone or s3d_new_object
- *  **olsr_node => pointer to pointer of current olsr_node 
+ *  **olsr_node => pointer to pointer of current olsr_node
  *
  ***/
 
@@ -442,7 +510,7 @@
  *void move_lst_ptr(int *id)
  * remove element from obj2ip linked list
  * id => object_id, returned from s3d_clone or s3d_new_object
- *	
+ *
  ***/
 
 void lst_del(int id) {
@@ -463,9 +531,9 @@
  *
  * move the List_ptr one positon ahead the searched element
  *	*id => pointer of object_id , returned from s3d_clone or s3d_new_object
- * 
+ *
  ***/
- 
+
 void move_lst_ptr(int *id) {
 	printf("obj2ip: move for %d\n",*id);
 	/* head to point at end or id lass then first element in linked list*/
@@ -491,7 +559,7 @@
 				List_ptr = List_ptr->prev;
 				printf("obj2ip: move <-- %d\n",List_ptr->id);
 			}
-			List_ptr = List_ptr->prev->prev; 
+			List_ptr = List_ptr->prev->prev;
 		}
 		printf("obj2ip: found id %d--> %d <--%d\n",List_ptr->id,List_ptr->next->id,List_ptr->next->next->id);
 	}
@@ -501,9 +569,9 @@
  *
  * search a object_id in linked list and return pointer on struct olsr_node
  *	id => object_id , returned from s3d_clone or s3d_new_object
- * 
+ *
  ***/
- 
+
 struct olsr_node **lst_search(int id) {
 	move_lst_ptr(&id);
 	if(id != List_ptr->next->id)



From nichtsnutz at berlios.de  Sat Feb 11 16:19:00 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sat, 11 Feb 2006 16:19:00 +0100
Subject: [S3d-svn] r57 - trunk/apps/olsrs3d
Message-ID: <200602111519.k1BFJ0kF005113@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-11 16:18:58 +0100 (Sat, 11 Feb 2006)
New Revision: 57

Modified:
   trunk/apps/olsrs3d/main.c
Log:
camera moving, not comlete,
current intermediate result

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-11 13:09:40 UTC (rev 56)
+++ trunk/apps/olsrs3d/main.c	2006-02-11 15:18:58 UTC (rev 57)
@@ -26,6 +26,7 @@
 float CamPosition[2][3];   /* CamPosition[trans|rot][x-z] */
 float ZeroPosition[3] = {0,0,0};   /* current position zero position */
 int ZeroPoint;   /* object zeropoint */
+int Follow_id = 0;
 
 
 
@@ -161,6 +162,7 @@
 
 		/* delete old shape */
 		if ( olsr_node->obj_id != -1 ) {
+			/* remove element from ob2ip list */
 			lst_del( olsr_node->obj_id );
 			s3d_del_object( olsr_node->obj_id );
 		}
@@ -387,6 +389,12 @@
 	return;
 }
 
+int follow_node() {
+	if(Follow_id == 0)
+		return(0);
+	
+}
+
 void stop()
 {
 	s3d_quit();
@@ -416,15 +424,21 @@
 
 void object_click(struct s3d_evt *evt)
 {
+	struct olsr_node *F_node;
 	int oid;
 	oid=(int)*((unsigned long *)evt->buf);
+	if (Follow_id != 0 && oid == Follow_id) {
+		Follow_id == 0;
+		/* set world to start point */
+	} else {
+		F_node = *lst_search(oid);
+		printf("%s",F_node->ip);
+	}
 	/*s3d_translate(ZeroPoint,0,50,40);
 	ZeroPosition[0] = 0;
 	ZeroPosition[1] = 50;
 	ZeroPosition[2] = 40;*/
-	struct olsr_node *olsr_node;
-	olsr_node = *lst_search(oid);
-	printf("obj2ip: search return %s\n",olsr_node->ip);
+
 }
 
 /***
@@ -459,6 +473,7 @@
 		s3d_translate(mesh,(-left)*3.0-1.8,bottom*3.0+0.8,-3.0);
 		s3d_flags_on(mesh,S3D_OF_VISIBLE);
 	}
+	printf("%f %f %f\n",inf->trans_x,inf->trans_y,inf->trans_z);
 }
 
 /***
@@ -470,10 +485,8 @@
 void lst_initialize() {
 	Obj_to_ip_head = (struct Obj_to_ip*) malloc(sizeof(struct Obj_to_ip));
 	Obj_to_ip_end = (struct Obj_to_ip*) malloc(sizeof(struct Obj_to_ip));
-	if(Obj_to_ip_head == NULL || Obj_to_ip_end == NULL) {
-		printf("not enough memory to initialize struct list\n");
-		exit(8);
-	}
+	if(Obj_to_ip_head == NULL || Obj_to_ip_end == NULL)
+		out_of_mem();
 	Obj_to_ip_head->id = 0;
 	Obj_to_ip_end->id = -1;
 	Obj_to_ip_head->prev = Obj_to_ip_end->prev = Obj_to_ip_head;
@@ -492,10 +505,8 @@
 void lst_add(int id,struct olsr_node **olsr_node) {
 	struct Obj_to_ip *new;
 	new = (struct Obj_to_ip*) malloc(sizeof(struct Obj_to_ip));
-	if(new == NULL) {
-		printf("not enough memory to add element to linked list\n");
-		exit(8);
-	}
+	if(new == NULL)
+		out_of_mem();
 	new->id = id;
 	new->olsr_node = *olsr_node;
 	move_lst_ptr(&id);
@@ -570,6 +581,12 @@
  * search a object_id in linked list and return pointer on struct olsr_node
  *	id => object_id , returned from s3d_clone or s3d_new_object
  *
+ * <example>
+ *     struct olsr_node *olsr_node;
+ *     olsr_node = *lst_search(oid);
+ *     printf("obj2ip: search return %s\n",olsr_node->ip);
+ * </example>
+ *
  ***/
 
 struct olsr_node **lst_search(int id) {



From nichtsnutz at berlios.de  Sun Feb 12 06:05:50 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sun, 12 Feb 2006 06:05:50 +0100
Subject: [S3d-svn] r58 - trunk/apps/olsrs3d
Message-ID: <200602120505.k1C55o20002885@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-12 06:05:47 +0100 (Sun, 12 Feb 2006)
New Revision: 58

Modified:
   trunk/apps/olsrs3d/main.c
Log:
remove changes for world shift

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-11 15:18:58 UTC (rev 57)
+++ trunk/apps/olsrs3d/main.c	2006-02-12 05:05:47 UTC (rev 58)
@@ -26,7 +26,6 @@
 float CamPosition[2][3];   /* CamPosition[trans|rot][x-z] */
 float ZeroPosition[3] = {0,0,0};   /* current position zero position */
 int ZeroPoint;   /* object zeropoint */
-int Follow_id = 0;
 
 
 
@@ -389,12 +388,6 @@
 	return;
 }
 
-int follow_node() {
-	if(Follow_id == 0)
-		return(0);
-	
-}
-
 void stop()
 {
 	s3d_quit();
@@ -424,21 +417,12 @@
 
 void object_click(struct s3d_evt *evt)
 {
-	struct olsr_node *F_node;
 	int oid;
 	oid=(int)*((unsigned long *)evt->buf);
-	if (Follow_id != 0 && oid == Follow_id) {
-		Follow_id == 0;
-		/* set world to start point */
-	} else {
-		F_node = *lst_search(oid);
-		printf("%s",F_node->ip);
-	}
 	/*s3d_translate(ZeroPoint,0,50,40);
 	ZeroPosition[0] = 0;
 	ZeroPosition[1] = 50;
 	ZeroPosition[2] = 40;*/
-
 }
 
 /***



From marec at berlios.de  Sun Feb 12 10:18:44 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sun, 12 Feb 2006 10:18:44 +0100
Subject: [S3d-svn] r59 - trunk/apps/olsrs3d
Message-ID: <200602120918.k1C9IiaP029403@sheep.berlios.de>

Author: marec
Date: 2006-02-12 10:18:41 +0100 (Sun, 12 Feb 2006)
New Revision: 59

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/process.c
Log:
node drifting fix

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-12 05:05:47 UTC (rev 58)
+++ trunk/apps/olsrs3d/main.c	2006-02-12 09:18:41 UTC (rev 59)
@@ -2,7 +2,7 @@
 #include <s3d.h>
 #include <unistd.h>	/* sleep() */
 #include <string.h>	/* strncpy() */
-#include <math.h>	/* sqrt() */
+#include <math.h>		/* sqrt() */
 #include <getopt.h>	/* getopt() */
 #include "olsrs3d.h"
 #define SPEED		10.0
@@ -215,13 +215,27 @@
 
 	while ( (*olsr_con) != NULL ) {
 
-		distance = dirt( (*olsr_con)->left_olsr_node->pos_vec, (*olsr_con)->right_olsr_node->pos_vec, tmp_mov_vec );
-		f = ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 * distance;
-		if ( f < 0.3 ) f = 0.3;
+// 		if ( ( (*olsr_con)->left_etx != 0.0 ) && ( (*olsr_con)->right_etx != 0.0  ) ) {
 
-		mov_add( (*olsr_con)->left_olsr_node->mov_vec, tmp_mov_vec, 1 / f - 1 );
-		mov_add( (*olsr_con)->right_olsr_node->mov_vec, tmp_mov_vec, 1 / f - 1 );
+			distance = dirt( (*olsr_con)->left_olsr_node->pos_vec, (*olsr_con)->right_olsr_node->pos_vec, tmp_mov_vec );
+			f = ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) * 5.0 / 2.0 ) / distance;
+			if ( f < 0.3 ) f = 0.3;
 
+			mov_add( (*olsr_con)->left_olsr_node->mov_vec, tmp_mov_vec, 1 / f - 1 );
+			mov_add( (*olsr_con)->right_olsr_node->mov_vec, tmp_mov_vec, - ( 1 / f - 1 ) );
+
+			if ( strcmp( (*olsr_con)->left_olsr_node->ip, "104.131.131.1" ) == 0 ) {
+
+				printf( "con_to: %s, own_etx: %f, other_etx: %f, vec: %f,%f,%f\n", (*olsr_con)->right_olsr_node->ip, (*olsr_con)->left_etx, (*olsr_con)->right_etx, (*olsr_con)->left_olsr_node->mov_vec[0], (*olsr_con)->left_olsr_node->mov_vec[1], (*olsr_con)->left_olsr_node->mov_vec[2] );
+			
+			} else if ( strcmp( (*olsr_con)->right_olsr_node->ip, "104.131.131.1" ) == 0 ) {
+
+				printf( "con_to: %s, own_etx: %f, other_etx: %f, vec: %f,%f,%f\n", (*olsr_con)->left_olsr_node->ip, (*olsr_con)->right_etx, (*olsr_con)->left_etx, (*olsr_con)->right_olsr_node->mov_vec[0], (*olsr_con)->right_olsr_node->mov_vec[1], (*olsr_con)->right_olsr_node->mov_vec[2] );
+
+			}
+
+// 		}
+
 		olsr_con = &(*olsr_con)->next_olsr_con;
 
 	}
@@ -314,7 +328,7 @@
 
 	// calculate new movement vector
 	calc_olsr_node_mov();
-
+	printf( "calc ended !\n" );
 	// prepare nodes
 	handle_olsr_node( Olsr_root );
 
@@ -530,7 +544,7 @@
  ***/
 
 void move_lst_ptr(int *id) {
-	printf("obj2ip: move for %d\n",*id);
+	/* printf("obj2ip: move for %d\n",*id); */
 	/* head to point at end or id lass then first element in linked list*/
  	if(Obj_to_ip_head->next->id == -1 || *id < Obj_to_ip_head->next->id)
 		List_ptr = Obj_to_ip_head;
@@ -544,7 +558,7 @@
 			printf("obj2ip: start at head id %d < %d (last-first)/2\n",*id,(Obj_to_ip_end->prev->id - Obj_to_ip_head->next->id) / 2);
 			while(*id > List_ptr->next->id) {
 				List_ptr = List_ptr->next;
-				printf("obj2ip: move --> %d\n",List_ptr->next->id);
+				/* printf("obj2ip: move --> %d\n",List_ptr->next->id); */
 			}
 		} else {
 			List_ptr = Obj_to_ip_end->prev;
@@ -552,7 +566,7 @@
 			//do List_ptr = List_ptr->prev; while(*id > List_ptr->prev->id);
 			while(*id < List_ptr->prev->id) {
 				List_ptr = List_ptr->prev;
-				printf("obj2ip: move <-- %d\n",List_ptr->id);
+				/* printf("obj2ip: move <-- %d\n",List_ptr->id); */
 			}
 			List_ptr = List_ptr->prev->prev;
 		}

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-12 05:05:47 UTC (rev 58)
+++ trunk/apps/olsrs3d/process.c	2006-02-12 09:18:41 UTC (rev 59)
@@ -63,6 +63,7 @@
 		(*olsr_con)->left_olsr_node = con_from;
 		(*olsr_con)->right_olsr_node = con_to;
 		(*olsr_con)->left_etx = etx;
+		(*olsr_con)->right_etx = 0.0;
 
 		(*olsr_con)->next_olsr_con = NULL;
 



From marec at berlios.de  Sun Feb 12 18:37:38 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sun, 12 Feb 2006 18:37:38 +0100
Subject: [S3d-svn] r60 - trunk/apps/olsrs3d
Message-ID: <200602121737.k1CHbcgB023859@sheep.berlios.de>

Author: marec
Date: 2006-02-12 18:37:33 +0100 (Sun, 12 Feb 2006)
New Revision: 60

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/process.c
Log:
node drifting fix II

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-12 09:18:41 UTC (rev 59)
+++ trunk/apps/olsrs3d/main.c	2006-02-12 17:37:33 UTC (rev 60)
@@ -224,16 +224,6 @@
 			mov_add( (*olsr_con)->left_olsr_node->mov_vec, tmp_mov_vec, 1 / f - 1 );
 			mov_add( (*olsr_con)->right_olsr_node->mov_vec, tmp_mov_vec, - ( 1 / f - 1 ) );
 
-			if ( strcmp( (*olsr_con)->left_olsr_node->ip, "104.131.131.1" ) == 0 ) {
-
-				printf( "con_to: %s, own_etx: %f, other_etx: %f, vec: %f,%f,%f\n", (*olsr_con)->right_olsr_node->ip, (*olsr_con)->left_etx, (*olsr_con)->right_etx, (*olsr_con)->left_olsr_node->mov_vec[0], (*olsr_con)->left_olsr_node->mov_vec[1], (*olsr_con)->left_olsr_node->mov_vec[2] );
-			
-			} else if ( strcmp( (*olsr_con)->right_olsr_node->ip, "104.131.131.1" ) == 0 ) {
-
-				printf( "con_to: %s, own_etx: %f, other_etx: %f, vec: %f,%f,%f\n", (*olsr_con)->left_olsr_node->ip, (*olsr_con)->right_etx, (*olsr_con)->left_etx, (*olsr_con)->right_olsr_node->mov_vec[0], (*olsr_con)->right_olsr_node->mov_vec[1], (*olsr_con)->right_olsr_node->mov_vec[2] );
-
-			}
-
 // 		}
 
 		olsr_con = &(*olsr_con)->next_olsr_con;
@@ -328,7 +318,7 @@
 
 	// calculate new movement vector
 	calc_olsr_node_mov();
-	printf( "calc ended !\n" );
+
 	// prepare nodes
 	handle_olsr_node( Olsr_root );
 

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-12 09:18:41 UTC (rev 59)
+++ trunk/apps/olsrs3d/process.c	2006-02-12 17:37:33 UTC (rev 60)
@@ -1,6 +1,7 @@
-#include <stdio.h> /* NULL */
-#include <string.h> /* strlen(), memmove() */
-#include <stdlib.h> /* rand(), malloc(), realloc(), free(), strtof() */
+#include <stdio.h> 	/* NULL */
+#include <string.h> 	/* strlen(), memmove() */
+#include <stdlib.h> 	/* rand(), malloc(), realloc(), free(), strtof() */
+#include <math.h>		/* sin(), cos() */
 #include <s3d.h>
 #include "olsrs3d.h"
 char lbuf[MAXLINESIZE];
@@ -160,7 +161,7 @@
 
 void *get_olsr_node( struct olsr_node **olsr_node, char *ip ) {
 
-	int i;   /* inc var */
+	/* int i;    inc var */
 	int result;   /* result of strcmp */
 
 	while ( (*olsr_node) != NULL ) {
@@ -193,11 +194,27 @@
 
 		if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
 
-		for ( i=0; i<3; i++ ) {
-			(*olsr_node)->pos_vec[i] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
-			(*olsr_node)->mov_vec[i] = 0.0;
-		}
+// 		for ( i=0; i<3; i++ ) {
 
+// 			alpha = ( ( 360.0 * rand() ) / ( ( float ) i ) );
+// 			radius=((n_item*10)/(M_PI*4));
+// 			if (n_item<5)
+// 				radius=((50)/(M_PI*4));
+// 			else
+// 				radius=((n_item*10)/(M_PI*4));
+// 			px=posx-sin(alpha*M_PI/180.0)*radius;
+// 			pz=posy;
+// 			pz=posz-cos(alpha*M_PI/180.0)*radius;
+			
+// 			(*olsr_node)->pos_vec[i] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+			(*olsr_node)->pos_vec[0] = ( ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0 ) - sin( ( ( 360.0 * rand() ) / 100.0 ) * M_PI / 180.0 ) * ( 20.0 / ( M_PI * 4 ) );
+			(*olsr_node)->pos_vec[1] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+			(*olsr_node)->pos_vec[2] = (*olsr_node)->pos_vec[1] - cos( ( ( 360.0 * rand() ) / 100.0 ) * M_PI / 180.0 ) * ( 20.0 / ( M_PI * 4 ) );
+// 			printf( "vec1: %f, vec2: %f, vec3: %f\n", (*olsr_node)->pos_vec[0], (*olsr_node)->pos_vec[1], (*olsr_node)->pos_vec[2] );
+			(*olsr_node)->mov_vec[0] = (*olsr_node)->mov_vec[1] = (*olsr_node)->mov_vec[2] = 0.0;
+			
+// 		}
+
 		(*olsr_node)->obj_id = -1;
 		(*olsr_node)->desc_id = -1;
 		(*olsr_node)->olsr_con = NULL;



From nichtsnutz at berlios.de  Sun Feb 12 18:52:38 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sun, 12 Feb 2006 18:52:38 +0100
Subject: [S3d-svn] r61 - trunk/apps/olsrs3d
Message-ID: <200602121752.k1CHqbJT032067@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-12 18:52:33 +0100 (Sun, 12 Feb 2006)
New Revision: 61

Modified:
   trunk/apps/olsrs3d/main.c
Log:
fix linked list

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-12 17:37:33 UTC (rev 60)
+++ trunk/apps/olsrs3d/main.c	2006-02-12 17:52:33 UTC (rev 61)
@@ -9,7 +9,6 @@
 
 int Debug = 0;
 
-
 char Olsr_host[256];   /* ip or hostname of olsr node with running dot_draw plugin */
 
 struct olsr_con *Con_begin = NULL;   /* begin of connection list */
@@ -476,7 +475,7 @@
 	if(Obj_to_ip_head == NULL || Obj_to_ip_end == NULL)
 		out_of_mem();
 	Obj_to_ip_head->id = 0;
-	Obj_to_ip_end->id = -1;
+	Obj_to_ip_end->id = (int) NULL;
 	Obj_to_ip_head->prev = Obj_to_ip_end->prev = Obj_to_ip_head;
 	Obj_to_ip_head->next = Obj_to_ip_end->next = Obj_to_ip_end;
 	List_ptr = Obj_to_ip_head;
@@ -536,31 +535,33 @@
 void move_lst_ptr(int *id) {
 	/* printf("obj2ip: move for %d\n",*id); */
 	/* head to point at end or id lass then first element in linked list*/
- 	if(Obj_to_ip_head->next->id == -1 || *id < Obj_to_ip_head->next->id)
+ 	if(Obj_to_ip_head->next->id == NULL || *id < Obj_to_ip_head->next->id)
 		List_ptr = Obj_to_ip_head;
  	/* id is greather then last element in linked list */
 	else if(*id > Obj_to_ip_end->prev->id)
 		List_ptr = Obj_to_ip_end->prev;
 	else {
 		printf("obj2ip: ok i search deeper ;-) for id=%d\n",*id);
-		if(*id < (int)(Obj_to_ip_end->prev->id - Obj_to_ip_head->next->id) / 2) {
+		if((*id - (int) Obj_to_ip_head->next->id) <= ((int)(Obj_to_ip_end->prev->id)-*id)) {
 			List_ptr = Obj_to_ip_head->next;
-			printf("obj2ip: start at head id %d < %d (last-first)/2\n",*id,(Obj_to_ip_end->prev->id - Obj_to_ip_head->next->id) / 2);
+			printf("obj2ip: start at head id %d - %d <= %d - %d \n",*id,Obj_to_ip_head->next->id,*id,Obj_to_ip_end->prev->id);
 			while(*id > List_ptr->next->id) {
+				printf("obj2ip: %d > %d move to ",*id,List_ptr->next->id);
 				List_ptr = List_ptr->next;
-				/* printf("obj2ip: move --> %d\n",List_ptr->next->id); */
+				printf("%d\n",List_ptr->id);
 			}
 		} else {
 			List_ptr = Obj_to_ip_end->prev;
-			printf("obj2ip: start at end id %d > %d (last-first)/2\n",*id,(Obj_to_ip_end->prev->id - Obj_to_ip_head->next->id) / 2);
+			printf("obj2ip: start at end id %d - %d > %d - %d \n",*id,Obj_to_ip_head->next->id,Obj_to_ip_end->prev->id,*id);
 			//do List_ptr = List_ptr->prev; while(*id > List_ptr->prev->id);
 			while(*id < List_ptr->prev->id) {
+				printf("obj2ip: %d < %d move to ",*id,List_ptr->prev->id);
 				List_ptr = List_ptr->prev;
-				/* printf("obj2ip: move <-- %d\n",List_ptr->id); */
+				printf("%d\n",List_ptr->id);
 			}
 			List_ptr = List_ptr->prev->prev;
 		}
-		printf("obj2ip: found id %d--> %d <--%d\n",List_ptr->id,List_ptr->next->id,List_ptr->next->next->id);
+		printf("obj2ip: found id to insert/delete between %d--> .. <--%d\n",List_ptr->id,List_ptr->next->next->id);
 	}
 }
 
@@ -624,7 +625,6 @@
 
 	/* set extern int optind = 0 for parse_args in io.c */
 	optind = 0;
-
 	process_init(Olsr_host);
 	if (!net_init(Olsr_host))
 	{



From nichtsnutz at berlios.de  Sun Feb 12 21:45:39 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sun, 12 Feb 2006 21:45:39 +0100
Subject: [S3d-svn] r62 - trunk/apps/olsrs3d
Message-ID: <200602122045.k1CKjdhb002687@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-12 21:45:35 +0100 (Sun, 12 Feb 2006)
New Revision: 62

Modified:
   trunk/apps/olsrs3d/olsrs3d.h
Log:
add lst_out to header

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-12 17:52:33 UTC (rev 61)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-12 20:45:35 UTC (rev 62)
@@ -73,5 +73,6 @@
 /* main obj2ip list*/
 void lst_add(int id,struct olsr_node **olsr_node);
 void lst_del(int id);
+void lst_out();
 void move_lst_ptr(int *id);
 struct olsr_node **lst_search(int id);



From nichtsnutz at berlios.de  Sun Feb 12 21:47:32 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sun, 12 Feb 2006 21:47:32 +0100
Subject: [S3d-svn] r63 - trunk/apps/olsrs3d
Message-ID: <200602122047.k1CKlW3Z004340@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-12 21:47:23 +0100 (Sun, 12 Feb 2006)
New Revision: 63

Modified:
   trunk/apps/olsrs3d/main.c
Log:
and again fix objectId2ip list methods

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-12 20:45:35 UTC (rev 62)
+++ trunk/apps/olsrs3d/main.c	2006-02-12 20:47:23 UTC (rev 63)
@@ -368,7 +368,7 @@
 /*				s3d_pop_polygon(o,2);*/
 // 				s3d_push_vertex(o,node[i].pos[0],	 node[i].pos[1],node[i].pos[2]);
 // 				s3d_push_vertex(o,node[i].pos[0]+0.2,node[i].pos[1],node[i].pos[2]);
-// 				s3d_push_vertex(o,node[i].pos[0]-0.2,node[i].pos[1],node[i].pos[2]);
+// 				s3d_push_vertex(o,node[i].pos[0]-->id0.2,node[i].pos[1],node[i].pos[2]);
 
 // 				s3d_push_vertex(o,node[j].pos[0],	 node[j].pos[1],node[j].pos[2]);
 // 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]+0.2,node[j].pos[2]);
@@ -408,8 +408,10 @@
 	int key;
 	key=*((unsigned short *)event->buf);
 	/* ESC */
-	if(key = 27)
+	if(key == 27)
 		stop();
+	if(key == 49)
+		lst_out();
 }
 
 /***
@@ -426,6 +428,9 @@
 	ZeroPosition[0] = 0;
 	ZeroPosition[1] = 50;
 	ZeroPosition[2] = 40;*/
+	struct olsr_node *olsr_node;
+	olsr_node = *lst_search(oid);
+	printf("obj2ip: search return %s\n",olsr_node->ip);
 }
 
 /***
@@ -475,7 +480,7 @@
 	if(Obj_to_ip_head == NULL || Obj_to_ip_end == NULL)
 		out_of_mem();
 	Obj_to_ip_head->id = 0;
-	Obj_to_ip_end->id = (int) NULL;
+	Obj_to_ip_end->id = 0;
 	Obj_to_ip_head->prev = Obj_to_ip_end->prev = Obj_to_ip_head;
 	Obj_to_ip_head->next = Obj_to_ip_end->next = Obj_to_ip_end;
 	List_ptr = Obj_to_ip_head;
@@ -497,11 +502,11 @@
 	new->id = id;
 	new->olsr_node = *olsr_node;
 	move_lst_ptr(&id);
-	printf("obj2ip: add object %d between %d .. %d ip %s to list\n",new->id,List_ptr->id,List_ptr->next->id,new->olsr_node->ip);
 	new->prev = List_ptr;
 	new->next = List_ptr->next;
 	List_ptr->next->prev = new;
 	List_ptr->next = new;
+	printf("obj2ip: add object %d between %d .. %d ip %s to list\n",new->id,new->prev->id,new->next->id,new->olsr_node->ip);
 }
 
 /***
@@ -514,13 +519,13 @@
 void lst_del(int id) {
 	struct Obj_to_ip *del;
 	move_lst_ptr(&id);
-	if(id != List_ptr->next->id)
+	if(id != List_ptr->id)
 		printf("obj2ip: remove id %d failed move_lst_ptr return id %d\n",id,List_ptr->next->id);
 	else {
-		printf("obj2ip: remove object %d ip %s from list\n",List_ptr->next->id,List_ptr->next->olsr_node->ip);
 		del = List_ptr->next;
 		List_ptr->next = List_ptr->next->next;
 		List_ptr->next->prev = List_ptr;
+		printf("obj2ip: remove object %d --> %d <-- %d ip %s from list\n",List_ptr->prev->id,del->id,List_ptr->next->id,del->olsr_node->ip);
 		free(del);
 	}
 }
@@ -535,7 +540,7 @@
 void move_lst_ptr(int *id) {
 	/* printf("obj2ip: move for %d\n",*id); */
 	/* head to point at end or id lass then first element in linked list*/
- 	if(Obj_to_ip_head->next->id == NULL || *id < Obj_to_ip_head->next->id)
+	if(Obj_to_ip_head->next == Obj_to_ip_head || *id < Obj_to_ip_head->next->id)
 		List_ptr = Obj_to_ip_head;
  	/* id is greather then last element in linked list */
 	else if(*id > Obj_to_ip_end->prev->id)
@@ -543,25 +548,25 @@
 	else {
 		printf("obj2ip: ok i search deeper ;-) for id=%d\n",*id);
 		if((*id - (int) Obj_to_ip_head->next->id) <= ((int)(Obj_to_ip_end->prev->id)-*id)) {
-			List_ptr = Obj_to_ip_head->next;
-			printf("obj2ip: start at head id %d - %d <= %d - %d \n",*id,Obj_to_ip_head->next->id,*id,Obj_to_ip_end->prev->id);
-			while(*id > List_ptr->next->id) {
-				printf("obj2ip: %d > %d move to ",*id,List_ptr->next->id);
+			List_ptr = Obj_to_ip_head;
+			printf("obj2ip: start at head id %d - %d <= %d - %d \n",*id,Obj_to_ip_head->next->id,Obj_to_ip_end->prev->id,*id);
+			while(*id >= List_ptr->next->id) {
+				printf("obj2ip: %d > %d move to ",*id,List_ptr->id);
 				List_ptr = List_ptr->next;
 				printf("%d\n",List_ptr->id);
 			}
 		} else {
-			List_ptr = Obj_to_ip_end->prev;
+			List_ptr = Obj_to_ip_end;
 			printf("obj2ip: start at end id %d - %d > %d - %d \n",*id,Obj_to_ip_head->next->id,Obj_to_ip_end->prev->id,*id);
 			//do List_ptr = List_ptr->prev; while(*id > List_ptr->prev->id);
 			while(*id < List_ptr->prev->id) {
-				printf("obj2ip: %d < %d move to ",*id,List_ptr->prev->id);
+				printf("obj2ip: %d < %d move to ",*id,List_ptr->id);
 				List_ptr = List_ptr->prev;
 				printf("%d\n",List_ptr->id);
 			}
-			List_ptr = List_ptr->prev->prev;
+			List_ptr = List_ptr->prev;
 		}
-		printf("obj2ip: found id to insert/delete between %d--> .. <--%d\n",List_ptr->id,List_ptr->next->next->id);
+		printf("obj2ip: found id to insert between %d--> .. <--%d to search/delete %d--> .. <--%d\n",List_ptr->id,List_ptr->next->id,List_ptr->prev->id,List_ptr->next->next->id);
 	}
 }
 
@@ -580,13 +585,24 @@
 
 struct olsr_node **lst_search(int id) {
 	move_lst_ptr(&id);
-	if(id != List_ptr->next->id)
+	if(id != List_ptr->id)
 		printf("obj2ip: search id....id not found\n");
 	else
-		printf("obj2ip: search found objekt_id=%d objekt_ip=%s\n",id,List_ptr->next->olsr_node->ip);
-	return(&List_ptr->next->olsr_node);
+		printf("obj2ip: search found objekt_id=%d objekt_ip=%s\n",List_ptr->id,List_ptr->olsr_node->ip);
+	return(&List_ptr->olsr_node);
 }
 
+void lst_out() {
+	struct Obj_to_ip *ptr;
+	ptr = Obj_to_ip_head;
+	while(ptr != ptr->next) {
+		printf("List--------------------------\n");
+		printf("id-> %d\n",ptr->id);
+		ptr = ptr->next;
+	}
+	printf("List--------------------------\n");
+}
+
 int main( int argc, char *argv[] ) {
 
 	int optchar;



From nichtsnutz at berlios.de  Sun Feb 12 22:24:32 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sun, 12 Feb 2006 22:24:32 +0100
Subject: [S3d-svn] r64 - trunk/apps/olsrs3d
Message-ID: <200602122124.k1CLOW1s011001@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-12 22:24:30 +0100 (Sun, 12 Feb 2006)
New Revision: 64

Modified:
   trunk/apps/olsrs3d/main.c
Log:
the last fix today for obj2ip, now its run

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-12 20:47:23 UTC (rev 63)
+++ trunk/apps/olsrs3d/main.c	2006-02-12 21:24:30 UTC (rev 64)
@@ -522,9 +522,9 @@
 	if(id != List_ptr->id)
 		printf("obj2ip: remove id %d failed move_lst_ptr return id %d\n",id,List_ptr->next->id);
 	else {
-		del = List_ptr->next;
-		List_ptr->next = List_ptr->next->next;
-		List_ptr->next->prev = List_ptr;
+		del = List_ptr;
+		List_ptr->next->prev = List_ptr->prev;
+		List_ptr->prev->next = List_ptr->next;
 		printf("obj2ip: remove object %d --> %d <-- %d ip %s from list\n",List_ptr->prev->id,del->id,List_ptr->next->id,del->olsr_node->ip);
 		free(del);
 	}
@@ -566,7 +566,7 @@
 			}
 			List_ptr = List_ptr->prev;
 		}
-		printf("obj2ip: found id to insert between %d--> .. <--%d to search/delete %d--> .. <--%d\n",List_ptr->id,List_ptr->next->id,List_ptr->prev->id,List_ptr->next->next->id);
+		printf("obj2ip: found id to insert between %d--> .. <--%d to search/delete %d--> .. <--%d\n",List_ptr->id,List_ptr->next->next->id,List_ptr->prev->id,List_ptr->next->id);
 	}
 }
 



From marec at berlios.de  Tue Feb 14 17:36:37 2006
From: marec at berlios.de (marec at berlios.de)
Date: Tue, 14 Feb 2006 17:36:37 +0100
Subject: [S3d-svn] r65 - trunk/apps/olsrs3d
Message-ID: <200602141636.k1EGabK4007510@sheep.berlios.de>

Author: marec
Date: 2006-02-14 17:36:34 +0100 (Tue, 14 Feb 2006)
New Revision: 65

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
node drifting fix III

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-12 21:24:30 UTC (rev 64)
+++ trunk/apps/olsrs3d/main.c	2006-02-14 16:36:34 UTC (rev 65)
@@ -151,6 +151,8 @@
 	float f, distance;
 	float tmp_mov_vec[3];
 	struct olsr_con **olsr_con;
+	struct Obj_to_ip *Obj_to_ip_curr;
+	struct olsr_con_list *olsr_con_list;
 
 	/* no more nodes left */
 	if ( olsr_node == NULL ) return;
@@ -193,6 +195,37 @@
 
 	}
 
+	/* drift away from unrelated nodes */
+	Obj_to_ip_curr = Obj_to_ip_head->next;
+	while ( Obj_to_ip_curr != Obj_to_ip_end ) {
+
+		/* myself ... */
+// 		if ( strncmp( Obj_to_ip_curr->olsr_node->ip, olsr_node->ip, NAMEMAX ) == 0 ) continue;
+
+		olsr_con_list = olsr_node->olsr_con_list;
+		while ( olsr_con_list != NULL ) {
+
+			/* nodes are related */
+			if ( ( strncmp( olsr_con_list->olsr_con->left_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) || ( strncmp( olsr_con_list->olsr_con->right_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) ) break;
+
+			olsr_con_list = olsr_con_list->next_olsr_con_list;
+
+		}
+
+		/* nodes are not related - so drift */
+		if ( olsr_con_list == NULL ) {
+
+			distance = dirt( olsr_node->pos_vec, Obj_to_ip_curr->olsr_node->pos_vec, tmp_mov_vec );
+			if ( distance < 0.1 ) distance = 0.1;
+			mov_add( olsr_node->mov_vec, tmp_mov_vec,-100 / ( distance * distance ) );
+			mov_add( Obj_to_ip_curr->olsr_node->mov_vec, tmp_mov_vec, 100 / ( distance * distance ) );
+
+		}
+
+		Obj_to_ip_curr = Obj_to_ip_curr->next;
+
+	}
+
 	handle_olsr_node( olsr_node->left );
 	handle_olsr_node( olsr_node->right );
 
@@ -214,16 +247,16 @@
 
 	while ( (*olsr_con) != NULL ) {
 
-// 		if ( ( (*olsr_con)->left_etx != 0.0 ) && ( (*olsr_con)->right_etx != 0.0  ) ) {
+		if ( ( (*olsr_con)->left_etx != 0.0 ) && ( (*olsr_con)->right_etx != 0.0  ) ) {
 
 			distance = dirt( (*olsr_con)->left_olsr_node->pos_vec, (*olsr_con)->right_olsr_node->pos_vec, tmp_mov_vec );
-			f = ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) * 5.0 / 2.0 ) / distance;
+			f = ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) / distance;
 			if ( f < 0.3 ) f = 0.3;
 
 			mov_add( (*olsr_con)->left_olsr_node->mov_vec, tmp_mov_vec, 1 / f - 1 );
 			mov_add( (*olsr_con)->right_olsr_node->mov_vec, tmp_mov_vec, - ( 1 / f - 1 ) );
 
-// 		}
+		}
 
 		olsr_con = &(*olsr_con)->next_olsr_con;
 

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-12 21:24:30 UTC (rev 64)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-14 16:36:34 UTC (rev 65)
@@ -6,7 +6,7 @@
 };
 
 
-/* linked list for the connections */
+/* linked list for the all connections */
 struct olsr_con {
 
 	struct olsr_con *next_olsr_con;   /* pointer to next connection */
@@ -19,6 +19,15 @@
 };
 
 
+/* linked list for the connections of each olsr node */
+struct olsr_con_list {
+
+	struct olsr_con_list *next_olsr_con_list;   /* pointer to next connection */
+	struct olsr_con *olsr_con;   /* pointer to the connection */
+
+};
+
+
 /* we contruct a binary tree to handle the nodes */
 struct olsr_node {
 
@@ -31,10 +40,11 @@
 	float mov_vec[3];   /* move vector */
 	int obj_id;   /* id of node object in s3d */
 	int desc_id;   /* id of node description object in s3d */
-	struct olsr_con *olsr_con;   /* pointer to first connection */
+	struct olsr_con_list *olsr_con_list;   /* pointer to first connection */
 
 };
 
+
 struct Obj_to_ip {
 	int id;
 	struct olsr_node *olsr_node;

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-12 21:24:30 UTC (rev 64)
+++ trunk/apps/olsrs3d/process.c	2006-02-14 16:36:34 UTC (rev 65)
@@ -1,7 +1,6 @@
 #include <stdio.h> 	/* NULL */
 #include <string.h> 	/* strlen(), memmove() */
 #include <stdlib.h> 	/* rand(), malloc(), realloc(), free(), strtof() */
-#include <math.h>		/* sin(), cos() */
 #include <s3d.h>
 #include "olsrs3d.h"
 char lbuf[MAXLINESIZE];
@@ -28,7 +27,6 @@
 
 		/* connection already exists */
 		if ( ( strncmp( (*olsr_con)->left_olsr_node->ip, con_from->ip, NAMEMAX ) == 0 ) && ( strncmp( (*olsr_con)->right_olsr_node->ip, con_to->ip, NAMEMAX ) == 0 ) ) {
-
 			(*olsr_con)->left_etx = etx;
 			break;
 
@@ -61,13 +59,31 @@
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
 		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
 
+		/* add olsr node to new olsr connection in order to access the nodes from the connection list */
 		(*olsr_con)->left_olsr_node = con_from;
 		(*olsr_con)->right_olsr_node = con_to;
+
 		(*olsr_con)->left_etx = etx;
 		(*olsr_con)->right_etx = 0.0;
 
 		(*olsr_con)->next_olsr_con = NULL;
 
+		/* add new olsr connection to olsr nodes in order to access the connection from the olsr node */
+
+		struct olsr_con_list **olsr_con_list = &(*olsr_con)->left_olsr_node->olsr_con_list;
+		while ( (*olsr_con_list) != NULL ) olsr_con_list = &(*olsr_con_list)->next_olsr_con_list;
+		(*olsr_con_list) = malloc( sizeof( struct olsr_con_list ) );
+		if ( (*olsr_con_list) == NULL ) out_of_mem();
+		(*olsr_con_list)->olsr_con = (*olsr_con);
+		(*olsr_con_list)->next_olsr_con_list = NULL;
+
+		olsr_con_list = &(*olsr_con)->right_olsr_node->olsr_con_list;
+		while ( (*olsr_con_list) != NULL ) olsr_con_list = &(*olsr_con_list)->next_olsr_con_list;
+		(*olsr_con_list) = malloc( sizeof( struct olsr_con_list ) );
+		if ( (*olsr_con_list) == NULL ) out_of_mem();
+		(*olsr_con_list)->olsr_con = (*olsr_con);
+		(*olsr_con_list)->next_olsr_con_list = NULL;
+
 	}
 
 }
@@ -161,7 +177,6 @@
 
 void *get_olsr_node( struct olsr_node **olsr_node, char *ip ) {
 
-	/* int i;    inc var */
 	int result;   /* result of strcmp */
 
 	while ( (*olsr_node) != NULL ) {
@@ -188,36 +203,20 @@
 
 		(*olsr_node)->left = NULL;
 		(*olsr_node)->right = NULL;
-		strncpy((*olsr_node)->ip,ip,NAMEMAX);
+		strncpy( (*olsr_node)->ip, ip, NAMEMAX );
 		(*olsr_node)->inet_gw = 0;
 		(*olsr_node)->inet_gw_modified = 1;
 
 		if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
 
-// 		for ( i=0; i<3; i++ ) {
+		(*olsr_node)->pos_vec[0] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+		(*olsr_node)->pos_vec[1] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+		(*olsr_node)->pos_vec[2] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
+		(*olsr_node)->mov_vec[0] = (*olsr_node)->mov_vec[1] = (*olsr_node)->mov_vec[2] = 0.0;
 
-// 			alpha = ( ( 360.0 * rand() ) / ( ( float ) i ) );
-// 			radius=((n_item*10)/(M_PI*4));
-// 			if (n_item<5)
-// 				radius=((50)/(M_PI*4));
-// 			else
-// 				radius=((n_item*10)/(M_PI*4));
-// 			px=posx-sin(alpha*M_PI/180.0)*radius;
-// 			pz=posy;
-// 			pz=posz-cos(alpha*M_PI/180.0)*radius;
-			
-// 			(*olsr_node)->pos_vec[i] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
-			(*olsr_node)->pos_vec[0] = ( ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0 ) - sin( ( ( 360.0 * rand() ) / 100.0 ) * M_PI / 180.0 ) * ( 20.0 / ( M_PI * 4 ) );
-			(*olsr_node)->pos_vec[1] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
-			(*olsr_node)->pos_vec[2] = (*olsr_node)->pos_vec[1] - cos( ( ( 360.0 * rand() ) / 100.0 ) * M_PI / 180.0 ) * ( 20.0 / ( M_PI * 4 ) );
-// 			printf( "vec1: %f, vec2: %f, vec3: %f\n", (*olsr_node)->pos_vec[0], (*olsr_node)->pos_vec[1], (*olsr_node)->pos_vec[2] );
-			(*olsr_node)->mov_vec[0] = (*olsr_node)->mov_vec[1] = (*olsr_node)->mov_vec[2] = 0.0;
-			
-// 		}
-
 		(*olsr_node)->obj_id = -1;
 		(*olsr_node)->desc_id = -1;
-		(*olsr_node)->olsr_con = NULL;
+		(*olsr_node)->olsr_con_list = NULL;
 
 		return (*olsr_node);
 
@@ -370,11 +369,11 @@
 	if (dn>=6)
 	{
 /*		printf("######link from [%s] to [%s], label [%s]\n",data[0],data[1],data[2]);*/
-		// announced network via HNA
-		if ( strcmp( data[2], "HNA" ) == 0 ) {
+		/* announced network via HNA */
+		if ( strncmp( data[2], "HNA", NAMEMAX ) == 0 ) {
 
-			// connection to internet
-			if ( strcmp( data[1], "0.0.0.0/0.0.0.0" ) == 0 ) {
+			/* connection to internet */
+			if ( strncmp( data[1], "0.0.0.0/0.0.0.0", NAMEMAX ) == 0 ) {
 
 				olsr_node1 = get_olsr_node( &Olsr_root, data[0] );
 
@@ -390,7 +389,7 @@
 
 			/* TODO: other HNA hast to be done */
 
-		// normal node
+		/* normal node */
 		} else {
 // 			n1=get_node_num(data[0]);
 // 			n2=get_node_num(data[1]);



From marec at berlios.de  Tue Feb 14 20:21:05 2006
From: marec at berlios.de (marec at berlios.de)
Date: Tue, 14 Feb 2006 20:21:05 +0100
Subject: [S3d-svn] r66 - trunk/apps/olsrs3d
Message-ID: <200602141921.k1EJL5OX002393@sheep.berlios.de>

Author: marec
Date: 2006-02-14 20:20:58 +0100 (Tue, 14 Feb 2006)
New Revision: 66

Modified:
   trunk/apps/olsrs3d/main.c
Log:
node drifting fix final I

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-14 16:36:34 UTC (rev 65)
+++ trunk/apps/olsrs3d/main.c	2006-02-14 19:20:58 UTC (rev 66)
@@ -274,7 +274,8 @@
 
 void move_olsr_nodes( void ) {
 
-	float z[3]={0,0,0};
+	float null_vec[3] = {0,0,0};
+	float tmp_mov_vec[3];
 	float distance;
 	struct olsr_con **olsr_con = &Con_begin;
 
@@ -283,7 +284,11 @@
 		/* move left olsr node if it has not been moved yet */
 		if ( !( ( (*olsr_con)->left_olsr_node->mov_vec[0] == 0 ) && ( (*olsr_con)->left_olsr_node->mov_vec[1] == 0 ) && ( (*olsr_con)->left_olsr_node->mov_vec[2] == 0 ) ) ) {
 
-			if ( ( distance = dist( (*olsr_con)->left_olsr_node->mov_vec, z ) ) > 10.0 ) {
+			distance = dirt( (*olsr_con)->left_olsr_node->pos_vec, null_vec, tmp_mov_vec );
+			mov_add( (*olsr_con)->left_olsr_node->mov_vec, tmp_mov_vec, distance / 100 ); /* move a little bit to point zero */
+			mov_add( (*olsr_con)->left_olsr_node->mov_vec, tmp_mov_vec, 1 ); /* move a little bit to point zero */
+
+			if ( ( distance = dist( (*olsr_con)->left_olsr_node->mov_vec, null_vec ) ) > 10.0 ) {
 				mov_add( (*olsr_con)->left_olsr_node->pos_vec, (*olsr_con)->left_olsr_node->mov_vec, 1.0 / ( (float ) distance ) );
 			} else {
 				mov_add( (*olsr_con)->left_olsr_node->pos_vec, (*olsr_con)->left_olsr_node->mov_vec, 0.1 );
@@ -299,7 +304,11 @@
 		/* move right olsr node if it has not been moved yet */
 		if ( !( ( (*olsr_con)->right_olsr_node->mov_vec[0] == 0 ) && ( (*olsr_con)->right_olsr_node->mov_vec[1] == 0 ) && ( (*olsr_con)->right_olsr_node->mov_vec[2] == 0 ) ) ) {
 
-			if ( ( distance = dist( (*olsr_con)->right_olsr_node->mov_vec, z ) ) > 10.0 ) {
+			distance = dirt( (*olsr_con)->right_olsr_node->pos_vec, null_vec, tmp_mov_vec );
+			mov_add( (*olsr_con)->right_olsr_node->mov_vec, tmp_mov_vec, distance / 100 ); /* move a little bit to point zero */
+			mov_add( (*olsr_con)->right_olsr_node->mov_vec, tmp_mov_vec, 1 ); /* move a little bit to point zero */
+
+			if ( ( distance = dist( (*olsr_con)->right_olsr_node->mov_vec, null_vec ) ) > 10.0 ) {
 				mov_add( (*olsr_con)->right_olsr_node->pos_vec, (*olsr_con)->right_olsr_node->mov_vec, 1.0 / ( (float ) distance ) );
 			} else {
 				mov_add( (*olsr_con)->right_olsr_node->pos_vec, (*olsr_con)->right_olsr_node->mov_vec, 0.1 );



From marec at berlios.de  Wed Feb 15 14:18:50 2006
From: marec at berlios.de (marec at berlios.de)
Date: Wed, 15 Feb 2006 14:18:50 +0100
Subject: [S3d-svn] r67 - trunk/apps/olsrs3d
Message-ID: <200602151318.k1FDIoSs031727@sheep.berlios.de>

Author: marec
Date: 2006-02-15 14:18:21 +0100 (Wed, 15 Feb 2006)
New Revision: 67

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/process.c
Log:
colored olsr connections I

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-14 19:20:58 UTC (rev 66)
+++ trunk/apps/olsrs3d/main.c	2006-02-15 13:18:21 UTC (rev 67)
@@ -250,7 +250,7 @@
 		if ( ( (*olsr_con)->left_etx != 0.0 ) && ( (*olsr_con)->right_etx != 0.0  ) ) {
 
 			distance = dirt( (*olsr_con)->left_olsr_node->pos_vec, (*olsr_con)->right_olsr_node->pos_vec, tmp_mov_vec );
-			f = ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) / distance;
+			f = ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 4.0 ) / distance;
 			if ( f < 0.3 ) f = 0.3;
 
 			mov_add( (*olsr_con)->left_olsr_node->mov_vec, tmp_mov_vec, 1 / f - 1 );
@@ -276,7 +276,7 @@
 
 	float null_vec[3] = {0,0,0};
 	float tmp_mov_vec[3];
-	float distance;
+	float distance, etx;
 	struct olsr_con **olsr_con = &Con_begin;
 
 	while ( (*olsr_con) != NULL ) {
@@ -324,6 +324,7 @@
 		/* move connection between left and right olsr node */
 		s3d_pop_vertex( (*olsr_con)->obj_id, 6 );
 		s3d_pop_polygon( (*olsr_con)->obj_id, 2 );
+		s3d_pop_material( (*olsr_con)->obj_id, 1 );
 
 		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
 		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
@@ -333,6 +334,28 @@
 		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
 		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]- 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
 
+		etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
+// 		if ( strncmp( (*olsr_con)->left_olsr_node->ip, "104.0.23.1", NAMEMAX ) == 0 ) printf("%s: %f, %s: %f, etx: %f\n",(*olsr_con)->left_olsr_node->ip, (*olsr_con)->left_etx, (*olsr_con)->right_olsr_node->ip, (*olsr_con)->right_etx, etx);
+		if ( ( etx >= 1.0 ) && ( etx < 2.0 ) ) {
+			s3d_push_material( (*olsr_con)->obj_id,
+						   0.0,1.0,0.0,
+						   0.0,1.0,0.0,
+						   0.0,1.0,0.0);
+
+		} else if ( ( etx >= 2.0 ) && ( etx < 3.0 ) ) {
+			s3d_push_material( (*olsr_con)->obj_id,
+						   1.0,1.0,0.0,
+						   1.0,1.0,0.0,
+						   1.0,1.0,0.0);
+
+		} else {
+			s3d_push_material( (*olsr_con)->obj_id,
+						   1.0,0.0,0.0,
+						   1.0,0.0,0.0,
+						   1.0,0.0,0.0);
+
+		}
+
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
 		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
 

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-14 19:20:58 UTC (rev 66)
+++ trunk/apps/olsrs3d/process.c	2006-02-15 13:18:21 UTC (rev 67)
@@ -69,7 +69,6 @@
 		(*olsr_con)->next_olsr_con = NULL;
 
 		/* add new olsr connection to olsr nodes in order to access the connection from the olsr node */
-
 		struct olsr_con_list **olsr_con_list = &(*olsr_con)->left_olsr_node->olsr_con_list;
 		while ( (*olsr_con_list) != NULL ) olsr_con_list = &(*olsr_con_list)->next_olsr_con_list;
 		(*olsr_con_list) = malloc( sizeof( struct olsr_con_list ) );



From nichtsnutz at berlios.de  Wed Feb 15 16:00:22 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Wed, 15 Feb 2006 16:00:22 +0100
Subject: [S3d-svn] r68 - trunk/apps/olsrs3d
Message-ID: <200602151500.k1FF0Mlt030147@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-15 16:00:14 +0100 (Wed, 15 Feb 2006)
New Revision: 68

Modified:
   trunk/apps/olsrs3d/main.c
Log:
add key event color on/off key=c
attempt to code a transition between green an red for connection quality

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-15 13:18:21 UTC (rev 67)
+++ trunk/apps/olsrs3d/main.c	2006-02-15 15:00:14 UTC (rev 68)
@@ -25,10 +25,10 @@
 float CamPosition[2][3];   /* CamPosition[trans|rot][x-z] */
 float ZeroPosition[3] = {0,0,0};   /* current position zero position */
 int ZeroPoint;   /* object zeropoint */
+int ColorSwitch = 1;
 
 
 
-
 /***
  *
  * print usage info
@@ -334,26 +334,36 @@
 		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
 		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]- 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
 
-		etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
-// 		if ( strncmp( (*olsr_con)->left_olsr_node->ip, "104.0.23.1", NAMEMAX ) == 0 ) printf("%s: %f, %s: %f, etx: %f\n",(*olsr_con)->left_olsr_node->ip, (*olsr_con)->left_etx, (*olsr_con)->right_olsr_node->ip, (*olsr_con)->right_etx, etx);
-		if ( ( etx >= 1.0 ) && ( etx < 2.0 ) ) {
-			s3d_push_material( (*olsr_con)->obj_id,
-						   0.0,1.0,0.0,
-						   0.0,1.0,0.0,
-						   0.0,1.0,0.0);
-
-		} else if ( ( etx >= 2.0 ) && ( etx < 3.0 ) ) {
-			s3d_push_material( (*olsr_con)->obj_id,
-						   1.0,1.0,0.0,
-						   1.0,1.0,0.0,
-						   1.0,1.0,0.0);
-
+		if(ColorSwitch) {
+			float rgb;
+			etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
+	// 		if ( strncmp( (*olsr_con)->left_olsr_node->ip, "104.0.23.1", NAMEMAX ) == 0 ) printf("%s: %f, %s: %f, etx: %f\n",(*olsr_con)->left_olsr_node->ip, (*olsr_con)->left_etx, (*olsr_con)->right_olsr_node->ip, (*olsr_con)->right_etx, etx);
+			if ( ( etx >= 1.0 ) && ( etx < 2.0 ) ) {
+				rgb = etx - 1.0;
+				s3d_push_material( (*olsr_con)->obj_id,
+							rgb,1.0,0.0,
+							rgb,1.0,0.0,
+							rgb,1.0,0.0);
+	
+			} else if ( ( etx >= 2.0 ) && ( etx < 3.0 ) ) {
+				rgb = 3.0 - etx;
+				s3d_push_material( (*olsr_con)->obj_id,
+							1.0,rgb,0.0,
+							1.0,rgb,0.0,
+							1.0,rgb,0.0);
+	
+			} else {
+				s3d_push_material( (*olsr_con)->obj_id,
+							1.0,0.0,0.0,
+							1.0,0.0,0.0,
+							1.0,0.0,0.0);
+	
+			}
 		} else {
 			s3d_push_material( (*olsr_con)->obj_id,
-						   1.0,0.0,0.0,
-						   1.0,0.0,0.0,
-						   1.0,0.0,0.0);
-
+						1.0,1.0,1.0,
+						1.0,1.0,1.0,
+						1.0,1.0,1.0);
 		}
 
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
@@ -367,7 +377,6 @@
 
 
 
-
 void mainloop()
 {
 	int i,j,o,r;
@@ -477,6 +486,9 @@
 		stop();
 	if(key == 49)
 		lst_out();
+	if(key == 99)
+		if(ColorSwitch) ColorSwitch = 0;
+		else ColorSwitch = 1;
 }
 
 /***



From nichtsnutz at berlios.de  Wed Feb 15 16:47:39 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Wed, 15 Feb 2006 16:47:39 +0100
Subject: [S3d-svn] r69 - trunk/apps/olsrs3d
Message-ID: <200602151547.k1FFld8m005247@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-15 16:47:38 +0100 (Wed, 15 Feb 2006)
New Revision: 69

Modified:
   trunk/apps/olsrs3d/main.c
Log:
change default colored connections to false

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-15 15:00:14 UTC (rev 68)
+++ trunk/apps/olsrs3d/main.c	2006-02-15 15:47:38 UTC (rev 69)
@@ -25,7 +25,7 @@
 float CamPosition[2][3];   /* CamPosition[trans|rot][x-z] */
 float ZeroPosition[3] = {0,0,0};   /* current position zero position */
 int ZeroPoint;   /* object zeropoint */
-int ColorSwitch = 1;
+int ColorSwitch = 0;
 
 
 
@@ -583,7 +583,7 @@
 	new->next = List_ptr->next;
 	List_ptr->next->prev = new;
 	List_ptr->next = new;
-	printf("obj2ip: add object %d between %d .. %d ip %s to list\n",new->id,new->prev->id,new->next->id,new->olsr_node->ip);
+	/* printf("obj2ip: add object %d between %d .. %d ip %s to list\n",new->id,new->prev->id,new->next->id,new->olsr_node->ip); */
 }
 
 /***
@@ -602,7 +602,7 @@
 		del = List_ptr;
 		List_ptr->next->prev = List_ptr->prev;
 		List_ptr->prev->next = List_ptr->next;
-		printf("obj2ip: remove object %d --> %d <-- %d ip %s from list\n",List_ptr->prev->id,del->id,List_ptr->next->id,del->olsr_node->ip);
+		/* printf("obj2ip: remove object %d --> %d <-- %d ip %s from list\n",List_ptr->prev->id,del->id,List_ptr->next->id,del->olsr_node->ip); */
 		free(del);
 	}
 }
@@ -623,27 +623,27 @@
 	else if(*id > Obj_to_ip_end->prev->id)
 		List_ptr = Obj_to_ip_end->prev;
 	else {
-		printf("obj2ip: ok i search deeper ;-) for id=%d\n",*id);
+		/* printf("obj2ip: ok i search deeper ;-) for id=%d\n",*id); */
 		if((*id - (int) Obj_to_ip_head->next->id) <= ((int)(Obj_to_ip_end->prev->id)-*id)) {
 			List_ptr = Obj_to_ip_head;
-			printf("obj2ip: start at head id %d - %d <= %d - %d \n",*id,Obj_to_ip_head->next->id,Obj_to_ip_end->prev->id,*id);
+			/* printf("obj2ip: start at head id %d - %d <= %d - %d \n",*id,Obj_to_ip_head->next->id,Obj_to_ip_end->prev->id,*id); */
 			while(*id >= List_ptr->next->id) {
-				printf("obj2ip: %d > %d move to ",*id,List_ptr->id);
+				/* printf("obj2ip: %d > %d move to ",*id,List_ptr->id); */
 				List_ptr = List_ptr->next;
-				printf("%d\n",List_ptr->id);
+				/* printf("%d\n",List_ptr->id); */
 			}
 		} else {
 			List_ptr = Obj_to_ip_end;
-			printf("obj2ip: start at end id %d - %d > %d - %d \n",*id,Obj_to_ip_head->next->id,Obj_to_ip_end->prev->id,*id);
+			/* printf("obj2ip: start at end id %d - %d > %d - %d \n",*id,Obj_to_ip_head->next->id,Obj_to_ip_end->prev->id,*id); */
 			//do List_ptr = List_ptr->prev; while(*id > List_ptr->prev->id);
 			while(*id < List_ptr->prev->id) {
-				printf("obj2ip: %d < %d move to ",*id,List_ptr->id);
+				/* printf("obj2ip: %d < %d move to ",*id,List_ptr->id); */
 				List_ptr = List_ptr->prev;
-				printf("%d\n",List_ptr->id);
+				/* printf("%d\n",List_ptr->id); */
 			}
 			List_ptr = List_ptr->prev;
 		}
-		printf("obj2ip: found id to insert between %d--> .. <--%d to search/delete %d--> .. <--%d\n",List_ptr->id,List_ptr->next->next->id,List_ptr->prev->id,List_ptr->next->id);
+		/* printf("obj2ip: found id to insert between %d--> .. <--%d to search/delete %d--> .. <--%d\n",List_ptr->id,List_ptr->next->next->id,List_ptr->prev->id,List_ptr->next->id); */
 	}
 }
 
@@ -662,10 +662,11 @@
 
 struct olsr_node **lst_search(int id) {
 	move_lst_ptr(&id);
-	if(id != List_ptr->id)
-		printf("obj2ip: search id....id not found\n");
-	else
-		printf("obj2ip: search found objekt_id=%d objekt_ip=%s\n",List_ptr->id,List_ptr->olsr_node->ip);
+	/* TODO: return NULL when no node found */
+	/* if(id != List_ptr->id) */
+		/* printf("obj2ip: search id....id not found\n"); */
+	/* else */
+		/* printf("obj2ip: search found objekt_id=%d objekt_ip=%s\n",List_ptr->id,List_ptr->olsr_node->ip); */
 	return(&List_ptr->olsr_node);
 }
 



From marec at berlios.de  Wed Feb 15 17:24:40 2006
From: marec at berlios.de (marec at berlios.de)
Date: Wed, 15 Feb 2006 17:24:40 +0100
Subject: [S3d-svn] r70 - trunk/apps/olsrs3d
Message-ID: <200602151624.k1FGOeFb009846@sheep.berlios.de>

Author: marec
Date: 2006-02-15 17:24:37 +0100 (Wed, 15 Feb 2006)
New Revision: 70

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
hna networks

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-15 15:47:38 UTC (rev 69)
+++ trunk/apps/olsrs3d/main.c	2006-02-15 16:24:37 UTC (rev 70)
@@ -17,7 +17,7 @@
 
 int node_count=-1;
 int alpha=0;
-int Olsr_node_obj,Olsr_node_inet_obj,mesh;
+int Olsr_node_obj, Olsr_node_inet_obj, Olsr_node_hna_net, mesh;
 float asp=1.0;
 float bottom=-1.0;
 float left=-1.0;
@@ -25,7 +25,7 @@
 float CamPosition[2][3];   /* CamPosition[trans|rot][x-z] */
 float ZeroPosition[3] = {0,0,0};   /* current position zero position */
 int ZeroPoint;   /* object zeropoint */
-int ColorSwitch = 0;
+int ColorSwitch = 0;   /* enable/disable colored olsr connections */
 
 
 
@@ -158,7 +158,7 @@
 	if ( olsr_node == NULL ) return;
 
 	/* olsr node shape has been modified */
-	if ( olsr_node->inet_gw_modified ) {
+	if ( olsr_node->node_type_modified ) {
 
 		/* delete old shape */
 		if ( olsr_node->obj_id != -1 ) {
@@ -170,9 +170,12 @@
 		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
 
 		/* create new shape */
-		if ( olsr_node->inet_gw ) {
+		if ( olsr_node->node_type == 1 ) {
 			/* olsr node offers internet access */
 			olsr_node->obj_id = s3d_clone( Olsr_node_inet_obj );
+		} else if ( olsr_node->node_type == 2 ) {
+			/* olsr node offers internet access */
+			olsr_node->obj_id = s3d_clone( Olsr_node_hna_net );
 		} else {
 			/* normal olsr node */
 			olsr_node->obj_id = s3d_clone( Olsr_node_obj );
@@ -191,7 +194,7 @@
 		s3d_translate( olsr_node->desc_id, -f/2,-2,0 );
 		s3d_flags_on( olsr_node->desc_id, S3D_OF_VISIBLE );
 
-		olsr_node->inet_gw_modified = 0;
+		olsr_node->node_type_modified = 0;
 
 	}
 
@@ -200,30 +203,32 @@
 	while ( Obj_to_ip_curr != Obj_to_ip_end ) {
 
 		/* myself ... */
-// 		if ( strncmp( Obj_to_ip_curr->olsr_node->ip, olsr_node->ip, NAMEMAX ) == 0 ) continue;
+// 		if ( strncmp( Obj_to_ip_curr->olsr_node->ip, olsr_node->ip, NAMEMAX ) != 0 ) {
 
-		olsr_con_list = olsr_node->olsr_con_list;
-		while ( olsr_con_list != NULL ) {
+			olsr_con_list = olsr_node->olsr_con_list;
+			while ( olsr_con_list != NULL ) {
 
-			/* nodes are related */
-			if ( ( strncmp( olsr_con_list->olsr_con->left_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) || ( strncmp( olsr_con_list->olsr_con->right_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) ) break;
+				/* nodes are related */
+				if ( ( strncmp( olsr_con_list->olsr_con->left_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) || ( strncmp( olsr_con_list->olsr_con->right_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) ) break;
 
-			olsr_con_list = olsr_con_list->next_olsr_con_list;
+				olsr_con_list = olsr_con_list->next_olsr_con_list;
 
-		}
+			}
 
-		/* nodes are not related - so drift */
-		if ( olsr_con_list == NULL ) {
+			/* nodes are not related - so drift */
+			if ( olsr_con_list == NULL ) {
 
-			distance = dirt( olsr_node->pos_vec, Obj_to_ip_curr->olsr_node->pos_vec, tmp_mov_vec );
-			if ( distance < 0.1 ) distance = 0.1;
-			mov_add( olsr_node->mov_vec, tmp_mov_vec,-100 / ( distance * distance ) );
-			mov_add( Obj_to_ip_curr->olsr_node->mov_vec, tmp_mov_vec, 100 / ( distance * distance ) );
+				distance = dirt( olsr_node->pos_vec, Obj_to_ip_curr->olsr_node->pos_vec, tmp_mov_vec );
+				if ( distance < 0.1 ) distance = 0.1;
+				mov_add( olsr_node->mov_vec, tmp_mov_vec,-100 / ( distance * distance ) );
+				mov_add( Obj_to_ip_curr->olsr_node->mov_vec, tmp_mov_vec, 100 / ( distance * distance ) );
 
-		}
+			}
 
-		Obj_to_ip_curr = Obj_to_ip_curr->next;
+			Obj_to_ip_curr = Obj_to_ip_curr->next;
 
+// 		}
+
 	}
 
 	handle_olsr_node( olsr_node->left );
@@ -276,7 +281,7 @@
 
 	float null_vec[3] = {0,0,0};
 	float tmp_mov_vec[3];
-	float distance, etx;
+	float distance, etx, rgb;
 	struct olsr_con **olsr_con = &Con_begin;
 
 	while ( (*olsr_con) != NULL ) {
@@ -334,36 +339,54 @@
 		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
 		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]- 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
 
-		if(ColorSwitch) {
-			float rgb;
-			etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
-	// 		if ( strncmp( (*olsr_con)->left_olsr_node->ip, "104.0.23.1", NAMEMAX ) == 0 ) printf("%s: %f, %s: %f, etx: %f\n",(*olsr_con)->left_olsr_node->ip, (*olsr_con)->left_etx, (*olsr_con)->right_olsr_node->ip, (*olsr_con)->right_etx, etx);
-			if ( ( etx >= 1.0 ) && ( etx < 2.0 ) ) {
-				rgb = etx - 1.0;
+		if ( ColorSwitch ) {
+
+			/* HNA */
+			if ( (*olsr_con)->left_etx == -1000.00 ) {
+
 				s3d_push_material( (*olsr_con)->obj_id,
-							rgb,1.0,0.0,
-							rgb,1.0,0.0,
-							rgb,1.0,0.0);
-	
-			} else if ( ( etx >= 2.0 ) && ( etx < 3.0 ) ) {
-				rgb = 3.0 - etx;
-				s3d_push_material( (*olsr_con)->obj_id,
-							1.0,rgb,0.0,
-							1.0,rgb,0.0,
-							1.0,rgb,0.0);
-	
+							   0.0,0.0,1.0,
+							   0.0,0.0,1.0,
+							   0.0,0.0,1.0);
+
 			} else {
-				s3d_push_material( (*olsr_con)->obj_id,
-							1.0,0.0,0.0,
-							1.0,0.0,0.0,
-							1.0,0.0,0.0);
-	
+
+				etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
+
+				if ( ( etx >= 1.0 ) && ( etx < 2.0 ) ) {
+
+					rgb = etx - 1.0;
+					s3d_push_material( (*olsr_con)->obj_id,
+								rgb,1.0,0.0,
+								rgb,1.0,0.0,
+								rgb,1.0,0.0);
+
+				} else if ( ( etx >= 2.0 ) && ( etx < 3.0 ) ) {
+
+					rgb = 3.0 - etx;
+					s3d_push_material( (*olsr_con)->obj_id,
+								1.0,rgb,0.0,
+								1.0,rgb,0.0,
+								1.0,rgb,0.0);
+
+				} else {
+
+					s3d_push_material( (*olsr_con)->obj_id,
+								1.0,0.0,0.0,
+								1.0,0.0,0.0,
+								1.0,0.0,0.0);
+
+				}
+
 			}
+
 		} else {
+
 			s3d_push_material( (*olsr_con)->obj_id,
 						1.0,1.0,1.0,
 						1.0,1.0,1.0,
 						1.0,1.0,1.0);
+
 		}
 
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
@@ -730,8 +753,9 @@
 			s3d_set_callback(S3D_EVENT_QUIT,stop);
 			if (s3d_select_font("vera"))
 				printf("font not found\n");
-			Olsr_node_obj=s3d_import_3ds_file("accesspoint.3ds");
-			Olsr_node_inet_obj=s3d_import_3ds_file("accesspoint_inet.3ds");
+			Olsr_node_obj = s3d_import_3ds_file( "accesspoint.3ds" );
+			Olsr_node_inet_obj = s3d_import_3ds_file( "accesspoint_inet.3ds" );
+			Olsr_node_hna_net = s3d_import_3ds_file( "internet.3ds" );
 			mesh=s3d_import_3ds_file("meshnode.3ds");
 			s3d_link(mesh,0);
 			s3d_scale(mesh,0.15);

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-15 15:47:38 UTC (rev 69)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-15 16:24:37 UTC (rev 70)
@@ -34,8 +34,8 @@
 	struct olsr_node *left;
 	struct olsr_node *right;
 	char ip[NAMEMAX];   /* host ip */
-	int inet_gw;   /* internet gateway flag */
-	int inet_gw_modified;   /* internet gateway modified flag */
+	int node_type;   /* normal = 0, internet gateway = 1, via hna announced network = 2 */
+	int node_type_modified;   /* node_type modified flag */
 	float pos_vec[3];   /* position vector in 3d "space" */
 	float mov_vec[3];   /* move vector */
 	int obj_id;   /* id of node object in s3d */
@@ -65,6 +65,7 @@
 extern int	*adj_obj;
 extern int	Olsr_node_obj;
 extern int	Olsr_node_inet_obj;
+extern int	Olsr_node_hna_net;
 extern int	node_count;
 extern float 	bottom,left;
 

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-15 15:47:38 UTC (rev 69)
+++ trunk/apps/olsrs3d/process.c	2006-02-15 16:24:37 UTC (rev 70)
@@ -63,9 +63,19 @@
 		(*olsr_con)->left_olsr_node = con_from;
 		(*olsr_con)->right_olsr_node = con_to;
 
-		(*olsr_con)->left_etx = etx;
-		(*olsr_con)->right_etx = 0.0;
+		/* HNA */
+		if ( etx == -1000.00 ) {
 
+			(*olsr_con)->left_etx = etx;
+			(*olsr_con)->right_etx = etx;
+
+		} else {
+
+			(*olsr_con)->left_etx = etx;
+			(*olsr_con)->right_etx = 0.0;
+
+		}
+
 		(*olsr_con)->next_olsr_con = NULL;
 
 		/* add new olsr connection to olsr nodes in order to access the connection from the olsr node */
@@ -203,8 +213,8 @@
 		(*olsr_node)->left = NULL;
 		(*olsr_node)->right = NULL;
 		strncpy( (*olsr_node)->ip, ip, NAMEMAX );
-		(*olsr_node)->inet_gw = 0;
-		(*olsr_node)->inet_gw_modified = 1;
+		(*olsr_node)->node_type = 0;
+		(*olsr_node)->node_type_modified = 1;
 
 		if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
 
@@ -376,18 +386,34 @@
 
 				olsr_node1 = get_olsr_node( &Olsr_root, data[0] );
 
-				if ( olsr_node1->inet_gw == 0 ) {
+				if ( olsr_node1->node_type != 1 ) {
 
-					olsr_node1->inet_gw = 1;
-					olsr_node1->inet_gw_modified = 1;
+					olsr_node1->node_type = 1;
+					olsr_node1->node_type_modified = 1;
 					if ( Debug ) printf( "new internet: %s\n", olsr_node1->ip );
 
 				}
 
+			/* normal HNA */
+			} else {
+
+				olsr_node1 = get_olsr_node( &Olsr_root, data[0] );
+				olsr_node2 = get_olsr_node( &Olsr_root, data[1] );
+
+				if ( olsr_node2->node_type != 2 ) {
+
+					olsr_node2->node_type = 2;
+					olsr_node2->node_type_modified = 1;
+					if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
+
+				}
+
+				add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
+
 			}
 
-			/* TODO: other HNA hast to be done */
 
+
 		/* normal node */
 		} else {
 // 			n1=get_node_num(data[0]);



From nichtsnutz at berlios.de  Wed Feb 15 18:39:26 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Wed, 15 Feb 2006 18:39:26 +0100
Subject: [S3d-svn] r71 - trunk/apps/olsrs3d
Message-ID: <200602151739.k1FHdQjD022597@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-15 18:39:21 +0100 (Wed, 15 Feb 2006)
New Revision: 71

Modified:
   trunk/apps/olsrs3d/olsrs3d.h
Log:
set extern ZeroPoint

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-15 16:24:37 UTC (rev 70)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-15 17:39:21 UTC (rev 71)
@@ -68,6 +68,7 @@
 extern int	Olsr_node_hna_net;
 extern int	node_count;
 extern float 	bottom,left;
+extern int ZeroPoint;
 
 struct t_node 	*node;
 #define MAXLINESIZE 1000 /* lines in a digraph just shouldn't get that longer ... */



From nichtsnutz at berlios.de  Wed Feb 15 18:40:50 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Wed, 15 Feb 2006 18:40:50 +0100
Subject: [S3d-svn] r72 - trunk/apps/olsrs3d
Message-ID: <200602151740.k1FHeo51022957@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-15 18:40:25 +0100 (Wed, 15 Feb 2006)
New Revision: 72

Modified:
   trunk/apps/olsrs3d/process.c
Log:
link connection object to ZeroPoint

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-15 17:39:21 UTC (rev 71)
+++ trunk/apps/olsrs3d/process.c	2006-02-15 17:40:25 UTC (rev 72)
@@ -58,7 +58,8 @@
 
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
 		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
-
+		s3d_link( (*olsr_con)->obj_id,  ZeroPoint );
+		
 		/* add olsr node to new olsr connection in order to access the nodes from the connection list */
 		(*olsr_con)->left_olsr_node = con_from;
 		(*olsr_con)->right_olsr_node = con_to;



From nichtsnutz at berlios.de  Wed Feb 15 18:41:51 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Wed, 15 Feb 2006 18:41:51 +0100
Subject: [S3d-svn] r73 - trunk/apps/olsrs3d
Message-ID: <200602151741.k1FHfp8u023085@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-15 18:41:48 +0100 (Wed, 15 Feb 2006)
New Revision: 73

Modified:
   trunk/apps/olsrs3d/main.c
Log:
change key event structur, add "r" for rotate object and "+","-" for rotate speed

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-15 17:40:25 UTC (rev 72)
+++ trunk/apps/olsrs3d/main.c	2006-02-15 17:41:48 UTC (rev 73)
@@ -25,10 +25,12 @@
 float CamPosition[2][3];   /* CamPosition[trans|rot][x-z] */
 float ZeroPosition[3] = {0,0,0};   /* current position zero position */
 int ZeroPoint;   /* object zeropoint */
+int Zp_rotate = 0;
 int ColorSwitch = 0;   /* enable/disable colored olsr connections */
+int RotateSwitch = 0;
+int RotateSpeed = 2;
 
 
-
 /***
  *
  * print usage info
@@ -483,6 +485,10 @@
 		}
 	alpha=(alpha+5)%360;
 	s3d_rotate(mesh,0,alpha,0);
+	if(RotateSwitch) {
+		Zp_rotate = (Zp_rotate+RotateSpeed)%360;
+		s3d_rotate(ZeroPoint,0,Zp_rotate,0);
+	}
 	usleep(100000);
 /*	sleep(1);*/
 	return;
@@ -502,16 +508,33 @@
  ***/
 
 void keypress(struct s3d_evt *event) {
+	
 	int key;
 	key=*((unsigned short *)event->buf);
-	/* ESC */
-	if(key == 27)
-		stop();
-	if(key == 49)
-		lst_out();
-	if(key == 99)
-		if(ColorSwitch) ColorSwitch = 0;
-		else ColorSwitch = 1;
+	switch(key) {
+		case 27: /* esc */
+			stop();
+			break;
+			case 15: /* strg + o */
+			lst_out(); /* output ob2ip list */
+			break;
+		case 99: /* c*/
+			if(ColorSwitch) ColorSwitch = 0;
+			else ColorSwitch = 1;
+			break;
+		case 114: /* r */
+			if(RotateSwitch) RotateSwitch = 0;
+			else RotateSwitch = 1;
+			break;
+		case 43: /* + */
+			if(RotateSwitch && RotateSpeed < 10)
+				RotateSpeed++;
+			break;
+		case 45: /* - */
+			if(RotateSwitch && RotateSpeed > 1)
+				RotateSpeed--;
+			break;
+	}
 }
 
 /***



From marec at berlios.de  Fri Feb 17 00:59:57 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 17 Feb 2006 00:59:57 +0100
Subject: [S3d-svn] r74 - trunk/apps/olsrs3d
Message-ID: <200602162359.k1GNxvJL003836@sheep.berlios.de>

Author: marec
Date: 2006-02-17 00:59:44 +0100 (Fri, 17 Feb 2006)
New Revision: 74

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/process.c
Log:
parse line redone

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-15 17:41:48 UTC (rev 73)
+++ trunk/apps/olsrs3d/main.c	2006-02-16 23:59:44 UTC (rev 74)
@@ -508,7 +508,7 @@
  ***/
 
 void keypress(struct s3d_evt *event) {
-	
+
 	int key;
 	key=*((unsigned short *)event->buf);
 	switch(key) {

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-15 17:41:48 UTC (rev 73)
+++ trunk/apps/olsrs3d/process.c	2006-02-16 23:59:44 UTC (rev 74)
@@ -59,7 +59,7 @@
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
 		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
 		s3d_link( (*olsr_con)->obj_id,  ZeroPoint );
-		
+
 		/* add olsr node to new olsr connection in order to access the nodes from the connection list */
 		(*olsr_con)->left_olsr_node = con_from;
 		(*olsr_con)->right_olsr_node = con_to;
@@ -295,7 +295,7 @@
 	float 	*swap_adj;
 	int  	*swap_adj_obj;
 	char	nc_str[20];
-	printf("committing input ... \n");
+// 	printf("committing input ... \n");
 
 	/* remove old adjacent objects ... */
 // 	for (i=0;i<max;i++)
@@ -345,109 +345,238 @@
 // 	}
 	return(0);
 }
-int parse_line(int n)
-{
-	char *data[3];   // in this order: ip_from, ip_to, label
+// int parse_line( int lbuf_index ) {
+//
+// // 	int line_length;
+// 	char *lbuf_ptr;
+// // 	char *data[3];   // in this order: ip_from, ip_to, label
+// 	char *lbuf_ptr, *con_from, *con_to, *etx;
+// 	char *con_from;
+// 	char *con_to;
+// 	char *etx;
+//
+// 	struct olsr_node *olsr_node1;   // pointer to olsr nodes
+// 	struct olsr_node *olsr_node2;
+//
+// // 	line_length = strlen( lbuf[lbuf_index] );
+// 	lbuf_ptr = &lbuf[lbuf_index];
+//
+// 	int i,dn,n1,n2;
+// 	float f;
+// // 	data[0]=data[1]=data[2]=NULL;
+// 	/*lbuf[n]='\0';  we don't need this one anyway */
+//
+// 	dn=0;
+// 	while ( (*lbuf_ptr) != '\0' ) {
+//
+// 		switch ( (*lbuf_ptr) ) {
+// // 			printf( "%c", (*lbuf_ptr) );
+// 			case '"':
+// 				if (dn<6)
+// 				{
+// 					if ( !(dn%2) ) { /* starts */
+// 						switch ( dn ) {
+// 							case 0:
+// 								con_from = lbuf_ptr;
+// 								break;
+// 							case 2:
+// 								con_to = lbuf_ptr;
+// 								break;
+// 							case 4:
+// 								etx = lbuf_ptr;
+// 								break;
+// 						}
+// // 						*data[(dn/2)] = (*lbuf_ptr);
+// 					} else { /* ends */
+// 						(*lbuf_ptr) = '\0'; /* string terminator!! */
+// 					}
+// 				}
+// 				dn++;
+//
+// 				break;
+// // 			case '}':
+// // 				if (!(dn%2))	/* we don't end the input inside of strings ... this won't happen anyway, I guess */
+// // 					commit_input();
+// // 				break;
+// 		}
+// 		lbuf_ptr++;
+// 	}
+// 	if (dn>=6)
+// 	{
+// /*		printf("######link from [%s] to [%s], label [%s]\n",data[0],data[1],data[2]);*/
+// 		/* announced network via HNA */
+// 		if ( strncmp( etx, "HNA", NAMEMAX ) == 0 ) {
+//
+// 			/* connection to internet */
+// 			if ( strncmp( con_to, "0.0.0.0/0.0.0.0", NAMEMAX ) == 0 ) {
+//
+// 				olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+//
+// 				if ( olsr_node1->node_type != 1 ) {
+//
+// 					olsr_node1->node_type = 1;
+// 					olsr_node1->node_type_modified = 1;
+// 					if ( Debug ) printf( "new internet: %s\n", olsr_node1->ip );
+//
+// 				}
+//
+// 			/* normal HNA */
+// 			} else {
+//
+// 				olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+// 				olsr_node2 = get_olsr_node( &Olsr_root, con_to );
+//
+// 				if ( olsr_node2->node_type != 2 ) {
+//
+// 					olsr_node2->node_type = 2;
+// 					olsr_node2->node_type_modified = 1;
+// 					if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
+//
+// 				}
+//
+// 				add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
+//
+// 			}
+//
+//
+//
+// 		/* normal node */
+// 		} else {
+// // 			n1=get_node_num(data[0]);
+// // 			n2=get_node_num(data[1]);
+// 			olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+// 			olsr_node2 = get_olsr_node( &Olsr_root, con_to );
+// 			f=10.0+strtod(etx,NULL)/10.0;
+// /*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
+// 			if (f>=5) /* just to prevent ascii to float converting inconsistency ... */
+// // 				add_adj(n1,n2,f);
+// 				add_olsr_con( olsr_node1, olsr_node2, f );
+// 		}
+// 	}
+// 	return(0);
+// }
+// int process_main()
+// {
+// 	int i,l;
+// 	i=0;
+// 	l=strlen(lbuf);
+// 	while (i<l)
+// 	{
+// 		if ((lbuf[i])=='\n')
+// 		{
+// 			parse_line(i);
+// 			memmove(lbuf,lbuf+i+1,MAXLINESIZE-i-1);
+// 			process_main(); /* well, we don't have to do this the recursive way here, but who cares ... */
+// 			return(0);
+// 		}
+// 		i++;
+// 	}
+// 	return(0);
+// }
+
+int process_main() {
+
+	int index = 0, dn = 0;
+	int buf_len = strlen( lbuf );
+	float f;
+	char *lbuf_ptr, *con_from, *con_to, *etx;
 	struct olsr_node *olsr_node1;   // pointer to olsr nodes
 	struct olsr_node *olsr_node2;
-	int i,dn,n1,n2;
-	float f;
-	data[0]=data[1]=data[2]=NULL;
-	lbuf[n]='\0'; /* we don't need this one anyway */
-	i=dn=0;
-	while (i<n)
-	{
-		switch (lbuf[i])
-		{
-			case '"':
-				if (dn<6)
-				{
-					if (!(dn%2)) /* starts */
-						data[(dn/2)]=lbuf+i+1;
-					else /* ends */
-						lbuf[i]='\0'; /* string terminator!! */
-				}
-				dn++;
-				break;
-			case '}':
-				if (!(dn%2))	/* we don't end the input inside of strings ... this won't happen anyway, I guess */
-					commit_input();
-				break;
-		}
-		i++;
-	}
-	if (dn>=6)
-	{
-/*		printf("######link from [%s] to [%s], label [%s]\n",data[0],data[1],data[2]);*/
-		/* announced network via HNA */
-		if ( strncmp( data[2], "HNA", NAMEMAX ) == 0 ) {
 
-			/* connection to internet */
-			if ( strncmp( data[1], "0.0.0.0/0.0.0.0", NAMEMAX ) == 0 ) {
+	while ( ( index < buf_len ) && ( index < MAXLINESIZE ) ) {
 
-				olsr_node1 = get_olsr_node( &Olsr_root, data[0] );
+		if ( ( lbuf[index] != '{' ) && ( lbuf[index] != '}' )  && ( lbuf[index] != '\n' ) ) {
 
-				if ( olsr_node1->node_type != 1 ) {
+			lbuf_ptr = &lbuf[index];
+			dn = 0;
 
-					olsr_node1->node_type = 1;
-					olsr_node1->node_type_modified = 1;
-					if ( Debug ) printf( "new internet: %s\n", olsr_node1->ip );
+			while ( (*lbuf_ptr) != '\0' ) {
 
+				if ( (*lbuf_ptr) == '"' ) {
+
+					switch ( dn ) {
+
+						case 0:
+							con_from = lbuf_ptr;
+							break;
+						case 2:
+							con_to = lbuf_ptr;
+							break;
+						case 4:
+							etx = lbuf_ptr;
+							break;
+						default:   /* ends */
+							(*lbuf_ptr) = '\0';   /* string terminator!! */
+					}
+
+					if ( ++dn >= 6 ) break;
+
 				}
 
-			/* normal HNA */
-			} else {
+				lbuf_ptr++;
 
-				olsr_node1 = get_olsr_node( &Olsr_root, data[0] );
-				olsr_node2 = get_olsr_node( &Olsr_root, data[1] );
+				if ( dn >= 6 ) {
 
-				if ( olsr_node2->node_type != 2 ) {
+					/* announced network via HNA */
+					if ( strncmp( etx, "HNA", NAMEMAX ) == 0 ) {
 
-					olsr_node2->node_type = 2;
-					olsr_node2->node_type_modified = 1;
-					if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
+						/* connection to internet */
+						if ( strncmp( con_to, "0.0.0.0/0.0.0.0", NAMEMAX ) == 0 ) {
 
+							olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+
+							if ( olsr_node1->node_type != 1 ) {
+
+								olsr_node1->node_type = 1;
+								olsr_node1->node_type_modified = 1;
+								if ( Debug ) printf( "new internet: %s\n", olsr_node1->ip );
+
+							}
+
+							/* normal HNA */
+						} else {
+
+							olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+							olsr_node2 = get_olsr_node( &Olsr_root, con_to );
+
+							if ( olsr_node2->node_type != 2 ) {
+
+								olsr_node2->node_type = 2;
+								olsr_node2->node_type_modified = 1;
+								if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
+
+							}
+
+							add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
+
+						}
+
+					/* normal node */
+					} else {
+
+						olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+						olsr_node2 = get_olsr_node( &Olsr_root, con_to );
+						f=10.0+strtod(etx,NULL)/10.0;
+						if (f>=5) add_olsr_con( olsr_node1, olsr_node2, f );   /* just to prevent ascii to float converting inconsistency ... */
+
+					}
+
 				}
 
-				add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
-
 			}
 
+		}
 
+		index++;
 
-		/* normal node */
-		} else {
-// 			n1=get_node_num(data[0]);
-// 			n2=get_node_num(data[1]);
-			olsr_node1 = get_olsr_node( &Olsr_root, data[0] );
-			olsr_node2 = get_olsr_node( &Olsr_root, data[1] );
-			f=10.0+strtod(data[2],NULL)/10.0;
-/*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
-			if (f>=5) /* just to prevent ascii to float converting inconsistency ... */
-// 				add_adj(n1,n2,f);
-				add_olsr_con( olsr_node1, olsr_node2, f );
-		}
 	}
+
+	memmove( lbuf, lbuf + index + 1, index + 1 );
 	return(0);
+
 }
-int process_main()
-{
-	int i,l;
-	i=0;
-	l=strlen(lbuf);
-	while (i<l)
-	{
-		if ((lbuf[i])=='\n')
-		{
-			parse_line(i);
-			memmove(lbuf,lbuf+i+1,MAXLINESIZE-i-1);
-			process_main(); /* well, we don't have to do this the recursive way here, but who cares ... */
-			return(0);
-		}
-		i++;
-	}
-	return(0);
-}
+
+
 int process_init()
 {
 	lbuf[0]='\0';



From dotslash at berlios.de  Fri Feb 17 15:47:53 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Fri, 17 Feb 2006 15:47:53 +0100
Subject: [S3d-svn] r75 - in trunk: . client example
Message-ID: <200602171447.k1HElrY8001620@sheep.berlios.de>

Author: dotslash
Date: 2006-02-17 15:47:50 +0100 (Fri, 17 Feb 2006)
New Revision: 75

Added:
   trunk/client/sei_construct.c
   trunk/client/sei_interface.h
   trunk/client/sei_misc.c
   trunk/client/sei_monotone.c
   trunk/client/sei_tri.c
   trunk/client/sei_triangulate.h
Removed:
   trunk/client/tesselate.c
Modified:
   trunk/
   trunk/CREDITS
   trunk/ChangeLog
   trunk/client/3dsread.c
   trunk/client/Makefile.am
   trunk/client/config.h
   trunk/client/freetype.c
   trunk/example/strtest.c
Log:
 r91 at balthasar:  dotslash | 2006-02-17 15:47:42 +0100
 Using Seidels algorithm for triangulating fonts



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:47
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:91

Modified: trunk/CREDITS
===================================================================
--- trunk/CREDITS	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/CREDITS	2006-02-17 14:47:50 UTC (rev 75)
@@ -2,6 +2,10 @@
 	- culling code adapted from Ruud van Gaal
 client/freetype.c
 	- tesselation things come from the OpenGL redbook
+client/sei_*.c
+	Implementation of the fast polygon triangulation algorithm
+	by R.Seidel (1991),  implementation by Narkhede A. and 
+	Manocha D. 	(1994)
 apps/s3dvt/s3dvt.c
 	- much of the code comes from glterm by <helly at gmx.net>
 example/miu3ds/*

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/ChangeLog	2006-02-17 14:47:50 UTC (rev 75)
@@ -1,3 +1,8 @@
+2006-02-17	Simon Wunderlich - <dotslash at packetmixer.de>
+	- abadoning my own tries and the glu-tesselator 
+	  for triangulating the fonts and using public
+	  domain code for seidels algorithm by Narkhede A. and
+	  Manocha D.
 2006-01-30	Andreas Kohn - <andreas at syndrom23.de>
 	- rework larger parts of the build infrastructure, 
 	  use automake and libtool.

Modified: trunk/client/3dsread.c
===================================================================
--- trunk/client/3dsread.c	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/3dsread.c	2006-02-17 14:47:50 UTC (rev 75)
@@ -35,7 +35,7 @@
 		r[1]=n[1]/len;
 		r[2]=n[2]/len;
 	} else {
-		errds(LOW,"normal()","couldn't calc normal");
+		dprintf(VLOW,"normal(): couldn't calc normal");
 		r[0]=r[1]=r[2]=0.0F;
 	}
 }

Modified: trunk/client/Makefile.am
===================================================================
--- trunk/client/Makefile.am	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/Makefile.am	2006-02-17 14:47:50 UTC (rev 75)
@@ -2,9 +2,10 @@
 
 libs3d_la_SOURCES=	3dsread.c callback.c error.c event.c fontselect.c \
 			freetype.c io.c network.c object_queue.c proto_in.c \
-			proto_out.c shm.c shm_ringbuf.c tesselate.c tcp.c
+			proto_out.c shm.c shm_ringbuf.c tcp.c \
+			sei_construct.c sei_misc.c sei_monotone.c sei_tri.c
 			
-pkginclude_HEADERS=	config.h s3d.h s3dlib.h
+pkginclude_HEADERS=	config.h s3d.h s3dlib.h sei_triangulate.h sei_interface.h
 
 libs3d_la_CPPFLAGS=	-I${top_srcdir}/server
 libs3d_la_CFLAGS=	@FONTCONFIG_CFLAGS@ @FREETYPE_CFLAGS@ @GL_CFLAGS@

Modified: trunk/client/config.h
===================================================================
--- trunk/client/config.h	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/config.h	2006-02-17 14:47:50 UTC (rev 75)
@@ -4,3 +4,4 @@
 /*  our level of debug messages */
 #define DEBUG			LOW	 /*  standard debug level */
 #define SHM_MAX_IDLE	200	/* maximum wait for server timeout */
+#define	SEI_SS			200	/* seidel algorithm maximum point number */

Modified: trunk/client/freetype.c
===================================================================
--- trunk/client/freetype.c	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/freetype.c	2006-02-17 14:47:50 UTC (rev 75)
@@ -5,7 +5,6 @@
 #include <netinet/in.h>  /*  htonl(), htons() */
 #include "ft2build.h"
 #include FT_FREETYPE_H
-#include <GL/glu.h>  /*  gluTess* */
 #ifndef CALLBACK 
 #define CALLBACK
 #endif
@@ -17,137 +16,27 @@
 static int ft_init=0;
 static int face_init=0;
 
-static GLUtesselator *tobj;
 static int v_off; 	 /*  the vertex number offset, to have the right vertex numbers for each character */
 static int f_oid;	 /*  the oid of our font string */
-static int algo;	 /*  how the order of the vertex points should be interpreted (in the tesselator callbacks) */
-static GLdouble *point;	 /*  the point of the outline points */
-static int *pk,pn;		 /*  the index buffer and it's size */
 static int ch;
 struct t_buf tess_buf[256];
 
-int _s3d_init_tessbuf();
-int _s3d_clear_tessbuf();
-int _s3d_add_tessbuf(unsigned short a);
-int _s3d_draw_tessbuf(int oid,unsigned short a,int *voff, float *xoff);
-/*  callbacks */
-static void CALLBACK cb_vertex(GLdouble *v)
-{
-/* 	dprintf(LOW,"point is at %010p, while v is %010p, vertex nr. %d",point,v,v_off+(v-point)/3); */
-	pk[pn]=v_off+(v-point)/3;
-	pn++;
-}
-/*  taken from tess.c/ redbook source code */
-static void CALLBACK cb_combine (GLdouble coords[3], 
-                     GLdouble *vertex_data[4],
-                     GLfloat weight[4], GLdouble **dataOut )
-{
-   GLdouble *vertex;
-   int i;
 
-   vertex = (GLdouble *) malloc(6 * sizeof(GLdouble));
 
-   vertex[0] = coords[0];
-   vertex[1] = coords[1];
-   vertex[2] = coords[2];
-   for (i = 3; i < 7; i++)
-      vertex[i] = weight[0] * vertex_data[0][i] 
-                  + weight[1] * vertex_data[1][i]
-                  + weight[2] * vertex_data[2][i] 
-                  + weight[3] * vertex_data[3][i];
-   dprintf(LOW,"combining ...");
-   *dataOut = vertex;
-}
-
-static void CALLBACK cb_error(GLenum errorCode)
-{
-   const GLubyte *estring;
-
-   estring = gluErrorString(errorCode);
-   errds(HIGH,"cb_error()","Tessellation Error: %s\n", estring);
-/*    exit(0); */
-}
-static void CALLBACK cb_begin(GLenum which)
-{
-	algo=which;
-	pn=0;
-}
-static void CALLBACK cb_end(GLenum which)
-{
-   int i;
-   int poff=tess_buf[ch].pn;
-   switch (algo)
-   {
-		case GL_TRIANGLES:
-			tess_buf[ch].pn+=pn/3;
-			tess_buf[ch].pbuf=realloc(tess_buf[ch].pbuf,tess_buf[ch].pn*sizeof(unsigned long)*4);
-			for (i=0;i<(pn/3);i++)
-			{
-				tess_buf[ch].pbuf[(poff+i)*4]=	pk[i*3];
-				tess_buf[ch].pbuf[(poff+i)*4+1]=pk[i*3+1];
-				tess_buf[ch].pbuf[(poff+i)*4+2]=pk[i*3+2];
-				tess_buf[ch].pbuf[(poff+i)*4+3]=0;
-/* 				s3d_push_polygon(f_oid,pk[i*3],pk[i*3+1],pk[i*3+2],0); */
-			}
-			break;
-		case GL_TRIANGLE_FAN:
-			tess_buf[ch].pn+=pn-2;
-			tess_buf[ch].pbuf=realloc(tess_buf[ch].pbuf,tess_buf[ch].pn*sizeof(unsigned long)*4);
-/* 			for (i=1;i<(pn-1);i++) */
-			for (i=0;i<(pn-2);i++)
-			{
-				tess_buf[ch].pbuf[(poff+i)*4]=	pk[0];
-				tess_buf[ch].pbuf[(poff+i)*4+1]=pk[i+1];
-				tess_buf[ch].pbuf[(poff+i)*4+2]=pk[i+2];
-				tess_buf[ch].pbuf[(poff+i)*4+3]=0;
-/* 				s3d_push_polygon(f_oid,pk[0],pk[i],pk[i+1],0); */
-			}	
-			break;
-		case GL_TRIANGLE_STRIP:
-			tess_buf[ch].pn+=pn-2;
-			tess_buf[ch].pbuf=realloc(tess_buf[ch].pbuf,tess_buf[ch].pn*sizeof(unsigned long)*4);
-		   	for (i=0;i<(pn-2);i++)
-		   	{
-				if (i%2)
-				{
-					tess_buf[ch].pbuf[(poff+i)*4]=	pk[i];
-					tess_buf[ch].pbuf[(poff+i)*4+1]=pk[i+2];
-					tess_buf[ch].pbuf[(poff+i)*4+2]=pk[i+1];
-					tess_buf[ch].pbuf[(poff+i)*4+3]=0;
-/* 					s3d_push_polygon(f_oid,pk[i],pk[i+2],pk[i+1],0); */
-				} else {
-					tess_buf[ch].pbuf[(poff+i)*4]=	pk[i];
-					tess_buf[ch].pbuf[(poff+i)*4+1]=pk[i+1];
-					tess_buf[ch].pbuf[(poff+i)*4+2]=pk[i+2];
-					tess_buf[ch].pbuf[(poff+i)*4+3]=0;
-/* 					s3d_push_polygon(f_oid,pk[i],pk[i+1],pk[i+2],0); */
-				}
-		   }
-		   break;
-		default: 
-		    errds(MED,"cb_end()","tesselation method not supported");
-   }
-/*    dprintf(LOW,"character [%c]: %d + %d polys",ch,poff,tess_buf[ch].pn-poff); */
-}
-
-/*  that's about the callback functions, now the init for the tesselator */
-/*  and the truetype part ... */
+/*  initialize truetype and tess_buf ... */
 int s3d_ft_init()
 {
 	int error= FT_Init_FreeType( &library);
+	int i;
 	if (error)
 		return (-1);
-   tobj = gluNewTess();
-      gluTessProperty(tobj, GLU_TESS_WINDING_RULE,
-                   GLU_TESS_WINDING_POSITIVE);
-   gluTessCallback(tobj, GLU_TESS_VERTEX,	(GLvoid (*) ())cb_vertex);
-   gluTessCallback(tobj, GLU_TESS_BEGIN,	(GLvoid (*) ())cb_begin);
-   gluTessCallback(tobj, GLU_TESS_END,		(GLvoid (*) ())cb_end);
-   gluTessCallback(tobj, GLU_TESS_ERROR,	(GLvoid (*) ())cb_error);
-   gluTessCallback(tobj, GLU_TESS_COMBINE,  (GLvoid (*) ())cb_combine);
-   _s3d_init_tessbuf();
+    ft_init=1;
+	for (i=0; i<256;i++)
+	{
+		tess_buf[i].vbuf=NULL;
+		tess_buf[i].pbuf=NULL;
+	}
 
-   ft_init=1;
 	return(0);
 }
 
@@ -177,16 +66,6 @@
 	}
 	return(0);
 }
-int _s3d_init_tessbuf()
-{
-	int i;
-	for (i=0; i<256;i++)
-	{
-		tess_buf[i].vbuf=NULL;
-		tess_buf[i].pbuf=NULL;
-	}
-	return(0);
-}
 
 int _s3d_clear_tessbuf()
 {
@@ -198,62 +77,22 @@
 	}
 	return(0);
 }
-/*  tessaltes a character and adds it to the buffer */
+
+/* renders a character with seidels algorithm and stores it in the tess_buf for later
+ * usage */
 int _s3d_add_tessbuf(unsigned short a)
 {
 	float norm;
-	int j,c;
-	if (FT_Load_Char(face,a,	FT_LOAD_NO_BITMAP|FT_LOAD_NO_SCALE))
-	{
-		errds(VHIGH,"s3d_add_tessbuf():FT_Load_Char()","can't load character");
-		return(-1);
-	} 
-	norm=1.0/face->glyph->metrics.vertAdvance;
-	ch=a;
-	v_off=0;
-	if (face->glyph->outline.n_points)
-	{
-		j=0;
-		tess_buf[a].vn=face->glyph->outline.n_points;
-		tess_buf[a].vbuf=malloc(sizeof(float)*face->glyph->outline.n_points*3);
-		point=(GLdouble *)malloc(sizeof(GLdouble)*face->glyph->outline.n_points*3);
-		pk=(int *)malloc(sizeof(int)*face->glyph->outline.n_points); 
-			 /*  our list which is to be filled with the array of vertex-indices for each  */
-			 /*  convex polygon .... */
-		gluTessBeginPolygon(tobj, NULL);
-		for (c=0;c<face->glyph->outline.n_contours;c++)
-		{
-      		gluTessBeginContour(tobj);
-			while (j<(face->glyph->outline.contours[c]+1))
-			{
-				point[j*3]=(GLdouble)(face->glyph->outline.points[j].x)*norm;
-				point[j*3+1]=(GLdouble)face->glyph->outline.points[j].y*norm;
-				point[j*3+2]=0.0;
-				tess_buf[a].vbuf[j*3]=point[j*3];
-				tess_buf[a].vbuf[j*3+1]=point[j*3+1];
-				tess_buf[a].vbuf[j*3+2]=point[j*3+2];
+	int i,j,k,c,start;
+	int np,pos,diff,cpos,mpos;
+	double vertices[SEI_SS+1][2];
+	int triangles[SEI_SS*2][3]; /* more than enough ... */
+	int ncontours,ncon;
+	int cntr[SEI_SS];
+	char used[SEI_SS];
+	int map[SEI_SS+1];
+	
 
-/* 				s3d_push_vertex(f_oid,point[j*3],point[j*3+1],point[j*3+2]); */
-       	 		gluTessVertex(tobj, &point[j*3],&point[j*3]);
-				j++;
-			}
-      		gluTessEndContour(tobj);
-		}
-   		gluTessEndPolygon(tobj);
-		
-/* 		v_off+=face->glyph->outline.n_points; */
-		free(pk);
-		free(point);
-	}
-	tess_buf[a].xoff=1.0*face->glyph->metrics.horiAdvance*norm;
-	return(0);
-}
-/*  tesselates a character and adds it to the buffer, without glu */
-int _s3d_add_tessbuf_new(unsigned short a)
-{
-	float norm;
-	int j,c,start;
-	struct tessp_t *tessp;
 	if (FT_Load_Char(face,a,	FT_LOAD_NO_BITMAP|FT_LOAD_NO_SCALE))
 	{
 		errds(VHIGH,"s3d_add_tessbuf():FT_Load_Char()","can't load character");
@@ -262,37 +101,107 @@
 	norm=1.0/face->glyph->metrics.vertAdvance;
 	ch=a;
 	v_off=0;
-	if (face->glyph->outline.n_points)
+	if ((face->glyph->outline.n_points>0) && (face->glyph->outline.n_points<SEI_SS))
 	{
-		j=0;
 		tess_buf[a].vn=face->glyph->outline.n_points;
 		tess_buf[a].vbuf=malloc(sizeof(float)*face->glyph->outline.n_points*3);
-		tess_buf[a].pbuf=malloc(sizeof(unsigned long)*face->glyph->outline.n_points*4); /* should be enough ... */
-		tessp=malloc(sizeof(struct tessp_t)*tess_buf[a].vn);
 		
-			 /*  our list which is to be filled with the array of vertex-indices for each  */
-			 /*  convex polygon .... */
-		for (c=0;c<face->glyph->outline.n_contours;c++)
+		j=0;
+		ncontours=face->glyph->outline.n_contours;
+		for (c=0;c<ncontours;c++)
 		{
 			start=j; 	/* first point */
-			while (j<(face->glyph->outline.contours[c]+1))
+			i=0;
+			ncon=face->glyph->outline.contours[c]; /* position of the end of ths contour */
+			cntr[c]=ncon-j+1;
+			while (j<(ncon+1))
 			{
-				tess_buf[a].vbuf[j*3]=face->glyph->outline.points[j].x*norm;
-				tess_buf[a].vbuf[j*3+1]=face->glyph->outline.points[j].y*norm;
-				tess_buf[a].vbuf[j*3+2]=0.0;
-				tessp[j].prev=j-1;
-				tessp[j].next=j+1;
-				tessp[j].done=0;
+				/* vertices have reverse order in seidels algorithm, outer contours go anticlockwise, inner contours clockwise */
+				pos=ncon-i;
+				tess_buf[a].vbuf[pos*3]		=vertices[pos+1][0]=face->glyph->outline.points[j].x*norm;
+				tess_buf[a].vbuf[pos*3+1]	=vertices[pos+1][1]=face->glyph->outline.points[j].y*norm;
+				map[pos+1]=pos;
+				tess_buf[a].vbuf[pos*3+2]	=0;
 				j++;
+				i++;
 			}
-			tessp[j-1].next=start;	/* last one */
-			tessp[start].prev=j-1;  /* first one */
 		}
-		_s3d_tesselate(tessp,&tess_buf[a]);
+		k=0; /* polygon counter */
+		/* iterate while there are untriangulated outlines left. this is neccesary
+		 * because seidel will only operate on ONE outline at once (number of holes is not 
+		 * limited though) */
+		tess_buf[a].pbuf=malloc(sizeof(unsigned long)*4*(face->glyph->outline.n_points+2*face->glyph->outline.n_contours)); 
+		do {
+			np=sei_triangulate_polygon(ncontours, cntr, vertices, triangles);
+			dprintf(VLOW,"[F]ound %d polygons",np);
+			memset(used,0,ncontours);
+			for (i=0;i<np;i++)
+			{
+				tess_buf[a].pbuf[k*4]=  map[triangles[i][0]];
+				tess_buf[a].pbuf[k*4+1]=map[triangles[i][1]];
+				tess_buf[a].pbuf[k*4+2]=map[triangles[i][2]];
+				tess_buf[a].pbuf[k*4+3]=0;
+				dprintf(VLOW,"TRIANG: %d %d %d = %d %d %d",	triangles[i][0],triangles[i][1],triangles[i][2], 
+															map[triangles[i][0]], map[triangles[i][1]], map[triangles[i][2]]);
+				for (j=0;j<3;j++)
+				{
+					cpos=1;
+					for (c=0;c<ncontours;c++)
+					{
+						cpos+=cntr[c];
+						if (triangles[i][j]<cpos)
+						{
+							dprintf(VLOW,"point %d in contour line %d (cpos = %d) used",triangles[i][j],c,cpos);
+							used[c]=1;
+							break;
+						}
+					}
+				}
+				k++;
+			}
+			j=1;
+			for (c=0;c<ncontours;c++)
+			{
+				j&=used[c];
+			}
+			if (j) 
+				dprintf(VLOW,"all contours used");
+			else 
+			{
+				dprintf(VLOW,"not all contours used, restarting");
+				diff=0;
+				ncon=0; /* number of actually unused contours */
+				cpos=1; /* position of source vertices */
+				mpos=1; /* position of dest vertices */
+				for (c=0;c<ncontours;c++)
+				{
+					if (!used[c])
+					{
+					  /* not used, move it to new end */
+						dprintf(VLOW,"contour %d (%d) not used!!",c,cntr[c]);
+						cntr[ncon]=cntr[c];
+						ncon++;
+						if (cpos!=mpos)
+						{
+							for (i=0;i<cntr[c];i++)
+							{
+								vertices[mpos+i][0]=vertices[cpos+i][0];
+								vertices[mpos+i][1]=vertices[cpos+i][1];
+								map[mpos+i]=map[cpos+i];
+							}
+						}
+					}
+					cpos+=cntr[c];
+				}
+			}
+			ncontours=ncon;
+		} while (!j);
+		tess_buf[a].pn=k;
 	}
 	tess_buf[a].xoff=1.0*face->glyph->metrics.horiAdvance*norm;
 	return(0);
 }
+
 int _s3d_draw_tessbuf(int oid,unsigned short a,int *voff, float *xoff)
 {
 	float *vbuf;
@@ -404,7 +313,7 @@
 }
 int s3d_ft_quit()
 {
-	gluDeleteTess(tobj);
+	_s3d_clear_tessbuf();
 	FT_Done_FreeType(library);
 	ft_init=0;
 	return(0);

Added: trunk/client/sei_construct.c
===================================================================
--- trunk/client/sei_construct.c	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/sei_construct.c	2006-02-17 14:47:50 UTC (rev 75)
@@ -0,0 +1,1055 @@
+#include <sei_triangulate.h>
+#include <math.h>
+
+
+node_t qs[QSIZE];		/* Query structure */
+trap_t tr[TRSIZE];		/* Trapezoid structure */
+segment_t seg[SEGSIZE];		/* Segment table */
+
+static int q_idx;
+static int tr_idx;
+
+/* Return a new node to be added into the query tree */
+static int newnode()
+{
+  if (q_idx < QSIZE)
+    return q_idx++;
+  else
+    {
+      errs("sei:newnode()","Query-table overflow");
+      return -1;
+    }
+}
+
+/* Return a free trapezoid */
+static int newtrap()
+{
+  if (tr_idx < TRSIZE)
+    {
+      tr[tr_idx].lseg = -1;
+      tr[tr_idx].rseg = -1;
+      tr[tr_idx].state = ST_VALID;
+      return tr_idx++;
+    }
+  else
+    {
+      errs("sei:newtrap()","Trapezoid-table overflow");
+      return -1;
+    }
+}
+
+
+/* Return the maximum of the two points into the yval structure */
+static int _max(yval, v0, v1)
+     point_t *yval;
+     point_t *v0;
+     point_t *v1;
+{
+  if (v0->y > v1->y + C_EPS)
+    *yval = *v0;
+  else if (FP_EQUAL(v0->y, v1->y))
+    {
+      if (v0->x > v1->x + C_EPS)
+	*yval = *v0;
+      else
+	*yval = *v1;
+    }
+  else
+    *yval = *v1;
+  
+  return 0;
+}
+
+
+/* Return the minimum of the two points into the yval structure */
+static int _min(yval, v0, v1)
+     point_t *yval;
+     point_t *v0;
+     point_t *v1;
+{
+  if (v0->y < v1->y - C_EPS)
+    *yval = *v0;
+  else if (FP_EQUAL(v0->y, v1->y))
+    {
+      if (v0->x < v1->x)
+	*yval = *v0;
+      else
+	*yval = *v1;
+    }
+  else
+    *yval = *v1;
+  
+  return 0;
+}
+
+
+int _greater_than(v0, v1)
+     point_t *v0;
+     point_t *v1;
+{
+  if (v0->y > v1->y + C_EPS)
+    return TRUE;
+  else if (v0->y < v1->y - C_EPS)
+    return FALSE;
+  else
+    return (v0->x > v1->x);
+}
+
+
+int _equal_to(v0, v1)
+     point_t *v0;
+     point_t *v1;
+{
+  return (FP_EQUAL(v0->y, v1->y) && FP_EQUAL(v0->x, v1->x));
+}
+
+int _greater_than_equal_to(v0, v1)
+     point_t *v0;
+     point_t *v1;
+{
+  if (v0->y > v1->y + C_EPS)
+    return TRUE;
+  else if (v0->y < v1->y - C_EPS)
+    return FALSE;
+  else
+    return (v0->x >= v1->x);
+}
+
+int _less_than(v0, v1)
+     point_t *v0;
+     point_t *v1;
+{
+  if (v0->y < v1->y - C_EPS)
+    return TRUE;
+  else if (v0->y > v1->y + C_EPS)
+    return FALSE;
+  else
+    return (v0->x < v1->x);
+}
+
+
+/* Initilialise the query structure (Q) and the trapezoid table (T) 
+ * when the first segment is added to start the trapezoidation. The
+ * query-tree starts out with 4 trapezoids, one S-node and 2 Y-nodes
+ *    
+ *                4
+ *   -----------------------------------
+ *  		  \
+ *  	1	   \        2
+ *  		    \
+ *   -----------------------------------
+ *                3
+ */
+
+static int init_query_structure(segnum)
+     int segnum;
+{
+  int i1, i2, i3, i4, i5, i6, i7, root;
+  int t1, t2, t3, t4;
+  segment_t *s = &seg[segnum];
+
+  q_idx = tr_idx = 1;
+  memset((void *)tr, 0, sizeof(tr));
+  memset((void *)qs, 0, sizeof(qs));
+
+  i1 = newnode();
+  qs[i1].nodetype = T_Y;
+  _max(&qs[i1].yval, &s->v0, &s->v1); /* root */
+  root = i1;
+
+  qs[i1].right = i2 = newnode();
+  qs[i2].nodetype = T_SINK;
+  qs[i2].parent = i1;
+
+  qs[i1].left = i3 = newnode();
+  qs[i3].nodetype = T_Y;
+  _min(&qs[i3].yval, &s->v0, &s->v1); /* root */
+  qs[i3].parent = i1;
+  
+  qs[i3].left = i4 = newnode();
+  qs[i4].nodetype = T_SINK;
+  qs[i4].parent = i3;
+  
+  qs[i3].right = i5 = newnode();
+  qs[i5].nodetype = T_X;
+  qs[i5].segnum = segnum;
+  qs[i5].parent = i3;
+  
+  qs[i5].left = i6 = newnode();
+  qs[i6].nodetype = T_SINK;
+  qs[i6].parent = i5;
+
+  qs[i5].right = i7 = newnode();
+  qs[i7].nodetype = T_SINK;
+  qs[i7].parent = i5;
+
+  t1 = newtrap();		/* middle left */
+  t2 = newtrap();		/* middle right */
+  t3 = newtrap();		/* bottom-most */
+  t4 = newtrap();		/* topmost */
+
+  tr[t1].hi = tr[t2].hi = tr[t4].lo = qs[i1].yval;
+  tr[t1].lo = tr[t2].lo = tr[t3].hi = qs[i3].yval;
+  tr[t4].hi.y = (double) (INFINITY);
+  tr[t4].hi.x = (double) (INFINITY);
+  tr[t3].lo.y = (double) -1* (INFINITY);
+  tr[t3].lo.x = (double) -1* (INFINITY);
+  tr[t1].rseg = tr[t2].lseg = segnum;
+  tr[t1].u0 = tr[t2].u0 = t4;
+  tr[t1].d0 = tr[t2].d0 = t3;
+  tr[t4].d0 = tr[t3].u0 = t1;
+  tr[t4].d1 = tr[t3].u1 = t2;
+  
+  tr[t1].sink = i6;
+  tr[t2].sink = i7;
+  tr[t3].sink = i4;
+  tr[t4].sink = i2;
+
+  tr[t1].state = tr[t2].state = ST_VALID;
+  tr[t3].state = tr[t4].state = ST_VALID;
+
+  qs[i2].trnum = t4;
+  qs[i4].trnum = t3;
+  qs[i6].trnum = t1;
+  qs[i7].trnum = t2;
+
+  s->is_inserted = TRUE;
+  return root;
+}
+
+
+/* Retun TRUE if the vertex v is to the left of line segment no.
+ * segnum. Takes care of the degenerate cases when both the vertices
+ * have the same y--cood, etc.
+ */
+
+static int is_left_of(segnum, v)
+     int segnum;
+     point_t *v;
+{
+  segment_t *s = &seg[segnum];
+  double area;
+  
+  if (_greater_than(&s->v1, &s->v0)) /* seg. going upwards */
+    {
+      if (FP_EQUAL(s->v1.y, v->y))
+	{
+	  if (v->x < s->v1.x)
+	    area = 1.0;
+	  else
+	    area = -1.0;
+	}
+      else if (FP_EQUAL(s->v0.y, v->y))
+	{
+	  if (v->x < s->v0.x)
+	    area = 1.0;
+	  else
+	    area = -1.0;
+	}
+      else
+	area = CROSS(s->v0, s->v1, (*v));
+    }
+  else				/* v0 > v1 */
+    {
+      if (FP_EQUAL(s->v1.y, v->y))
+	{
+	  if (v->x < s->v1.x)
+	    area = 1.0;
+	  else
+	    area = -1.0;
+	}
+      else if (FP_EQUAL(s->v0.y, v->y))
+	{
+	  if (v->x < s->v0.x)
+	    area = 1.0;
+	  else
+	    area = -1.0;
+	}
+      else
+	area = CROSS(s->v1, s->v0, (*v));
+    }
+  
+  if (area > 0.0)
+    return TRUE;
+  else 
+    return FALSE;
+}
+
+
+
+/* Returns true if the corresponding endpoint of the given segment is */
+/* already inserted into the segment tree. Use the simple test of */
+/* whether the segment which shares this endpoint is already inserted */
+
+static int inserted(segnum, whichpt)
+     int segnum;
+     int whichpt;
+{
+  if (whichpt == FIRSTPT)
+    return seg[seg[segnum].prev].is_inserted;
+  else
+    return seg[seg[segnum].next].is_inserted;
+}
+
+/* This is query routine which determines which trapezoid does the 
+ * point v lie in. The return value is the trapezoid number. 
+ */
+
+int locate_endpoint(v, vo, r)
+     point_t *v;
+     point_t *vo;
+     int r;
+{
+  node_t *rptr = &qs[r];
+  
+  switch (rptr->nodetype)
+    {
+    case T_SINK:
+      return rptr->trnum;
+      
+    case T_Y:
+      if (_greater_than(v, &rptr->yval)) /* above */
+	return locate_endpoint(v, vo, rptr->right);
+      else if (_equal_to(v, &rptr->yval)) /* the point is already */
+	{			          /* inserted. */
+	  if (_greater_than(vo, &rptr->yval)) /* above */
+	    return locate_endpoint(v, vo, rptr->right);
+	  else 
+	    return locate_endpoint(v, vo, rptr->left); /* below */	    
+	}
+      else
+	return locate_endpoint(v, vo, rptr->left); /* below */
+
+    case T_X:
+      if (_equal_to(v, &seg[rptr->segnum].v0) || 
+	       _equal_to(v, &seg[rptr->segnum].v1))
+	{
+	  if (FP_EQUAL(v->y, vo->y)) /* horizontal segment */
+	    {
+	      if (vo->x < v->x)
+		return locate_endpoint(v, vo, rptr->left); /* left */
+	      else
+		return locate_endpoint(v, vo, rptr->right); /* right */
+	    }
+
+	  else if (is_left_of(rptr->segnum, vo))
+	    return locate_endpoint(v, vo, rptr->left); /* left */
+	  else
+	    return locate_endpoint(v, vo, rptr->right); /* right */
+	}
+      else if (is_left_of(rptr->segnum, v))
+	return locate_endpoint(v, vo, rptr->left); /* left */
+      else
+	return locate_endpoint(v, vo, rptr->right); /* right */	
+
+    default:
+      errs("sei:locate_endpoint()","Haggu!!!! (whatever)");
+      break;
+    }
+}
+
+
+/* Thread in the segment into the existing trapezoidation. The 
+ * limiting trapezoids are given by tfirst and tlast (which are the
+ * trapezoids containing the two endpoints of the segment. Merges all
+ * possible trapezoids which flank this segment and have been recently
+ * divided because of its insertion
+ */
+
+static int merge_trapezoids(segnum, tfirst, tlast, side)
+     int segnum;
+     int tfirst;
+     int tlast;
+     int side;
+{
+  int t, tnext, cond;
+  int ptnext;
+
+  /* First merge polys on the LHS */
+  t = tfirst;
+  while ((t > 0) && _greater_than_equal_to(&tr[t].lo, &tr[tlast].lo))
+    {
+      if (side == S_LEFT)
+	cond = ((((tnext = tr[t].d0) > 0) && (tr[tnext].rseg == segnum)) ||
+		(((tnext = tr[t].d1) > 0) && (tr[tnext].rseg == segnum)));
+      else
+	cond = ((((tnext = tr[t].d0) > 0) && (tr[tnext].lseg == segnum)) ||
+		(((tnext = tr[t].d1) > 0) && (tr[tnext].lseg == segnum)));
+      
+      if (cond)
+	{
+	  if ((tr[t].lseg == tr[tnext].lseg) &&
+	      (tr[t].rseg == tr[tnext].rseg)) /* good neighbours */
+	    {			              /* merge them */
+	      /* Use the upper node as the new node i.e. t */
+	      
+	      ptnext = qs[tr[tnext].sink].parent;
+	      
+	      if (qs[ptnext].left == tr[tnext].sink)
+		qs[ptnext].left = tr[t].sink;
+	      else
+		qs[ptnext].right = tr[t].sink;	/* redirect parent */
+	      
+	      
+	      /* Change the upper neighbours of the lower trapezoids */
+	      
+	      if ((tr[t].d0 = tr[tnext].d0) > 0)
+		if (tr[tr[t].d0].u0 == tnext)
+		  tr[tr[t].d0].u0 = t;
+		else if (tr[tr[t].d0].u1 == tnext)
+		  tr[tr[t].d0].u1 = t;
+	      
+	      if ((tr[t].d1 = tr[tnext].d1) > 0)
+		if (tr[tr[t].d1].u0 == tnext)
+		  tr[tr[t].d1].u0 = t;
+		else if (tr[tr[t].d1].u1 == tnext)
+		  tr[tr[t].d1].u1 = t;
+	      
+	      tr[t].lo = tr[tnext].lo;
+	      tr[tnext].state = ST_INVALID; /* invalidate the lower */
+				            /* trapezium */
+	    }
+	  else		    /* not good neighbours */
+	    t = tnext;
+	}
+      else		    /* do not satisfy the outer if */
+	t = tnext;
+      
+    } /* end-while */
+       
+  return 0;
+}
+
+
+/* Add in the new segment into the trapezoidation and update Q and T
+ * structures. First locate the two endpoints of the segment in the
+ * Q-structure. Then start from the topmost trapezoid and go down to
+ * the  lower trapezoid dividing all the trapezoids in between .
+ */
+
+static int add_segment(segnum)
+     int segnum;
+{
+  segment_t s;
+  segment_t *so = &seg[segnum];
+  int tu, tl, sk, tfirst, tlast, tnext;
+  int tfirstr, tlastr, tfirstl, tlastl;
+  int i1, i2, t, t1, t2, tn;
+  point_t tpt;
+  int tritop = 0, tribot = 0, is_swapped = 0;
+  int tmptriseg;
+
+  s = seg[segnum];
+  if (_greater_than(&s.v1, &s.v0)) /* Get higher vertex in v0 */
+    {
+      int tmp;
+      tpt = s.v0;
+      s.v0 = s.v1;
+      s.v1 = tpt;
+      tmp = s.root0;
+      s.root0 = s.root1;
+      s.root1 = tmp;
+      is_swapped = TRUE;
+    }
+
+  if ((is_swapped) ? !inserted(segnum, LASTPT) :
+       !inserted(segnum, FIRSTPT))     /* insert v0 in the tree */
+    {
+      int tmp_d;
+
+      tu = locate_endpoint(&s.v0, &s.v1, s.root0);
+      tl = newtrap();		/* tl is the new lower trapezoid */
+      tr[tl].state = ST_VALID;
+      tr[tl] = tr[tu];
+      tr[tu].lo.y = tr[tl].hi.y = s.v0.y;
+      tr[tu].lo.x = tr[tl].hi.x = s.v0.x;
+      tr[tu].d0 = tl;      
+      tr[tu].d1 = 0;
+      tr[tl].u0 = tu;
+      tr[tl].u1 = 0;
+
+      if (((tmp_d = tr[tl].d0) > 0) && (tr[tmp_d].u0 == tu))
+	tr[tmp_d].u0 = tl;
+      if (((tmp_d = tr[tl].d0) > 0) && (tr[tmp_d].u1 == tu))
+	tr[tmp_d].u1 = tl;
+
+      if (((tmp_d = tr[tl].d1) > 0) && (tr[tmp_d].u0 == tu))
+	tr[tmp_d].u0 = tl;
+      if (((tmp_d = tr[tl].d1) > 0) && (tr[tmp_d].u1 == tu))
+	tr[tmp_d].u1 = tl;
+
+      /* Now update the query structure and obtain the sinks for the */
+      /* two trapezoids */ 
+      
+      i1 = newnode();		/* Upper trapezoid sink */
+      i2 = newnode();		/* Lower trapezoid sink */
+      sk = tr[tu].sink;
+      
+      qs[sk].nodetype = T_Y;
+      qs[sk].yval = s.v0;
+      qs[sk].segnum = segnum;	/* not really reqd ... maybe later */
+      qs[sk].left = i2;
+      qs[sk].right = i1;
+
+      qs[i1].nodetype = T_SINK;
+      qs[i1].trnum = tu;
+      qs[i1].parent = sk;
+
+      qs[i2].nodetype = T_SINK;
+      qs[i2].trnum = tl;
+      qs[i2].parent = sk;
+
+      tr[tu].sink = i1;
+      tr[tl].sink = i2;
+      tfirst = tl;
+    }
+  else				/* v0 already present */
+    {       /* Get the topmost intersecting trapezoid */
+      tfirst = locate_endpoint(&s.v0, &s.v1, s.root0);
+      tritop = 1;
+    }
+
+
+  if ((is_swapped) ? !inserted(segnum, FIRSTPT) :
+       !inserted(segnum, LASTPT))     /* insert v1 in the tree */
+    {
+      int tmp_d;
+
+      tu = locate_endpoint(&s.v1, &s.v0, s.root1);
+
+      tl = newtrap();		/* tl is the new lower trapezoid */
+      tr[tl].state = ST_VALID;
+      tr[tl] = tr[tu];
+      tr[tu].lo.y = tr[tl].hi.y = s.v1.y;
+      tr[tu].lo.x = tr[tl].hi.x = s.v1.x;
+      tr[tu].d0 = tl;      
+      tr[tu].d1 = 0;
+      tr[tl].u0 = tu;
+      tr[tl].u1 = 0;
+
+      if (((tmp_d = tr[tl].d0) > 0) && (tr[tmp_d].u0 == tu))
+	tr[tmp_d].u0 = tl;
+      if (((tmp_d = tr[tl].d0) > 0) && (tr[tmp_d].u1 == tu))
+	tr[tmp_d].u1 = tl;
+
+      if (((tmp_d = tr[tl].d1) > 0) && (tr[tmp_d].u0 == tu))
+	tr[tmp_d].u0 = tl;
+      if (((tmp_d = tr[tl].d1) > 0) && (tr[tmp_d].u1 == tu))
+	tr[tmp_d].u1 = tl;
+      
+      /* Now update the query structure and obtain the sinks for the */
+      /* two trapezoids */ 
+      
+      i1 = newnode();		/* Upper trapezoid sink */
+      i2 = newnode();		/* Lower trapezoid sink */
+      sk = tr[tu].sink;
+      
+      qs[sk].nodetype = T_Y;
+      qs[sk].yval = s.v1;
+      qs[sk].segnum = segnum;	/* not really reqd ... maybe later */
+      qs[sk].left = i2;
+      qs[sk].right = i1;
+
+      qs[i1].nodetype = T_SINK;
+      qs[i1].trnum = tu;
+      qs[i1].parent = sk;
+
+      qs[i2].nodetype = T_SINK;
+      qs[i2].trnum = tl;
+      qs[i2].parent = sk;
+
+      tr[tu].sink = i1;
+      tr[tl].sink = i2;
+      tlast = tu;
+    }
+  else				/* v1 already present */
+    {       /* Get the lowermost intersecting trapezoid */
+      tlast = locate_endpoint(&s.v1, &s.v0, s.root1);
+      tribot = 1;
+    }
+  
+  /* Thread the segment into the query tree creating a new X-node */
+  /* First, split all the trapezoids which are intersected by s into */
+  /* two */
+
+  t = tfirst;			/* topmost trapezoid */
+  
+  while ((t > 0) && 
+	 _greater_than_equal_to(&tr[t].lo, &tr[tlast].lo))
+				/* traverse from top to bot */
+    {
+      int t_sav, tn_sav;
+      sk = tr[t].sink;
+      i1 = newnode();		/* left trapezoid sink */
+      i2 = newnode();		/* right trapezoid sink */
+      
+      qs[sk].nodetype = T_X;
+      qs[sk].segnum = segnum;
+      qs[sk].left = i1;
+      qs[sk].right = i2;
+
+      qs[i1].nodetype = T_SINK;	/* left trapezoid (use existing one) */
+      qs[i1].trnum = t;
+      qs[i1].parent = sk;
+
+      qs[i2].nodetype = T_SINK;	/* right trapezoid (allocate new) */
+      qs[i2].trnum = tn = newtrap();
+      tr[tn].state = ST_VALID;
+      qs[i2].parent = sk;
+
+      if (t == tfirst)
+	tfirstr = tn;
+      if (_equal_to(&tr[t].lo, &tr[tlast].lo))
+	tlastr = tn;
+
+      tr[tn] = tr[t];
+      tr[t].sink = i1;
+      tr[tn].sink = i2;
+      t_sav = t;
+      tn_sav = tn;
+
+      /* error */
+
+      if ((tr[t].d0 <= 0) && (tr[t].d1 <= 0)) /* case cannot arise */
+	{
+      errs("sei:add_segment()","error");
+	  break;
+	}
+      
+      /* only one trapezoid below. partition t into two and make the */
+      /* two resulting trapezoids t and tn as the upper neighbours of */
+      /* the sole lower trapezoid */
+      
+      else if ((tr[t].d0 > 0) && (tr[t].d1 <= 0))
+	{			/* Only one trapezoid below */
+	  if ((tr[t].u0 > 0) && (tr[t].u1 > 0))
+	    {			/* continuation of a chain from abv. */
+	      if (tr[t].usave > 0) /* three upper neighbours */
+		{
+		  if (tr[t].uside == S_LEFT)
+		    {
+		      tr[tn].u0 = tr[t].u1;
+		      tr[t].u1 = -1;
+		      tr[tn].u1 = tr[t].usave;
+		      
+		      tr[tr[t].u0].d0 = t;
+		      tr[tr[tn].u0].d0 = tn;
+		      tr[tr[tn].u1].d0 = tn;
+		    }
+		  else		/* intersects in the right */
+		    {
+		      tr[tn].u1 = -1;
+		      tr[tn].u0 = tr[t].u1;
+		      tr[t].u1 = tr[t].u0;
+		      tr[t].u0 = tr[t].usave;
+
+		      tr[tr[t].u0].d0 = t;
+		      tr[tr[t].u1].d0 = t;
+		      tr[tr[tn].u0].d0 = tn;		      
+		    }
+		  
+		  tr[t].usave = tr[tn].usave = 0;
+		}
+	      else		/* No usave.... simple case */
+		{
+		  tr[tn].u0 = tr[t].u1;
+		  tr[t].u1 = tr[tn].u1 = -1;
+		  tr[tr[tn].u0].d0 = tn;
+		}
+	    }
+	  else 
+	    {			/* fresh seg. or upward cusp */
+	      int tmp_u = tr[t].u0;
+	      int td0, td1;
+	      if (((td0 = tr[tmp_u].d0) > 0) && 
+		  ((td1 = tr[tmp_u].d1) > 0))
+		{		/* upward cusp */
+		  if ((tr[td0].rseg > 0) &&
+		      !is_left_of(tr[td0].rseg, &s.v1))
+		    {
+		      tr[t].u0 = tr[t].u1 = tr[tn].u1 = -1;
+		      tr[tr[tn].u0].d1 = tn;
+		    }
+		  else		/* cusp going leftwards */
+		    { 
+		      tr[tn].u0 = tr[tn].u1 = tr[t].u1 = -1;
+		      tr[tr[t].u0].d0 = t;
+		    }
+		}
+	      else		/* fresh segment */
+		{
+		  tr[tr[t].u0].d0 = t;
+		  tr[tr[t].u0].d1 = tn;
+		}	      
+	    }
+	  
+	  if (FP_EQUAL(tr[t].lo.y, tr[tlast].lo.y) && 
+	      FP_EQUAL(tr[t].lo.x, tr[tlast].lo.x) && tribot)
+	    {		/* bottom forms a triangle */
+
+	      if (is_swapped)	
+		tmptriseg = seg[segnum].prev;
+	      else
+		tmptriseg = seg[segnum].next;
+	      
+	      if ((tmptriseg > 0) && is_left_of(tmptriseg, &s.v0))
+		{
+				/* L-R downward cusp */
+		  tr[tr[t].d0].u0 = t;
+		  tr[tn].d0 = tr[tn].d1 = -1;
+		}
+	      else
+		{
+				/* R-L downward cusp */
+		  tr[tr[tn].d0].u1 = tn;
+		  tr[t].d0 = tr[t].d1 = -1;
+		}
+	    }
+	  else
+	    {
+	      if ((tr[tr[t].d0].u0 > 0) && (tr[tr[t].d0].u1 > 0))
+		{
+		  if (tr[tr[t].d0].u0 == t) /* passes thru LHS */
+		    {
+		      tr[tr[t].d0].usave = tr[tr[t].d0].u1;
+		      tr[tr[t].d0].uside = S_LEFT;
+		    }
+		  else
+		    {
+		      tr[tr[t].d0].usave = tr[tr[t].d0].u0;
+		      tr[tr[t].d0].uside = S_RIGHT;
+		    }		    
+		}
+	      tr[tr[t].d0].u0 = t;
+	      tr[tr[t].d0].u1 = tn;
+	    }
+	  
+	  t = tr[t].d0;
+	}
+
+
+      else if ((tr[t].d0 <= 0) && (tr[t].d1 > 0))
+	{			/* Only one trapezoid below */
+	  if ((tr[t].u0 > 0) && (tr[t].u1 > 0))
+	    {			/* continuation of a chain from abv. */
+	      if (tr[t].usave > 0) /* three upper neighbours */
+		{
+		  if (tr[t].uside == S_LEFT)
+		    {
+		      tr[tn].u0 = tr[t].u1;
+		      tr[t].u1 = -1;
+		      tr[tn].u1 = tr[t].usave;
+		      
+		      tr[tr[t].u0].d0 = t;
+		      tr[tr[tn].u0].d0 = tn;
+		      tr[tr[tn].u1].d0 = tn;
+		    }
+		  else		/* intersects in the right */
+		    {
+		      tr[tn].u1 = -1;
+		      tr[tn].u0 = tr[t].u1;
+		      tr[t].u1 = tr[t].u0;
+		      tr[t].u0 = tr[t].usave;
+
+		      tr[tr[t].u0].d0 = t;
+		      tr[tr[t].u1].d0 = t;
+		      tr[tr[tn].u0].d0 = tn;		      
+		    }
+		  
+		  tr[t].usave = tr[tn].usave = 0;
+		}
+	      else		/* No usave.... simple case */
+		{
+		  tr[tn].u0 = tr[t].u1;
+		  tr[t].u1 = tr[tn].u1 = -1;
+		  tr[tr[tn].u0].d0 = tn;
+		}
+	    }
+	  else 
+	    {			/* fresh seg. or upward cusp */
+	      int tmp_u = tr[t].u0;
+	      int td0, td1;
+	      if (((td0 = tr[tmp_u].d0) > 0) && 
+		  ((td1 = tr[tmp_u].d1) > 0))
+		{		/* upward cusp */
+		  if ((tr[td0].rseg > 0) &&
+		      !is_left_of(tr[td0].rseg, &s.v1))
+		    {
+		      tr[t].u0 = tr[t].u1 = tr[tn].u1 = -1;
+		      tr[tr[tn].u0].d1 = tn;
+		    }
+		  else 
+		    {
+		      tr[tn].u0 = tr[tn].u1 = tr[t].u1 = -1;
+		      tr[tr[t].u0].d0 = t;
+		    }
+		}
+	      else		/* fresh segment */
+		{
+		  tr[tr[t].u0].d0 = t;
+		  tr[tr[t].u0].d1 = tn;
+		}
+	    }
+	  
+	  if (FP_EQUAL(tr[t].lo.y, tr[tlast].lo.y) && 
+	      FP_EQUAL(tr[t].lo.x, tr[tlast].lo.x) && tribot)
+	    {		/* bottom forms a triangle */
+	      int tmpseg;
+
+	      if (is_swapped)	
+		tmptriseg = seg[segnum].prev;
+	      else
+		tmptriseg = seg[segnum].next;
+
+	      if ((tmpseg > 0) && is_left_of(tmpseg, &s.v0))
+		{
+		  /* L-R downward cusp */
+		  tr[tr[t].d1].u0 = t;
+		  tr[tn].d0 = tr[tn].d1 = -1;
+		}
+	      else
+		{
+		  /* R-L downward cusp */
+		  tr[tr[tn].d1].u1 = tn;
+		  tr[t].d0 = tr[t].d1 = -1;
+		}
+	    }		
+	  else
+	    {
+	      if ((tr[tr[t].d1].u0 > 0) && (tr[tr[t].d1].u1 > 0))
+		{
+		  if (tr[tr[t].d1].u0 == t) /* passes thru LHS */
+		    {
+		      tr[tr[t].d1].usave = tr[tr[t].d1].u1;
+		      tr[tr[t].d1].uside = S_LEFT;
+		    }
+		  else
+		    {
+		      tr[tr[t].d1].usave = tr[tr[t].d1].u0;
+		      tr[tr[t].d1].uside = S_RIGHT;
+		    }		    
+		}
+	      tr[tr[t].d1].u0 = t;
+	      tr[tr[t].d1].u1 = tn;
+	    }
+	  
+	  t = tr[t].d1;
+	}
+
+      /* two trapezoids below. Find out which one is intersected by */
+      /* this segment and proceed down that one */
+      
+      else
+	{
+	  int tmpseg = tr[tr[t].d0].rseg;
+	  double y0, yt;
+	  point_t tmppt;
+	  int tnext, i_d0, i_d1;
+
+	  i_d0 = i_d1 = FALSE;
+	  if (FP_EQUAL(tr[t].lo.y, s.v0.y))
+	    {
+	      if (tr[t].lo.x > s.v0.x)
+		i_d0 = TRUE;
+	      else
+		i_d1 = TRUE;
+	    }
+	  else
+	    {
+	      tmppt.y = y0 = tr[t].lo.y;
+	      yt = (y0 - s.v0.y)/(s.v1.y - s.v0.y);
+	      tmppt.x = s.v0.x + yt * (s.v1.x - s.v0.x);
+	      
+	      if (_less_than(&tmppt, &tr[t].lo))
+		i_d0 = TRUE;
+	      else
+		i_d1 = TRUE;
+	    }
+	  
+	  /* check continuity from the top so that the lower-neighbour */
+	  /* values are properly filled for the upper trapezoid */
+
+	  if ((tr[t].u0 > 0) && (tr[t].u1 > 0))
+	    {			/* continuation of a chain from abv. */
+	      if (tr[t].usave > 0) /* three upper neighbours */
+		{
+		  if (tr[t].uside == S_LEFT)
+		    {
+		      tr[tn].u0 = tr[t].u1;
+		      tr[t].u1 = -1;
+		      tr[tn].u1 = tr[t].usave;
+		      
+		      tr[tr[t].u0].d0 = t;
+		      tr[tr[tn].u0].d0 = tn;
+		      tr[tr[tn].u1].d0 = tn;
+		    }
+		  else		/* intersects in the right */
+		    {
+		      tr[tn].u1 = -1;
+		      tr[tn].u0 = tr[t].u1;
+		      tr[t].u1 = tr[t].u0;
+		      tr[t].u0 = tr[t].usave;
+
+		      tr[tr[t].u0].d0 = t;
+		      tr[tr[t].u1].d0 = t;
+		      tr[tr[tn].u0].d0 = tn;		      
+		    }
+		  
+		  tr[t].usave = tr[tn].usave = 0;
+		}
+	      else		/* No usave.... simple case */
+		{
+		  tr[tn].u0 = tr[t].u1;
+		  tr[tn].u1 = -1;
+		  tr[t].u1 = -1;
+		  tr[tr[tn].u0].d0 = tn;
+		}
+	    }
+	  else 
+	    {			/* fresh seg. or upward cusp */
+	      int tmp_u = tr[t].u0;
+	      int td0, td1;
+	      if (((td0 = tr[tmp_u].d0) > 0) && 
+		  ((td1 = tr[tmp_u].d1) > 0))
+		{		/* upward cusp */
+		  if ((tr[td0].rseg > 0) &&
+		      !is_left_of(tr[td0].rseg, &s.v1))
+		    {
+		      tr[t].u0 = tr[t].u1 = tr[tn].u1 = -1;
+		      tr[tr[tn].u0].d1 = tn;
+		    }
+		  else 
+		    {
+		      tr[tn].u0 = tr[tn].u1 = tr[t].u1 = -1;
+		      tr[tr[t].u0].d0 = t;
+		    }
+		}
+	      else		/* fresh segment */
+		{
+		  tr[tr[t].u0].d0 = t;
+		  tr[tr[t].u0].d1 = tn;
+		}
+	    }
+	  
+	  if (FP_EQUAL(tr[t].lo.y, tr[tlast].lo.y) && 
+	      FP_EQUAL(tr[t].lo.x, tr[tlast].lo.x) && tribot)
+	    {
+	      /* this case arises only at the lowest trapezoid.. i.e.
+		 tlast, if the lower endpoint of the segment is
+		 already inserted in the structure */
+	      
+	      tr[tr[t].d0].u0 = t;
+	      tr[tr[t].d0].u1 = -1;
+	      tr[tr[t].d1].u0 = tn;
+	      tr[tr[t].d1].u1 = -1;
+
+	      tr[tn].d0 = tr[t].d1;
+	      tr[t].d1 = tr[tn].d1 = -1;
+	      
+	      tnext = tr[t].d1;	      
+	    }
+	  else if (i_d0)
+				/* intersecting d0 */
+	    {
+	      tr[tr[t].d0].u0 = t;
+	      tr[tr[t].d0].u1 = tn;
+	      tr[tr[t].d1].u0 = tn;
+	      tr[tr[t].d1].u1 = -1;
+	      
+	      /* new code to determine the bottom neighbours of the */
+	      /* newly partitioned trapezoid */
+	      
+	      tr[t].d1 = -1;
+
+	      tnext = tr[t].d0;
+	    }
+	  else			/* intersecting d1 */
+	    {
+	      tr[tr[t].d0].u0 = t;
+	      tr[tr[t].d0].u1 = -1;
+	      tr[tr[t].d1].u0 = t;
+	      tr[tr[t].d1].u1 = tn;
+
+	      /* new code to determine the bottom neighbours of the */
+	      /* newly partitioned trapezoid */
+	      
+	      tr[tn].d0 = tr[t].d1;
+	      tr[tn].d1 = -1;
+	      
+	      tnext = tr[t].d1;
+	    }	    
+	  
+	  t = tnext;
+	}
+      
+      tr[t_sav].rseg = tr[tn_sav].lseg  = segnum;
+    } /* end-while */
+  
+  /* Now combine those trapezoids which share common segments. We can */
+  /* use the pointers to the parent to connect these together. This */
+  /* works only because all these new trapezoids have been formed */
+  /* due to splitting by the segment, and hence have only one parent */
+
+  tfirstl = tfirst; 
+  tlastl = tlast;
+  merge_trapezoids(segnum, tfirstl, tlastl, S_LEFT);
+  merge_trapezoids(segnum, tfirstr, tlastr, S_RIGHT);
+
+  seg[segnum].is_inserted = TRUE;
+  return 0;
+}
+
+
+/* Update the roots stored for each of the endpoints of the segment.
+ * This is done to speed up the location-query for the endpoint when
+ * the segment is inserted into the trapezoidation subsequently
+ */
+static int find_new_roots(segnum)
+     int segnum;
+{
+  segment_t *s = &seg[segnum];
+  
+  if (s->is_inserted)
+    return 0;
+
+  s->root0 = locate_endpoint(&s->v0, &s->v1, s->root0);
+  s->root0 = tr[s->root0].sink;
+
+  s->root1 = locate_endpoint(&s->v1, &s->v0, s->root1);
+  s->root1 = tr[s->root1].sink;  
+  return 0;
+}
+
+
+/* Main routine to perform trapezoidation */
+int construct_trapezoids(nseg)
+     int nseg;
+{
+  register int i;
+  int root, h;
+  
+  /* Add the first segment and get the query structure and trapezoid */
+  /* list initialised */
+
+  root = init_query_structure(choose_segment());
+
+  for (i = 1; i <= nseg; i++)
+    seg[i].root0 = seg[i].root1 = root;
+  
+  for (h = 1; h <= math_logstar_n(nseg); h++)
+    {
+      for (i = math_N(nseg, h -1) + 1; i <= math_N(nseg, h); i++)
+	add_segment(choose_segment());
+      
+      /* Find a new root for each of the segment endpoints */
+      for (i = 1; i <= nseg; i++)
+	find_new_roots(i);
+    }
+  
+  for (i = math_N(nseg, math_logstar_n(nseg)) + 1; i <= nseg; i++)
+    add_segment(choose_segment());
+
+  return 0;
+}
+
+

Added: trunk/client/sei_interface.h
===================================================================
--- trunk/client/sei_interface.h	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/sei_interface.h	2006-02-17 14:47:50 UTC (rev 75)
@@ -0,0 +1,10 @@
+#ifndef __interface_h
+#define __interface_h
+
+#define TRUE 1
+#define FALSE 0
+
+extern int triangulate_polygon(int, int *, double (*)[2], int (*)[3]);
+extern int is_point_inside_polygon(double *);
+
+#endif /* __interface_h */

Added: trunk/client/sei_misc.c
===================================================================
--- trunk/client/sei_misc.c	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/sei_misc.c	2006-02-17 14:47:50 UTC (rev 75)
@@ -0,0 +1,75 @@
+#include <sei_triangulate.h>
+#include <sys/time.h>
+#include <math.h>
+
+
+static int choose_idx;
+static int permute[SEGSIZE];
+double mlog2(double x) {
+  return log(x)/log(2);
+}
+
+/* Generate a random permutation of the segments 1..n */
+int generate_random_ordering(n)
+     int n;
+{
+  struct timeval tval;
+  struct timezone tzone;
+  register int i;
+  int m, st[SEGSIZE], *p;
+  
+  choose_idx = 1;
+  gettimeofday(&tval, &tzone);
+  srand48(tval.tv_sec);
+
+  for (i = 0; i <= n; i++)
+    st[i] = i;
+
+  p = st;
+  for (i = 1; i <= n; i++, p++)
+    {
+      m = lrand48() % (n + 1 - i) + 1;
+      permute[i] = p[m];
+      if (m != 1)
+	p[m] = p[1];
+    }
+  return 0;
+}
+
+  
+/* Return the next segment in the generated random ordering of all the */
+/* segments in S */
+int choose_segment()
+{
+  int i;
+
+  errds(VLOW,"sei:choose_segment()","%d", permute[choose_idx]);
+  return permute[choose_idx++];
+}
+
+/* Get log*n for given n */
+int math_logstar_n(n)
+     int n;
+{
+  register int i;
+  double v;
+  
+  for (i = 0, v = (double) n; v >= 1; i++)
+    v = mlog2(v);
+  
+  return (i - 1);
+}
+  
+
+int math_N(n, h)
+     int n;
+     int h;
+{
+  register int i;
+  double v;
+
+  for (i = 0, v = (int) n; i < h; i++)
+    v = mlog2(v);
+  
+  return (int) ceil((double) 1.0*n/v);
+}

Added: trunk/client/sei_monotone.c
===================================================================
--- trunk/client/sei_monotone.c	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/sei_monotone.c	2006-02-17 14:47:50 UTC (rev 75)
@@ -0,0 +1,718 @@
+#include <sei_triangulate.h>
+#include <math.h>
+
+#define CROSS_SINE(v0, v1) ((v0).x * (v1).y - (v1).x * (v0).y)
+#define LENGTH(v0) (sqrt((v0).x * (v0).x + (v0).y * (v0).y))
+
+static monchain_t mchain[TRSIZE]; /* Table to hold all the monotone */
+				  /* polygons . Each monotone polygon */
+				  /* is a circularly linked list */
+
+static vertexchain_t vert[SEGSIZE]; /* chain init. information. This */
+				    /* is used to decide which */
+				    /* monotone polygon to split if */
+				    /* there are several other */
+				    /* polygons touching at the same */
+				    /* vertex  */
+
+static int mon[SEGSIZE];	/* contains position of any vertex in */
+				/* the monotone chain for the polygon */
+static int visited[TRSIZE];
+static int chain_idx, op_idx, mon_idx;
+
+
+static int triangulate_single_polygon(int, int, int, int (*)[3]);
+static int traverse_polygon(int, int, int, int);
+
+/* Function returns TRUE if the trapezoid lies inside the polygon */
+static int inside_polygon(t)
+     trap_t *t;
+{
+  int rseg = t->rseg;
+
+  if (t->state == ST_INVALID)
+    return 0;
+
+  if ((t->lseg <= 0) || (t->rseg <= 0))
+    return 0;
+  
+  if (((t->u0 <= 0) && (t->u1 <= 0)) || 
+      ((t->d0 <= 0) && (t->d1 <= 0))) /* triangle */
+    return (_greater_than(&seg[rseg].v1, &seg[rseg].v0));
+  
+  return 0;
+}
+
+
+/* return a new mon structure from the table */
+static int newmon()
+{
+  return ++mon_idx;
+}
+
+
+/* return a new chain element from the table */
+static int new_chain_element()
+{
+  return ++chain_idx;
+}
+
+
+static double get_angle(vp0, vpnext, vp1)
+     point_t *vp0;
+     point_t *vpnext;
+     point_t *vp1;
+{
+  point_t v0, v1;
+  
+  v0.x = vpnext->x - vp0->x;
+  v0.y = vpnext->y - vp0->y;
+
+  v1.x = vp1->x - vp0->x;
+  v1.y = vp1->y - vp0->y;
+
+  if (CROSS_SINE(v0, v1) >= 0)	/* sine is positive */
+    return DOT(v0, v1)/LENGTH(v0)/LENGTH(v1);
+  else
+    return (-1.0 * DOT(v0, v1)/LENGTH(v0)/LENGTH(v1) - 2);
+}
+
+
+/* (v0, v1) is the new diagonal to be added to the polygon. Find which */
+/* chain to use and return the positions of v0 and v1 in p and q */ 
+static int get_vertex_positions(v0, v1, ip, iq)
+     int v0;
+     int v1;
+     int *ip;
+     int *iq;
+{
+  vertexchain_t *vp0, *vp1;
+  register int i;
+  double angle, temp;
+  int tp, tq;
+
+  vp0 = &vert[v0];
+  vp1 = &vert[v1];
+  
+  /* p is identified as follows. Scan from (v0, v1) rightwards till */
+  /* you hit the first segment starting from v0. That chain is the */
+  /* chain of our interest */
+  
+  angle = -4.0;
+  for (i = 0; i < 4; i++)
+    {
+      if (vp0->vnext[i] <= 0)
+	continue;
+      if ((temp = get_angle(&vp0->pt, &(vert[vp0->vnext[i]].pt), 
+			    &vp1->pt)) > angle)
+	{
+	  angle = temp;
+	  tp = i;
+	}
+    }
+
+  *ip = tp;
+
+  /* Do similar actions for q */
+
+  angle = -4.0;
+  for (i = 0; i < 4; i++)
+    {
+      if (vp1->vnext[i] <= 0)
+	continue;      
+      if ((temp = get_angle(&vp1->pt, &(vert[vp1->vnext[i]].pt), 
+			    &vp0->pt)) > angle)
+	{
+	  angle = temp;
+	  tq = i;
+	}
+    }
+
+  *iq = tq;
+
+  return 0;
+}
+
+  
+/* v0 and v1 are specified in anti-clockwise order with respect to 
+ * the current monotone polygon mcur. Split the current polygon into 
+ * two polygons using the diagonal (v0, v1) 
+ */
+static int make_new_monotone_poly(mcur, v0, v1)
+     int mcur;
+     int v0;
+     int v1;
+{
+  int p, q, ip, iq;
+  int mnew = newmon();
+  int i, j, nf0, nf1;
+  vertexchain_t *vp0, *vp1;
+  
+  vp0 = &vert[v0];
+  vp1 = &vert[v1];
+
+  get_vertex_positions(v0, v1, &ip, &iq);
+
+  p = vp0->vpos[ip];
+  q = vp1->vpos[iq];
+
+  /* At this stage, we have got the positions of v0 and v1 in the */
+  /* desired chain. Now modify the linked lists */
+
+  i = new_chain_element();	/* for the new list */
+  j = new_chain_element();
+
+  mchain[i].vnum = v0;
+  mchain[j].vnum = v1;
+
+  mchain[i].next = mchain[p].next;
+  mchain[mchain[p].next].prev = i;
+  mchain[i].prev = j;
+  mchain[j].next = i;
+  mchain[j].prev = mchain[q].prev;
+  mchain[mchain[q].prev].next = j;
+
+  mchain[p].next = q;
+  mchain[q].prev = p;
+
+  nf0 = vp0->nextfree;
+  nf1 = vp1->nextfree;
+
+  vp0->vnext[ip] = v1;
+
+  vp0->vpos[nf0] = i;
+  vp0->vnext[nf0] = mchain[mchain[i].next].vnum;
+  vp1->vpos[nf1] = j;
+  vp1->vnext[nf1] = v0;
+
+  vp0->nextfree++;
+  vp1->nextfree++;
+
+  errds(VLOW,"sei:make_poly()",": mcur = %d, (v0, v1) = (%d, %d)", 			
+	  mcur, v0, v1);
+  errds(VLOW,"sei:make_poly()","next posns = (p, q) = (%d, %d)", p, q);
+
+  mon[mcur] = p;
+  mon[mnew] = i;
+  return mnew;
+}
+
+/* Main routine to get monotone polygons from the trapezoidation of 
+ * the polygon.
+ */
+
+int monotonate_trapezoids(n)
+     int n;
+{
+  register int i;
+  int tr_start;
+
+  memset((void *)vert, 0, sizeof(vert));
+  memset((void *)visited, 0, sizeof(visited));
+  memset((void *)mchain, 0, sizeof(mchain));
+  memset((void *)mon, 0, sizeof(mon));
+  
+  /* First locate a trapezoid which lies inside the polygon */
+  /* and which is triangular */
+  for (i = 0; i < TRSIZE; i++)
+    if (inside_polygon(&tr[i]))
+      break;
+  tr_start = i;
+  
+  /* Initialise the mon data-structure and start spanning all the */
+  /* trapezoids within the polygon */
+
+#if 0
+  for (i = 1; i <= n; i++)
+    {
+      mchain[i].prev = i - 1;
+      mchain[i].next = i + 1;
+      mchain[i].vnum = i;
+      vert[i].pt = seg[i].v0;
+      vert[i].vnext[0] = i + 1;	/* next vertex */
+      vert[i].vpos[0] = i;	/* locn. of next vertex */
+      vert[i].nextfree = 1;
+    }
+  mchain[1].prev = n;
+  mchain[n].next = 1;
+  vert[n].vnext[0] = 1;
+  vert[n].vpos[0] = n;
+  chain_idx = n;
+  mon_idx = 0;
+  mon[0] = 1;			/* position of any vertex in the first */
+				/* chain  */
+
+#else
+
+  for (i = 1; i <= n; i++)
+    {
+      mchain[i].prev = seg[i].prev;
+      mchain[i].next = seg[i].next;
+      mchain[i].vnum = i;
+      vert[i].pt = seg[i].v0;
+      vert[i].vnext[0] = seg[i].next; /* next vertex */
+      vert[i].vpos[0] = i;	/* locn. of next vertex */
+      vert[i].nextfree = 1;
+    }
+
+  chain_idx = n;
+  mon_idx = 0;
+  mon[0] = 1;			/* position of any vertex in the first */
+				/* chain  */
+
+#endif
+  
+  /* traverse the polygon */
+  if (tr[tr_start].u0 > 0)
+    traverse_polygon(0, tr_start, tr[tr_start].u0, TR_FROM_UP);
+  else if (tr[tr_start].d0 > 0)
+    traverse_polygon(0, tr_start, tr[tr_start].d0, TR_FROM_DN);
+  
+  /* return the number of polygons created */
+  return newmon();
+}
+
+
+/* recursively visit all the trapezoids */
+static int traverse_polygon(mcur, trnum, from, dir)
+     int mcur;
+     int trnum;
+     int from;
+     int dir;
+{
+  trap_t *t = &tr[trnum];
+  int howsplit, mnew;
+  int v0, v1, v0next, v1next;
+  int retval, tmp;
+  int do_switch = FALSE;
+
+  if ((trnum <= 0) || visited[trnum])
+    return 0;
+
+  visited[trnum] = TRUE;
+  
+  /* We have much more information available here. */
+  /* rseg: goes upwards   */
+  /* lseg: goes downwards */
+
+  /* Initially assume that dir = TR_FROM_DN (from the left) */
+  /* Switch v0 and v1 if necessary afterwards */
+
+
+  /* special cases for triangles with cusps at the opposite ends. */
+  /* take care of this first */
+  if ((t->u0 <= 0) && (t->u1 <= 0))
+    {
+      if ((t->d0 > 0) && (t->d1 > 0)) /* downward opening triangle */
+	{
+	  v0 = tr[t->d1].lseg;
+	  v1 = t->lseg;
+	  if (from == t->d1)
+	    {
+	      do_switch = TRUE;
+	      mnew = make_new_monotone_poly(mcur, v1, v0);
+	      traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+	      traverse_polygon(mnew, t->d0, trnum, TR_FROM_UP);	    
+	    }
+	  else
+	    {
+	      mnew = make_new_monotone_poly(mcur, v0, v1);
+	      traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+	      traverse_polygon(mnew, t->d1, trnum, TR_FROM_UP);
+	    }
+	}
+      else
+	{
+	  retval = SP_NOSPLIT;	/* Just traverse all neighbours */
+	  traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+	  traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+	  traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+	  traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+	}
+    }
+  
+  else if ((t->d0 <= 0) && (t->d1 <= 0))
+    {
+      if ((t->u0 > 0) && (t->u1 > 0)) /* upward opening triangle */
+	{
+	  v0 = t->rseg;
+	  v1 = tr[t->u0].rseg;
+	  if (from == t->u1)
+	    {
+	      do_switch = TRUE;
+	      mnew = make_new_monotone_poly(mcur, v1, v0);
+	      traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+	      traverse_polygon(mnew, t->u0, trnum, TR_FROM_DN);	    
+	    }
+	  else
+	    {
+	      mnew = make_new_monotone_poly(mcur, v0, v1);
+	      traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+	      traverse_polygon(mnew, t->u1, trnum, TR_FROM_DN);
+	    }
+	}
+      else
+	{
+	  retval = SP_NOSPLIT;	/* Just traverse all neighbours */
+	  traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+	  traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+	  traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+	  traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+	}
+    }
+  
+  else if ((t->u0 > 0) && (t->u1 > 0)) 
+    {
+      if ((t->d0 > 0) && (t->d1 > 0)) /* downward + upward cusps */
+	{
+	  v0 = tr[t->d1].lseg;
+	  v1 = tr[t->u0].rseg;
+	  retval = SP_2UP_2DN;
+	  if (((dir == TR_FROM_DN) && (t->d1 == from)) ||
+	      ((dir == TR_FROM_UP) && (t->u1 == from)))
+	    {
+	      do_switch = TRUE;
+	      mnew = make_new_monotone_poly(mcur, v1, v0);
+	      traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+	      traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+	      traverse_polygon(mnew, t->u0, trnum, TR_FROM_DN);
+	      traverse_polygon(mnew, t->d0, trnum, TR_FROM_UP);
+	    }
+	  else
+	    {
+	      mnew = make_new_monotone_poly(mcur, v0, v1);
+	      traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+	      traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+	      traverse_polygon(mnew, t->u1, trnum, TR_FROM_DN);
+	      traverse_polygon(mnew, t->d1, trnum, TR_FROM_UP);	      
+	    }
+	}
+      else			/* only downward cusp */
+	{
+	  if (_equal_to(&t->lo, &seg[t->lseg].v1))
+	    {
+	      v0 = tr[t->u0].rseg;
+	      v1 = seg[t->lseg].next;
+
+	      retval = SP_2UP_LEFT;
+	      if ((dir == TR_FROM_UP) && (t->u0 == from))
+		{
+		  do_switch = TRUE;
+		  mnew = make_new_monotone_poly(mcur, v1, v0);
+		  traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->d0, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->u1, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->d1, trnum, TR_FROM_UP);
+		}
+	      else
+		{
+		  mnew = make_new_monotone_poly(mcur, v0, v1);
+		  traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+		  traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+		  traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->u0, trnum, TR_FROM_DN);
+		}
+	    }
+	  else
+	    {
+	      v0 = t->rseg;
+	      v1 = tr[t->u0].rseg;	
+	      retval = SP_2UP_RIGHT;
+	      if ((dir == TR_FROM_UP) && (t->u1 == from))
+		{
+		  do_switch = TRUE;
+		  mnew = make_new_monotone_poly(mcur, v1, v0);
+		  traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->d1, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->d0, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->u0, trnum, TR_FROM_DN);
+		}
+	      else
+		{
+		  mnew = make_new_monotone_poly(mcur, v0, v1);
+		  traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+		  traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->u1, trnum, TR_FROM_DN);
+		}
+	    }
+	}
+    }
+  else if ((t->u0 > 0) || (t->u1 > 0)) /* no downward cusp */
+    {
+      if ((t->d0 > 0) && (t->d1 > 0)) /* only upward cusp */
+	{
+	  if (_equal_to(&t->hi, &seg[t->lseg].v0))
+	    {
+	      v0 = tr[t->d1].lseg;
+	      v1 = t->lseg;
+	      retval = SP_2DN_LEFT;
+	      if (!((dir == TR_FROM_DN) && (t->d0 == from)))
+		{
+		  do_switch = TRUE;
+		  mnew = make_new_monotone_poly(mcur, v1, v0);
+		  traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+		  traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+		  traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->d0, trnum, TR_FROM_UP);
+		}
+	      else
+		{
+		  mnew = make_new_monotone_poly(mcur, v0, v1);
+		  traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->u1, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->d1, trnum, TR_FROM_UP);	      
+		}
+	    }
+	  else
+	    {
+	      v0 = tr[t->d1].lseg;
+	      v1 = seg[t->rseg].next;
+
+	      retval = SP_2DN_RIGHT;	    
+	      if ((dir == TR_FROM_DN) && (t->d1 == from))
+		{
+		  do_switch = TRUE;
+		  mnew = make_new_monotone_poly(mcur, v1, v0);
+		  traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->u1, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->d0, trnum, TR_FROM_UP);
+		}
+	      else
+		{
+		  mnew = make_new_monotone_poly(mcur, v0, v1);
+		  traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+		  traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->d1, trnum, TR_FROM_UP);
+		}
+	    }
+	}
+      else			/* no cusp */
+	{
+	  if (_equal_to(&t->hi, &seg[t->lseg].v0) &&
+	      _equal_to(&t->lo, &seg[t->rseg].v0))
+	    {
+	      v0 = t->rseg;
+	      v1 = t->lseg;
+	      retval = SP_SIMPLE_LRDN;
+	      if (dir == TR_FROM_UP)
+		{
+		  do_switch = TRUE;
+		  mnew = make_new_monotone_poly(mcur, v1, v0);
+		  traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->d1, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->d0, trnum, TR_FROM_UP);
+		}
+	      else
+		{
+		  mnew = make_new_monotone_poly(mcur, v0, v1);
+		  traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+		  traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->u1, trnum, TR_FROM_DN);
+		}
+	    }
+	  else if (_equal_to(&t->hi, &seg[t->rseg].v1) &&
+		   _equal_to(&t->lo, &seg[t->lseg].v1))
+	    {
+	      v0 = seg[t->rseg].next;
+	      v1 = seg[t->lseg].next;
+
+	      retval = SP_SIMPLE_LRUP;
+	      if (dir == TR_FROM_UP)
+		{
+		  do_switch = TRUE;
+		  mnew = make_new_monotone_poly(mcur, v1, v0);
+		  traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->d1, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->d0, trnum, TR_FROM_UP);
+		}
+	      else
+		{
+		  mnew = make_new_monotone_poly(mcur, v0, v1);
+		  traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);
+		  traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+		  traverse_polygon(mnew, t->u0, trnum, TR_FROM_DN);
+		  traverse_polygon(mnew, t->u1, trnum, TR_FROM_DN);
+		}
+	    }
+	  else			/* no split possible */
+	    {
+	      retval = SP_NOSPLIT;
+	      traverse_polygon(mcur, t->u0, trnum, TR_FROM_DN);
+	      traverse_polygon(mcur, t->d0, trnum, TR_FROM_UP);
+	      traverse_polygon(mcur, t->u1, trnum, TR_FROM_DN);
+	      traverse_polygon(mcur, t->d1, trnum, TR_FROM_UP);	      	      
+	    }
+	}
+    }
+
+  return retval;
+}
+
+
+/* For each monotone polygon, find the ymax and ymin (to determine the */
+/* two y-monotone chains) and pass on this monotone polygon for greedy */
+/* triangulation. */
+/* Take care not to triangulate duplicate monotone polygons */
+
+int triangulate_monotone_polygons(nvert, nmonpoly, op)
+     int nvert;
+     int nmonpoly;
+     int op[][3];
+{
+  register int i;
+  point_t ymax, ymin;
+  int p, vfirst, posmax, posmin, v;
+  int vcount, processed;
+
+
+  op_idx = 0;
+  for (i = 0; i < nmonpoly; i++)
+    {
+      vcount = 1;
+      processed = FALSE;
+      vfirst = mchain[mon[i]].vnum;
+      ymax = ymin = vert[vfirst].pt;
+      posmax = posmin = mon[i];
+      mchain[mon[i]].marked = TRUE;
+      p = mchain[mon[i]].next;
+      while ((v = mchain[p].vnum) != vfirst)
+	{
+	 if (mchain[p].marked)
+	   {
+	     processed = TRUE;
+	     break;		/* break from while */
+	   }
+	 else
+	   mchain[p].marked = TRUE;
+
+	  if (_greater_than(&vert[v].pt, &ymax))
+	    {
+	      ymax = vert[v].pt;
+	      posmax = p;
+	    }
+	  if (_less_than(&vert[v].pt, &ymin))
+	    {
+	      ymin = vert[v].pt;
+	      posmin = p;
+	    }
+	  p = mchain[p].next;
+	  vcount++;
+       }
+
+      if (processed)		/* Go to next polygon */
+	continue;
+      
+      if (vcount == 3)		/* already a triangle */
+	{
+	  op[op_idx][0] = mchain[p].vnum;
+	  op[op_idx][1] = mchain[mchain[p].next].vnum;
+	  op[op_idx][2] = mchain[mchain[p].prev].vnum;
+	  op_idx++;
+	}
+      else			/* triangulate the polygon */
+	{
+	  v = mchain[mchain[posmax].next].vnum;
+	  if (_equal_to(&vert[v].pt, &ymin))
+	    {			/* LHS is a single line */
+	      triangulate_single_polygon(nvert, posmax, TRI_LHS, op);
+	    }
+	  else
+	    triangulate_single_polygon(nvert, posmax, TRI_RHS, op);
+	}
+    }
+  
+  for (i = 0; i < op_idx; i++)
+    errds(VLOW,"sei:triangulate_monotone_polygons()","tri #%d: (%d, %d, %d)\n", i, op[i][0], op[i][1],
+	   op[i][2]);
+  return op_idx;
+}
+
+
+/* A greedy corner-cutting algorithm to triangulate a y-monotone 
+ * polygon in O(n) time.
+ * Joseph O-Rourke, Computational Geometry in C.
+ */
+static int triangulate_single_polygon(nvert, posmax, side, op)
+     int nvert;
+     int posmax;
+     int side;
+     int op[][3];
+{
+  register int v;
+  int rc[SEGSIZE], ri = 0;	/* reflex chain */
+  int endv, tmp, vpos;
+  
+  if (side == TRI_RHS)		/* RHS segment is a single segment */
+    {
+      rc[0] = mchain[posmax].vnum;
+      tmp = mchain[posmax].next;
+      rc[1] = mchain[tmp].vnum;
+      ri = 1;
+      
+      vpos = mchain[tmp].next;
+      v = mchain[vpos].vnum;
+      
+      if ((endv = mchain[mchain[posmax].prev].vnum) == 0)
+	endv = nvert;
+    }
+  else				/* LHS is a single segment */
+    {
+      tmp = mchain[posmax].next;
+      rc[0] = mchain[tmp].vnum;
+      tmp = mchain[tmp].next;
+      rc[1] = mchain[tmp].vnum;
+      ri = 1;
+
+      vpos = mchain[tmp].next;
+      v = mchain[vpos].vnum;
+
+      endv = mchain[posmax].vnum;
+    }
+  
+  while ((v != endv) || (ri > 1))
+    {
+      if (ri > 0)		/* reflex chain is non-empty */
+	{
+	  if (CROSS(vert[v].pt, vert[rc[ri - 1]].pt, 
+		    vert[rc[ri]].pt) > 0)
+	    {			/* convex corner: cut if off */
+	      op[op_idx][0] = rc[ri - 1];
+	      op[op_idx][1] = rc[ri];
+	      op[op_idx][2] = v;
+	      op_idx++;	     
+	      ri--;
+	    }
+	  else		/* non-convex */
+	    {		/* add v to the chain */
+	      ri++;
+	      rc[ri] = v;
+	      vpos = mchain[vpos].next;
+	      v = mchain[vpos].vnum;
+	    }
+	}
+      else			/* reflex-chain empty: add v to the */
+	{			/* reflex chain and advance it  */
+	  rc[++ri] = v;
+	  vpos = mchain[vpos].next;
+	  v = mchain[vpos].vnum;
+	}
+    } /* end-while */
+  
+  /* reached the bottom vertex. Add in the triangle formed */
+  op[op_idx][0] = rc[ri - 1];
+  op[op_idx][1] = rc[ri];
+  op[op_idx][2] = v;
+  op_idx++;	     
+  ri--;
+  
+  return 0;
+}
+
+

Added: trunk/client/sei_tri.c
===================================================================
--- trunk/client/sei_tri.c	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/sei_tri.c	2006-02-17 14:47:50 UTC (rev 75)
@@ -0,0 +1,131 @@
+#include <sei_triangulate.h>
+#include <sys/time.h>
+
+
+static int initialise(n)
+     int n;
+{
+  register int i;
+
+  for (i = 1; i <= n; i++)
+    seg[i].is_inserted = FALSE;
+
+  generate_random_ordering(n);
+  
+  return 0;
+}
+
+/* Input specified as contours.
+ * Outer contour must be anti-clockwise.
+ * All inner contours must be clockwise.
+ *  
+ * Every contour is specified by giving all its points in order. No
+ * point shoud be repeated. i.e. if the outer contour is a square,
+ * only the four distinct endpoints shopudl be specified in order.
+ *  
+ * ncontours: #contours
+ * cntr: An array describing the number of points in each
+ *	 contour. Thus, cntr[i] = #points in the i'th contour.
+ * vertices: Input array of vertices. Vertices for each contour
+ *           immediately follow those for previous one. Array location
+ *           vertices[0] must NOT be used (i.e. i/p starts from
+ *           vertices[1] instead. The output triangles are
+ *	     specified  w.r.t. the indices of these vertices.
+ * triangles: Output array to hold triangles.
+ *  
+ * Enough space must be allocated for all the arrays before calling
+ * this routine
+ */
+
+
+int sei_triangulate_polygon(ncontours, cntr, vertices, triangles)
+     int ncontours;
+     int cntr[];
+     double (*vertices)[2];
+     int (*triangles)[3];
+{
+  register int i;
+  int nmonpoly, ccount, npoints, genus;
+  int n;
+
+  memset((void *)seg, 0, sizeof(seg));
+  ccount = 0;
+  i = 1;
+  
+  while (ccount < ncontours)
+    {
+      int j;
+      int first, last;
+
+      npoints = cntr[ccount];
+      first = i;
+      last = first + npoints - 1;
+      for (j = 0; j < npoints; j++, i++)
+	{
+	  seg[i].v0.x = vertices[i][0];
+	  seg[i].v0.y = vertices[i][1];
+
+	  if (i == last)
+	    {
+	      seg[i].next = first;
+	      seg[i].prev = i-1;
+	      seg[i-1].v1 = seg[i].v0;
+	    }
+	  else if (i == first)
+	    {
+	      seg[i].next = i+1;
+	      seg[i].prev = last;
+	      seg[last].v1 = seg[i].v0;
+	    }
+	  else
+	    {
+	      seg[i].prev = i-1;
+	      seg[i].next = i+1;
+	      seg[i-1].v1 = seg[i].v0;
+	    }
+	  
+	  seg[i].is_inserted = FALSE;
+	}
+      
+      ccount++;
+    }
+  
+  genus = ncontours - 1;
+  n = i-1;
+
+  initialise(n);
+  construct_trapezoids(n);
+  nmonpoly = monotonate_trapezoids(n);
+  return(triangulate_monotone_polygons(n, nmonpoly, triangles));
+}
+
+
+/* This function returns TRUE or FALSE depending upon whether the 
+ * vertex is inside the polygon or not. The polygon must already have
+ * been triangulated before this routine is called.
+ * This routine will always detect all the points belonging to the 
+ * set (polygon-area - polygon-boundary). The return value for points 
+ * on the boundary is not consistent!!!
+ */
+
+int is_point_inside_polygon(vertex)
+     double vertex[2];
+{
+  point_t v;
+  int trnum, rseg;
+  trap_t *t;
+
+  v.x = vertex[0];
+  v.y = vertex[1];
+  
+  trnum = locate_endpoint(&v, &v, 1);
+  t = &tr[trnum];
+  
+  if (t->state == ST_INVALID)
+    return FALSE;
+  
+  if ((t->lseg <= 0) || (t->rseg <= 0))
+    return FALSE;
+  rseg = t->rseg;
+  return _greater_than_equal_to(&seg[rseg].v1, &seg[rseg].v0);
+}

Added: trunk/client/sei_triangulate.h
===================================================================
--- trunk/client/sei_triangulate.h	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/sei_triangulate.h	2006-02-17 14:47:50 UTC (rev 75)
@@ -0,0 +1,163 @@
+#ifndef _triangulate_h
+#define _triangulate_h
+
+#include <sys/types.h>
+#include <stdlib.h>
+#include <stdio.h>
+#include "s3d.h"
+#include "s3dlib.h"
+
+typedef struct {
+  double x, y;
+} point_t, vector_t;
+
+
+/* Segment attributes */
+
+typedef struct {	
+  point_t v0, v1;		/* two endpoints */
+  int is_inserted;		/* inserted in trapezoidation yet ? */
+  int root0, root1;		/* root nodes in Q */
+  int next;			/* Next logical segment */
+  int prev;			/* Previous segment */
+} segment_t;
+
+
+/* Trapezoid attributes */
+
+typedef struct {
+  int lseg, rseg;		/* two adjoining segments */
+  point_t hi, lo;		/* max/min y-values */
+  int u0, u1;
+  int d0, d1;
+  int sink;			/* pointer to corresponding in Q */
+  int usave, uside;		/* I forgot what this means */
+  int state;
+} trap_t;
+
+
+/* Node attributes for every node in the query structure */
+
+typedef struct {
+  int nodetype;			/* Y-node or S-node */
+  int segnum;
+  point_t yval;
+  int trnum;
+  int parent;			/* doubly linked DAG */
+  int left, right;		/* children */
+} node_t;
+
+
+typedef struct {
+  int vnum;
+  int next;			/* Circularly linked list  */
+  int prev;			/* describing the monotone */
+  int marked;			/* polygon */
+} monchain_t;			
+
+
+typedef struct {
+  point_t pt;
+  int vnext[4];			/* next vertices for the 4 chains */
+  int vpos[4];			/* position of v in the 4 chains */
+  int nextfree;
+} vertexchain_t;
+
+#ifdef DEBUG
+#undef DEBUG
+#endif
+/* Node types */
+
+#define T_X     1
+#define T_Y     2
+#define T_SINK  3
+
+
+#define SEGSIZE SEI_SS	/* max# of segments. Determines how */
+						/* many points can be specified as */
+						/* input. If your datasets have large */
+						/* number of points, increase this */
+						/* value accordingly. */
+
+#define QSIZE   8*SEGSIZE	/* maximum table sizes */
+#define TRSIZE  4*SEGSIZE	/* max# trapezoids */
+
+
+#define TRUE  1
+#define FALSE 0
+
+
+#define FIRSTPT 1		/* checking whether pt. is inserted */ 
+#define LASTPT  2
+
+
+#define INFINITY 1<<30
+#define C_EPS 1.0e-7		/* tolerance value: Used for making */
+							/* all decisions about collinearity or */
+							/* left/right of segment. Decrease */
+							/* this value if the input points are */
+							/* spaced very close together */
+
+
+#define S_LEFT 1		/* for merge-direction */
+#define S_RIGHT 2
+
+
+#define ST_VALID 1		/* for trapezium state */
+#define ST_INVALID 2
+
+
+#define SP_SIMPLE_LRUP 1	/* for splitting trapezoids */
+#define SP_SIMPLE_LRDN 2
+#define SP_2UP_2DN     3
+#define SP_2UP_LEFT    4
+#define SP_2UP_RIGHT   5
+#define SP_2DN_LEFT    6
+#define SP_2DN_RIGHT   7
+#define SP_NOSPLIT    -1	
+
+#define TR_FROM_UP 1		/* for traverse-direction */
+#define TR_FROM_DN 2
+
+#define TRI_LHS 1
+#define TRI_RHS 2
+
+
+#define MAX(a, b) (((a) > (b)) ? (a) : (b))
+#define MIN(a, b) (((a) < (b)) ? (a) : (b))
+
+#define CROSS(v0, v1, v2) (((v1).x - (v0).x)*((v2).y - (v0).y) - \
+			   ((v1).y - (v0).y)*((v2).x - (v0).x))
+
+#define DOT(v0, v1) ((v0).x * (v1).x + (v0).y * (v1).y)
+
+#define FP_EQUAL(s, t) (fabs(s - t) <= C_EPS)
+
+
+
+/* Global variables */
+
+extern node_t qs[QSIZE];		/* Query structure */
+extern trap_t tr[TRSIZE];		/* Trapezoid structure */
+extern segment_t seg[SEGSIZE];		/* Segment table */
+
+
+/* Functions */
+
+extern int monotonate_trapezoids(int);
+extern int triangulate_monotone_polygons(int, int, int (*)[3]);
+
+extern int _greater_than(point_t *, point_t *);
+extern int _equal_to(point_t *, point_t *);
+extern int _greater_than_equal_to(point_t *, point_t *);
+extern int _less_than(point_t *, point_t *);
+extern int locate_endpoint(point_t *, point_t *, int);
+extern int construct_trapezoids(int);
+
+extern int generate_random_ordering(int);
+extern int choose_segment(void);
+extern int read_segments(char *, int *);
+extern int math_logstar_n(int);
+extern int math_N(int, int);
+
+#endif /* triangulate_h */

Deleted: trunk/client/tesselate.c
===================================================================
--- trunk/client/tesselate.c	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/client/tesselate.c	2006-02-17 14:47:50 UTC (rev 75)
@@ -1,153 +0,0 @@
-#include <unistd.h> /* sleep */
-
-#include "s3d.h"
-#include "s3dlib.h"
-
-static int _s3d_tesssub(struct tessp_t *t, struct t_buf *b,int s);
-static int _s3d_addtri(struct tessp_t *t, struct t_buf *b,int p, int i, int n);
-
-
-static void tessdebug(struct tessp_t *t, struct t_buf *b)
-{
-	int i,n,p;
-	for (i=0;i<b->vn;i++)
-	{
-		n=t[i].next;
-		p=t[i].prev;
-		if ((i==n) && (i==p))
-			dprintf(HIGH,"[D]ebug %d %d %d [done]",p,i,n);
-		else
-			dprintf(HIGH,"[D]ebug %d %d %d %3.3f %3.3f",p,i,n,b->vbuf[i*3]*10,b->vbuf[i*3+1]*10);
-	}
-}
-
-#define POINT_DIR(p,i,n) 	((b->vbuf[i*3]-b->vbuf[p*3]) * (b->vbuf[p*3+1]-b->vbuf[n*3+1]) - (b->vbuf[i*3+1]-b->vbuf[p*3+1]) * (b->vbuf[p*3]-b->vbuf[n*3]))
-static int _s3d_addtri(struct tessp_t *t, struct t_buf *b,int p, int i, int n)
-{
-	int j,jp,nn,jn,jp2;
-	float d1, d2, d3;
-	dprintf(HIGH,"[P]rocessing polygon %d %d %d",p,i,n);
-	/* check if there is a point in the triangle ... */
-	for (j=0;j<b->vn;j++)
-	{
-		if ((j!=i) && (j!=n) && (j!=p))
-		{
-			d1=POINT_DIR(p,i,j);
-			d2=POINT_DIR(i,n,j);
-			d3=POINT_DIR(n,p,j);
-			if ((d1>0) && (d2>0) && (d3>0))
-					{
-						dprintf(HIGH,"%d between, break!",j);
-						if (j==t[p].prev)
-						{
-							dprintf(HIGH,"[I]solating %d (%d -> %d)",p,j,i);
-							if (_s3d_addtri(t,b,j,p,i))
-							{
-								t[p].next=p; /* p is out now ... */
-								t[p].prev=p; 
-							}
-						} else if ((t[n].next)==j)
-						{
-							/* we only need one polygon here */
-							dprintf(HIGH,"[I]solating %d (%d -> %d)",n,i,j);
-							if (_s3d_addtri(t,b,i,n,j))
-							{
-								t[n].next=n; /* n is out now ... */
-								t[n].prev=n; 
-							}
-
-						} else {
-							jp=t[j].prev;
-							nn=t[n].next;
-							/* we need 2 polygons to split properly */
-							dprintf(HIGH,"[1]rerouting (%d -> %d)",i,j);
-							t[n].next=j;
-							t[j].prev=n;
-							_s3d_addtri(t,b,i,n,j);
-							jn=t[j].next;
-							jp2=t[j].prev;
-							dprintf(HIGH,"[2]rerouting (%d -> %d)",jp,n);
-							/* redo */
-							t[j].prev=jp;
-							t[n].next=nn;
-							
-							t[j].next=n;
-							t[n].prev=j;
-							_s3d_addtri(t,b,jp,j,n);
-							t[j].next=jn;
-							t[j].prev=jp2;
-						}
-						return(0);
-					}
-		}
-	}
-	/* there wasn't anything  between, we can savely build the polygon .... */
-	dprintf(HIGH,"[B]uilding polygon %d %d %d [nr. %d]",p,i,n,b->pn);
-	t[p].next=n;
-	t[n].prev=p;
-	b->pbuf[b->pn*4]=p;
-	b->pbuf[b->pn*4+1]=i;
-	b->pbuf[b->pn*4+2]=n;
-	b->pbuf[b->pn*4+3]=0;
-	b->pn+=1;
-
-	return(1);
-}
-static int _s3d_tesssub(struct tessp_t *t, struct t_buf *b,int s)
-{
-	int i,n,p;
-	int good=0;
-	i=s;
-	while ((n=t[i].next)!=(p=t[i].prev)) /* while polygon n > 3 */
-	{
-		dprintf(HIGH,"[L]ooking at %d [[%d]] %d",p,i,n);
-		/* find direction */
-		if ((POINT_DIR(p,i,n))>0)
-		{
-			good=1;
-			/* good direction */
-/*			dprintf(HIGH,"direction correct, polygon possible!!");*/
-			if (_s3d_addtri(t,b,p,i,n))
-			{
-				/* regular out */
-				t[i].next=i;
-				t[i].prev=i; 
-			}
-/*			dprintf(HIGH,"[F]inished polygon %d %d %d",p,i,n);*/
-		} else {
-			i=t[i].next;
-			if ((i==s) && (good==0)) 
-			{
-				dprintf(HIGH,"Everything is bad, returning");
-				return(-1);
-			}
-			dprintf(HIGH,"sorry, bad direction, next one is %d",i);
-			/* bad direction */
-/*			done=0;*/
-		}
-		sleep(1);
-	}
-	/* handle the last line */
-	dprintf(HIGH,"[L]ine handling %d %d %d",p,i,n);
-	t[i].next=i;
-	t[i].prev=i;
-	t[n].next=n;
-	t[n].prev=n;
-	return(0);
-}
-int _s3d_tesselate(struct tessp_t *t,struct t_buf *b)
-{
-	int i,g;
-	tessdebug(t,b);
-	b->pn=0;
-	do {
-		g=0;
-		for (i=0;i<b->vn;i++) 
-		{ /* go through the points ... */
-			if (!(t[i].next==i)) /* looping to itself, nothing to do*/
-				g+=_s3d_tesssub(t,b,i); /* found unfinished polygon, starting here ... */
-		}
-	} while (g>0);
-	dprintf(HIGH,"tesselation done");
-	return(0);
-}

Modified: trunk/example/strtest.c
===================================================================
--- trunk/example/strtest.c	2006-02-16 23:59:44 UTC (rev 74)
+++ trunk/example/strtest.c	2006-02-17 14:47:50 UTC (rev 75)
@@ -18,8 +18,8 @@
 	if (!s3d_init(&argc,&argv,"clock"))	
 	{
 		s3d_select_font("vera");
-		o=s3d_draw_string("o",NULL);
-//		o=s3d_draw_string("T",NULL);
+		o=s3d_draw_string("The lazy fox is bored enough to jump over everything it sees. weird, isn't it?!",NULL); 
+/*		o=s3d_draw_string("i",NULL);*/
 		s3d_flags_on(o,S3D_OF_VISIBLE);
 
 		s3d_set_callback(S3D_EVENT_OBJ_CLICK,	(s3d_cb)stop);



From dotslash at berlios.de  Fri Feb 17 16:14:31 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Fri, 17 Feb 2006 16:14:31 +0100
Subject: [S3d-svn] r76 - trunk
Message-ID: <200602171514.k1HFEVf9008153@sheep.berlios.de>

Author: dotslash
Date: 2006-02-17 16:14:31 +0100 (Fri, 17 Feb 2006)
New Revision: 76

Modified:
   trunk/
   trunk/configure.in
Log:
 r93 at balthasar:  dotslash | 2006-02-17 16:14:26 +0100
 no glut for client lib, set in configure.in
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:91
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:93

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-02-17 14:47:50 UTC (rev 75)
+++ trunk/configure.in	2006-02-17 15:14:31 UTC (rev 76)
@@ -84,9 +84,9 @@
 PKG_CHECK_MODULES(FONTCONFIG, fontconfig >= 2.3.0, [:], [AC_MSG_ERROR([Please install fontconfig (version 2.3.0 or higher)])])
 PKG_CHECK_MODULES(FREETYPE, freetype2 >= 9.5.0, [:], [AC_MSG_ERROR([Please install freetype2 (version 9.5.0 or higher)])])
 
-if test "x${HAVE_glut}" = "x"; then
-    AC_MSG_ERROR([Sorry, we need glut for the client in for Glyph Tesselation ...])
-fi
+dnl if test "x${HAVE_glut}" = "x"; then
+dnl     AC_MSG_ERROR([Sorry, we need glut for the client in for Glyph Tesselation ...])
+dnl fi
 
 dnl ##################################### EXAMPLES / APPS ######################
 



From dotslash at berlios.de  Fri Feb 17 16:37:17 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Fri, 17 Feb 2006 16:37:17 +0100
Subject: [S3d-svn] r77 - in trunk: . apps apps/dot_mcp example
Message-ID: <200602171537.k1HFbH6o010871@sheep.berlios.de>

Author: dotslash
Date: 2006-02-17 16:37:13 +0100 (Fri, 17 Feb 2006)
New Revision: 77

Added:
   trunk/apps/dot_mcp/
   trunk/apps/dot_mcp/Makefile.am
   trunk/apps/dot_mcp/dot_mcp.c
Removed:
   trunk/example/dot_mcp.c
Modified:
   trunk/
   trunk/ChangeLog
   trunk/apps/Makefile.am
   trunk/configure.in
   trunk/example/Makefile.am
Log:
 r95 at balthasar:  dotslash | 2006-02-17 16:36:42 +0100
 Moving dot_mcp to apps



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:93
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:95

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-17 15:14:31 UTC (rev 76)
+++ trunk/ChangeLog	2006-02-17 15:37:13 UTC (rev 77)
@@ -1,4 +1,5 @@
-2006-02-17	Simon Wunderlich - <dotslash at packetmixer.de>
+2006-02-17	Simon Wunderlich - <dotslash at packetmixer.de>	
+	- moved dot_mcp to apps
 	- abadoning my own tries and the glu-tesselator 
 	  for triangulating the fonts and using public
 	  domain code for seidels algorithm by Narkhede A. and

Modified: trunk/apps/Makefile.am
===================================================================
--- trunk/apps/Makefile.am	2006-02-17 15:14:31 UTC (rev 76)
+++ trunk/apps/Makefile.am	2006-02-17 15:37:13 UTC (rev 77)
@@ -6,5 +6,5 @@
 MAYBE_X11GATE=	s3d_x11gate
 endif
 
-SUBDIRS =  ${MAYBE_S3DGPS} ${MAYBE_X11GATE} s3dvt olsrs3d
+SUBDIRS =  ${MAYBE_S3DGPS} ${MAYBE_X11GATE} s3dvt olsrs3d dot_mcp
 

Added: trunk/apps/dot_mcp/Makefile.am
===================================================================
--- trunk/apps/dot_mcp/Makefile.am	2006-02-17 15:14:31 UTC (rev 76)
+++ trunk/apps/dot_mcp/Makefile.am	2006-02-17 15:37:13 UTC (rev 77)
@@ -0,0 +1,11 @@
+bin_PROGRAMS=	dot_mcp
+
+s3dvtincludedir = ${includedir}/dot_mcp
+s3dvtinclude_HEADERS =  
+
+s3dvt_SOURCES =  \
+	dot_mcp.c
+
+s3dvt_CPPFLAGS=	-I${top_srcdir}/client @PTHREAD_CFLAGS@
+s3dvt_LDADD=	${top_builddir}/client/libs3d.la @PTHREAD_LIBS@
+

Added: trunk/apps/dot_mcp/dot_mcp.c
===================================================================
--- trunk/apps/dot_mcp/dot_mcp.c	2006-02-17 15:14:31 UTC (rev 76)
+++ trunk/apps/dot_mcp/dot_mcp.c	2006-02-17 15:37:13 UTC (rev 77)
@@ -0,0 +1,362 @@
+#include "s3d.h"
+#include <unistd.h>  /*  sleep() */
+#include <stdlib.h>  /*  free(), malloc() */
+#include <string.h>  /*  strncpy() */
+#include <stdio.h>  /*  printf() */
+#include <math.h>	/* sin(), cos() */
+#define bsize 	0.2
+struct app {
+	unsigned int oid,oid_c;
+	float r;
+	int init;
+	float trans_x,trans_y,trans_z;
+	float textw;
+	char name[256]; 
+	int min_but,close_but,title;
+	int sphere;
+	struct app *next;
+};
+
+float asp=1.0;
+struct app *apps=NULL;
+float bottom=-1.0;
+float left=-1.0;
+float zoom=5.0;
+int n_app=0;
+int sphere;
+int rot_flag=0;
+struct app *focus=NULL;
+float focus_r=0;
+float alpha=0;
+unsigned int min_but,rotate,close_but;
+
+void place_apps();
+
+void set_focus(struct app *a)
+{
+	if (focus!=a)
+		/* resetting old focus */
+		if (focus!=NULL)
+		{
+			printf("unfocusing app name %s\n",focus->name);
+			s3d_scale(focus->oid,1/focus->r);
+			s3d_scale(focus->sphere,focus->r);
+
+  			s3d_flags_on(focus->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+			s3d_flags_off(focus->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+			s3d_flags_off(rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+			s3d_translate(	focus->title,-focus->textw-1.2,0.0,0);
+			s3d_translate(	focus->close_but,bsize*focus->textw/2,1.2,0);
+			s3d_link(		focus->close_but,focus->sphere);
+			s3d_link(		focus->oid,0);
+		}
+	focus=a;
+	if (a==NULL)
+	{
+		focus_r=n_app;
+		s3d_mcp_focus(-1);
+	} else {
+		/* set the new focus app up */
+		s3d_translate(	a->title,-a->textw-7.2,0.0,0);
+		s3d_translate(	rotate,-4.8,0.0,0);
+		s3d_translate(	a->min_but,-2.4,0.0,0);
+		s3d_link(		a->close_but,0);
+		s3d_link(		rotate,a->close_but);
+		s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_flags_on(	rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_flags_off(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_unlink(a->oid);
+		s3d_rotate(a->oid,		0,0,0);
+		s3d_translate(a->oid,	0,0,0);
+		focus_r=a->r;
+		s3d_scale(a->oid,1);
+		s3d_mcp_focus(	a->oid);
+	}
+	place_apps();
+}
+
+int add_app(struct app *a)
+{
+	struct app *prev=NULL,*a2=apps;
+	while ((a2)!=NULL)
+	{
+		prev=a2;
+		if (a2->oid==a->oid)
+		{  /*  already added, so free() and return */
+			free(a);
+			return(1);
+		}
+		a2=a2->next;  /*  go to the end */
+	}
+	a->next=NULL;
+	if (prev==NULL)
+		apps=a;
+	else 
+		prev->next=a;
+	n_app+=1;
+	return(0);
+}
+void *find_app(int oid)
+{
+	struct app *a=apps;
+	while (a!=NULL)
+	{
+		if (oid==a->oid)
+			break;
+		a=a->next;
+	}
+	return(a);
+}
+void *del_app(int oid)
+{
+	struct app *prev=NULL,*a=apps;
+	while ((a!=NULL)  && (a->oid!=oid))
+	{
+		prev=a;
+		a=a->next;
+	}
+	if (a!=NULL)
+	{  /*  found ... */
+		if (a->init)
+		{
+			s3d_del_object(a->close_but);
+			s3d_del_object(a->min_but);
+			s3d_del_object(a->title);
+			s3d_del_object(a->sphere);
+			s3d_del_object(a->oid);
+		}
+		if (prev==NULL) 
+			apps=a->next;  /*  new head */
+		else
+			prev->next=a->next;
+		n_app--;
+		if (focus==a)
+		{
+			s3d_mcp_focus(-1);
+			focus=NULL;
+		}
+		free(a);
+		place_apps();
+	} 
+	return(a);
+}
+void stop()
+{
+	s3d_quit();
+}
+void place_apps()
+{
+	struct app *a=apps;
+	int j=0;
+	while (a!=NULL)
+	{
+		if (a->init)	
+		{
+			printf("placing app [%d,'%s'], oid %d, r=%f\n",j,a->name,a->oid,a->r); 
+			if (focus==a)
+			{
+				s3d_translate(a->close_but,(-left)*zoom-0.4,(-bottom)*zoom-0.4,-zoom);
+			}
+			else 
+			{
+				s3d_translate(	a->oid,	zoom*(left)+j*2+1.0,zoom*bottom+1.0,-zoom);
+				s3d_rotate(		a->oid,	0,10,0);
+				j++;
+			}
+		}
+		a=a->next;
+	}
+}
+void mcp_object(struct s3d_evt *hrmz)
+{
+	struct mcp_object *mo;
+	struct app *a;
+	mo=(struct mcp_object *)hrmz->buf;
+	if (NULL==(a=find_app(mo->object)))
+	{
+		printf("adding new object ......");
+		a=malloc(sizeof(struct app));
+		a->oid=mo->object;
+		a->r=mo->r;
+		strncpy(a->name,mo->name,256);
+		a->init=0;
+		add_app(a);
+		place_apps();
+		printf("..%s\n",a->name);
+	} else {
+		printf("updating app %d\n",a->oid);
+		a->trans_x=mo->trans_x;
+		a->trans_y=mo->trans_y;
+		a->trans_z=mo->trans_z;
+		a->r=mo->r;
+		if (a->init)
+		{
+			if (a==focus)
+			{
+				focus_r=a->r;
+/*				s3d_translate(a->min_but,0,a->r + 1.0,0);*/
+			} else {
+				s3d_scale(a->sphere,a->r);
+				s3d_scale(a->oid,1/a->r);
+			}
+		}
+		place_apps();
+	}
+}
+void app_init(struct app *a)
+{
+	printf("building some window decorations on %d ['%s']\n",a->oid,a->name);
+/* 	a->r=s3d_get_radius(a->oid); */
+	printf("radius of object %d is %f\n",a->oid,a->r);
+	s3d_scale(a->oid,		1/a->r);
+
+	a->sphere=s3d_clone(sphere);
+	s3d_scale(		a->sphere,a->r);
+	s3d_link(		a->sphere,a->oid);
+  	s3d_flags_on(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+
+/*	s3d_translate(	a->min_but,0,2.0,0);
+	s3d_link(		a->min_but,a->sphere);
+   	s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);*/
+
+
+	a->title=s3d_draw_string(a->name,&a->textw);
+
+	a->close_but=s3d_clone(close_but);
+	s3d_translate(	a->close_but,bsize*a->textw/2,1.2,0);
+	s3d_link(		a->close_but,a->sphere);
+  	s3d_flags_on(	a->close_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+
+
+	s3d_translate(	a->title,-a->textw-1.2,0.0,0);
+	s3d_link(		a->title,a->close_but);
+   	s3d_flags_on(	a->title,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+	
+	a->min_but=s3d_clone(min_but);
+	s3d_link(		a->min_but,a->close_but);
+	
+	
+	s3d_scale(		a->close_but,bsize);
+	
+	s3d_link(		a->oid,0);
+	a->init=1;
+/*	if (focus==NULL)
+		set_focus(a);
+	else*/
+		place_apps();
+}
+void mcp_del_object(struct s3d_evt *hrmz)
+{
+	struct mcp_object *mo;
+	printf("omg, something got deleted!!\n");
+	mo=(struct mcp_object *)hrmz->buf;
+	del_app(mo->object);
+}
+void object_click(struct s3d_evt *hrmz)
+{
+	struct app *a;
+	unsigned int i, oid;
+	oid=*((unsigned int *)hrmz->buf);
+	printf("%d got clicked\n",oid);
+	a=apps;i=0;
+	if (oid==rotate)
+	{
+		rot_flag=!rot_flag;
+		return;
+	}
+	while (a!=NULL)
+	{
+		printf("O_o\n");
+		if (oid==a->close_but)
+		{
+			del_app(a->oid);
+			return;
+		} else 	if (oid==a->min_but)
+		{
+			if (a==focus)
+			{
+				set_focus(NULL); /* nothing is focused now */
+			}
+			return;
+		} else 	if (((oid==a->title) || (oid==a->sphere)) || (oid==a->oid))
+		{
+			printf("giving focus to [%s], %d\n",a->name,oid);
+			set_focus(a);
+			return;
+		}
+		i++;
+		a=a->next;
+	}
+}
+void object_info(struct s3d_evt *hrmz)
+{
+	struct s3d_obj_info *inf;
+	inf=(struct s3d_obj_info *)hrmz->buf;
+	if (inf->object==0)
+	{
+		asp=inf->scale;
+		printf("screen aspect: %f\n",asp);
+		if (asp>1.0) /* wide screen */
+		{
+			bottom=-1.0;
+			left=-asp;
+		} else {  /* high screen */
+			bottom=(-1.0/asp);
+			left=-1.0;
+		}
+	}
+}
+void mainloop()
+{
+	struct app *a;
+	float al,r;
+	int i;
+	a=apps;i=0;
+	while (a!=NULL)
+	{
+		if (!a->init)
+			app_init(a);
+		i++;
+		a=a->next;
+	}
+	if (rot_flag)
+	{
+		al=(alpha*M_PI/180);
+		r=(focus_r>20.0)?20.0:focus_r;
+		s3d_translate(0,sin(al)*(r+5),0,cos(al)*(r+5));
+		s3d_rotate(0,0,alpha,0);
+		alpha=alpha+0.1;
+		if (alpha>360.0) alpha=0.0;
+	}
+	usleep(10000);
+	
+}
+
+int main (int argc, char **argv)
+{
+	if (!s3d_init(&argc,&argv,"mcp"))	
+	{
+		s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);
+		s3d_set_callback(S3D_MCP_OBJECT,mcp_object);
+		s3d_set_callback(S3D_EVENT_QUIT,stop);
+		s3d_set_callback(S3D_MCP_DEL_OBJECT,mcp_del_object);
+		s3d_set_callback(S3D_EVENT_OBJ_CLICK,object_click);
+
+		if (s3d_select_font("vera"))
+		{
+			printf("font not found\n");
+		}
+/*		sphere=s3d_import_3ds_file("objs/sphere.3ds");*/
+/*		s3d_pep_material_a(sphere,
+					1,1,1,0.2,
+					1,1,1,0.2,
+					1,1,1,0.2);*/
+		min_but=s3d_import_3ds_file("objs/cubeyholes.3ds");
+		rotate=s3d_import_3ds_file("objs/rotate.3ds");
+		close_but=s3d_import_3ds_file("objs/spikeybla.3ds");
+		sphere=s3d_import_3ds_file("objs/ringsystem.3ds");
+		s3d_mainloop(mainloop);
+		s3d_quit();
+	}
+	return(0);
+}

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-02-17 15:14:31 UTC (rev 76)
+++ trunk/configure.in	2006-02-17 15:37:13 UTC (rev 77)
@@ -138,6 +138,7 @@
 	apps/s3d_x11gate/Makefile
 	apps/s3dgps/Makefile
 	apps/s3dvt/Makefile
+	apps/dot_mcp/Makefile
 	example/Makefile])
 AC_OUTPUT
 

Modified: trunk/example/Makefile.am
===================================================================
--- trunk/example/Makefile.am	2006-02-17 15:14:31 UTC (rev 76)
+++ trunk/example/Makefile.am	2006-02-17 15:37:13 UTC (rev 77)
@@ -1,9 +1,8 @@
-noinst_PROGRAMS=	3dsloader dot_mcp filebrowser hudtest katze \
+noinst_PROGRAMS=	3dsloader filebrowser hudtest katze \
 			radius_test s3d_startapp s3dclock snowman \
 			strtest texturetest
 			
 3dsloader_SOURCES=	3dsloader.c
-dot_mcp_SOURCES=	dot_mcp.c
 filebrowser_SOURCES=	filebrowser.c
 hudtest_SOURCES=	hudtest.c
 katze_SOURCES=		katze.c

Deleted: trunk/example/dot_mcp.c
===================================================================
--- trunk/example/dot_mcp.c	2006-02-17 15:14:31 UTC (rev 76)
+++ trunk/example/dot_mcp.c	2006-02-17 15:37:13 UTC (rev 77)
@@ -1,362 +0,0 @@
-#include "s3d.h"
-#include <unistd.h>  /*  sleep() */
-#include <stdlib.h>  /*  free(), malloc() */
-#include <string.h>  /*  strncpy() */
-#include <stdio.h>  /*  printf() */
-#include <math.h>	/* sin(), cos() */
-#define bsize 	0.2
-struct app {
-	unsigned int oid,oid_c;
-	float r;
-	int init;
-	float trans_x,trans_y,trans_z;
-	float textw;
-	char name[256]; 
-	int min_but,close_but,title;
-	int sphere;
-	struct app *next;
-};
-
-float asp=1.0;
-struct app *apps=NULL;
-float bottom=-1.0;
-float left=-1.0;
-float zoom=5.0;
-int n_app=0;
-int sphere;
-int rot_flag=0;
-struct app *focus=NULL;
-float focus_r=0;
-float alpha=0;
-unsigned int min_but,rotate,close_but;
-
-void place_apps();
-
-void set_focus(struct app *a)
-{
-	if (focus!=a)
-		/* resetting old focus */
-		if (focus!=NULL)
-		{
-			printf("unfocusing app name %s\n",focus->name);
-			s3d_scale(focus->oid,1/focus->r);
-			s3d_scale(focus->sphere,focus->r);
-
-  			s3d_flags_on(focus->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-			s3d_flags_off(focus->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-			s3d_flags_off(rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-			s3d_translate(	focus->title,-focus->textw-1.2,0.0,0);
-			s3d_translate(	focus->close_but,bsize*focus->textw/2,1.2,0);
-			s3d_link(		focus->close_but,focus->sphere);
-			s3d_link(		focus->oid,0);
-		}
-	focus=a;
-	if (a==NULL)
-	{
-		focus_r=n_app;
-		s3d_mcp_focus(-1);
-	} else {
-		/* set the new focus app up */
-		s3d_translate(	a->title,-a->textw-7.2,0.0,0);
-		s3d_translate(	rotate,-4.8,0.0,0);
-		s3d_translate(	a->min_but,-2.4,0.0,0);
-		s3d_link(		a->close_but,0);
-		s3d_link(		rotate,a->close_but);
-		s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-		s3d_flags_on(	rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-		s3d_flags_off(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-		s3d_unlink(a->oid);
-		s3d_rotate(a->oid,		0,0,0);
-		s3d_translate(a->oid,	0,0,0);
-		focus_r=a->r;
-		s3d_scale(a->oid,1);
-		s3d_mcp_focus(	a->oid);
-	}
-	place_apps();
-}
-
-int add_app(struct app *a)
-{
-	struct app *prev=NULL,*a2=apps;
-	while ((a2)!=NULL)
-	{
-		prev=a2;
-		if (a2->oid==a->oid)
-		{  /*  already added, so free() and return */
-			free(a);
-			return(1);
-		}
-		a2=a2->next;  /*  go to the end */
-	}
-	a->next=NULL;
-	if (prev==NULL)
-		apps=a;
-	else 
-		prev->next=a;
-	n_app+=1;
-	return(0);
-}
-void *find_app(int oid)
-{
-	struct app *a=apps;
-	while (a!=NULL)
-	{
-		if (oid==a->oid)
-			break;
-		a=a->next;
-	}
-	return(a);
-}
-void *del_app(int oid)
-{
-	struct app *prev=NULL,*a=apps;
-	while ((a!=NULL)  && (a->oid!=oid))
-	{
-		prev=a;
-		a=a->next;
-	}
-	if (a!=NULL)
-	{  /*  found ... */
-		if (a->init)
-		{
-			s3d_del_object(a->close_but);
-			s3d_del_object(a->min_but);
-			s3d_del_object(a->title);
-			s3d_del_object(a->sphere);
-			s3d_del_object(a->oid);
-		}
-		if (prev==NULL) 
-			apps=a->next;  /*  new head */
-		else
-			prev->next=a->next;
-		n_app--;
-		if (focus==a)
-		{
-			s3d_mcp_focus(-1);
-			focus=NULL;
-		}
-		free(a);
-		place_apps();
-	} 
-	return(a);
-}
-void stop()
-{
-	s3d_quit();
-}
-void place_apps()
-{
-	struct app *a=apps;
-	int j=0;
-	while (a!=NULL)
-	{
-		if (a->init)	
-		{
-			printf("placing app [%d,'%s'], oid %d, r=%f\n",j,a->name,a->oid,a->r); 
-			if (focus==a)
-			{
-				s3d_translate(a->close_but,(-left)*zoom-0.4,(-bottom)*zoom-0.4,-zoom);
-			}
-			else 
-			{
-				s3d_translate(	a->oid,	zoom*(left)+j*2+1.0,zoom*bottom+1.0,-zoom);
-				s3d_rotate(		a->oid,	0,10,0);
-				j++;
-			}
-		}
-		a=a->next;
-	}
-}
-void mcp_object(struct s3d_evt *hrmz)
-{
-	struct mcp_object *mo;
-	struct app *a;
-	mo=(struct mcp_object *)hrmz->buf;
-	if (NULL==(a=find_app(mo->object)))
-	{
-		printf("adding new object ......");
-		a=malloc(sizeof(struct app));
-		a->oid=mo->object;
-		a->r=mo->r;
-		strncpy(a->name,mo->name,256);
-		a->init=0;
-		add_app(a);
-		place_apps();
-		printf("..%s\n",a->name);
-	} else {
-		printf("updating app %d\n",a->oid);
-		a->trans_x=mo->trans_x;
-		a->trans_y=mo->trans_y;
-		a->trans_z=mo->trans_z;
-		a->r=mo->r;
-		if (a->init)
-		{
-			if (a==focus)
-			{
-				focus_r=a->r;
-/*				s3d_translate(a->min_but,0,a->r + 1.0,0);*/
-			} else {
-				s3d_scale(a->sphere,a->r);
-				s3d_scale(a->oid,1/a->r);
-			}
-		}
-		place_apps();
-	}
-}
-void app_init(struct app *a)
-{
-	printf("building some window decorations on %d ['%s']\n",a->oid,a->name);
-/* 	a->r=s3d_get_radius(a->oid); */
-	printf("radius of object %d is %f\n",a->oid,a->r);
-	s3d_scale(a->oid,		1/a->r);
-
-	a->sphere=s3d_clone(sphere);
-	s3d_scale(		a->sphere,a->r);
-	s3d_link(		a->sphere,a->oid);
-  	s3d_flags_on(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-
-/*	s3d_translate(	a->min_but,0,2.0,0);
-	s3d_link(		a->min_but,a->sphere);
-   	s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);*/
-
-
-	a->title=s3d_draw_string(a->name,&a->textw);
-
-	a->close_but=s3d_clone(close_but);
-	s3d_translate(	a->close_but,bsize*a->textw/2,1.2,0);
-	s3d_link(		a->close_but,a->sphere);
-  	s3d_flags_on(	a->close_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-
-
-	s3d_translate(	a->title,-a->textw-1.2,0.0,0);
-	s3d_link(		a->title,a->close_but);
-   	s3d_flags_on(	a->title,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-	
-	a->min_but=s3d_clone(min_but);
-	s3d_link(		a->min_but,a->close_but);
-	
-	
-	s3d_scale(		a->close_but,bsize);
-	
-	s3d_link(		a->oid,0);
-	a->init=1;
-/*	if (focus==NULL)
-		set_focus(a);
-	else*/
-		place_apps();
-}
-void mcp_del_object(struct s3d_evt *hrmz)
-{
-	struct mcp_object *mo;
-	printf("omg, something got deleted!!\n");
-	mo=(struct mcp_object *)hrmz->buf;
-	del_app(mo->object);
-}
-void object_click(struct s3d_evt *hrmz)
-{
-	struct app *a;
-	unsigned int i, oid;
-	oid=*((unsigned int *)hrmz->buf);
-	printf("%d got clicked\n",oid);
-	a=apps;i=0;
-	if (oid==rotate)
-	{
-		rot_flag=!rot_flag;
-		return;
-	}
-	while (a!=NULL)
-	{
-		printf("O_o\n");
-		if (oid==a->close_but)
-		{
-			del_app(a->oid);
-			return;
-		} else 	if (oid==a->min_but)
-		{
-			if (a==focus)
-			{
-				set_focus(NULL); /* nothing is focused now */
-			}
-			return;
-		} else 	if (((oid==a->title) || (oid==a->sphere)) || (oid==a->oid))
-		{
-			printf("giving focus to [%s], %d\n",a->name,oid);
-			set_focus(a);
-			return;
-		}
-		i++;
-		a=a->next;
-	}
-}
-void object_info(struct s3d_evt *hrmz)
-{
-	struct s3d_obj_info *inf;
-	inf=(struct s3d_obj_info *)hrmz->buf;
-	if (inf->object==0)
-	{
-		asp=inf->scale;
-		printf("screen aspect: %f\n",asp);
-		if (asp>1.0) /* wide screen */
-		{
-			bottom=-1.0;
-			left=-asp;
-		} else {  /* high screen */
-			bottom=(-1.0/asp);
-			left=-1.0;
-		}
-	}
-}
-void mainloop()
-{
-	struct app *a;
-	float al,r;
-	int i;
-	a=apps;i=0;
-	while (a!=NULL)
-	{
-		if (!a->init)
-			app_init(a);
-		i++;
-		a=a->next;
-	}
-	if (rot_flag)
-	{
-		al=(alpha*M_PI/180);
-		r=(focus_r>20.0)?20.0:focus_r;
-		s3d_translate(0,sin(al)*(r+5),0,cos(al)*(r+5));
-		s3d_rotate(0,0,alpha,0);
-		alpha=alpha+0.1;
-		if (alpha>360.0) alpha=0.0;
-	}
-	usleep(10000);
-	
-}
-
-int main (int argc, char **argv)
-{
-	if (!s3d_init(&argc,&argv,"mcp"))	
-	{
-		s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);
-		s3d_set_callback(S3D_MCP_OBJECT,mcp_object);
-		s3d_set_callback(S3D_EVENT_QUIT,stop);
-		s3d_set_callback(S3D_MCP_DEL_OBJECT,mcp_del_object);
-		s3d_set_callback(S3D_EVENT_OBJ_CLICK,object_click);
-
-		if (s3d_select_font("vera"))
-		{
-			printf("font not found\n");
-		}
-/*		sphere=s3d_import_3ds_file("objs/sphere.3ds");*/
-/*		s3d_pep_material_a(sphere,
-					1,1,1,0.2,
-					1,1,1,0.2,
-					1,1,1,0.2);*/
-		min_but=s3d_import_3ds_file("objs/cubeyholes.3ds");
-		rotate=s3d_import_3ds_file("objs/rotate.3ds");
-		close_but=s3d_import_3ds_file("objs/spikeybla.3ds");
-		sphere=s3d_import_3ds_file("objs/ringsystem.3ds");
-		s3d_mainloop(mainloop);
-		s3d_quit();
-	}
-	return(0);
-}



From ankon at berlios.de  Fri Feb 17 17:37:01 2006
From: ankon at berlios.de (ankon at berlios.de)
Date: Fri, 17 Feb 2006 17:37:01 +0100
Subject: [S3d-svn] r78 - trunk/apps/olsrs3d
Message-ID: <200602171637.k1HGb1Um017801@sheep.berlios.de>

Author: ankon
Date: 2006-02-17 17:36:59 +0100 (Fri, 17 Feb 2006)
New Revision: 78

Modified:
   trunk/apps/olsrs3d/Makefile.am
Log:
Add missing .3ds files, and output.sample.



Modified: trunk/apps/olsrs3d/Makefile.am
===================================================================
--- trunk/apps/olsrs3d/Makefile.am	2006-02-17 15:37:13 UTC (rev 77)
+++ trunk/apps/olsrs3d/Makefile.am	2006-02-17 16:36:59 UTC (rev 78)
@@ -14,6 +14,9 @@
 
 EXTRA_DIST =  \
 	accesspoint.3ds \
+	accesspoint_inet.3ds \
+	internet.3ds \
+	meshnode.3ds \
 	sphere.3ds \
-	meshnode.3ds
+	output.sample
 



From ankon at berlios.de  Fri Feb 17 17:38:06 2006
From: ankon at berlios.de (ankon at berlios.de)
Date: Fri, 17 Feb 2006 17:38:06 +0100
Subject: [S3d-svn] r79 - trunk/apps/dot_mcp
Message-ID: <200602171638.k1HGc6bb017988@sheep.berlios.de>

Author: ankon
Date: 2006-02-17 17:38:03 +0100 (Fri, 17 Feb 2006)
New Revision: 79

Modified:
   trunk/apps/dot_mcp/Makefile.am
Log:
s,s3dvt,dot_mcp, so that automake picks up the correct variables.
Update include dir so that we install in a better place. Still not nice, 
I'd suggest: don't use make install :D



Modified: trunk/apps/dot_mcp/Makefile.am
===================================================================
--- trunk/apps/dot_mcp/Makefile.am	2006-02-17 16:36:59 UTC (rev 78)
+++ trunk/apps/dot_mcp/Makefile.am	2006-02-17 16:38:03 UTC (rev 79)
@@ -1,11 +1,11 @@
 bin_PROGRAMS=	dot_mcp
 
-s3dvtincludedir = ${includedir}/dot_mcp
-s3dvtinclude_HEADERS =  
+dot_mcpincludedir = $(pkgincludedir)/dot_mcp
+dot_mcpinclude_HEADERS =  
 
-s3dvt_SOURCES =  \
+dot_mcp_SOURCES =  \
 	dot_mcp.c
 
-s3dvt_CPPFLAGS=	-I${top_srcdir}/client @PTHREAD_CFLAGS@
-s3dvt_LDADD=	${top_builddir}/client/libs3d.la @PTHREAD_LIBS@
+dot_mcp_CPPFLAGS=	-I$(top_srcdir)/client @PTHREAD_CFLAGS@
+dot_mcp_LDADD=	$(top_builddir)/client/libs3d.la @PTHREAD_LIBS@
 



From dotslash at berlios.de  Fri Feb 17 19:44:43 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Fri, 17 Feb 2006 19:44:43 +0100
Subject: [S3d-svn] r80 - in trunk: . apps/olsrs3d
Message-ID: <200602171844.k1HIihdj003207@sheep.berlios.de>

Author: dotslash
Date: 2006-02-17 19:44:27 +0100 (Fri, 17 Feb 2006)
New Revision: 80

Added:
   trunk/apps/olsrs3d/TODO
Modified:
   trunk/
   trunk/TODO
Log:
 r100 at balthasar:  dotslash | 2006-02-17 19:43:09 +0100
 TODO



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:95
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:100

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2006-02-17 16:38:03 UTC (rev 79)
+++ trunk/TODO	2006-02-17 18:44:27 UTC (rev 80)
@@ -1,8 +1,3 @@
-configure: 
-	prefix
-	honor LD_LIBRAR_PATH
-	make install PREFIX=/LOCAL/...
-		
 client(portability?!):
 	shmat() return (char *) -1 or NULL?! data_ctos/data_stoc should
 	really not be 0x0
@@ -11,8 +6,3 @@
 
 general:
 	start mcp with s3d
-olsrs3d:
-	delete old/not needed vertices
-	rotate text in cam-direction
-	search for vertices (text input?)
-	show link times

Added: trunk/apps/olsrs3d/TODO
===================================================================
--- trunk/apps/olsrs3d/TODO	2006-02-17 16:38:03 UTC (rev 79)
+++ trunk/apps/olsrs3d/TODO	2006-02-17 18:44:27 UTC (rev 80)
@@ -0,0 +1,4 @@
+	delete old/not needed vertices
+	rotate text in cam-direction
+	search for vertices (text input?)
+	show link times



From dotslash at berlios.de  Fri Feb 17 21:46:46 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Fri, 17 Feb 2006 21:46:46 +0100
Subject: [S3d-svn] r81 - in trunk: . client
Message-ID: <200602172046.k1HKkkgF020432@sheep.berlios.de>

Author: dotslash
Date: 2006-02-17 21:46:45 +0100 (Fri, 17 Feb 2006)
New Revision: 81

Modified:
   trunk/
   trunk/ChangeLog
   trunk/client/3dsread.c
   trunk/client/TODO
Log:
 r102 at balthasar:  dotslash | 2006-02-17 21:46:40 +0100
 gints and gintl



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:100
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:102

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-17 18:44:27 UTC (rev 80)
+++ trunk/ChangeLog	2006-02-17 20:46:45 UTC (rev 81)
@@ -1,4 +1,6 @@
 2006-02-17	Simon Wunderlich - <dotslash at packetmixer.de>	
+	- gintl() and gints() added in 3dsread.c, hopefully
+	  improving endianess compatibility
 	- moved dot_mcp to apps
 	- abadoning my own tries and the glu-tesselator 
 	  for triangulating the fonts and using public

Modified: trunk/client/3dsread.c
===================================================================
--- trunk/client/3dsread.c	2006-02-17 18:44:27 UTC (rev 80)
+++ trunk/client/3dsread.c	2006-02-17 20:46:45 UTC (rev 81)
@@ -199,7 +199,23 @@
 	free(v_t_buf);
 	return(nbuf);
 }
-
+/* get the intergers in the right order */
+unsigned short gints(char *ptr)
+{
+	register unsigned short i;
+	i= ((unsigned char )ptr[0]);
+	i+=((unsigned char )ptr[1])*0x100;
+	return i;
+}
+unsigned long gintl(char *ptr)
+{
+	register unsigned long i;
+	i= ((unsigned char )ptr[0]);
+	i+=((unsigned char )ptr[1])*0x100;
+	i+=((unsigned char )ptr[2])*0x10000;
+	i+=((unsigned char )ptr[3])*0x1000000;
+	return i;
+}
 /*  imports a 3ds file as ONE object, even it virtually contains more. */
 /*  it returns the object id ... */
 int s3d_import_3ds(char *buf)
@@ -226,10 +242,10 @@
 	ptr=buf;
 	while (((ptr)>=buf) && ((ptr)<(buf+filesize)))
 	{
-		cid=*((unsigned short *) (ptr));
-		clen=*((unsigned long *) (ptr+2));
+		cid=gints(ptr);
+		clen=gintl(ptr+2);
 		
-		dprintf (VLOW,"[pos %x]: \t%04x [len:%d]",(ptr-buf),cid,(clen-6));
+		dprintf (LOW,"[pos %x]: \t%04x [len:%d]",(ptr-buf),cid,(clen-6));
 		if ((ptr==buf) && (cid!=0x4d4d))
 		{
 			errs("3d_import_3ds()","file doesn't start with 0x4d4d, maybe file corrupt?");
@@ -266,7 +282,7 @@
 			  mesh_end=ptr+(clen-6);
 			  break;
 		  case 0x4110: 
-			  vertexnum=*((unsigned short *) ptr);
+			  vertexnum=gints(ptr);
 			  ptr+=sizeof(unsigned short);
 			  dprintf(VLOW,"-- vertices list!! number of vertices: %d",vertexnum);
 			  vertex_buf=malloc(sizeof(float)*3*vertexnum);
@@ -282,19 +298,20 @@
 			  v+=vertexnum;  /*  for the correct vertex offset */
 			break;
 		  case 0x4120:
-			polynum=*((unsigned short *) ptr);
+			polynum=gints(ptr);
 			ptr+=sizeof(unsigned short);
-			dprintf(VLOW,"-- polygon list!! number of polygons: %d",polynum);
+			dprintf(LOW,"-- polygon list!! number of polygons: %d",polynum);
 			poly_buf=malloc(sizeof(unsigned long)*4*polynum);
 			if (poly_buf==NULL) break;
 		    for (j=0; j<polynum; j++)
 			{
-				poly_buf[j*4+0]=htonl(vertex_offset+*((unsigned short *)ptr+0)); 
-				poly_buf[j*4+1]=htonl(vertex_offset+*((unsigned short *)ptr+1));
-				poly_buf[j*4+2]=htonl(vertex_offset+*((unsigned short *)ptr+2));
+				poly_buf[j*4+0]=htonl(vertex_offset+gints(ptr+0)); 
+				poly_buf[j*4+1]=htonl(vertex_offset+gints(ptr+2));
+				poly_buf[j*4+2]=htonl(vertex_offset+gints(ptr+4));
 				poly_buf[j*4+3]=htonl(col_obj);  /*  we should have a default material .... */
 				ptr+=sizeof(unsigned short)*4;
 		    }
+			dprintf(LOW,"done");
 			break;
 		  case 0x4130:
 			ptr2=(char *)ptr+(clen-6);  /*  backup our endpointer ... */
@@ -309,14 +326,13 @@
 				errds(MED,"s3d_import_3ds()","couldn't find material %s",ostr);
 				col_obj=0;
 			}
-			nfaces=*((unsigned short *)ptr);
+			nfaces=gints(ptr);
 			ptr+=2;
 			for (i=0;i<nfaces;i++)
 			{
-				j=*((unsigned short *)ptr+i);
-			 /* 	dprintf(LOW, "trying to change material of poly %d",j); */
+				j=gints(ptr+2*i);
 				if (j>=0 && j<polynum)
-					poly_buf[*((unsigned short *)ptr+i)*4+3]=htonl(col_obj); 
+					poly_buf[gints(ptr+2*i)*4+3]=htonl(col_obj); 
 				else {
 					errds(MED,"s3d_import_3ds()","polygon %d out of range!",j);
 				}
@@ -326,6 +342,11 @@
 		  case 0x4150:
 			dprintf(VLOW,"-- smoothing group information (length %d [%d])", clen,clen/4);
 			smooth_list=(unsigned long *)ptr;
+			for (j=0;j<(clen/4);j++)
+			{
+				smooth_list[j]=gintl(ptr+j*4);
+			}
+
 			ptr=(char *)ptr+(clen-6);
 			break;
 		  case 0x4160:

Modified: trunk/client/TODO
===================================================================
--- trunk/client/TODO	2006-02-17 18:44:27 UTC (rev 80)
+++ trunk/client/TODO	2006-02-17 20:46:45 UTC (rev 81)
@@ -1,2 +1,3 @@
 TODO:
  - .max, .x, .obj files
+ - turn debug messages OUT



From marec at berlios.de  Fri Feb 17 23:48:18 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 17 Feb 2006 23:48:18 +0100
Subject: [S3d-svn] r82 - trunk/apps/olsrs3d
Message-ID: <200602172248.k1HMmIHM004617@sheep.berlios.de>

Author: marec
Date: 2006-02-17 23:48:14 +0100 (Fri, 17 Feb 2006)
New Revision: 82

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/net.c
   trunk/apps/olsrs3d/process.c
Log:
parse line redone fixed

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-17 20:46:45 UTC (rev 81)
+++ trunk/apps/olsrs3d/main.c	2006-02-17 22:48:14 UTC (rev 82)
@@ -4,6 +4,7 @@
 #include <string.h>	/* strncpy() */
 #include <math.h>		/* sqrt() */
 #include <getopt.h>	/* getopt() */
+#include <stdlib.h>	/* exit() */
 #include "olsrs3d.h"
 #define SPEED		10.0
 
@@ -553,7 +554,7 @@
 	ZeroPosition[2] = 40;*/
 	struct olsr_node *olsr_node;
 	olsr_node = *lst_search(oid);
-	printf("obj2ip: search return %s\n",olsr_node->ip);
+	/* printf("obj2ip: search return %s\n",olsr_node->ip); */
 }
 
 /***
@@ -588,7 +589,7 @@
 		s3d_translate(mesh,(-left)*3.0-1.8,bottom*3.0+0.8,-3.0);
 		s3d_flags_on(mesh,S3D_OF_VISIBLE);
 	}
-	printf("%f %f %f\n",inf->trans_x,inf->trans_y,inf->trans_z);
+	/* printf("%f %f %f\n",inf->trans_x,inf->trans_y,inf->trans_z); */
 }
 
 /***
@@ -643,7 +644,7 @@
 	struct Obj_to_ip *del;
 	move_lst_ptr(&id);
 	if(id != List_ptr->id)
-		printf("obj2ip: remove id %d failed move_lst_ptr return id %d\n",id,List_ptr->next->id);
+		/* printf("obj2ip: remove id %d failed move_lst_ptr return id %d\n",id,List_ptr->next->id); */
 	else {
 		del = List_ptr;
 		List_ptr->next->prev = List_ptr->prev;
@@ -720,11 +721,11 @@
 	struct Obj_to_ip *ptr;
 	ptr = Obj_to_ip_head;
 	while(ptr != ptr->next) {
-		printf("List--------------------------\n");
+		/* printf("List--------------------------\n"); */
 		printf("id-> %d\n",ptr->id);
 		ptr = ptr->next;
 	}
-	printf("List--------------------------\n");
+	/* printf("List--------------------------\n"); */
 }
 
 int main( int argc, char *argv[] ) {

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-17 20:46:45 UTC (rev 81)
+++ trunk/apps/olsrs3d/net.c	2006-02-17 22:48:14 UTC (rev 82)
@@ -14,7 +14,7 @@
 char buf[MAXDATASIZE];
 
 
-int sockfd, numbytes;  
+int sockfd, numbytes;
 int net_init(char *host)
 {
     struct hostent *he;
@@ -46,7 +46,7 @@
 int net_main()
 {
     if ((numbytes=recv(sockfd, buf, MAXDATASIZE-1, 0)) == -1) {
-		if (errno==EAGAIN) 
+		if (errno==EAGAIN)
 			return(0); /* well, that's okay ... */
         perror("recv");
         return(-1);
@@ -57,7 +57,8 @@
 		return(-1);
 	}
     buf[numbytes] = '\0';
-	strncat(lbuf,buf,MAXLINESIZE);
+// 	strncat(lbuf,buf,MAXLINESIZE);
+	strncpy(lbuf,buf,MAXLINESIZE);
 	process_main();
 	return(1);
 }
@@ -66,6 +67,6 @@
     close(sockfd);
 
     return 0;
-} 
+}
 
 

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-17 20:46:45 UTC (rev 81)
+++ trunk/apps/olsrs3d/process.c	2006-02-17 22:48:14 UTC (rev 82)
@@ -476,102 +476,103 @@
 
 int process_main() {
 
-	int index = 0, dn = 0;
-	int buf_len = strlen( lbuf );
+	int dn;
 	float f;
 	char *lbuf_ptr, *con_from, *con_to, *etx;
 	struct olsr_node *olsr_node1;   // pointer to olsr nodes
 	struct olsr_node *olsr_node2;
 
-	while ( ( index < buf_len ) && ( index < MAXLINESIZE ) ) {
+	lbuf_ptr = lbuf;
 
-		if ( ( lbuf[index] != '{' ) && ( lbuf[index] != '}' )  && ( lbuf[index] != '\n' ) ) {
+	while ( (*lbuf_ptr) != '\0' ) {
 
-			lbuf_ptr = &lbuf[index];
-			dn = 0;
+// 		printf( "%c",(*lbuf_ptr) );
 
-			while ( (*lbuf_ptr) != '\0' ) {
+		if ( (*lbuf_ptr) == '\n' ) {
 
-				if ( (*lbuf_ptr) == '"' ) {
+			con_from = con_to = etx = NULL;
+			dn = 0;
 
-					switch ( dn ) {
+		}
 
-						case 0:
-							con_from = lbuf_ptr;
-							break;
-						case 2:
-							con_to = lbuf_ptr;
-							break;
-						case 4:
-							etx = lbuf_ptr;
-							break;
-						default:   /* ends */
-							(*lbuf_ptr) = '\0';   /* string terminator!! */
-					}
+		if ( (*lbuf_ptr) == '"' ) {
 
-					if ( ++dn >= 6 ) break;
+			switch ( dn ) {
 
-				}
+				case 0:
+					con_from = ++lbuf_ptr;
+					break;
+				case 2:
+					con_to = ++lbuf_ptr;
+					break;
+				case 4:
+					etx = ++lbuf_ptr;
+					break;
+				default:
+					(*lbuf_ptr) = '\0';   /* string terminator!! */
+					break;
 
-				lbuf_ptr++;
+			}
 
-				if ( dn >= 6 ) {
+			if ( ++dn == 6 ) {
 
-					/* announced network via HNA */
-					if ( strncmp( etx, "HNA", NAMEMAX ) == 0 ) {
+// 				printf( "con_from: %s, con_to: %s, etx: %s\n", con_from, con_to, etx );
 
-						/* connection to internet */
-						if ( strncmp( con_to, "0.0.0.0/0.0.0.0", NAMEMAX ) == 0 ) {
+				/* announced network via HNA */
+				if ( strncmp( etx, "HNA", NAMEMAX ) == 0 ) {
 
-							olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+					/* connection to internet */
+					if ( strncmp( con_to, "0.0.0.0/0.0.0.0", NAMEMAX ) == 0 ) {
 
-							if ( olsr_node1->node_type != 1 ) {
+						olsr_node1 = get_olsr_node( &Olsr_root, con_from );
 
-								olsr_node1->node_type = 1;
-								olsr_node1->node_type_modified = 1;
-								if ( Debug ) printf( "new internet: %s\n", olsr_node1->ip );
+						if ( olsr_node1->node_type != 1 ) {
 
-							}
+							olsr_node1->node_type = 1;
+							olsr_node1->node_type_modified = 1;
+							if ( Debug ) printf( "new internet: %s\n", olsr_node1->ip );
 
-							/* normal HNA */
-						} else {
+						}
 
-							olsr_node1 = get_olsr_node( &Olsr_root, con_from );
-							olsr_node2 = get_olsr_node( &Olsr_root, con_to );
+					/* normal HNA */
+					} else {
 
-							if ( olsr_node2->node_type != 2 ) {
+						olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+						olsr_node2 = get_olsr_node( &Olsr_root, con_to );
 
-								olsr_node2->node_type = 2;
-								olsr_node2->node_type_modified = 1;
-								if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
+						if ( olsr_node2->node_type != 2 ) {
 
-							}
+							olsr_node2->node_type = 2;
+							olsr_node2->node_type_modified = 1;
+							if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
 
-							add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
-
 						}
 
-					/* normal node */
-					} else {
+						add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
 
-						olsr_node1 = get_olsr_node( &Olsr_root, con_from );
-						olsr_node2 = get_olsr_node( &Olsr_root, con_to );
-						f=10.0+strtod(etx,NULL)/10.0;
-						if (f>=5) add_olsr_con( olsr_node1, olsr_node2, f );   /* just to prevent ascii to float converting inconsistency ... */
-
 					}
 
+				/* normal node */
+				} else {
+
+					olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+					olsr_node2 = get_olsr_node( &Olsr_root, con_to );
+					f=10.0+strtod(etx,NULL)/10.0;
+					if (f>=5) add_olsr_con( olsr_node1, olsr_node2, f );   /* just to prevent ascii to float converting inconsistency ... */
+
 				}
 
+				con_from = con_to = etx = NULL;
+				dn = 0;
+
 			}
 
 		}
 
-		index++;
+		lbuf_ptr++;
 
 	}
 
-	memmove( lbuf, lbuf + index + 1, index + 1 );
 	return(0);
 
 }



From marec at berlios.de  Fri Feb 17 23:57:40 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 17 Feb 2006 23:57:40 +0100
Subject: [S3d-svn] r83 - trunk/apps/olsrs3d
Message-ID: <200602172257.k1HMveLK005995@sheep.berlios.de>

Author: marec
Date: 2006-02-17 23:57:37 +0100 (Fri, 17 Feb 2006)
New Revision: 83

Modified:
   trunk/apps/olsrs3d/TODO
Log:
todo upgrade

Modified: trunk/apps/olsrs3d/TODO
===================================================================
--- trunk/apps/olsrs3d/TODO	2006-02-17 22:48:14 UTC (rev 82)
+++ trunk/apps/olsrs3d/TODO	2006-02-17 22:57:37 UTC (rev 83)
@@ -2,3 +2,12 @@
 	rotate text in cam-direction
 	search for vertices (text input?)
 	show link times
+	add 3ds files for cubes, linksys wrt, internet node, hna node
+	add color mode without red & green colors
+	focus clicked node
+	move all 3 axes
+	performance improvements !!!
+	position nodes via gps data if available
+	show route between node x and y after selecting them
+	detailed info about a node ( cpu, ram, etc)
+	resolve ips to names via nameservice plugin



From dotslash at berlios.de  Sat Feb 18 00:21:34 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Sat, 18 Feb 2006 00:21:34 +0100
Subject: [S3d-svn] r84 - in trunk: . apps/dot_mcp
Message-ID: <200602172321.k1HNLY10008490@sheep.berlios.de>

Author: dotslash
Date: 2006-02-18 00:21:33 +0100 (Sat, 18 Feb 2006)
New Revision: 84

Added:
   trunk/apps/dot_mcp/cubeyholes.3ds
   trunk/apps/dot_mcp/ringsystem.3ds
   trunk/apps/dot_mcp/rotate.3ds
   trunk/apps/dot_mcp/spikeybla.3ds
Modified:
   trunk/
Log:
 r104 at balthasar:  dotslash | 2006-02-18 00:20:14 +0100
 adding objects to dot_mcp dir (we need object directory + search path soon!)



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:102
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:104

Added: trunk/apps/dot_mcp/cubeyholes.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/apps/dot_mcp/cubeyholes.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/apps/dot_mcp/ringsystem.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/apps/dot_mcp/ringsystem.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/apps/dot_mcp/rotate.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/apps/dot_mcp/rotate.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/apps/dot_mcp/spikeybla.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/apps/dot_mcp/spikeybla.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From dotslash at berlios.de  Sat Feb 18 00:21:37 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Sat, 18 Feb 2006 00:21:37 +0100
Subject: [S3d-svn] r85 - in trunk: . client
Message-ID: <200602172321.k1HNLbOr008544@sheep.berlios.de>

Author: dotslash
Date: 2006-02-18 00:21:36 +0100 (Sat, 18 Feb 2006)
New Revision: 85

Modified:
   trunk/
   trunk/client/3dsread.c
   trunk/client/io.c
Log:
 r105 at balthasar:  dotslash | 2006-02-18 00:20:58 +0100
 - removing debug messages again
 - returning -1 if 3ds object cannot be found



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:104
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:105

Modified: trunk/client/3dsread.c
===================================================================
--- trunk/client/3dsread.c	2006-02-17 23:21:33 UTC (rev 84)
+++ trunk/client/3dsread.c	2006-02-17 23:21:36 UTC (rev 85)
@@ -10,7 +10,7 @@
 int s3d_import_3ds_file(char *fname)
 {
 	char *buf;
-	s3d_open_file(fname,&buf);
+	if (s3d_open_file(fname,&buf)==-1) return(-1);
 	return(s3d_import_3ds(buf));
 	
 }
@@ -245,7 +245,7 @@
 		cid=gints(ptr);
 		clen=gintl(ptr+2);
 		
-		dprintf (LOW,"[pos %x]: \t%04x [len:%d]",(ptr-buf),cid,(clen-6));
+		dprintf (VLOW,"[pos %x]: \t%04x [len:%d]",(ptr-buf),cid,(clen-6));
 		if ((ptr==buf) && (cid!=0x4d4d))
 		{
 			errs("3d_import_3ds()","file doesn't start with 0x4d4d, maybe file corrupt?");
@@ -300,7 +300,7 @@
 		  case 0x4120:
 			polynum=gints(ptr);
 			ptr+=sizeof(unsigned short);
-			dprintf(LOW,"-- polygon list!! number of polygons: %d",polynum);
+			dprintf(VLOW,"-- polygon list!! number of polygons: %d",polynum);
 			poly_buf=malloc(sizeof(unsigned long)*4*polynum);
 			if (poly_buf==NULL) break;
 		    for (j=0; j<polynum; j++)
@@ -311,7 +311,6 @@
 				poly_buf[j*4+3]=htonl(col_obj);  /*  we should have a default material .... */
 				ptr+=sizeof(unsigned short)*4;
 		    }
-			dprintf(LOW,"done");
 			break;
 		  case 0x4130:
 			ptr2=(char *)ptr+(clen-6);  /*  backup our endpointer ... */

Modified: trunk/client/io.c
===================================================================
--- trunk/client/io.c	2006-02-17 23:21:33 UTC (rev 84)
+++ trunk/client/io.c	2006-02-17 23:21:36 UTC (rev 85)
@@ -192,9 +192,9 @@
 	{ errn("s3d_open_file():fseek()",errno); return(0);}*/
 
 	if ((fp = fopen(fname, "rt")) == NULL)
-	{ errn("s3d_open_file():fopen()",errno); return(0);}
+	{ errn("s3d_open_file():fopen()",errno); return(-1);}
 	if (fstat(fileno(fp),&bf))
-	{ errn("s3d_open_file():fopen()",errno); return(0);}
+	{ errn("s3d_open_file():fopen()",errno); return(-1);}
 	filesize=bf.st_size;
 	dprintf(LOW, "opening %s, filesize is %d",fname, filesize);
 	if ((buf=malloc(filesize))==NULL)



From dotslash at berlios.de  Sat Feb 18 14:01:11 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Sat, 18 Feb 2006 14:01:11 +0100
Subject: [S3d-svn] r86 - in trunk: . apps/dot_mcp apps/olsrs3d
Message-ID: <200602181301.k1ID1B4m000105@sheep.berlios.de>

Author: dotslash
Date: 2006-02-18 14:01:04 +0100 (Sat, 18 Feb 2006)
New Revision: 86

Modified:
   trunk/
   trunk/ChangeLog
   trunk/apps/dot_mcp/dot_mcp.c
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/net.c
   trunk/apps/olsrs3d/process.c
Log:
 r111 at balthasar:  dotslash | 2006-02-18 14:00:55 +0100
 - removed c++ style comments in olsrs3d
 - fixed dot_mcp
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:105
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:111

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-17 23:21:36 UTC (rev 85)
+++ trunk/ChangeLog	2006-02-18 13:01:04 UTC (rev 86)
@@ -1,3 +1,5 @@
+2006-02-18	Simon Wunderlich - <dotslash at packetmixer.de>	
+	- removed c++ styles in olsrs3d
 2006-02-17	Simon Wunderlich - <dotslash at packetmixer.de>	
 	- gintl() and gints() added in 3dsread.c, hopefully
 	  improving endianess compatibility

Modified: trunk/apps/dot_mcp/dot_mcp.c
===================================================================
--- trunk/apps/dot_mcp/dot_mcp.c	2006-02-17 23:21:36 UTC (rev 85)
+++ trunk/apps/dot_mcp/dot_mcp.c	2006-02-18 13:01:04 UTC (rev 86)
@@ -351,10 +351,10 @@
 					1,1,1,0.2,
 					1,1,1,0.2,
 					1,1,1,0.2);*/
-		min_but=s3d_import_3ds_file("objs/cubeyholes.3ds");
-		rotate=s3d_import_3ds_file("objs/rotate.3ds");
-		close_but=s3d_import_3ds_file("objs/spikeybla.3ds");
-		sphere=s3d_import_3ds_file("objs/ringsystem.3ds");
+		min_but=s3d_import_3ds_file("cubeyholes.3ds");
+		rotate=s3d_import_3ds_file("rotate.3ds");
+		close_but=s3d_import_3ds_file("spikeybla.3ds");
+		sphere=s3d_import_3ds_file("ringsystem.3ds");
 		s3d_mainloop(mainloop);
 		s3d_quit();
 	}

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-17 23:21:36 UTC (rev 85)
+++ trunk/apps/olsrs3d/main.c	2006-02-18 13:01:04 UTC (rev 86)
@@ -206,7 +206,7 @@
 	while ( Obj_to_ip_curr != Obj_to_ip_end ) {
 
 		/* myself ... */
-// 		if ( strncmp( Obj_to_ip_curr->olsr_node->ip, olsr_node->ip, NAMEMAX ) != 0 ) {
+/* 		if ( strncmp( Obj_to_ip_curr->olsr_node->ip, olsr_node->ip, NAMEMAX ) != 0 ) {*/
 
 			olsr_con_list = olsr_node->olsr_con_list;
 			while ( olsr_con_list != NULL ) {
@@ -230,7 +230,7 @@
 
 			Obj_to_ip_curr = Obj_to_ip_curr->next;
 
-// 		}
+/* 		} */
 
 	}
 
@@ -408,76 +408,76 @@
 	int i,j,o,r;
 	float d,gd,f,m[3];
 	float z[3]={0,0,0};
-// 	for (i=0;i<max;i++)
-// 	{
-// 		node[i].mov[0]=
-// 		node[i].mov[1]=
-// 		node[i].mov[2]=0.0;
-// 	}
+/* 	for (i=0;i<max;i++)
+ 	{
+ 		node[i].mov[0]=
+ 		node[i].mov[1]=
+ 		node[i].mov[2]=0.0;
+ 	} */
 
-	// calculate new movement vector
+	/* calculate new movement vector */
 	calc_olsr_node_mov();
 
-	// prepare nodes
+	/* prepare nodes */
 	handle_olsr_node( Olsr_root );
 
-	// move it
+	/* move it */
 	move_olsr_nodes();
 
-	/*	for (i=0;i<max;i++)*/
-	/*	{*/
-	/*		for (j=i+1;j<max;j++)*/
-	/*		{*/
-	/*			if (i!=j)*/
-	/*			{*/
-	/*				gd=adj[i*max+j];*/
-	/*				d=dirt(node[i].pos,node[j].pos,m);*/
-	/*				if (gd==0.0)*/	/* points are not connected */
-	/*				{*/
-/*					printf("distance between i and j: %f\n",d);*/
-	/*					if (d<0.1) d=0.1;*/
-	/*					mov_add(node[j].mov,m,100/(d*d));*/
-	/*					mov_add(node[i].mov,m,-100/(d*d));*/
-	/*				} else {*/ /* connected!! */
+	/*	for (i=0;i<max;i++)
+		{
+			for (j=i+1;j<max;j++)
+			{
+				if (i!=j)
+				{
+					gd=adj[i*max+j];
+					d=dirt(node[i].pos,node[j].pos,m);
+					if (gd==0.0)*/	/* points are not connected 
+					{
+					printf("distance between i and j: %f\n",d);
+						if (d<0.1) d=0.1;
+						mov_add(node[j].mov,m,100/(d*d));
+						mov_add(node[i].mov,m,-100/(d*d));
+					} else { / * connected!! * /
 
-	/*					f=(gd)/d;*/
-	/*					if (f<0.3) f=0.3;*/
-	/*					mov_add(node[i].mov,m,1/f-1);*/
-	/*					mov_add(node[j].mov,m,-(1/f-1));*/
-/*					printf("distance between %d and %d: %f / %f = %f\n",i,j,gd,d,f);*/
-	/*				}*/
-	/*			}*/
-	/*		}*/
-	/*		d=dirt(node[i].pos,z,m);*/
-/*		mov_add(node[i].mov,m,d/100); * move a little bit to point zero */
-/*		mov_add(node[i].mov,m,1); * move a little bit to point zero */
-/*	}
-	/* move it!! */
-// 	for (i=0;i<max;i++)
-// 	{
-/*		printf("applying move vector for point %d: %f:%f:%f\n",i,node[i].mov[0],node[i].mov[1],node[i].mov[2]);*/
-// 		if ((d=dist(node[i].mov,z))>10.0)
-// 			mov_add(node[i].pos,node[i].mov,1.0/((float )d)); /* normalize */
-// 		else
-// 			mov_add(node[i].pos,node[i].mov,0.1);
-// 		s3d_translate(node[i].obj,node[i].pos[0],node[i].pos[1],node[i].pos[2]);
-// 		for (j=i+1;j<max;j++)
-// 			if ((o=adj_obj[max*i+j])!=-1)
-// 			{
-// 				s3d_pop_vertex(o,6);
-/*				s3d_pop_polygon(o,2);*/
-// 				s3d_push_vertex(o,node[i].pos[0],	 node[i].pos[1],node[i].pos[2]);
-// 				s3d_push_vertex(o,node[i].pos[0]+0.2,node[i].pos[1],node[i].pos[2]);
-// 				s3d_push_vertex(o,node[i].pos[0]-->id0.2,node[i].pos[1],node[i].pos[2]);
+						f=(gd)/d;
+						if (f<0.3) f=0.3;
+						mov_add(node[i].mov,m,1/f-1);
+						mov_add(node[j].mov,m,-(1/f-1));
+					printf("distance between %d and %d: %f / %f = %f\n",i,j,gd,d,f);
+					}
+				}
+			}
+			d=dirt(node[i].pos,z,m);
+		mov_add(node[i].mov,m,d/100); * move a little bit to point zero 
+		mov_add(node[i].mov,m,1); * move a little bit to point zero 
+	}
+	/ * move it!! * /
+ 	for (i=0;i<max;i++)
+ 	{
+/ *		printf("applying move vector for point %d: %f:%f:%f\n",i,node[i].mov[0],node[i].mov[1],node[i].mov[2]); * /
+ 		if ((d=dist(node[i].mov,z))>10.0)
+ 			mov_add(node[i].pos,node[i].mov,1.0/((float )d)); / * normalize * /
+ 		else
+ 			mov_add(node[i].pos,node[i].mov,0.1);
+ 		s3d_translate(node[i].obj,node[i].pos[0],node[i].pos[1],node[i].pos[2]);
+ 		for (j=i+1;j<max;j++)
+ 			if ((o=adj_obj[max*i+j])!=-1)
+ 			{
+ 				s3d_pop_vertex(o,6);
+/ *				s3d_pop_polygon(o,2);* /
+ 				s3d_push_vertex(o,node[i].pos[0],	 node[i].pos[1],node[i].pos[2]);
+ 				s3d_push_vertex(o,node[i].pos[0]+0.2,node[i].pos[1],node[i].pos[2]);
+ 				s3d_push_vertex(o,node[i].pos[0]-->id0.2,node[i].pos[1],node[i].pos[2]);
+				
+ 				s3d_push_vertex(o,node[j].pos[0],	 node[j].pos[1],node[j].pos[2]);
+ 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]+0.2,node[j].pos[2]);
+ 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]-0.2,node[j].pos[2]);
 
-// 				s3d_push_vertex(o,node[j].pos[0],	 node[j].pos[1],node[j].pos[2]);
-// 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]+0.2,node[j].pos[2]);
-// 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]-0.2,node[j].pos[2]);
-
-/*				s3d_push_polygon(o,0,4,5,0);
-				s3d_push_polygon(o,3,1,2,0);*/
-// 			}
-// 	}
+/ *				s3d_push_polygon(o,0,4,5,0);
+				s3d_push_polygon(o,3,1,2,0);* /
+ 			}
+ 	} */
 	while (0!=(r=net_main()))
 		if (r==-1)
 		{
@@ -644,8 +644,9 @@
 	struct Obj_to_ip *del;
 	move_lst_ptr(&id);
 	if(id != List_ptr->id)
+	{
 		/* printf("obj2ip: remove id %d failed move_lst_ptr return id %d\n",id,List_ptr->next->id); */
-	else {
+	} else {
 		del = List_ptr;
 		List_ptr->next->prev = List_ptr->prev;
 		List_ptr->prev->next = List_ptr->next;
@@ -681,8 +682,8 @@
 			}
 		} else {
 			List_ptr = Obj_to_ip_end;
-			/* printf("obj2ip: start at end id %d - %d > %d - %d \n",*id,Obj_to_ip_head->next->id,Obj_to_ip_end->prev->id,*id); */
-			//do List_ptr = List_ptr->prev; while(*id > List_ptr->prev->id);
+			/* printf("obj2ip: start at end id %d - %d > %d - %d \n",*id,Obj_to_ip_head->next->id,Obj_to_ip_end->prev->id,*id);  */
+			/*  do List_ptr = List_ptr->prev; while(*id > List_ptr->prev->id); */
 			while(*id < List_ptr->prev->id) {
 				/* printf("obj2ip: %d < %d move to ",*id,List_ptr->id); */
 				List_ptr = List_ptr->prev;

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-17 23:21:36 UTC (rev 85)
+++ trunk/apps/olsrs3d/net.c	2006-02-18 13:01:04 UTC (rev 86)
@@ -57,7 +57,7 @@
 		return(-1);
 	}
     buf[numbytes] = '\0';
-// 	strncat(lbuf,buf,MAXLINESIZE);
+/* 	strncat(lbuf,buf,MAXLINESIZE); */
 	strncpy(lbuf,buf,MAXLINESIZE);
 	process_main();
 	return(1);

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-17 23:21:36 UTC (rev 85)
+++ trunk/apps/olsrs3d/process.c	2006-02-18 13:01:04 UTC (rev 86)
@@ -295,26 +295,27 @@
 	float 	*swap_adj;
 	int  	*swap_adj_obj;
 	char	nc_str[20];
-// 	printf("committing input ... \n");
+/* 	printf("committing input ... \n");
 
-	/* remove old adjacent objects ... */
-// 	for (i=0;i<max;i++)
-// 		for (j=i+1;j<max;j++)
-// 			if (adj_obj[i*max+j]!=-1)
-// 				if (new_adj_obj[i*new_max+j]==-1)
-// 				{
-// /*					printf("old link does not exist anymore ...\n");*/
-// 					/* this link does not exist anymore ... */
-// 					s3d_del_object(adj_obj[i*max+j]);
-// 				}
-	/* swap the matrices */
-// 	swap_adj=adj;
-// 	swap_adj_obj=adj_obj;
-//
-// 	adj=new_adj;
-// 	adj_obj=new_adj_obj;
+	/ * remove old adjacent objects ... * /
+ 	for (i=0;i<max;i++)
+ 		for (j=i+1;j<max;j++)
+ 			if (adj_obj[i*max+j]!=-1)
+ 				if (new_adj_obj[i*new_max+j]==-1)
+ 				{
+   / *				printf("old link does not exist anymore ...\n");* /
+ 					/ * this link does not exist anymore ... * /
+ 					s3d_del_object(adj_obj[i*max+j]);
+ 				}
+	/ * swap the matrices * /
+ 	swap_adj=adj;
+ 	swap_adj_obj=adj_obj;
 
+ 	adj=new_adj;
+ 	adj_obj=new_adj_obj;
+	*/
 
+
 	/* if we have more nodes redraw node count */
 	/* what if we have less nodes ?? */
 	if (new_max>max)
@@ -331,162 +332,169 @@
 
 	}
 
-
-// 	new_adj=swap_adj;
-// 	new_adj_obj=swap_adj_obj;
+/*
+ 	new_adj=swap_adj;
+ 	new_adj_obj=swap_adj_obj;
+ 	*/
 	/* setting new maxsize */
 	max=new_max;
 	/* resetting the input-matrices*/
-// 	for (i=0;i<max;i++)
-// 	for (j=0;j<max;j++)
-// 	{
-// 		new_adj[i*max+j]=0.0;
-// 		new_adj_obj[i*max+j]=-1;
-// 	}
+	/*
+ 	for (i=0;i<max;i++)
+ 	for (j=0;j<max;j++)
+ 	{
+ 		new_adj[i*max+j]=0.0;
+ 		new_adj_obj[i*max+j]=-1;
+ 	}
+ 	*/
 	return(0);
 }
-// int parse_line( int lbuf_index ) {
-//
-// // 	int line_length;
-// 	char *lbuf_ptr;
-// // 	char *data[3];   // in this order: ip_from, ip_to, label
-// 	char *lbuf_ptr, *con_from, *con_to, *etx;
-// 	char *con_from;
-// 	char *con_to;
-// 	char *etx;
-//
-// 	struct olsr_node *olsr_node1;   // pointer to olsr nodes
-// 	struct olsr_node *olsr_node2;
-//
-// // 	line_length = strlen( lbuf[lbuf_index] );
-// 	lbuf_ptr = &lbuf[lbuf_index];
-//
-// 	int i,dn,n1,n2;
-// 	float f;
-// // 	data[0]=data[1]=data[2]=NULL;
-// 	/*lbuf[n]='\0';  we don't need this one anyway */
-//
-// 	dn=0;
-// 	while ( (*lbuf_ptr) != '\0' ) {
-//
-// 		switch ( (*lbuf_ptr) ) {
-// // 			printf( "%c", (*lbuf_ptr) );
-// 			case '"':
-// 				if (dn<6)
-// 				{
-// 					if ( !(dn%2) ) { /* starts */
-// 						switch ( dn ) {
-// 							case 0:
-// 								con_from = lbuf_ptr;
-// 								break;
-// 							case 2:
-// 								con_to = lbuf_ptr;
-// 								break;
-// 							case 4:
-// 								etx = lbuf_ptr;
-// 								break;
-// 						}
-// // 						*data[(dn/2)] = (*lbuf_ptr);
-// 					} else { /* ends */
-// 						(*lbuf_ptr) = '\0'; /* string terminator!! */
-// 					}
-// 				}
-// 				dn++;
-//
-// 				break;
-// // 			case '}':
-// // 				if (!(dn%2))	/* we don't end the input inside of strings ... this won't happen anyway, I guess */
-// // 					commit_input();
-// // 				break;
-// 		}
-// 		lbuf_ptr++;
-// 	}
-// 	if (dn>=6)
-// 	{
-// /*		printf("######link from [%s] to [%s], label [%s]\n",data[0],data[1],data[2]);*/
-// 		/* announced network via HNA */
-// 		if ( strncmp( etx, "HNA", NAMEMAX ) == 0 ) {
-//
-// 			/* connection to internet */
-// 			if ( strncmp( con_to, "0.0.0.0/0.0.0.0", NAMEMAX ) == 0 ) {
-//
-// 				olsr_node1 = get_olsr_node( &Olsr_root, con_from );
-//
-// 				if ( olsr_node1->node_type != 1 ) {
-//
-// 					olsr_node1->node_type = 1;
-// 					olsr_node1->node_type_modified = 1;
-// 					if ( Debug ) printf( "new internet: %s\n", olsr_node1->ip );
-//
-// 				}
-//
-// 			/* normal HNA */
-// 			} else {
-//
-// 				olsr_node1 = get_olsr_node( &Olsr_root, con_from );
-// 				olsr_node2 = get_olsr_node( &Olsr_root, con_to );
-//
-// 				if ( olsr_node2->node_type != 2 ) {
-//
-// 					olsr_node2->node_type = 2;
-// 					olsr_node2->node_type_modified = 1;
-// 					if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
-//
-// 				}
-//
-// 				add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
-//
-// 			}
-//
-//
-//
-// 		/* normal node */
-// 		} else {
-// // 			n1=get_node_num(data[0]);
-// // 			n2=get_node_num(data[1]);
-// 			olsr_node1 = get_olsr_node( &Olsr_root, con_from );
-// 			olsr_node2 = get_olsr_node( &Olsr_root, con_to );
-// 			f=10.0+strtod(etx,NULL)/10.0;
-// /*		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);*/
-// 			if (f>=5) /* just to prevent ascii to float converting inconsistency ... */
-// // 				add_adj(n1,n2,f);
-// 				add_olsr_con( olsr_node1, olsr_node2, f );
-// 		}
-// 	}
-// 	return(0);
-// }
-// int process_main()
-// {
-// 	int i,l;
-// 	i=0;
-// 	l=strlen(lbuf);
-// 	while (i<l)
-// 	{
-// 		if ((lbuf[i])=='\n')
-// 		{
-// 			parse_line(i);
-// 			memmove(lbuf,lbuf+i+1,MAXLINESIZE-i-1);
-// 			process_main(); /* well, we don't have to do this the recursive way here, but who cares ... */
-// 			return(0);
-// 		}
-// 		i++;
-// 	}
-// 	return(0);
-// }
+/*
+ int parse_line( int lbuf_index ) {
 
+ / * 	int line_length; * /
+ 	char *lbuf_ptr;
+ / * 	char *data[3];  * / / * in this order: ip_from, ip_to, label * /
+ 	char *lbuf_ptr, *con_from, *con_to, *etx;
+ 	char *con_from;
+ 	char *con_to;
+ 	char *etx;
+
+ 	struct olsr_node *olsr_node1;   / * pointer to olsr nodes * /
+ 	struct olsr_node *olsr_node2;
+
+ / * 	line_length = strlen( lbuf[lbuf_index] ); * /
+ 	lbuf_ptr = &lbuf[lbuf_index];
+
+ 	int i,dn,n1,n2;
+ 	float f;
+ / * 	data[0]=data[1]=data[2]=NULL; * /
+ 	/ *lbuf[n]='\0';  we don't need this one anyway * /
+
+ 	dn=0;
+ 	while ( (*lbuf_ptr) != '\0' ) {
+
+ 		switch ( (*lbuf_ptr) ) {
+ / * 			printf( "%c", (*lbuf_ptr) ); * /
+ 			case '"':
+ 				if (dn<6)
+ 				{
+ 					if ( !(dn%2) ) { / * starts * /
+ 						switch ( dn ) {
+ 							case 0:
+ 								con_from = lbuf_ptr;
+ 								break;
+ 							case 2:
+ 								con_to = lbuf_ptr;
+ 								break;
+							case 4:
+ 								etx = lbuf_ptr;
+ 								break;
+ 						}
+ / * 						*data[(dn/2)] = (*lbuf_ptr); * /
+ 					} else { / * ends * /
+ 						(*lbuf_ptr) = '\0'; / * string terminator!! * /
+ 					}
+ 				}
+ 				dn++;
+
+ 				break;
+ / * 			case '}':
+  				if (!(dn%2))	 / * we don't end the input inside of strings ... this won't happen anyway, I guess * /
+  					commit_input();
+ 				break;
+  * /
+ 		}
+ 		lbuf_ptr++;
+ 	}
+ 	if (dn>=6)
+ 	{
+  / *		printf("######link from [%s] to [%s], label [%s]\n",data[0],data[1],data[2]);* /
+ 		/ * announced network via HNA * /
+ 		if ( strncmp( etx, "HNA", NAMEMAX ) == 0 ) {
+
+ 			/ * connection to internet * /
+ 			if ( strncmp( con_to, "0.0.0.0/0.0.0.0", NAMEMAX ) == 0 ) {
+
+ 				olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+
+ 				if ( olsr_node1->node_type != 1 ) {
+
+ 					olsr_node1->node_type = 1;
+ 					olsr_node1->node_type_modified = 1;
+ 					if ( Debug ) printf( "new internet: %s\n", olsr_node1->ip );
+
+ 				}
+
+ 			/ * normal HNA * /
+ 			} else {
+
+ 				olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+ 				olsr_node2 = get_olsr_node( &Olsr_root, con_to );
+
+ 				if ( olsr_node2->node_type != 2 ) {
+						
+ 					olsr_node2->node_type = 2;
+ 					olsr_node2->node_type_modified = 1;
+ 					if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
+
+ 				}
+
+ 				add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
+
+ 			}
+
+
+
+ 		/ * normal node * /
+ 		} else {
+				/ *
+ 	 			n1=get_node_num(data[0]);
+  				n2=get_node_num(data[1]);
+  			* /
+ 			olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+ 			olsr_node2 = get_olsr_node( &Olsr_root, con_to );
+ 			f=10.0+strtod(etx,NULL)/10.0;
+	 / *		printf("######link from %d to %d, %f, %d\n",n1,n2,f, f>=10);* /
+ 			if (f>=5) / * just to prevent ascii to float converting inconsistency ... * /
+ / * 				add_adj(n1,n2,f);* /
+ 				add_olsr_con( olsr_node1, olsr_node2, f );
+ 		}
+ 	}
+ 	return(0);
+ }
+ int process_main()
+ {
+ 	int i,l;
+ 	i=0;
+ 	l=strlen(lbuf);
+ 	while (i<l)
+ 	{
+ 		if ((lbuf[i])=='\n')
+ 		{
+ 			parse_line(i);
+ 			memmove(lbuf,lbuf+i+1,MAXLINESIZE-i-1);
+ 			process_main(); / * well, we don't have to do this the recursive way here, but who cares ... * /
+ 			return(0);
+ 		}
+ 		i++;
+ 	}
+ 	return(0);
+ }
+*/
 int process_main() {
 
 	int dn;
 	float f;
 	char *lbuf_ptr, *con_from, *con_to, *etx;
-	struct olsr_node *olsr_node1;   // pointer to olsr nodes
+	struct olsr_node *olsr_node1;   /* pointer to olsr nodes */
 	struct olsr_node *olsr_node2;
 
 	lbuf_ptr = lbuf;
 
 	while ( (*lbuf_ptr) != '\0' ) {
 
-// 		printf( "%c",(*lbuf_ptr) );
+/* 		printf( "%c",(*lbuf_ptr) ); */
 
 		if ( (*lbuf_ptr) == '\n' ) {
 
@@ -516,7 +524,7 @@
 
 			if ( ++dn == 6 ) {
 
-// 				printf( "con_from: %s, con_to: %s, etx: %s\n", con_from, con_to, etx );
+/* 				printf( "con_from: %s, con_to: %s, etx: %s\n", con_from, con_to, etx ); */
 
 				/* announced network via HNA */
 				if ( strncmp( etx, "HNA", NAMEMAX ) == 0 ) {



From dotslash at berlios.de  Sat Feb 18 14:44:31 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Sat, 18 Feb 2006 14:44:31 +0100
Subject: [S3d-svn] r87 - in trunk: . client example
Message-ID: <200602181344.k1IDiVcK023616@sheep.berlios.de>

Author: dotslash
Date: 2006-02-18 14:44:25 +0100 (Sat, 18 Feb 2006)
New Revision: 87

Modified:
   trunk/
   trunk/client/freetype.c
   trunk/client/sei_monotone.c
   trunk/example/strtest.c
Log:
 r113 at balthasar:  dotslash | 2006-02-18 14:44:18 +0100
 - Quickfix for s3dvt problem - won't render %, it does not work with the
   triangulation right now



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:111
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:113

Modified: trunk/client/freetype.c
===================================================================
--- trunk/client/freetype.c	2006-02-18 13:01:04 UTC (rev 86)
+++ trunk/client/freetype.c	2006-02-18 13:44:25 UTC (rev 87)
@@ -98,6 +98,8 @@
 		errds(VHIGH,"s3d_add_tessbuf():FT_Load_Char()","can't load character");
 		return(-1);
 	} 
+	if (a=='%') return(-1);
+	dprintf(LOW,"triangulating character %c",a);
 	norm=1.0/face->glyph->metrics.vertAdvance;
 	ch=a;
 	v_off=0;
@@ -132,8 +134,11 @@
 		 * limited though) */
 		tess_buf[a].pbuf=malloc(sizeof(unsigned long)*4*(face->glyph->outline.n_points+2*face->glyph->outline.n_contours)); 
 		do {
+			dprintf(LOW,"triangulating %d contours", ncontours);
+			for (i=0;i<ncontours;i++)
+				dprintf(LOW,"[%d]: %d points ", i, cntr[i]);
 			np=sei_triangulate_polygon(ncontours, cntr, vertices, triangles);
-			dprintf(VLOW,"[F]ound %d polygons",np);
+			dprintf(LOW,"[F]ound %d polygons",np);
 			memset(used,0,ncontours);
 			for (i=0;i<np;i++)
 			{
@@ -141,7 +146,7 @@
 				tess_buf[a].pbuf[k*4+1]=map[triangles[i][1]];
 				tess_buf[a].pbuf[k*4+2]=map[triangles[i][2]];
 				tess_buf[a].pbuf[k*4+3]=0;
-				dprintf(VLOW,"TRIANG: %d %d %d = %d %d %d",	triangles[i][0],triangles[i][1],triangles[i][2], 
+				dprintf(LOW,"TRIANG: %d %d %d = %d %d %d",	triangles[i][0],triangles[i][1],triangles[i][2], 
 															map[triangles[i][0]], map[triangles[i][1]], map[triangles[i][2]]);
 				for (j=0;j<3;j++)
 				{
@@ -151,7 +156,7 @@
 						cpos+=cntr[c];
 						if (triangles[i][j]<cpos)
 						{
-							dprintf(VLOW,"point %d in contour line %d (cpos = %d) used",triangles[i][j],c,cpos);
+/*							dprintf(LOW,"point %d in contour line %d (cpos = %d) used",triangles[i][j],c,cpos);*/
 							used[c]=1;
 							break;
 						}
@@ -165,10 +170,10 @@
 				j&=used[c];
 			}
 			if (j) 
-				dprintf(VLOW,"all contours used");
+				dprintf(LOW,"all contours used");
 			else 
 			{
-				dprintf(VLOW,"not all contours used, restarting");
+				dprintf(LOW,"not all contours used, restarting");
 				diff=0;
 				ncon=0; /* number of actually unused contours */
 				cpos=1; /* position of source vertices */
@@ -178,7 +183,7 @@
 					if (!used[c])
 					{
 					  /* not used, move it to new end */
-						dprintf(VLOW,"contour %d (%d) not used!!",c,cntr[c]);
+						dprintf(LOW,"contour %d (%d) not used!!",c,cntr[c]);
 						cntr[ncon]=cntr[c];
 						ncon++;
 						if (cpos!=mpos)
@@ -239,7 +244,7 @@
 		pbuf[i*4+3]=htonl(pbuf[i*4+3]);
 
 	}
-	dprintf(HIGH,"commiting %d vertices, %d polygons",tess_buf[a].vn,tess_buf[a].pn);
+	dprintf(VLOW,"commiting %d vertices, %d polygons",tess_buf[a].vn,tess_buf[a].pn);
 	s3d_push_vertices(oid,vbuf,tess_buf[a].vn);
 	s3d_push_polygons(oid,pbuf,tess_buf[a].pn);
 	*xoff+=tess_buf[a].xoff;  /*  xoffset */

Modified: trunk/client/sei_monotone.c
===================================================================
--- trunk/client/sei_monotone.c	2006-02-18 13:01:04 UTC (rev 86)
+++ trunk/client/sei_monotone.c	2006-02-18 13:44:25 UTC (rev 87)
@@ -188,8 +188,7 @@
   vp0->nextfree++;
   vp1->nextfree++;
 
-  errds(VLOW,"sei:make_poly()",": mcur = %d, (v0, v1) = (%d, %d)", 			
-	  mcur, v0, v1);
+  errds(VLOW,"sei:make_poly()",": mcur = %d, (v0, v1) = (%d, %d)", mcur, v0, v1);
   errds(VLOW,"sei:make_poly()","next posns = (p, q) = (%d, %d)", p, q);
 
   mon[mcur] = p;

Modified: trunk/example/strtest.c
===================================================================
--- trunk/example/strtest.c	2006-02-18 13:01:04 UTC (rev 86)
+++ trunk/example/strtest.c	2006-02-18 13:44:25 UTC (rev 87)
@@ -18,8 +18,7 @@
 	if (!s3d_init(&argc,&argv,"clock"))	
 	{
 		s3d_select_font("vera");
-		o=s3d_draw_string("The lazy fox is bored enough to jump over everything it sees. weird, isn't it?!",NULL); 
-/*		o=s3d_draw_string("i",NULL);*/
+		o=s3d_draw_string("The lazy fox is bored enough to jump over everything it sees. weird, isn't it?!",NULL);  
 		s3d_flags_on(o,S3D_OF_VISIBLE);
 
 		s3d_set_callback(S3D_EVENT_OBJ_CLICK,	(s3d_cb)stop);



From dotslash at berlios.de  Sat Feb 18 18:49:54 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Sat, 18 Feb 2006 18:49:54 +0100
Subject: [S3d-svn] r88 - in trunk: . apps/dot_mcp example server
Message-ID: <200602181749.k1IHnsU7019760@sheep.berlios.de>

Author: dotslash
Date: 2006-02-18 18:49:52 +0100 (Sat, 18 Feb 2006)
New Revision: 88

Modified:
   trunk/
   trunk/ChangeLog
   trunk/apps/dot_mcp/dot_mcp.c
   trunk/example/strtest.c
   trunk/server/config.h
   trunk/server/graphics.c
   trunk/server/object.c
Log:
 r115 at balthasar:  dotslash | 2006-02-18 18:49:35 +0100
 fixed visual bug when 0.0 sized application joins



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:113
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:115

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-18 13:44:25 UTC (rev 87)
+++ trunk/ChangeLog	2006-02-18 17:49:52 UTC (rev 88)
@@ -1,4 +1,5 @@
 2006-02-18	Simon Wunderlich - <dotslash at packetmixer.de>	
+	- fixed 0.0 size application problem
 	- removed c++ styles in olsrs3d
 2006-02-17	Simon Wunderlich - <dotslash at packetmixer.de>	
 	- gintl() and gints() added in 3dsread.c, hopefully

Modified: trunk/apps/dot_mcp/dot_mcp.c
===================================================================
--- trunk/apps/dot_mcp/dot_mcp.c	2006-02-18 13:44:25 UTC (rev 87)
+++ trunk/apps/dot_mcp/dot_mcp.c	2006-02-18 17:49:52 UTC (rev 88)
@@ -23,12 +23,11 @@
 float left=-1.0;
 float zoom=5.0;
 int n_app=0;
-int sphere;
 int rot_flag=0;
 struct app *focus=NULL;
 float focus_r=0;
 float alpha=0;
-unsigned int min_but,rotate,close_but;
+unsigned int min_but,rotate,close_but,sphere;
 
 void place_apps();
 
@@ -48,7 +47,7 @@
 			s3d_translate(	focus->title,-focus->textw-1.2,0.0,0);
 			s3d_translate(	focus->close_but,bsize*focus->textw/2,1.2,0);
 			s3d_link(		focus->close_but,focus->sphere);
-			s3d_link(		focus->oid,0);
+			s3d_link(		focus->oid,0); 
 		}
 	focus=a;
 	if (a==NULL)
@@ -223,12 +222,12 @@
 	a->title=s3d_draw_string(a->name,&a->textw);
 
 	a->close_but=s3d_clone(close_but);
-	s3d_translate(	a->close_but,bsize*a->textw/2,1.2,0);
+	s3d_translate(	a->close_but,bsize*a->textw/2.0,1.2f,0.0f);
 	s3d_link(		a->close_but,a->sphere);
   	s3d_flags_on(	a->close_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
 
 
-	s3d_translate(	a->title,-a->textw-1.2,0.0,0);
+	s3d_translate(	a->title,-a->textw-1.2f,0.0f,0.0f);
 	s3d_link(		a->title,a->close_but);
    	s3d_flags_on(	a->title,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
 	
@@ -355,6 +354,7 @@
 		rotate=s3d_import_3ds_file("rotate.3ds");
 		close_but=s3d_import_3ds_file("spikeybla.3ds");
 		sphere=s3d_import_3ds_file("ringsystem.3ds");
+		printf("min_but: %d, rotate: %d, close_but: %d, sphere: %d",min_but,rotate,close,sphere);
 		s3d_mainloop(mainloop);
 		s3d_quit();
 	}

Modified: trunk/example/strtest.c
===================================================================
--- trunk/example/strtest.c	2006-02-18 13:44:25 UTC (rev 87)
+++ trunk/example/strtest.c	2006-02-18 17:49:52 UTC (rev 88)
@@ -15,7 +15,7 @@
 }
 int main (int argc, char **argv)
 {
-	if (!s3d_init(&argc,&argv,"clock"))	
+	if (!s3d_init(&argc,&argv,"strtest"))	
 	{
 		s3d_select_font("vera");
 		o=s3d_draw_string("The lazy fox is bored enough to jump over everything it sees. weird, isn't it?!",NULL);  

Modified: trunk/server/config.h
===================================================================
--- trunk/server/config.h	2006-02-18 13:44:25 UTC (rev 87)
+++ trunk/server/config.h	2006-02-18 17:49:52 UTC (rev 88)
@@ -19,7 +19,7 @@
 /*  which subsystem do we use for rendering and ? */
 
 /* GLUT is the GL utility library which you obtain at 
- * http: //  freeglut.sourceforge.net/  
+ * http://freeglut.sourceforge.net/  
  */
 #define G_GLUT	1
 /* SDL is a framework for simple media access which contains

Modified: trunk/server/graphics.c
===================================================================
--- trunk/server/graphics.c	2006-02-18 13:44:25 UTC (rev 87)
+++ trunk/server/graphics.c	2006-02-18 17:49:52 UTC (rev 88)
@@ -136,25 +136,28 @@
 			{
 				if (o->oflags&OF_VIRTUAL)  /*  we have an app here. */
 				{
-					cull_get_planes(); 
-					mySetMatrix(o->m);
-					x.x=x.y=x.z=0.0f;
-					myTransformV(&x);
-					k=cull_sphere_in_frustum(&x,o->r);
-/*					dprintf(HIGH,"mcp-object %d is in %s frustum",i,k?"":"not");*/
-					if (k)
+					if (o->r!=0.0)
 					{
-						if (select_mode==1)
-						{
-							dprintf(MED,"object %d in culling frustrum!",i);
-							glLoadName(i);
+						cull_get_planes(); 
+						mySetMatrix(o->m);
+						x.x=x.y=x.z=0.0f;
+						myTransformV(&x);
+						k=cull_sphere_in_frustum(&x,o->r);
+						dprintf(VLOW,"mcp-object %d is in %s frustum",i,k?"":"not");
+						if (k)
+							{
+							if (select_mode==1)
+							{
+								dprintf(MED,"object %d in culling frustrum!",i);
+								glLoadName(i);
+							}
+							render_virtual_object(o);
+						} else {
+							if (select_mode==1)
+							{
+								dprintf(MED,"object %d not in culling frustrum!",i);
+							}
 						}
-						render_virtual_object(o);
-					} else {
-						if (select_mode==1)
-						{
-							dprintf(MED,"object %d not in culling frustrum!",i);
-						}
 					}
 				} else if ((o->oflags&OF_CLONE) && (p->object[o->n_vertex]->oflags&OF_VIRTUAL))
 				{
@@ -310,7 +313,7 @@
 	glRotatef(-cam.rotate.y, 0.0,1.0,0.0);
 	glTranslatef(-cam.translate.x,-cam.translate.y,-cam.translate.z);*/
 
-/* 	glPushMatrix();  / *  save the cam * / */
+ 	glPushMatrix();  /*  save the cam */ 
 		glLightfv(GL_LIGHT0,GL_POSITION,pos);
 		render_by_mcp();
 		glPushMatrix();
@@ -320,7 +323,9 @@
 			glMaterialfv(GL_FRONT,GL_DIFFUSE,wire_diff);
 			glutWireTorus(100,100,40,40);
 		glPopMatrix();
-/* 	glPopMatrix();  / *  restore the cam * / */
+ 	glPopMatrix();  /*  restore the cam */ 
+	glLoadIdentity();
+	glMultMatrixf(m);
 
 	glFlush();
 	switch (frame_mode)

Modified: trunk/server/object.c
===================================================================
--- trunk/server/object.c	2006-02-18 13:44:25 UTC (rev 87)
+++ trunk/server/object.c	2006-02-18 17:49:52 UTC (rev 88)
@@ -2,6 +2,7 @@
 #include <stdlib.h>		 /*  malloc(),realloc(),free() */
 #include <string.h>		 /*  memcpy() */
 #include <GL/glut.h> 	 /*  glutwirecube */
+#define _ISOC99_SOURCE
 #include <math.h>		 /*  sin(),cos() */
 
 #define MAXLOOP	10
@@ -853,6 +854,7 @@
 			obj->translate.x=*transv;
 			obj->translate.y=*(transv+1);
 			obj->translate.z=*(transv+2);
+			dprintf(VLOW,"[translate|pid %d] %d: %3.3f %3.3f %3.3f",p->id,oid,obj->translate.x,obj->translate.y,obj->translate.z);
 			obj_pos_update(p,oid);
 		}
 	}
@@ -879,6 +881,7 @@
 			if (f<0.0)		f+=(float)((int)-f/360)*360;
 			if (f>360.0)	f+=(float)((int)f/360)*-360;
 			obj->rotate.z=f;
+			dprintf(VLOW,"[rotate|pid %d] %d: %3.3f %3.3f %3.3f",p->id,oid,obj->rotate.x,obj->rotate.y,obj->rotate.z);
 			obj_pos_update(p,oid);
 		}
 	}
@@ -891,7 +894,9 @@
 	if (obj_valid(p,oid,obj))
 	{
 		if ((p->id==MCP) || (!(obj->oflags&OF_SYSTEM)))
+		if (!isinf(scav) && !isnan(scav) && !((scav<1.0e-10) && (scav>-1.0e-10))) /* ignore very low values */
 		{
+			dprintf(VLOW,"[scale|pid %d] obj %d to %f",p->id,oid,scav);
 			obj->scale=scav;
 	/*		obj->scale.x=*scav;
 			obj->scale.y=*(scav+1);
@@ -1024,7 +1029,7 @@
 				}
 			if (found)
 			{
-				dprintf(MED,"there is a new biggest object in [%d:\"\"]",p->id,p->name);
+				dprintf(VLOW,"there is a new biggest object in [%d:\"\"]",p->id,p->name);
 				mcp_o->r=r;  /*  save the new size */
 				mcp_rep_object(p->mcp_oid);	  /*  and tell the mcp */
 			}
@@ -1111,6 +1116,7 @@
 	int is_lnksrc;
 	struct t_obj 		*ao;
 	struct t_process	*ap;
+	dprintf(VLOW,"[obj_pos_upd|pid %d] %d",p->id, oid);
 	p->object[oid]->m_uptodate=0;
 	obj_recalc_tmat(p,oid);
 	if (p->id!=MCP) 
@@ -1128,6 +1134,7 @@
 				if (NULL!=(ap=get_proc_by_pid(ao->n_mat)))
 					obj_sys_update(ap,oid);	
 			event_cam_changed();
+			dprintf(VLOW,"[obj_pos_upd|pid %d] %d event_cam_changed",p->id,oid);
 		}
 	if (p->object[oid]->oflags&OF_LINK_SRC)
 	{
@@ -1137,6 +1144,7 @@
 				if ((p->object[i]->oflags&OF_LINK) && (p->object[i]->linkid==oid))
 				{
 					is_lnksrc=1;
+					dprintf(VLOW,"[obj_pos_upd|pid %d] % is pointing on %d -> update",p->id,i, oid);
 					obj_pos_update(p,i);
 				}
 		if (!is_lnksrc)	/* it's not! switch out the flag */
@@ -1381,7 +1389,7 @@
 			errds(VHIGH,"obj_link()","can't link system-objects in non-mcp-apps!",oid_from,oid_to);
 			return(-1);
 		}
-/* 		dprintf(LOW,"linking object %d from pid %d to %d",oid_from,pid,oid_to); */
+ 		dprintf(LOW,"[link|pid %d] %d -> %d",p->id, oid_from,oid_to); 
 		o->oflags|=OF_LINK;
 		o->linkid=oid_to;
 		p->object[oid_to]->oflags|=OF_LINK_SRC;



From dotslash at berlios.de  Sat Feb 18 23:09:28 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Sat, 18 Feb 2006 23:09:28 +0100
Subject: [S3d-svn] r89 - in trunk: . apps/dot_mcp client example objs
Message-ID: <200602182209.k1IM9Sxg006427@sheep.berlios.de>

Author: dotslash
Date: 2006-02-18 23:08:03 +0100 (Sat, 18 Feb 2006)
New Revision: 89

Added:
   trunk/apps/dot_mcp/main.c
   trunk/apps/dot_mcp/menu.c
   trunk/objs/
   trunk/objs/abs.3ds
   trunk/objs/abs2.3ds
   trunk/objs/big_p.3ds
   trunk/objs/bigsphere.3ds
   trunk/objs/clock_bg.3ds
   trunk/objs/comp.3ds
   trunk/objs/cube.3ds
   trunk/objs/cubey.3ds
   trunk/objs/cubeyholes.3ds
   trunk/objs/dot.3ds
   trunk/objs/dotdot.3ds
   trunk/objs/duno.3ds
   trunk/objs/folder.3ds
   trunk/objs/geometry.3ds
   trunk/objs/go_button.3ds
   trunk/objs/katze_body.3ds
   trunk/objs/katze_leg.3ds
   trunk/objs/katze_tail.3ds
   trunk/objs/lil_p.3ds
   trunk/objs/materials.3ds
   trunk/objs/miu.3ds
   trunk/objs/new_sphere.3ds
   trunk/objs/notes.3ds
   trunk/objs/ringsystem.3ds
   trunk/objs/rotate.3ds
   trunk/objs/sec_p.3ds
   trunk/objs/snow_body.3ds
   trunk/objs/snow_foot.3ds
   trunk/objs/snow_head.3ds
   trunk/objs/sphere.3ds
   trunk/objs/spikeybla.3ds
   trunk/objs/star.3ds
   trunk/objs/weirdball.3ds
   trunk/objs/wtf.3ds
   trunk/objs/xyz.3ds
Removed:
   trunk/apps/dot_mcp/dot_mcp.c
   trunk/example/objs/
Modified:
   trunk/
   trunk/ChangeLog
   trunk/apps/dot_mcp/Makefile.am
   trunk/client/3dsread.c
   trunk/client/Makefile.am
   trunk/client/error.c
   trunk/client/io.c
   trunk/client/s3dlib.h
   trunk/example/3dsloader.c
   trunk/example/s3d_startapp.c
   trunk/example/snowman.c
Log:
 r117 at balthasar:  dotslash | 2006-02-18 23:07:52 +0100
 - fixed x/z inversion
 - moved object directory
 - dot_mcp has a go!! menu
 - GLU client dependency removed
 - 3dsloader fixed



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:115
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:117

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/ChangeLog	2006-02-18 22:08:03 UTC (rev 89)
@@ -1,4 +1,6 @@
 2006-02-18	Simon Wunderlich - <dotslash at packetmixer.de>	
+	- dot_mcp has now some "GO!!" menu
+	- 3dsread.c x-axis inversion fixed
 	- fixed 0.0 size application problem
 	- removed c++ styles in olsrs3d
 2006-02-17	Simon Wunderlich - <dotslash at packetmixer.de>	

Modified: trunk/apps/dot_mcp/Makefile.am
===================================================================
--- trunk/apps/dot_mcp/Makefile.am	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/apps/dot_mcp/Makefile.am	2006-02-18 22:08:03 UTC (rev 89)
@@ -4,7 +4,7 @@
 dot_mcpinclude_HEADERS =  
 
 dot_mcp_SOURCES =  \
-	dot_mcp.c
+	main.c menu.c
 
 dot_mcp_CPPFLAGS=	-I$(top_srcdir)/client @PTHREAD_CFLAGS@
 dot_mcp_LDADD=	$(top_builddir)/client/libs3d.la @PTHREAD_LIBS@

Deleted: trunk/apps/dot_mcp/dot_mcp.c
===================================================================
--- trunk/apps/dot_mcp/dot_mcp.c	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/apps/dot_mcp/dot_mcp.c	2006-02-18 22:08:03 UTC (rev 89)
@@ -1,362 +0,0 @@
-#include "s3d.h"
-#include <unistd.h>  /*  sleep() */
-#include <stdlib.h>  /*  free(), malloc() */
-#include <string.h>  /*  strncpy() */
-#include <stdio.h>  /*  printf() */
-#include <math.h>	/* sin(), cos() */
-#define bsize 	0.2
-struct app {
-	unsigned int oid,oid_c;
-	float r;
-	int init;
-	float trans_x,trans_y,trans_z;
-	float textw;
-	char name[256]; 
-	int min_but,close_but,title;
-	int sphere;
-	struct app *next;
-};
-
-float asp=1.0;
-struct app *apps=NULL;
-float bottom=-1.0;
-float left=-1.0;
-float zoom=5.0;
-int n_app=0;
-int rot_flag=0;
-struct app *focus=NULL;
-float focus_r=0;
-float alpha=0;
-unsigned int min_but,rotate,close_but,sphere;
-
-void place_apps();
-
-void set_focus(struct app *a)
-{
-	if (focus!=a)
-		/* resetting old focus */
-		if (focus!=NULL)
-		{
-			printf("unfocusing app name %s\n",focus->name);
-			s3d_scale(focus->oid,1/focus->r);
-			s3d_scale(focus->sphere,focus->r);
-
-  			s3d_flags_on(focus->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-			s3d_flags_off(focus->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-			s3d_flags_off(rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-			s3d_translate(	focus->title,-focus->textw-1.2,0.0,0);
-			s3d_translate(	focus->close_but,bsize*focus->textw/2,1.2,0);
-			s3d_link(		focus->close_but,focus->sphere);
-			s3d_link(		focus->oid,0); 
-		}
-	focus=a;
-	if (a==NULL)
-	{
-		focus_r=n_app;
-		s3d_mcp_focus(-1);
-	} else {
-		/* set the new focus app up */
-		s3d_translate(	a->title,-a->textw-7.2,0.0,0);
-		s3d_translate(	rotate,-4.8,0.0,0);
-		s3d_translate(	a->min_but,-2.4,0.0,0);
-		s3d_link(		a->close_but,0);
-		s3d_link(		rotate,a->close_but);
-		s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-		s3d_flags_on(	rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-		s3d_flags_off(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-		s3d_unlink(a->oid);
-		s3d_rotate(a->oid,		0,0,0);
-		s3d_translate(a->oid,	0,0,0);
-		focus_r=a->r;
-		s3d_scale(a->oid,1);
-		s3d_mcp_focus(	a->oid);
-	}
-	place_apps();
-}
-
-int add_app(struct app *a)
-{
-	struct app *prev=NULL,*a2=apps;
-	while ((a2)!=NULL)
-	{
-		prev=a2;
-		if (a2->oid==a->oid)
-		{  /*  already added, so free() and return */
-			free(a);
-			return(1);
-		}
-		a2=a2->next;  /*  go to the end */
-	}
-	a->next=NULL;
-	if (prev==NULL)
-		apps=a;
-	else 
-		prev->next=a;
-	n_app+=1;
-	return(0);
-}
-void *find_app(int oid)
-{
-	struct app *a=apps;
-	while (a!=NULL)
-	{
-		if (oid==a->oid)
-			break;
-		a=a->next;
-	}
-	return(a);
-}
-void *del_app(int oid)
-{
-	struct app *prev=NULL,*a=apps;
-	while ((a!=NULL)  && (a->oid!=oid))
-	{
-		prev=a;
-		a=a->next;
-	}
-	if (a!=NULL)
-	{  /*  found ... */
-		if (a->init)
-		{
-			s3d_del_object(a->close_but);
-			s3d_del_object(a->min_but);
-			s3d_del_object(a->title);
-			s3d_del_object(a->sphere);
-			s3d_del_object(a->oid);
-		}
-		if (prev==NULL) 
-			apps=a->next;  /*  new head */
-		else
-			prev->next=a->next;
-		n_app--;
-		if (focus==a)
-		{
-			s3d_mcp_focus(-1);
-			focus=NULL;
-		}
-		free(a);
-		place_apps();
-	} 
-	return(a);
-}
-void stop()
-{
-	s3d_quit();
-}
-void place_apps()
-{
-	struct app *a=apps;
-	int j=0;
-	while (a!=NULL)
-	{
-		if (a->init)	
-		{
-			printf("placing app [%d,'%s'], oid %d, r=%f\n",j,a->name,a->oid,a->r); 
-			if (focus==a)
-			{
-				s3d_translate(a->close_but,(-left)*zoom-0.4,(-bottom)*zoom-0.4,-zoom);
-			}
-			else 
-			{
-				s3d_translate(	a->oid,	zoom*(left)+j*2+1.0,zoom*bottom+1.0,-zoom);
-				s3d_rotate(		a->oid,	0,10,0);
-				j++;
-			}
-		}
-		a=a->next;
-	}
-}
-void mcp_object(struct s3d_evt *hrmz)
-{
-	struct mcp_object *mo;
-	struct app *a;
-	mo=(struct mcp_object *)hrmz->buf;
-	if (NULL==(a=find_app(mo->object)))
-	{
-		printf("adding new object ......");
-		a=malloc(sizeof(struct app));
-		a->oid=mo->object;
-		a->r=mo->r;
-		strncpy(a->name,mo->name,256);
-		a->init=0;
-		add_app(a);
-		place_apps();
-		printf("..%s\n",a->name);
-	} else {
-		printf("updating app %d\n",a->oid);
-		a->trans_x=mo->trans_x;
-		a->trans_y=mo->trans_y;
-		a->trans_z=mo->trans_z;
-		a->r=mo->r;
-		if (a->init)
-		{
-			if (a==focus)
-			{
-				focus_r=a->r;
-/*				s3d_translate(a->min_but,0,a->r + 1.0,0);*/
-			} else {
-				s3d_scale(a->sphere,a->r);
-				s3d_scale(a->oid,1/a->r);
-			}
-		}
-		place_apps();
-	}
-}
-void app_init(struct app *a)
-{
-	printf("building some window decorations on %d ['%s']\n",a->oid,a->name);
-/* 	a->r=s3d_get_radius(a->oid); */
-	printf("radius of object %d is %f\n",a->oid,a->r);
-	s3d_scale(a->oid,		1/a->r);
-
-	a->sphere=s3d_clone(sphere);
-	s3d_scale(		a->sphere,a->r);
-	s3d_link(		a->sphere,a->oid);
-  	s3d_flags_on(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-
-/*	s3d_translate(	a->min_but,0,2.0,0);
-	s3d_link(		a->min_but,a->sphere);
-   	s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);*/
-
-
-	a->title=s3d_draw_string(a->name,&a->textw);
-
-	a->close_but=s3d_clone(close_but);
-	s3d_translate(	a->close_but,bsize*a->textw/2.0,1.2f,0.0f);
-	s3d_link(		a->close_but,a->sphere);
-  	s3d_flags_on(	a->close_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-
-
-	s3d_translate(	a->title,-a->textw-1.2f,0.0f,0.0f);
-	s3d_link(		a->title,a->close_but);
-   	s3d_flags_on(	a->title,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-	
-	a->min_but=s3d_clone(min_but);
-	s3d_link(		a->min_but,a->close_but);
-	
-	
-	s3d_scale(		a->close_but,bsize);
-	
-	s3d_link(		a->oid,0);
-	a->init=1;
-/*	if (focus==NULL)
-		set_focus(a);
-	else*/
-		place_apps();
-}
-void mcp_del_object(struct s3d_evt *hrmz)
-{
-	struct mcp_object *mo;
-	printf("omg, something got deleted!!\n");
-	mo=(struct mcp_object *)hrmz->buf;
-	del_app(mo->object);
-}
-void object_click(struct s3d_evt *hrmz)
-{
-	struct app *a;
-	unsigned int i, oid;
-	oid=*((unsigned int *)hrmz->buf);
-	printf("%d got clicked\n",oid);
-	a=apps;i=0;
-	if (oid==rotate)
-	{
-		rot_flag=!rot_flag;
-		return;
-	}
-	while (a!=NULL)
-	{
-		printf("O_o\n");
-		if (oid==a->close_but)
-		{
-			del_app(a->oid);
-			return;
-		} else 	if (oid==a->min_but)
-		{
-			if (a==focus)
-			{
-				set_focus(NULL); /* nothing is focused now */
-			}
-			return;
-		} else 	if (((oid==a->title) || (oid==a->sphere)) || (oid==a->oid))
-		{
-			printf("giving focus to [%s], %d\n",a->name,oid);
-			set_focus(a);
-			return;
-		}
-		i++;
-		a=a->next;
-	}
-}
-void object_info(struct s3d_evt *hrmz)
-{
-	struct s3d_obj_info *inf;
-	inf=(struct s3d_obj_info *)hrmz->buf;
-	if (inf->object==0)
-	{
-		asp=inf->scale;
-		printf("screen aspect: %f\n",asp);
-		if (asp>1.0) /* wide screen */
-		{
-			bottom=-1.0;
-			left=-asp;
-		} else {  /* high screen */
-			bottom=(-1.0/asp);
-			left=-1.0;
-		}
-	}
-}
-void mainloop()
-{
-	struct app *a;
-	float al,r;
-	int i;
-	a=apps;i=0;
-	while (a!=NULL)
-	{
-		if (!a->init)
-			app_init(a);
-		i++;
-		a=a->next;
-	}
-	if (rot_flag)
-	{
-		al=(alpha*M_PI/180);
-		r=(focus_r>20.0)?20.0:focus_r;
-		s3d_translate(0,sin(al)*(r+5),0,cos(al)*(r+5));
-		s3d_rotate(0,0,alpha,0);
-		alpha=alpha+0.1;
-		if (alpha>360.0) alpha=0.0;
-	}
-	usleep(10000);
-	
-}
-
-int main (int argc, char **argv)
-{
-	if (!s3d_init(&argc,&argv,"mcp"))	
-	{
-		s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);
-		s3d_set_callback(S3D_MCP_OBJECT,mcp_object);
-		s3d_set_callback(S3D_EVENT_QUIT,stop);
-		s3d_set_callback(S3D_MCP_DEL_OBJECT,mcp_del_object);
-		s3d_set_callback(S3D_EVENT_OBJ_CLICK,object_click);
-
-		if (s3d_select_font("vera"))
-		{
-			printf("font not found\n");
-		}
-/*		sphere=s3d_import_3ds_file("objs/sphere.3ds");*/
-/*		s3d_pep_material_a(sphere,
-					1,1,1,0.2,
-					1,1,1,0.2,
-					1,1,1,0.2);*/
-		min_but=s3d_import_3ds_file("cubeyholes.3ds");
-		rotate=s3d_import_3ds_file("rotate.3ds");
-		close_but=s3d_import_3ds_file("spikeybla.3ds");
-		sphere=s3d_import_3ds_file("ringsystem.3ds");
-		printf("min_but: %d, rotate: %d, close_but: %d, sphere: %d",min_but,rotate,close,sphere);
-		s3d_mainloop(mainloop);
-		s3d_quit();
-	}
-	return(0);
-}

Added: trunk/apps/dot_mcp/main.c
===================================================================
--- trunk/apps/dot_mcp/main.c	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/apps/dot_mcp/main.c	2006-02-18 22:08:03 UTC (rev 89)
@@ -0,0 +1,371 @@
+#include "s3d.h"
+#include "dot_mcp.h"
+#include <unistd.h>  /*  sleep() */
+#include <stdlib.h>  /*  free(), malloc() */
+#include <string.h>  /*  strncpy() */
+#include <stdio.h>  /*  printf() */
+#include <math.h>	/* sin(), cos() */
+#define bsize 	0.2
+struct app {
+	unsigned int oid,oid_c;
+	float r;
+	int init;
+	float trans_x,trans_y,trans_z;
+	float textw;
+	char name[256]; 
+	int min_but,close_but,title;
+	int sphere;
+	struct app *next;
+};
+
+float asp=1.0;
+struct app *apps=NULL;
+float bottom=-1.0;
+float left=-1.0;
+float zoom=5.0;
+int n_app=0;
+int rot_flag=0;
+struct app *focus=NULL;
+float focus_r=0;
+float alpha=0;
+unsigned int min_but,rotate,close_but,sphere,menu=-1;
+
+void place_apps();
+
+void set_focus(struct app *a)
+{
+	if (focus!=a)
+		/* resetting old focus */
+		if (focus!=NULL)
+		{
+			printf("unfocusing app name %s\n",focus->name);
+			s3d_scale(focus->oid,1/focus->r);
+			s3d_scale(focus->sphere,focus->r);
+
+  			s3d_flags_on(focus->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+			s3d_flags_off(focus->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+			s3d_flags_off(rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+			s3d_translate(	focus->title,-focus->textw-1.2,0.0,0);
+			s3d_translate(	focus->close_but,bsize*focus->textw/2,1.2,0);
+			s3d_link(		focus->close_but,focus->sphere);
+			s3d_link(		focus->oid,0); 
+		}
+	focus=a;
+	if (a==NULL)
+	{
+		focus_r=n_app;
+		s3d_mcp_focus(-1);
+	} else {
+		/* set the new focus app up */
+		s3d_translate(	a->title,-a->textw-7.2,0.0,0);
+		s3d_translate(	rotate,-4.8,0.0,0);
+		s3d_translate(	a->min_but,-2.4,0.0,0);
+		s3d_link(		a->close_but,0);
+		s3d_link(		rotate,a->close_but);
+		s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_flags_on(	rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_flags_off(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_unlink(a->oid);
+		s3d_rotate(a->oid,		0,0,0);
+		s3d_translate(a->oid,	0,0,0);
+		focus_r=a->r;
+		s3d_scale(a->oid,1);
+		s3d_mcp_focus(	a->oid);
+	}
+	place_apps();
+}
+
+int add_app(struct app *a)
+{
+	struct app *prev=NULL,*a2=apps;
+	while ((a2)!=NULL)
+	{
+		prev=a2;
+		if (a2->oid==a->oid)
+		{  /*  already added, so free() and return */
+			free(a);
+			return(1);
+		}
+		a2=a2->next;  /*  go to the end */
+	}
+	a->next=NULL;
+	if (prev==NULL)
+		apps=a;
+	else 
+		prev->next=a;
+	n_app+=1;
+	return(0);
+}
+void *find_app(int oid)
+{
+	struct app *a=apps;
+	while (a!=NULL)
+	{
+		if (oid==a->oid)
+			break;
+		a=a->next;
+	}
+	return(a);
+}
+void *del_app(int oid)
+{
+	struct app *prev=NULL,*a=apps;
+	while ((a!=NULL)  && (a->oid!=oid))
+	{
+		prev=a;
+		a=a->next;
+	}
+	if (a!=NULL)
+	{  /*  found ... */
+		if (a->init)
+		{
+			s3d_del_object(a->close_but);
+			s3d_del_object(a->min_but);
+			s3d_del_object(a->title);
+			s3d_del_object(a->sphere);
+			s3d_del_object(a->oid);
+		}
+		if (prev==NULL) 
+			apps=a->next;  /*  new head */
+		else
+			prev->next=a->next;
+		n_app--;
+		if (focus==a)
+		{
+			s3d_mcp_focus(-1);
+			focus=NULL;
+		}
+		free(a);
+		place_apps();
+	} 
+	return(a);
+}
+void stop()
+{
+	s3d_quit();
+}
+void place_apps()
+{
+	struct app *a=apps;
+	int j=0;
+	while (a!=NULL)
+	{
+		if (a->init)	
+		{
+/*			printf("placing app [%d,'%s'], oid %d, r=%f\n",j,a->name,a->oid,a->r); */
+			if (focus==a)
+			{
+				s3d_translate(a->close_but,(-left)*zoom-0.4,(-bottom)*zoom-0.4,-zoom);
+			}
+			else 
+			{
+				s3d_translate(	a->oid,	zoom*(left)+j*2+1.0,zoom*bottom+1.0,-zoom);
+				s3d_rotate(		a->oid,	0,10,0);
+				j++;
+			}
+		}
+		a=a->next;
+	}
+	s3d_translate(menu,	left*zoom+0.4,(-bottom)*zoom-0.4,-zoom);
+}
+void mcp_object(struct s3d_evt *hrmz)
+{
+	struct mcp_object *mo;
+	struct app *a;
+	mo=(struct mcp_object *)hrmz->buf;
+	if (NULL==(a=find_app(mo->object)))
+	{
+		printf("adding new object ......");
+		a=malloc(sizeof(struct app));
+		a->oid=mo->object;
+		a->r=mo->r;
+		strncpy(a->name,mo->name,256);
+		a->init=0;
+		add_app(a);
+		place_apps();
+		printf("..%s\n",a->name);
+	} else {
+		printf("updating app %d\n",a->oid);
+		a->trans_x=mo->trans_x;
+		a->trans_y=mo->trans_y;
+		a->trans_z=mo->trans_z;
+		a->r=mo->r;
+		if (a->init)
+		{
+			if (a==focus)
+			{
+				focus_r=a->r;
+/*				s3d_translate(a->min_but,0,a->r + 1.0,0);*/
+			} else {
+				s3d_scale(a->sphere,a->r);
+				s3d_scale(a->oid,1/a->r);
+			}
+		}
+		place_apps();
+	}
+}
+void app_init(struct app *a)
+{
+	printf("building some window decorations on %d ['%s']\n",a->oid,a->name);
+/* 	a->r=s3d_get_radius(a->oid); */
+	printf("radius of object %d is %f\n",a->oid,a->r);
+	s3d_scale(a->oid,		1/a->r);
+
+	a->sphere=s3d_clone(sphere);
+	s3d_scale(		a->sphere,a->r);
+	s3d_link(		a->sphere,a->oid);
+  	s3d_flags_on(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+
+/*	s3d_translate(	a->min_but,0,2.0,0);
+	s3d_link(		a->min_but,a->sphere);
+   	s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);*/
+
+
+	a->title=s3d_draw_string(a->name,&a->textw);
+
+	a->close_but=s3d_clone(close_but);
+	s3d_translate(	a->close_but,bsize*a->textw/2.0,1.2f,0.0f);
+	s3d_link(		a->close_but,a->sphere);
+  	s3d_flags_on(	a->close_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+
+
+	s3d_translate(	a->title,-a->textw-1.2f,0.0f,0.0f);
+	s3d_link(		a->title,a->close_but);
+   	s3d_flags_on(	a->title,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+	
+	a->min_but=s3d_clone(min_but);
+	s3d_link(		a->min_but,a->close_but);
+	
+	
+	s3d_scale(		a->close_but,bsize);
+	
+	s3d_link(		a->oid,0);
+	a->init=1;
+/*	if (focus==NULL)
+		set_focus(a);
+	else*/
+		place_apps();
+}
+void mcp_del_object(struct s3d_evt *hrmz)
+{
+	struct mcp_object *mo;
+	printf("omg, something got deleted!!\n");
+	mo=(struct mcp_object *)hrmz->buf;
+	del_app(mo->object);
+}
+void object_click(struct s3d_evt *hrmz)
+{
+	struct app *a;
+	unsigned int i, oid;
+	oid=*((unsigned int *)hrmz->buf);
+	printf("%d got clicked\n",oid);
+	a=apps;i=0;
+	if (oid==rotate)
+	{
+		rot_flag=!rot_flag;
+		return;
+	}
+	while (a!=NULL)
+	{
+		if (oid==a->close_but)
+		{
+			del_app(a->oid);
+			return;
+		} else 	if (oid==a->min_but)
+		{
+			if (a==focus)
+			{
+				set_focus(NULL); /* nothing is focused now */
+			}
+			return;
+		} else 	if (((oid==a->title) || (oid==a->sphere)) || (oid==a->oid))
+		{
+			printf("giving focus to [%s], %d\n",a->name,oid);
+			set_focus(a);
+			return;
+		}
+		i++;
+		a=a->next;
+	}
+	menu_click(oid);
+}
+void object_info(struct s3d_evt *hrmz)
+{
+	struct s3d_obj_info *inf;
+	inf=(struct s3d_obj_info *)hrmz->buf;
+	if (inf->object==0)
+	{
+		if (asp!=inf->scale)
+		{
+			asp=inf->scale;
+			printf("screen aspect: %f\n",asp);
+			if (asp>1.0) /* wide screen */
+			{
+				bottom=-1.0;
+				left=-asp;
+			} else {  /* high screen */
+				bottom=(-1.0/asp);
+				left=-1.0;
+			}
+			place_apps(); /* replace apps */
+		}
+	}
+}
+void mainloop()
+{
+	struct app *a;
+	float al,r;
+	int i;
+	a=apps;i=0;
+	while (a!=NULL)
+	{
+		if (!a->init)
+			app_init(a);
+		i++;
+		a=a->next;
+	}
+	if (rot_flag)
+	{
+		al=(alpha*M_PI/180);
+		r=(focus_r>20.0)?20.0:focus_r;
+		s3d_translate(0,sin(al)*(r+5),0,cos(al)*(r+5));
+		s3d_rotate(0,0,alpha,0);
+		alpha=alpha+0.1;
+		if (alpha>360.0) alpha=0.0;
+	}
+	usleep(10000);
+}
+
+int main (int argc, char **argv)
+{
+	if (!s3d_init(&argc,&argv,"mcp"))	
+	{
+		s3d_set_callback(S3D_EVENT_OBJ_INFO,object_info);
+		s3d_set_callback(S3D_MCP_OBJECT,mcp_object);
+		s3d_set_callback(S3D_EVENT_QUIT,stop);
+		s3d_set_callback(S3D_MCP_DEL_OBJECT,mcp_del_object);
+		s3d_set_callback(S3D_EVENT_OBJ_CLICK,object_click);
+
+		if (s3d_select_font("vera"))
+		{
+			printf("font not found\n");
+		}
+/*		sphere=s3d_import_3ds_file("objs/sphere.3ds");*/
+/*		s3d_pep_material_a(sphere,
+					1,1,1,0.2,
+					1,1,1,0.2,
+					1,1,1,0.2);*/
+		min_but=s3d_import_3ds_file("cubeyholes.3ds");
+		rotate=s3d_import_3ds_file("rotate.3ds");
+		close_but=s3d_import_3ds_file("spikeybla.3ds");
+		sphere=s3d_import_3ds_file("ringsystem.3ds");
+		menu=menu_init();
+		s3d_link(menu,0);
+		s3d_scale(menu,bsize);
+		printf("min_but: %d, rotate: %d, close_but: %d, sphere: %d, menu: %d",min_but,rotate,close,sphere, menu);
+		place_apps();
+		s3d_mainloop(mainloop);
+		s3d_quit();
+	}
+	return(0);
+}

Added: trunk/apps/dot_mcp/menu.c
===================================================================
--- trunk/apps/dot_mcp/menu.c	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/apps/dot_mcp/menu.c	2006-02-18 22:08:03 UTC (rev 89)
@@ -0,0 +1,78 @@
+#include "s3d.h"
+#include "dot_mcp.h"
+#include <unistd.h> /* fork(), execl() */
+#include <stdio.h> /* printf() */
+#include <stdlib.h> /* exit() */
+#include <string.h> /* strlen(),strncpy(), strncat() */
+struct menu_entry {
+	char *icon, *name, *path;
+	int icon_oid, str_oid;
+};
+static int go=-1;
+static int act;
+static struct menu_entry menu[]={
+		{"objs/comp.3ds","filebrowser","./filebrowser",	0,0},
+		{"objs/comp.3ds","terminal","s3dvt",				0,0},
+		{"objs/comp.3ds","clock","s3dclock",				0,0}
+};
+void menu_click(int oid)
+{
+	unsigned int i;
+	char exec[256];
+	printf("%d got clicked\n",oid);
+	if (oid==go)
+	{
+		act=!act;
+		for (i=0;i<(sizeof(menu)/sizeof(struct menu_entry));i++)
+		{
+			if (act)
+			{
+				s3d_flags_on(menu[i].icon_oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+				s3d_flags_on(menu[i].str_oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+			} else {
+				s3d_flags_off(menu[i].icon_oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+				s3d_flags_off(menu[i].str_oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+			}
+
+		}
+		return;
+	}
+	if (act)
+	{
+		for (i=0;i<(sizeof(menu)/sizeof(struct menu_entry));i++)
+		{
+			if ((oid==menu[i].icon_oid) || (oid==menu[i].str_oid))
+			{
+				strncpy(exec,menu[i].path,256);
+				strncat(exec,"> /dev/null 2>&1 &",256); /* ignoring output, starting in background */
+				system(exec);
+				return;
+			}
+		}
+	}
+}
+int menu_init ()
+{
+	int i,menu_o;
+	menu_o=s3d_new_object();
+	act=0; /* menu deactived */
+	go=s3d_import_3ds_file("objs/go_button.3ds");
+	s3d_flags_on(go,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+	s3d_link(go,menu_o);
+	for (i=0;i<(sizeof(menu)/sizeof(struct menu_entry));i++)
+	{
+		if (-1==(menu[i].icon_oid=s3d_import_3ds_file(menu[i].icon)))
+				menu[i].icon_oid=s3d_new_object();
+		menu[i].str_oid=s3d_draw_string(menu[i].name,NULL);
+		s3d_link(menu[i].str_oid,menu[i].icon_oid);
+		s3d_link(menu[i].icon_oid,menu_o);
+		s3d_translate(menu[i].icon_oid,0,-3+(-3*i),0);
+		s3d_translate(menu[i].str_oid,2,0,0);
+/*		s3d_flags_on(menu[i].icon_oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_flags_on(menu[i].str_oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);*/
+		printf("menu item menu[%d], icon_oid=%d, icon_str=%d\n",i,menu[i].icon_oid,menu[i].str_oid);
+	}
+	return(menu_o);
+}
+
+

Modified: trunk/client/3dsread.c
===================================================================
--- trunk/client/3dsread.c	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/client/3dsread.c	2006-02-18 22:08:03 UTC (rev 89)
@@ -10,9 +10,22 @@
 int s3d_import_3ds_file(char *fname)
 {
 	char *buf;
-	if (s3d_open_file(fname,&buf)==-1) return(-1);
-	return(s3d_import_3ds(buf));
-	
+	char path[1024];
+	int i;
+	char *searchpath[4]=
+		{"./",
+		 "",
+		 "../",
+		 "../../"
+		 };
+	for (i=0;i<4;i++)
+	{
+		strncpy(path,searchpath[i],1024);
+		strncat(path,fname,1024);
+		if (s3d_open_file(path,&buf)!=-1)  /* found something */
+			return(s3d_import_3ds(buf));
+	}
+	return(-1); /* nothing in search path ... */
 }
 static void normal(float *p0, float *p1, float *p2, float *r)
 {
@@ -292,7 +305,7 @@
 		 	  {
 				*(vertex_buf+j*3+0)=*((float *)ptr+0);
 				*(vertex_buf+j*3+1)=*((float *)ptr+2);
-				*(vertex_buf+j*3+2)=*((float *)ptr+1);
+				*(vertex_buf+j*3+2)=-*((float *)ptr+1);
 				ptr+=sizeof(float)*3;
 			  }
 			  v+=vertexnum;  /*  for the correct vertex offset */

Modified: trunk/client/Makefile.am
===================================================================
--- trunk/client/Makefile.am	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/client/Makefile.am	2006-02-18 22:08:03 UTC (rev 89)
@@ -8,6 +8,6 @@
 pkginclude_HEADERS=	config.h s3d.h s3dlib.h sei_triangulate.h sei_interface.h
 
 libs3d_la_CPPFLAGS=	-I${top_srcdir}/server
-libs3d_la_CFLAGS=	@FONTCONFIG_CFLAGS@ @FREETYPE_CFLAGS@ @GL_CFLAGS@
-libs3d_la_LIBADD=	@FONTCONFIG_LIBS@ @FREETYPE_LIBS@ @GL_LIBS@
+libs3d_la_CFLAGS=	@FONTCONFIG_CFLAGS@ @FREETYPE_CFLAGS@ 
+libs3d_la_LIBADD=	@FONTCONFIG_LIBS@ @FREETYPE_LIBS@ 
 

Modified: trunk/client/error.c
===================================================================
--- trunk/client/error.c	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/client/error.c	2006-02-18 22:08:03 UTC (rev 89)
@@ -19,6 +19,10 @@
 void errn(char *func,int en) {
 	fprintf(stderr,"s3dlib error: %s: (%d) %s\n",func,en, strerror(en));
 }
+void errdn(int relevance, char *func,int en) {
+	if (relevance >= DEBUG )
+		 fprintf(stderr,"s3dlib error: %s: (%d) %s\n",func,en, strerror(en));
+}
 void errs(char *func, char *msg) {
 	fprintf(stderr,"s3dlib error: %s: %s\n",func,msg);
 }

Modified: trunk/client/io.c
===================================================================
--- trunk/client/io.c	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/client/io.c	2006-02-18 22:08:03 UTC (rev 89)
@@ -136,9 +136,9 @@
 	_queue_init();
 #ifdef SIGNAL
     if (signal(SIGINT, (sig_t)sigint_handler) == SIG_ERR)
-		errn("s3d_init():signal()",errno);
+		errdn(LOW,"s3d_init():signal()",errno);
     if (signal(SIGTERM, (sig_t)sigint_handler) == SIG_ERR)
-		errn("s3d_init():signal()",errno);
+		errdn(LOW,"s3d_init():signal()",errno);
 
 #endif
 	return(0);

Modified: trunk/client/s3dlib.h
===================================================================
--- trunk/client/s3dlib.h	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/client/s3dlib.h	2006-02-18 22:08:03 UTC (rev 89)
@@ -29,6 +29,7 @@
 void dprintf(int relevance, const char *fmt, ...);
 void errn(char *func,int en);
 void errs(char *func, char *msg);
+void errdn(int relevance, char *func,int en); 
 void errds(int relevance,char *func, const char *fmt, ...);
 /*  fontselect.c */
 char *s3d_findfont(char *mask);

Modified: trunk/example/3dsloader.c
===================================================================
--- trunk/example/3dsloader.c	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/example/3dsloader.c	2006-02-18 22:08:03 UTC (rev 89)
@@ -6,21 +6,30 @@
 {
 	s3d_rotate(oid,0,i,0);
 	i++;
-	usleep(10000);
+	usleep(100000);
 }
+void object_click(struct s3d_evt *evt)
+{
+	s3d_quit();
+}
+	
 int main (int argc, char **argv)
 {
+	if (argc<2)
+	{
+		printf("usage: %s [somefile.3ds]\n",argv[0]);
+		return(-1);
+	}
 	if (!s3d_init(&argc,&argv,"3dsloader"))	
 	{
-		i=argc-1;
-		printf("argc = %d\n", argc);
-		while (i>0)
+		s3d_set_callback(S3D_EVENT_OBJ_CLICK,object_click);
+	    if (-1!=(oid=s3d_import_3ds_file(argv[1])))
 		{
-		    oid=s3d_import_3ds_file(argv[i]);
-		    s3d_flags_on(oid,S3D_OF_VISIBLE);
-			i--;
+		    s3d_flags_on(oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+			s3d_mainloop(mainloop);
+		} else {
+			printf("file not found ... \n");
 		}
-		s3d_mainloop(mainloop);
 		s3d_quit();
 	}
 	return(0);

Modified: trunk/example/s3d_startapp.c
===================================================================
--- trunk/example/s3d_startapp.c	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/example/s3d_startapp.c	2006-02-18 22:08:03 UTC (rev 89)
@@ -2,7 +2,7 @@
 #include <unistd.h> /* fork(), execl() */
 #include <stdio.h> /* printf() */
 #include <stdlib.h> /* exit() */
-#include <string.h> /* strlen() */
+#include <string.h> /* strlen(),strncpy(), strncat() */
 struct menu_entry {
 	char *icon, *name, *path;
 	int icon_oid, str_oid;
@@ -16,17 +16,21 @@
 void object_click(struct s3d_evt *hrmz)
 {
 	unsigned int i, oid;
+	char exec[256];
 	oid=*((unsigned int *)hrmz->buf);
 	printf("%d got clicked\n",oid);
 	for (i=0;i<(sizeof(menu)/sizeof(struct menu_entry));i++)
 	{
 		if ((oid==menu[i].icon_oid) || (oid==menu[i].str_oid))
 		{
-			if (fork()==0)
+			strncpy(exec,menu[i].path,256);
+			strncat(exec,"&",256);
+			system(exec);
+/*			if (fork()==0)
 			{
 				execl(menu[i].path,NULL);
 				exit(0);
-			} 
+			} */
 		}
 	}
 }

Modified: trunk/example/snowman.c
===================================================================
--- trunk/example/snowman.c	2006-02-18 17:49:52 UTC (rev 88)
+++ trunk/example/snowman.c	2006-02-18 22:08:03 UTC (rev 89)
@@ -15,9 +15,9 @@
 	s3d_rotate(oid_head,0,a,0);
 	s3d_rotate(oid_middle,0,a,0);
 	s3d_rotate(oid_foot,0,a,0);
-	s3d_translate(oid_head,		0,3.5+2*pos,0);
-	s3d_translate(oid_middle,	0,2+1.25*pos,0);
-	s3d_translate(oid_foot,		0,pos,0);
+	s3d_translate(oid_head,		0,1.5 +2.00*pos,0);
+	s3d_translate(oid_middle,	0,0   +1.25*pos,0);
+	s3d_translate(oid_foot,		0,-2  +1.00*pos,0);
 	usleep(10000);
 }
 int main(int argc, char **argv)

Added: trunk/objs/abs.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/abs.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/abs2.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/abs2.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/big_p.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/big_p.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/bigsphere.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/bigsphere.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/clock_bg.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/clock_bg.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/comp.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/comp.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/cube.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/cube.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/cubey.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/cubey.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/cubeyholes.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/cubeyholes.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/dot.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/dot.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/dotdot.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/dotdot.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/duno.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/duno.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/folder.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/folder.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/geometry.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/geometry.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/go_button.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/go_button.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/katze_body.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/katze_body.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/katze_leg.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/katze_leg.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/katze_tail.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/katze_tail.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/lil_p.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/lil_p.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/materials.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/materials.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/miu.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/miu.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/new_sphere.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/new_sphere.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/notes.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/notes.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/ringsystem.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/ringsystem.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/rotate.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/rotate.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/sec_p.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/sec_p.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/snow_body.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/snow_body.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/snow_foot.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/snow_foot.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/snow_head.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/snow_head.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/sphere.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/sphere.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/spikeybla.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/spikeybla.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/star.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/star.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/weirdball.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/weirdball.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/wtf.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/wtf.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/xyz.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/xyz.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From dotslash at berlios.de  Sat Feb 18 23:23:46 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Sat, 18 Feb 2006 23:23:46 +0100
Subject: [S3d-svn] r90 - in trunk: . apps/dot_mcp apps/olsrs3d apps/s3dgps example objs
Message-ID: <200602182223.k1IMNkB8008792@sheep.berlios.de>

Author: dotslash
Date: 2006-02-18 23:23:43 +0100 (Sat, 18 Feb 2006)
New Revision: 90

Added:
   trunk/objs/accesspoint.3ds
   trunk/objs/accesspoint_inet.3ds
   trunk/objs/arrow.3ds
   trunk/objs/internet.3ds
   trunk/objs/meshnode.3ds
Removed:
   trunk/apps/dot_mcp/cubeyholes.3ds
   trunk/apps/dot_mcp/ringsystem.3ds
   trunk/apps/dot_mcp/rotate.3ds
   trunk/apps/dot_mcp/spikeybla.3ds
   trunk/apps/olsrs3d/accesspoint.3ds
   trunk/apps/olsrs3d/accesspoint_inet.3ds
   trunk/apps/olsrs3d/internet.3ds
   trunk/apps/olsrs3d/meshnode.3ds
   trunk/apps/olsrs3d/sphere.3ds
   trunk/apps/s3dgps/arrow.3ds
   trunk/example/folder.3ds
   trunk/example/s3d_startapp.c
Modified:
   trunk/
   trunk/apps/dot_mcp/main.c
   trunk/apps/olsrs3d/Makefile.am
   trunk/apps/olsrs3d/main.c
   trunk/apps/s3dgps/Makefile.am
   trunk/apps/s3dgps/s3dgps.c
   trunk/example/Makefile.am
Log:
 r119 at balthasar:  dotslash | 2006-02-18 23:23:35 +0100
 - some more object movement ...
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:117
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:119

Deleted: trunk/apps/dot_mcp/cubeyholes.3ds
===================================================================
(Binary files differ)

Modified: trunk/apps/dot_mcp/main.c
===================================================================
--- trunk/apps/dot_mcp/main.c	2006-02-18 22:08:03 UTC (rev 89)
+++ trunk/apps/dot_mcp/main.c	2006-02-18 22:23:43 UTC (rev 90)
@@ -355,10 +355,10 @@
 					1,1,1,0.2,
 					1,1,1,0.2,
 					1,1,1,0.2);*/
-		min_but=s3d_import_3ds_file("cubeyholes.3ds");
-		rotate=s3d_import_3ds_file("rotate.3ds");
-		close_but=s3d_import_3ds_file("spikeybla.3ds");
-		sphere=s3d_import_3ds_file("ringsystem.3ds");
+		min_but=s3d_import_3ds_file("objs/cubeyholes.3ds");
+		rotate=s3d_import_3ds_file("objs/rotate.3ds");
+		close_but=s3d_import_3ds_file("objs/spikeybla.3ds");
+		sphere=s3d_import_3ds_file("objs/ringsystem.3ds");
 		menu=menu_init();
 		s3d_link(menu,0);
 		s3d_scale(menu,bsize);

Deleted: trunk/apps/dot_mcp/ringsystem.3ds
===================================================================
(Binary files differ)

Deleted: trunk/apps/dot_mcp/rotate.3ds
===================================================================
(Binary files differ)

Deleted: trunk/apps/dot_mcp/spikeybla.3ds
===================================================================
(Binary files differ)

Modified: trunk/apps/olsrs3d/Makefile.am
===================================================================
--- trunk/apps/olsrs3d/Makefile.am	2006-02-18 22:08:03 UTC (rev 89)
+++ trunk/apps/olsrs3d/Makefile.am	2006-02-18 22:23:43 UTC (rev 90)
@@ -12,11 +12,6 @@
 olsrs3d_CPPFLAGS=	-I${top_srcdir}/client
 olsrs3d_LDADD=		${top_builddir}/client/libs3d.la
 
-EXTRA_DIST =  \
-	accesspoint.3ds \
-	accesspoint_inet.3ds \
-	internet.3ds \
-	meshnode.3ds \
-	sphere.3ds \
+EXTRA_DIST = \
 	output.sample
 

Deleted: trunk/apps/olsrs3d/accesspoint.3ds
===================================================================
(Binary files differ)

Deleted: trunk/apps/olsrs3d/accesspoint_inet.3ds
===================================================================
(Binary files differ)

Deleted: trunk/apps/olsrs3d/internet.3ds
===================================================================
(Binary files differ)

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-18 22:08:03 UTC (rev 89)
+++ trunk/apps/olsrs3d/main.c	2006-02-18 22:23:43 UTC (rev 90)
@@ -778,10 +778,10 @@
 			s3d_set_callback(S3D_EVENT_QUIT,stop);
 			if (s3d_select_font("vera"))
 				printf("font not found\n");
-			Olsr_node_obj = s3d_import_3ds_file( "accesspoint.3ds" );
-			Olsr_node_inet_obj = s3d_import_3ds_file( "accesspoint_inet.3ds" );
-			Olsr_node_hna_net = s3d_import_3ds_file( "internet.3ds" );
-			mesh=s3d_import_3ds_file("meshnode.3ds");
+			Olsr_node_obj = s3d_import_3ds_file( "objs/accesspoint.3ds" );
+			Olsr_node_inet_obj = s3d_import_3ds_file( "objs/accesspoint_inet.3ds" );
+			Olsr_node_hna_net = s3d_import_3ds_file( "objs/internet.3ds" );
+			mesh=s3d_import_3ds_file("objs/meshnode.3ds");
 			s3d_link(mesh,0);
 			s3d_scale(mesh,0.15);
 			ZeroPoint = s3d_new_object();

Deleted: trunk/apps/olsrs3d/meshnode.3ds
===================================================================
(Binary files differ)

Deleted: trunk/apps/olsrs3d/sphere.3ds
===================================================================
(Binary files differ)

Modified: trunk/apps/s3dgps/Makefile.am
===================================================================
--- trunk/apps/s3dgps/Makefile.am	2006-02-18 22:08:03 UTC (rev 89)
+++ trunk/apps/s3dgps/Makefile.am	2006-02-18 22:23:43 UTC (rev 90)
@@ -6,6 +6,5 @@
 s3dgps_CPPFLAGS=	-I${top_srcdir}/client @GPS_CFLAGS@ @SIMAGE_CFLAGS@
 s3dgps_LDADD=		${top_builddir}/client/libs3d.la @GPS_LIBS@ @SIMAGE_LIBS@
 
-EXTRA_DIST =  \
-	arrow.3ds
+EXTRA_DIST =  
 

Deleted: trunk/apps/s3dgps/arrow.3ds
===================================================================
(Binary files differ)

Modified: trunk/apps/s3dgps/s3dgps.c
===================================================================
--- trunk/apps/s3dgps/s3dgps.c	2006-02-18 22:08:03 UTC (rev 89)
+++ trunk/apps/s3dgps/s3dgps.c	2006-02-18 22:23:43 UTC (rev 90)
@@ -32,7 +32,7 @@
 int 				 frame=0;
 struct point_t		 posicon;
 int					 iconlist[ICON_MAX];
-char				*iconnames[]={"arrow.3ds"};
+char				*iconnames[]={"objs/arrow.3ds"};
 
 unsigned char 		*recode_image(unsigned char *data, int nc, int w, int h);
 int 				 load_mapimage(char *path,float lng, float lat, int scale);

Modified: trunk/example/Makefile.am
===================================================================
--- trunk/example/Makefile.am	2006-02-18 22:08:03 UTC (rev 89)
+++ trunk/example/Makefile.am	2006-02-18 22:23:43 UTC (rev 90)
@@ -1,5 +1,5 @@
 noinst_PROGRAMS=	3dsloader filebrowser hudtest katze \
-			radius_test s3d_startapp s3dclock snowman \
+			radius_test s3dclock snowman \
 			strtest texturetest
 			
 3dsloader_SOURCES=	3dsloader.c
@@ -7,7 +7,6 @@
 hudtest_SOURCES=	hudtest.c
 katze_SOURCES=		katze.c
 radius_test_SOURCES=	radius_test.c
-s3d_startapp_SOURCES=	s3d_startapp.c
 s3dclock_SOURCES=	s3dclock.c
 snowman_SOURCES=	snowman.c
 strtest_SOURCES=	strtest.c
@@ -16,39 +15,5 @@
 CPPFLAGS=		-I${top_srcdir}/server -I${top_srcdir}/client
 LIBS=			${top_builddir}/client/libs3d.la
 
-EXTRA_DIST=		objs/katze_tail.3ds \
-			objs/sec_p.3ds \
-			objs/xyz.3ds \
-			objs/geometry.3ds \
-			objs/rotate.3ds \
-			objs/lil_p.3ds \
-			objs/wtf.3ds \
-			objs/clock_bg.3ds \
-			objs/weirdball.3ds \
-			objs/katze_leg.3ds \
-			objs/cubey.3ds \
-			objs/folder.3ds \
-			objs/snow_foot.3ds \
-			objs/materials.3ds \
-			objs/sphere.3ds \
-			objs/dot.3ds \
-			objs/abs2.3ds \
-			objs/notes.3ds \
-			objs/miu.3ds \
-			objs/katze_body.3ds \
-			objs/dotdot.3ds \
-			objs/comp.3ds \
-			objs/new_sphere.3ds \
-			objs/cubeyholes.3ds \
-			objs/snow_body.3ds \
-			objs/ringsystem.3ds \
-			objs/abs.3ds \
-			objs/duno.3ds \
-			objs/snow_head.3ds \
-			objs/bigsphere.3ds \
-			objs/star.3ds \
-			objs/cube.3ds \
-			objs/big_p.3ds \
-			objs/spikeybla.3ds \
-			folder.3ds \
-			TODO
+EXTRA_DIST=	\
+	TODO

Deleted: trunk/example/folder.3ds
===================================================================
(Binary files differ)

Deleted: trunk/example/s3d_startapp.c
===================================================================
--- trunk/example/s3d_startapp.c	2006-02-18 22:08:03 UTC (rev 89)
+++ trunk/example/s3d_startapp.c	2006-02-18 22:23:43 UTC (rev 90)
@@ -1,73 +0,0 @@
-#include "s3d.h"
-#include <unistd.h> /* fork(), execl() */
-#include <stdio.h> /* printf() */
-#include <stdlib.h> /* exit() */
-#include <string.h> /* strlen(),strncpy(), strncat() */
-struct menu_entry {
-	char *icon, *name, *path;
-	int icon_oid, str_oid;
-};
-
-struct menu_entry menu[]={
-		{"./objs/comp.3ds","filebrowser","./filebrowser",0,0},
-		{"./objs/comp.3ds","terminal","s3dvt",0,0},
-		{"./objs/comp.3ds","clock","s3dclock",0,0}
-};
-void object_click(struct s3d_evt *hrmz)
-{
-	unsigned int i, oid;
-	char exec[256];
-	oid=*((unsigned int *)hrmz->buf);
-	printf("%d got clicked\n",oid);
-	for (i=0;i<(sizeof(menu)/sizeof(struct menu_entry));i++)
-	{
-		if ((oid==menu[i].icon_oid) || (oid==menu[i].str_oid))
-		{
-			strncpy(exec,menu[i].path,256);
-			strncat(exec,"&",256);
-			system(exec);
-/*			if (fork()==0)
-			{
-				execl(menu[i].path,NULL);
-				exit(0);
-			} */
-		}
-	}
-}
-void stop()
-{
-	s3d_quit();
-}
-
-void mainloop()
-{
-	usleep(100000);
-}
-int main (int argc, char **argv)
-{
-	int i;
-	if (!s3d_init(&argc,&argv,"app starter"))	
-	{
-		if (s3d_select_font("vera"))
-		{
-			printf("font not found\n");
-		}
-		for (i=0;i<(sizeof(menu)/sizeof(struct menu_entry));i++)
-		{
-			menu[i].icon_oid=s3d_import_3ds_file(menu[i].icon);
-			menu[i].str_oid=s3d_draw_string(menu[i].name,NULL);
-			s3d_link(menu[i].str_oid,menu[i].icon_oid);
-			s3d_translate(menu[i].icon_oid,0,3*i,0);
-			s3d_translate(menu[i].str_oid,2,0,0);
-			s3d_flags_on(menu[i].icon_oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-			s3d_flags_on(menu[i].str_oid,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-			printf("menu item menu[%d], icon_oid=%d, icon_str=%d\n",i,menu[i].icon_oid,menu[i].str_oid);
-		}
-		s3d_set_callback(S3D_EVENT_QUIT,stop);
-		s3d_set_callback(S3D_EVENT_OBJ_CLICK,object_click);
-		s3d_mainloop(mainloop);
-		s3d_quit();
-	}
-	return(0);
-}
-

Added: trunk/objs/accesspoint.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/accesspoint.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/accesspoint_inet.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/accesspoint_inet.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/arrow.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/arrow.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/internet.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/internet.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/objs/meshnode.3ds
===================================================================
(Binary files differ)


Property changes on: trunk/objs/meshnode.3ds
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From dotslash at berlios.de  Sun Feb 19 00:03:55 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Sun, 19 Feb 2006 00:03:55 +0100
Subject: [S3d-svn] r91 - in trunk: . apps/dot_mcp client example server
Message-ID: <200602182303.k1IN3tPY013852@sheep.berlios.de>

Author: dotslash
Date: 2006-02-19 00:03:55 +0100 (Sun, 19 Feb 2006)
New Revision: 91

Modified:
   trunk/
   trunk/ChangeLog
   trunk/TODO
   trunk/apps/dot_mcp/main.c
   trunk/client/TODO
   trunk/client/error.c
   trunk/client/s3dlib.h
   trunk/example/TODO
   trunk/server/config.h
   trunk/server/error.c
   trunk/server/global.h
   trunk/server/graphics.c
Log:
 r121 at balthasar:  dotslash | 2006-02-19 00:03:45 +0100
 - by commenting out DEBUG define, all debug messages
   will not even be [call]ed
 - dot_mcp gets a reset view button
 		  



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:119
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:121

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/ChangeLog	2006-02-18 23:03:55 UTC (rev 91)
@@ -1,4 +1,7 @@
 2006-02-18	Simon Wunderlich - <dotslash at packetmixer.de>	
+	- by commenting out DEBUG define, all debug messages
+	  will not even be [call]ed
+	- dot_mcp added view reset button, fixed rotate button 
 	- dot_mcp has now some "GO!!" menu
 	- 3dsread.c x-axis inversion fixed
 	- fixed 0.0 size application problem

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/TODO	2006-02-18 23:03:55 UTC (rev 91)
@@ -1,8 +1,6 @@
 client(portability?!):
 	shmat() return (char *) -1 or NULL?! data_ctos/data_stoc should
 	really not be 0x0
-	check 3dsreader binary stuff, gints/gintl, maybe there is some clean
-	function ....
 
 general:
 	start mcp with s3d

Modified: trunk/apps/dot_mcp/main.c
===================================================================
--- trunk/apps/dot_mcp/main.c	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/apps/dot_mcp/main.c	2006-02-18 23:03:55 UTC (rev 91)
@@ -28,7 +28,7 @@
 struct app *focus=NULL;
 float focus_r=0;
 float alpha=0;
-unsigned int min_but,rotate,close_but,sphere,menu=-1;
+unsigned int min_but,rotate,close_but,sphere,reset,menu=-1;
 
 void place_apps();
 
@@ -44,7 +44,6 @@
 
   			s3d_flags_on(focus->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
 			s3d_flags_off(focus->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
-			s3d_flags_off(rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
 			s3d_translate(	focus->title,-focus->textw-1.2,0.0,0);
 			s3d_translate(	focus->close_but,bsize*focus->textw/2,1.2,0);
 			s3d_link(		focus->close_but,focus->sphere);
@@ -55,15 +54,21 @@
 	{
 		focus_r=n_app;
 		s3d_mcp_focus(-1);
+		s3d_flags_off(rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_flags_off(reset,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		rot_flag=0;
 	} else {
 		/* set the new focus app up */
-		s3d_translate(	a->title,-a->textw-7.2,0.0,0);
+		s3d_translate(	a->title,-a->textw-9.6,0.0,0);
+		s3d_translate(	reset,-7.2,0.0,0);
 		s3d_translate(	rotate,-4.8,0.0,0);
 		s3d_translate(	a->min_but,-2.4,0.0,0);
 		s3d_link(		a->close_but,0);
 		s3d_link(		rotate,a->close_but);
+		s3d_link(		reset,a->close_but);
 		s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
 		s3d_flags_on(	rotate,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+		s3d_flags_on(	reset,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
 		s3d_flags_off(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
 		s3d_unlink(a->oid);
 		s3d_rotate(a->oid,		0,0,0);
@@ -132,7 +137,7 @@
 		n_app--;
 		if (focus==a)
 		{
-			s3d_mcp_focus(-1);
+			set_focus(NULL);
 			focus=NULL;
 		}
 		free(a);
@@ -195,7 +200,6 @@
 			if (a==focus)
 			{
 				focus_r=a->r;
-/*				s3d_translate(a->min_but,0,a->r + 1.0,0);*/
 			} else {
 				s3d_scale(a->sphere,a->r);
 				s3d_scale(a->oid,1/a->r);
@@ -207,7 +211,6 @@
 void app_init(struct app *a)
 {
 	printf("building some window decorations on %d ['%s']\n",a->oid,a->name);
-/* 	a->r=s3d_get_radius(a->oid); */
 	printf("radius of object %d is %f\n",a->oid,a->r);
 	s3d_scale(a->oid,		1/a->r);
 
@@ -216,11 +219,6 @@
 	s3d_link(		a->sphere,a->oid);
   	s3d_flags_on(	a->sphere,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
 
-/*	s3d_translate(	a->min_but,0,2.0,0);
-	s3d_link(		a->min_but,a->sphere);
-   	s3d_flags_on(	a->min_but,S3D_OF_VISIBLE|S3D_OF_SELECTABLE);*/
-
-
 	a->title=s3d_draw_string(a->name,&a->textw);
 
 	a->close_but=s3d_clone(close_but);
@@ -265,6 +263,11 @@
 		rot_flag=!rot_flag;
 		return;
 	}
+	if (oid==reset)
+	{
+		s3d_translate(0,0.0,0.0,5.0);
+		s3d_rotate(0,0,0,0);
+	}
 	while (a!=NULL)
 	{
 		if (oid==a->close_but)
@@ -357,12 +360,12 @@
 					1,1,1,0.2);*/
 		min_but=s3d_import_3ds_file("objs/cubeyholes.3ds");
 		rotate=s3d_import_3ds_file("objs/rotate.3ds");
+		reset=s3d_import_3ds_file("objs/reset.3ds");
 		close_but=s3d_import_3ds_file("objs/spikeybla.3ds");
 		sphere=s3d_import_3ds_file("objs/ringsystem.3ds");
 		menu=menu_init();
 		s3d_link(menu,0);
 		s3d_scale(menu,bsize);
-		printf("min_but: %d, rotate: %d, close_but: %d, sphere: %d, menu: %d",min_but,rotate,close,sphere, menu);
 		place_apps();
 		s3d_mainloop(mainloop);
 		s3d_quit();

Modified: trunk/client/TODO
===================================================================
--- trunk/client/TODO	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/client/TODO	2006-02-18 23:03:55 UTC (rev 91)
@@ -1,3 +1,2 @@
 TODO:
  - .max, .x, .obj files
- - turn debug messages OUT

Modified: trunk/client/error.c
===================================================================
--- trunk/client/error.c	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/client/error.c	2006-02-18 23:03:55 UTC (rev 91)
@@ -4,6 +4,7 @@
 #include <stdio.h> 		 /*  perror(),fprintf() */
 #include <string.h> 	 /*  sterror */
 /*  dprintf is only for internal use. */
+#ifdef DEBUG
 void dprintf(int relevance, const char *fmt, ...) {
 	char dbm[DBM_MAX];
 	va_list args;
@@ -16,16 +17,10 @@
 		fprintf(stderr,"s3dlib: %s\n",(char *)&dbm);
 	}
 }
-void errn(char *func,int en) {
-	fprintf(stderr,"s3dlib error: %s: (%d) %s\n",func,en, strerror(en));
-}
 void errdn(int relevance, char *func,int en) {
 	if (relevance >= DEBUG )
 		 fprintf(stderr,"s3dlib error: %s: (%d) %s\n",func,en, strerror(en));
 }
-void errs(char *func, char *msg) {
-	fprintf(stderr,"s3dlib error: %s: %s\n",func,msg);
-}
 
 void errds(int relevance,char *func, const char *fmt, ...)
 {
@@ -40,3 +35,12 @@
 		fprintf(stderr,"s3dlib error: %s:%s\n",func,(char *)&dbm);
 	}
 }
+#endif
+void errn(char *func,int en) {
+	fprintf(stderr,"s3dlib error: %s: (%d) %s\n",func,en, strerror(en));
+}
+void errs(char *func, char *msg) {
+	fprintf(stderr,"s3dlib error: %s: %s\n",func,msg);
+}
+
+

Modified: trunk/client/s3dlib.h
===================================================================
--- trunk/client/s3dlib.h	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/client/s3dlib.h	2006-02-18 23:03:55 UTC (rev 91)
@@ -79,3 +79,9 @@
 int _s3d_tesselate(struct tessp_t *t,struct t_buf *b);
 
 #include "config.h"
+#ifndef DEBUG
+#define dprintf(...) /* nothing */
+#define errdn(...) /* nothing */
+#define errds(...) /* nothing */
+#endif
+

Modified: trunk/example/TODO
===================================================================
--- trunk/example/TODO	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/example/TODO	2006-02-18 23:03:55 UTC (rev 91)
@@ -1,4 +0,0 @@
-check S3D_QUIT_event
-dot_mcp: 
-	dnjl:	error opening pty
-	check updating names

Modified: trunk/server/config.h
===================================================================
--- trunk/server/config.h	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/server/config.h	2006-02-18 23:03:55 UTC (rev 91)
@@ -15,7 +15,11 @@
 #define	VHIGH	5
 /*  which is the minimum level of debugmessage we want to see? */
 #define DEBUG	LOW
-#define NO_DEBUG	1 /* we want no debugging !! */
+#ifndef DEBUG
+#define errds(...) /* nothing */
+#define dprintf(...) /* nothing */
+#endif
+
 /*  which subsystem do we use for rendering and ? */
 
 /* GLUT is the GL utility library which you obtain at 

Modified: trunk/server/error.c
===================================================================
--- trunk/server/error.c	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/server/error.c	2006-02-18 23:03:55 UTC (rev 91)
@@ -26,7 +26,7 @@
 	fprintf(stderr,"FATAL: %s: %s\n",func,msg);
 	exit(-1);
 }
-
+#ifdef DEBUG
 /*  printing error message */
 void errds(int relevance,char *func, const char *fmt, ...)
 {
@@ -41,7 +41,6 @@
 		fprintf(stderr,"error: %s:%s\n",func,(char *)&dbm);
 	}
 }
-#ifdef DEBUG
 /*  printing debug message */
 
 void dprintf(int relevance, const char *fmt, ...) {
@@ -57,8 +56,5 @@
 		fprintf(stdout,"debug: %s\n",(char *)&dbm);
 	}
 }
-#else 
-void dprintf(int relevance, const char *fmt, ...) {
-		/* placeholder ... */
-}
+
 #endif

Modified: trunk/server/global.h
===================================================================
--- trunk/server/global.h	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/server/global.h	2006-02-18 23:03:55 UTC (rev 91)
@@ -228,8 +228,10 @@
 void errnf(char *func, int en);
 void errs(char *func, char *msg);
 void errsf(char *func, char *msg);
+#ifdef DEBUG
 void errds(int relevance,char *func, const char *fmt, ...);
 void dprintf(int relevance, const char *msg, ...);
+#endif
 /*  graphics.c */
 int graphics_quit(void);
 void graphics_main(void);

Modified: trunk/server/graphics.c
===================================================================
--- trunk/server/graphics.c	2006-02-18 22:23:43 UTC (rev 90)
+++ trunk/server/graphics.c	2006-02-18 23:03:55 UTC (rev 91)
@@ -316,6 +316,7 @@
  	glPushMatrix();  /*  save the cam */ 
 		glLightfv(GL_LIGHT0,GL_POSITION,pos);
 		render_by_mcp();
+#ifdef DEBUG
 		glPushMatrix();
 			glRotatef(90,1.0,0.0,0.0);	
 			glMaterialfv(GL_FRONT,GL_AMBIENT,wire_amb);
@@ -323,6 +324,7 @@
 			glMaterialfv(GL_FRONT,GL_DIFFUSE,wire_diff);
 			glutWireTorus(100,100,40,40);
 		glPopMatrix();
+#endif
  	glPopMatrix();  /*  restore the cam */ 
 	glLoadIdentity();
 	glMultMatrixf(m);



From dotslash at berlios.de  Mon Feb 20 22:08:09 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Mon, 20 Feb 2006 22:08:09 +0100
Subject: [S3d-svn] r92 - in trunk: . extras
Message-ID: <200602202108.k1KL89qU010647@sheep.berlios.de>

Author: dotslash
Date: 2006-02-20 22:08:08 +0100 (Mon, 20 Feb 2006)
New Revision: 92

Added:
   trunk/extras/
   trunk/extras/mplayer.1.0pre7.s3d.patch
Modified:
   trunk/
   trunk/ChangeLog
Log:
 r123 at balthasar:  dotslash | 2006-02-20 22:08:02 +0100
 - added mplayer patch: patch your mplayer, use -vo s3d on
   the commandline and watch your videos in s3d in 3d space - yay
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:121
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:123

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-18 23:03:55 UTC (rev 91)
+++ trunk/ChangeLog	2006-02-20 21:08:08 UTC (rev 92)
@@ -1,3 +1,6 @@
+2006-02-20  Simon Wunderlich - <dotslash at packetmixer.de>
+	- added mplayer patch: patch your mplayer, use -vo s3d on
+	  the commandline and watch your videos in s3d in 3d space - yay
 2006-02-18	Simon Wunderlich - <dotslash at packetmixer.de>	
 	- by commenting out DEBUG define, all debug messages
 	  will not even be [call]ed

Added: trunk/extras/mplayer.1.0pre7.s3d.patch
===================================================================
--- trunk/extras/mplayer.1.0pre7.s3d.patch	2006-02-18 23:03:55 UTC (rev 91)
+++ trunk/extras/mplayer.1.0pre7.s3d.patch	2006-02-20 21:08:08 UTC (rev 92)
@@ -0,0 +1,269 @@
+diff -Naur MPlayer-1.0pre7.old/configure MPlayer-1.0pre7/configure
+--- MPlayer-1.0pre7.old/configure	2005-04-13 13:46:35.000000000 +0200
++++ MPlayer-1.0pre7/configure	2005-05-22 18:12:56.586338408 +0200
+@@ -234,6 +234,7 @@
+   --disable-vidix        disable VIDIX [enable on x86 *nix]
+   --enable-gl            build with OpenGL render support [autodetect]
+   --enable-dga[=n]       build with DGA [n in {1, 2} ] support [autodetect]
++  --enable-s3d           build with s3d support [autodetect]
+   --enable-vesa          build with VESA support [autodetect]
+   --enable-svga          build with SVGAlib support [autodetect]
+   --enable-sdl           build with SDL render support [autodetect]
+@@ -1288,6 +1289,7 @@
+ _mencoder=yes
+ _x11=auto
+ _dga=auto	# 1 2 no auto
++_s3d=auto
+ _xv=auto
+ _xvmc=no  #auto when complete
+ _sdl=auto
+@@ -1444,6 +1446,8 @@
+   --disable-xvmc)       _xvmc=no        ;;
+   --enable-sdl)		_sdl=yes	;;
+   --disable-sdl)	_sdl=no		;;
++  --enable-s3d)		_s3d=yes	;;
++  --disable-s3d)	_s3d=no		;;
+   --enable-directx)     _directx=yes    ;;
+   --disable-directx)    _directx=no     ;;
+   --enable-win32waveout)  _win32waveout=yes ;;
+@@ -3798,6 +3802,27 @@
+ fi
+ echores "$_aa"
+ 
++echocheck "s3d"
++if test "$_s3d" = auto ; then
++  cat > $TMPC << EOF
++#include <s3d.h>
++int main(int argc, char **argv) { s3d_init( &argc, &argv, "mplayer_test"); s3d_quit(); return 0; }
++EOF
++  _s3d=no
++  cc_check -ls3d && _s3d=yes
++fi
++if test "$_s3d" = yes ; then
++  _def_s3d='#define HAVE_S3D 1'
++  _ld_s3d='-ls3d'
++  _vosrc="$_vosrc vo_s3d.c"
++  _vomodules="s3d $_vomodules"
++else
++  _def_aa='#undef HAVE_S3D'
++  _novomodules="s3d $_novomodules"
++fi
++echores "$_s3d"
++
++
+ 
+ echocheck "CACA"
+ if test "$_caca" = auto ; then
+@@ -6769,6 +6794,7 @@
+ SDL_LIB = $_ld_sdl
+ SVGA_LIB = $_ld_svga
+ AA_LIB = $_ld_aa
++S3D_LIB = $_ld_s3d
+ CACA_INC = $_inc_caca
+ CACA_LIB = $_ld_caca
+ 
+@@ -7484,6 +7510,7 @@
+ $_def_vesa
+ $_def_xdpms
+ $_def_aa
++$_def_s3d
+ $_def_caca
+ $_def_tga
+ $_def_toolame
+diff -Naur MPlayer-1.0pre7.old/libvo/video_out.c MPlayer-1.0pre7/libvo/video_out.c
+--- MPlayer-1.0pre7.old/libvo/video_out.c	2004-12-21 21:33:51.000000000 +0100
++++ MPlayer-1.0pre7/libvo/video_out.c	2005-05-22 18:09:59.288291808 +0200
+@@ -84,6 +84,7 @@
+ extern vo_functions_t video_out_png;
+ extern vo_functions_t video_out_ggi;
+ extern vo_functions_t video_out_aa;
++extern vo_functions_t video_out_s3d;
+ extern vo_functions_t video_out_caca;
+ extern vo_functions_t video_out_mpegpes;
+ extern vo_functions_t video_out_yuv4mpeg;
+@@ -192,6 +193,9 @@
+ #ifdef HAVE_AA
+ 	&video_out_aa,
+ #endif
++#ifdef HAVE_S3D
++	&video_out_s3d,
++#endif
+ #ifdef HAVE_CACA
+ 	&video_out_caca,
+ #endif
+diff -Naur MPlayer-1.0pre7.old/libvo/vo_s3d.c MPlayer-1.0pre7/libvo/vo_s3d.c
+--- MPlayer-1.0pre7.old/libvo/vo_s3d.c	1970-01-01 01:00:00.000000000 +0100
++++ MPlayer-1.0pre7/libvo/vo_s3d.c	2005-05-22 18:09:59.289291656 +0200
+@@ -0,0 +1,160 @@
++#include <stdio.h>
++#include <stdlib.h>
++#include <string.h>
++#include <errno.h>
++#include <s3d.h>
++#include "config.h"
++#include "video_out.h"
++#include "video_out_internal.h"
++#include "mp_msg.h"
++
++static vo_info_t info = 
++{
++	"s3d video output",
++	"s3d",
++	"<dotslash at packetmixer.de>",
++	""
++};
++
++LIBVO_EXTERN( s3d )
++
++static uint32_t image_width, image_height;
++static int int_pause;
++static uint32_t oid;
++static char *data2;
++
++//static uint32_t
++static uint32_t draw_slice(uint8_t *image[], int stride[], int w,int h,int x,int y)
++{
++//	int x2,y2;
++//	unsigned char *data;
++	// ignoring stride, as I don't know what it is O_o
++    mp_msg (MSGT_VO, MSGL_INFO, "[s3d] calling stride: %dx%d image at %dx%d\n",w,h,x,y);
++/*	data=*image;
++	for (y2=x;y2<w;y2++)
++	for (x2=y;x2<h;x2++)
++	{
++		data2[(y2*image_width+x2)*4+0]=data[(y2*image_width+x2)*3+0];
++		data2[(y2*image_width+x2)*4+1]=data[(y2*image_width+x2)*3+1];
++		data2[(y2*image_width+x2)*4+2]=data[(y2*image_width+x2)*3+2];
++		data2[(y2*image_width+x2)*4+3]=255;
++	}
++	s3d_load_texture(oid,0,x,y,w,h,data2);
++	return(0);*/
++}
++
++static void draw_osd(void)
++{
++}
++
++static void
++flip_page(void)
++{
++}
++
++static uint32_t
++draw_frame(uint8_t *src[])
++{
++	uint32_t x,y;
++	unsigned char *data;
++	data=*src;
++	for (y=0;y<image_height;y++)
++		for (x=0;x<image_width;x++)
++		{
++			data2[(y*image_width+x)*4+0]=data[(y*image_width+x)*3+0];
++			data2[(y*image_width+x)*4+1]=data[(y*image_width+x)*3+1];
++			data2[(y*image_width+x)*4+2]=data[(y*image_width+x)*3+2];
++			data2[(y*image_width+x)*4+3]=255;
++		}
++	s3d_load_texture(oid,0,0,0,image_width,image_height,data2);
++	return VO_TRUE;
++}
++
++static uint32_t
++config(uint32_t width, uint32_t height, uint32_t d_width, uint32_t d_height, uint32_t fullscreen, char *title, uint32_t format)
++{
++	image_width = width;
++	image_height = height;
++	printf("config!!\n\n");
++	if (vo_config_count>0) 
++	{
++	} else {
++		free(data2);
++		s3d_pop_texture(oid,1);
++	}
++	s3d_scale(oid,(((float) d_width)/((float) d_height)),1.0,1.0);
++	data2=malloc(width*height*4);
++	memset(data2,128,width*height*4);
++	s3d_push_texture(oid,image_width,image_height);		
++   	mp_msg (MSGT_VO, MSGL_INFO,"[s3d] requesting a %d %d texture... \n",image_width,image_height);
++   	mp_msg (MSGT_VO, MSGL_INFO,"[s3d] wanted size is %d %d... \n",d_width,d_height);
++	s3d_pep_material_texture(oid,0,0);	// assign texture 0 to material 0
++	return 0;
++}
++
++static void
++uninit(void)
++{
++	if (data2!=NULL)
++		free(data2);
++	s3d_quit();
++}
++
++
++static void check_events(void)
++{
++}
++
++static uint32_t preinit(const char *arg)
++{
++	int argc=0;
++	char *arg1=NULL;
++	char **argv=&arg1;
++    mp_msg (MSGT_VO, MSGL_INFO, "[s3d] hello, i'm initing - darn it!\n");
++	if (s3d_init(&argc,&argv,"mplayer"))
++	{
++    	mp_msg (MSGT_VO, MSGL_WARN, "[s3d] sorry, can't reach server.\n");
++		return(ENOSYS);
++	}
++	s3d_push_vertex(oid,-3,-3,0);
++	s3d_push_vertex(oid, 3,-3,0);
++	s3d_push_vertex(oid, 3, 3,0);
++	s3d_push_vertex(oid,-3, 3,0);
++	s3d_push_material_a(oid,
++					0.8,	0.0,	0.0	,1.0,
++					1.0,	1.0,	1.0	,1.0,
++					0.8,	0.0,	0.0	,1.0);
++	s3d_push_polygon(oid,0,1,2,0);
++	s3d_pep_polygon_tex_coord(oid, 0.0,1.0, 
++								   1.0,1.0,
++								   1.0,0.0);
++	s3d_push_polygon(oid,0,2,3,0);
++	s3d_pep_polygon_tex_coord(oid, 0.0,1.0, 
++								   1.0,0.0,
++								   0.0,0.0);
++	s3d_flags_on(oid,S3D_OF_VISIBLE);
++    if(arg) 
++    {
++    	mp_msg (MSGT_VO, MSGL_WARN, "[s3d] what should I do with this arg? \n");
++		return ENOSYS;
++    }
++    return 0;
++}
++
++static uint32_t
++query_format(uint32_t format)
++{
++    if (format == IMGFMT_RGB24)
++        return VFCAP_CSP_SUPPORTED | VFCAP_CSP_SUPPORTED_BY_HW;
++    return 0;
++}
++static uint32_t control(uint32_t request, void *data, ...)
++{
++  switch (request) {
++  case VOCTRL_PAUSE: return (int_pause=1);
++  case VOCTRL_RESUME: return (int_pause=0);
++  case VOCTRL_QUERY_FORMAT:
++    return query_format(*((uint32_t*)data));
++  }
++  return VO_NOTIMPL;
++}
+diff -Naur MPlayer-1.0pre7.old/Makefile MPlayer-1.0pre7/Makefile
+--- MPlayer-1.0pre7.old/Makefile	2005-04-16 22:18:12.000000000 +0200
++++ MPlayer-1.0pre7/Makefile	2005-05-22 18:13:18.386024352 +0200
+@@ -30,7 +30,7 @@
+ OBJS_MENCODER = $(SRCS_MENCODER:.c=.o)
+ OBJS_MPLAYER = $(SRCS_MPLAYER:.c=.o)
+ 
+-VO_LIBS = $(AA_LIB) $(X_LIB) $(SDL_LIB) $(GGI_LIB) $(MP1E_LIB) $(MLIB_LIB) $(SVGA_LIB) $(DIRECTFB_LIB) $(CACA_LIB)
++VO_LIBS = $(AA_LIB) $(X_LIB) $(SDL_LIB) $(GGI_LIB) $(MP1E_LIB) $(MLIB_LIB) $(SVGA_LIB) $(DIRECTFB_LIB) $(CACA_LIB) $(S3D_LIB)
+ AO_LIBS = $(ARTS_LIB) $(ESD_LIB) $(JACK_LIB) $(NAS_LIB) $(SGIAUDIO_LIB) $(POLYP_LIB)
+ CODEC_LIBS = $(AV_LIB) $(FAME_LIB) $(MAD_LIB) $(VORBIS_LIB) $(THEORA_LIB) $(FAAD_LIB) $(LIBLZO_LIB) $(DECORE_LIB) $(XVID_LIB) $(DTS_LIB) $(PNG_LIB) $(Z_LIB) $(JPEG_LIB) $(ALSA_LIB) $(XMMS_LIB) $(X264_LIB)
+ COMMON_LIBS = libmpcodecs/libmpcodecs.a $(W32_LIB) $(DS_LIB) libaf/libaf.a libmpdemux/libmpdemux.a input/libinput.a postproc/libswscale.a osdep/libosdep.a $(DVDREAD_LIB) $(CODEC_LIBS) $(FREETYPE_LIB) $(TERMCAP_LIB) $(CDPARANOIA_LIB) $(MPLAYER_NETWORK_LIB) $(WIN32_LIB) $(GIF_LIB) $(MACOSX_FRAMEWORKS) $(SMBSUPPORT_LIB) $(FRIBIDI_LIB) $(FONTCONFIG_LIB) $(ENCA_LIB)


Property changes on: trunk/extras/mplayer.1.0pre7.s3d.patch
___________________________________________________________________
Name: svn:mime-type
   + text/x-patch



From ankon at berlios.de  Tue Feb 21 21:24:01 2006
From: ankon at berlios.de (ankon at berlios.de)
Date: Tue, 21 Feb 2006 21:24:01 +0100
Subject: [S3d-svn] r93 - in trunk: apps/olsrs3d apps/s3dgps example
Message-ID: <200602212024.k1LKO1VO028633@sheep.berlios.de>

Author: ankon
Date: 2006-02-21 21:23:56 +0100 (Tue, 21 Feb 2006)
New Revision: 93

Modified:
   trunk/apps/olsrs3d/Makefile.am
   trunk/apps/s3dgps/Makefile.am
   trunk/example/Makefile.am
Log:
Replace {} with (), and remove some empty things.



Modified: trunk/apps/olsrs3d/Makefile.am
===================================================================
--- trunk/apps/olsrs3d/Makefile.am	2006-02-20 21:08:08 UTC (rev 92)
+++ trunk/apps/olsrs3d/Makefile.am	2006-02-21 20:23:56 UTC (rev 93)
@@ -1,6 +1,6 @@
 bin_PROGRAMS=	olsrs3d
 
-olsrs3dincludedir = ${pkgincludedir}/olsrs3d
+olsrs3dincludedir = $(pkgincludedir)/olsrs3d
 olsrs3dinclude_HEADERS =  \
 	olsrs3d.h
 
@@ -9,9 +9,9 @@
 	main.c \
 	net.c
 
-olsrs3d_CPPFLAGS=	-I${top_srcdir}/client
-olsrs3d_LDADD=		${top_builddir}/client/libs3d.la
+olsrs3d_CPPFLAGS=	-I$(top_srcdir)/client
+olsrs3d_LDADD=		$(top_builddir)/client/libs3d.la
 
 EXTRA_DIST = \
-	output.sample
+	output.sample TODO
 

Modified: trunk/apps/s3dgps/Makefile.am
===================================================================
--- trunk/apps/s3dgps/Makefile.am	2006-02-20 21:08:08 UTC (rev 92)
+++ trunk/apps/s3dgps/Makefile.am	2006-02-21 20:23:56 UTC (rev 93)
@@ -3,8 +3,6 @@
 s3dgps_SOURCES =  \
 	s3dgps.c
 
-s3dgps_CPPFLAGS=	-I${top_srcdir}/client @GPS_CFLAGS@ @SIMAGE_CFLAGS@
-s3dgps_LDADD=		${top_builddir}/client/libs3d.la @GPS_LIBS@ @SIMAGE_LIBS@
+s3dgps_CPPFLAGS=	-I$(top_srcdir)/client @GPS_CFLAGS@ @SIMAGE_CFLAGS@
+s3dgps_LDADD=		$(top_builddir)/client/libs3d.la @GPS_LIBS@ @SIMAGE_LIBS@
 
-EXTRA_DIST =  
-

Modified: trunk/example/Makefile.am
===================================================================
--- trunk/example/Makefile.am	2006-02-20 21:08:08 UTC (rev 92)
+++ trunk/example/Makefile.am	2006-02-21 20:23:56 UTC (rev 93)
@@ -12,8 +12,8 @@
 strtest_SOURCES=	strtest.c
 texturetest_SOURCES=	texturetest.c
 
-CPPFLAGS=		-I${top_srcdir}/server -I${top_srcdir}/client
-LIBS=			${top_builddir}/client/libs3d.la
+CPPFLAGS=		-I$(top_srcdir)/server -I$(top_srcdir)/client
+LIBS=			$(top_builddir)/client/libs3d.la
 
 EXTRA_DIST=	\
 	TODO



From ankon at berlios.de  Tue Feb 21 21:24:55 2006
From: ankon at berlios.de (ankon at berlios.de)
Date: Tue, 21 Feb 2006 21:24:55 +0100
Subject: [S3d-svn] r94 - in trunk: . objs
Message-ID: <200602212024.k1LKOtCk028744@sheep.berlios.de>

Author: ankon
Date: 2006-02-21 21:24:51 +0100 (Tue, 21 Feb 2006)
New Revision: 94

Added:
   trunk/objs/Makefile.am
Modified:
   trunk/Makefile.am
   trunk/configure.in
Log:
Install .3ds into $(pkgdatadir)/objs ($(prefix)/share/s3d/objs, usually)



Modified: trunk/Makefile.am
===================================================================
--- trunk/Makefile.am	2006-02-21 20:23:56 UTC (rev 93)
+++ trunk/Makefile.am	2006-02-21 20:24:51 UTC (rev 94)
@@ -5,4 +5,4 @@
 MAYBE_EXAMPLES=
 endif
 
-SUBDIRS=server client apps $(MAYBE_EXAMPLES)
+SUBDIRS=server client apps $(MAYBE_EXAMPLES) objs

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-02-21 20:23:56 UTC (rev 93)
+++ trunk/configure.in	2006-02-21 20:24:51 UTC (rev 94)
@@ -139,7 +139,8 @@
 	apps/s3dgps/Makefile
 	apps/s3dvt/Makefile
 	apps/dot_mcp/Makefile
-	example/Makefile])
+	example/Makefile
+	objs/Makefile])
 AC_OUTPUT
 
 echo "

Added: trunk/objs/Makefile.am
===================================================================
--- trunk/objs/Makefile.am	2006-02-21 20:23:56 UTC (rev 93)
+++ trunk/objs/Makefile.am	2006-02-21 20:24:51 UTC (rev 94)
@@ -0,0 +1,43 @@
+objsdir=	$(pkgdatadir)/objs
+objs_DATA = \
+	internet.3ds \
+	katze_tail.3ds \
+	sec_p.3ds \
+	arrow.3ds \
+	xyz.3ds \
+	geometry.3ds \
+	rotate.3ds \
+	lil_p.3ds \
+	go_button.3ds \
+	wtf.3ds \
+	meshnode.3ds \
+	clock_bg.3ds \
+	katze_leg.3ds \
+	weirdball.3ds \
+	cubey.3ds \
+	accesspoint.3ds \
+	folder.3ds \
+	snow_foot.3ds \
+	materials.3ds \
+	dot.3ds \
+	sphere.3ds \
+	abs2.3ds \
+	notes.3ds \
+	dotdot.3ds \
+	miu.3ds \
+	duno.3ds \
+	abs.3ds \
+	accesspoint_inet.3ds \
+	katze_body.3ds \
+	comp.3ds \
+	new_sphere.3ds \
+	cubeyholes.3ds \
+	snow_body.3ds \
+	ringsystem.3ds \
+	snow_head.3ds \
+	bigsphere.3ds \
+	star.3ds \
+	cube.3ds \
+	big_p.3ds \
+	spikeybla.3ds
+



From ankon at berlios.de  Tue Feb 21 21:41:23 2006
From: ankon at berlios.de (ankon at berlios.de)
Date: Tue, 21 Feb 2006 21:41:23 +0100
Subject: [S3d-svn] r95 - trunk
Message-ID: <200602212041.k1LKfN3T003351@sheep.berlios.de>

Author: ankon
Date: 2006-02-21 21:41:19 +0100 (Tue, 21 Feb 2006)
New Revision: 95

Modified:
   trunk/configure.in
Log:
Ja, hab ich :P



Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-02-21 20:24:51 UTC (rev 94)
+++ trunk/configure.in	2006-02-21 20:41:19 UTC (rev 95)
@@ -39,7 +39,7 @@
 DEVEL_CFLAGS=
 DEVEL_LDFLAGS=
 # XXX: switch default and help string for releases.
-AC_ARG_ENABLE([devel], AS_HELP_STRING([--disable-debug],[Enable debugging flags]), [enable_debug=$enableval], [enable_debug=yes])
+AC_ARG_ENABLE([devel], AS_HELP_STRING([--disable-debug],[Disables debugging flags]), [enable_debug=$enableval], [enable_debug=yes])
 if test x$enable_debug = xyes; then
 	DEVEL_CFLAGS="$DEVEL_CFLAGS -ggdb"
 	DEVEL_LDFLAGS="$DEVEL_LDFLAGS -ggdb"



From dotslash at berlios.de  Tue Feb 21 22:27:23 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Tue, 21 Feb 2006 22:27:23 +0100
Subject: [S3d-svn] r96 - in trunk: . apps/dot_mcp
Message-ID: <200602212127.k1LLRNb6014998@sheep.berlios.de>

Author: dotslash
Date: 2006-02-21 22:27:22 +0100 (Tue, 21 Feb 2006)
New Revision: 96

Added:
   trunk/apps/dot_mcp/dot_mcp.h
Modified:
   trunk/
Log:
 r130 at balthasar:  dotslash | 2006-02-21 22:27:14 +0100
 forgot to add ...



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:123
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:130

Added: trunk/apps/dot_mcp/dot_mcp.h
===================================================================
--- trunk/apps/dot_mcp/dot_mcp.h	2006-02-21 20:41:19 UTC (rev 95)
+++ trunk/apps/dot_mcp/dot_mcp.h	2006-02-21 21:27:22 UTC (rev 96)
@@ -0,0 +1,2 @@
+int menu_init();
+void menu_click(int oid);



From ankon at berlios.de  Tue Feb 21 22:52:32 2006
From: ankon at berlios.de (ankon at berlios.de)
Date: Tue, 21 Feb 2006 22:52:32 +0100
Subject: [S3d-svn] r97 - trunk
Message-ID: <200602212152.k1LLqWTX018834@sheep.berlios.de>

Author: ankon
Date: 2006-02-21 22:52:28 +0100 (Tue, 21 Feb 2006)
New Revision: 97

Added:
   trunk/configure.ac
Removed:
   trunk/configure.in
Log:
Rename. .ac is the offizial and endorsed extension...and i keep typing 
vi configure.ac 
way to often...



Copied: trunk/configure.ac (from rev 96, trunk/configure.in)

Deleted: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-02-21 21:27:22 UTC (rev 96)
+++ trunk/configure.in	2006-02-21 21:52:28 UTC (rev 97)
@@ -1,151 +0,0 @@
-dnl Process this file with autoconf to produce a configure script.
-AC_INIT(server/main.c)
-
-AC_CANONICAL_HOST
-AC_CANONICAL_TARGET
-
-AM_INIT_AUTOMAKE([s3d], [0.1])
-
-dnl Checks for programs.
-AC_PROG_CC
-AC_PROG_INSTALL
-AC_PROG_LN_S
-AC_PROG_MAKE_SET
-AC_PATH_X
-AC_PATH_XTRA
-AC_PROG_LIBTOOL
-AC_HEADER_DIRENT
-AC_HEADER_STDC
-AC_CHECK_HEADERS(fcntl.h sys/ioctl.h sys/time.h unistd.h)
-
-dnl Checks for typedefs, structures, and compiler characteristics.
-AC_C_CONST
-AC_HEADER_TIME
-AC_STRUCT_TM
-
-dnl Checks for library functions.
-AC_PROG_GCC_TRADITIONAL
-AC_FUNC_SETVBUF_REVERSED
-AC_TYPE_SIGNAL
-AC_CHECK_FUNCS(select socket strerror strtod strtol)
-
-WARNS=""
-CFLAGS="$CFLAGS $X_CFLAGS"
-LIBS="$X_PRE_LIBS $X_LIBS $X_EXTRA_LIBS $LIBS"
-
-###
-### Optional features 
-###
-DEVEL_CFLAGS=
-DEVEL_LDFLAGS=
-# XXX: switch default and help string for releases.
-AC_ARG_ENABLE([devel], AS_HELP_STRING([--disable-debug],[Disables debugging flags]), [enable_debug=$enableval], [enable_debug=yes])
-if test x$enable_debug = xyes; then
-	DEVEL_CFLAGS="$DEVEL_CFLAGS -ggdb"
-	DEVEL_LDFLAGS="$DEVEL_LDFLAGS -ggdb"
-fi
-
-AC_ARG_ENABLE([profiling], AS_HELP_STRING([--enable-profiling], [Enable building for profiling]), [enable_profiling=$enableval], [enable_profiling=no])
-if test x$enable_profiling = xyes; then
-	DEVEL_CFLAGS="$DEVEL_CFLAGS -pg"
-	DEVEL_LDFLAGS="$DEVEL_LDFLAGS -pg"
-fi
-
-AC_SUBST(DEVEL_CFLAGS)
-AC_SUBST(DEVEL_LDFLAGS)
-dnl ##################################### SERVER #######################################
-AC_CHECK_LIBM
-AC_SUBST(LIBM)
-
-MDL_HAVE_OPENGL
-AC_SEARCH_LIBS(glutInit, glut, [
-HAVE_glut=x
-GLUT_CFLAGS=
-GLUT_LIBS=-lglut
-], [
-HAVE_glut=
-GLUT_CFLAGS=
-GLUT_LIBS=
-])
-AC_SUBST(GLUT_CFLAGS)
-AC_SUBST(GLUT_LIBS)
-
-SDL_VERSION=1.2.7
-AM_PATH_SDL($SDL_VERSION, [HAVE_SDL="x"], [])
-if test "x${HAVE_glut}${HAVE_SDL}" = "x"; then
-	AC_MSG_ERROR([No OpenGL Framework found. Try installing GLUT or SDL, or both])
-fi
-
-AM_CONDITIONAL([BUILD_SDL], test x"${HAVE_SDL}" != x)
-AM_CONDITIONAL([BUILD_GLUT], test x"${HAVE_glut}" != x)
-
-dnl ##################################### CLIENT #######################################
-
-PKG_CHECK_MODULES(FONTCONFIG, fontconfig >= 2.3.0, [:], [AC_MSG_ERROR([Please install fontconfig (version 2.3.0 or higher)])])
-PKG_CHECK_MODULES(FREETYPE, freetype2 >= 9.5.0, [:], [AC_MSG_ERROR([Please install freetype2 (version 9.5.0 or higher)])])
-
-dnl if test "x${HAVE_glut}" = "x"; then
-dnl     AC_MSG_ERROR([Sorry, we need glut for the client in for Glyph Tesselation ...])
-dnl fi
-
-dnl ##################################### EXAMPLES / APPS ######################
-
-AC_CHECK_LIB(gps, main, [HAVE_GPS=yes], [HAVE_GPS=no])
-if test x$HAVE_GPS = xyes; then
-	GPS_CFLAGS=
-	GPS_LIBS=-lgps	
-	AC_SUBST(GPS_CFLAGS)
-	AC_SUBST(GPS_LIBS)
-else
-	WARNS="$WARNS
- ### Sorry, you lack the gps library to compile the s3dgps application."
-fi
-SIM_AC_HAVE_SIMAGE_IFELSE([
-	SIMAGE_CFLAGS=$sim_ac_simage_cppflags
-	SIMAGE_LIBS="$sim_ac_simage_ldflags $sim_ac_simage_libs"
-	AC_SUBST(SIMAGE_CFLAGS)
-	AC_SUBST(SIMAGE_LIBS)
-],[
-	WARNS="$WARNS
- ### Sorry, you lack the simage library to compile the s3dgps application."
-])
-AM_CONDITIONAL([BUILD_S3DGPS], [test x$HAVE_GPS = xyes && test x$sim_ac_simage_avail = xtrue])
-
-AC_CHECK_LIB(Xtst, main, [HAVE_Xtst=yes], [HAVE_Xtst=no], [$X_PRE_LIBS $X_LIBS $X_EXTRA_LIBS])
-if test x$HAVE_Xtst = xyes; then
-	XTST_CFLAGS=
-	XTST_LIBS="$X_PRE_LIBS $X_LIBS $X_EXTRA_LIBS -lXtst"
-	AC_SUBST(XTST_CFLAGS)
-	AC_SUBST(XTST_LIBS)
-else
-	WARNS="$WARNS
- ### Sorry, you lack the Xtest Extension to compile the s3d to X11 Gateway."
-fi
-AM_CONDITIONAL([BUILD_X11GATE], [test x$HAVE_Xtst = xyes])
-
-HAVE_PTHREAD
-
-AC_ARG_WITH([examples], AS_HELP_STRING([--with-examples], [build examples]), [with_examples=$withval], [with_examples=yes])
-AM_CONDITIONAL([BUILD_EXAMPLES], [test x$with_examples = xyes])
-
-AC_CONFIG_HEADER(config.h)
-AC_CONFIG_FILES([
-	Makefile
-	server/Makefile
-	client/Makefile
-	apps/Makefile
-	apps/olsrs3d/Makefile
-	apps/s3d_x11gate/Makefile
-	apps/s3dgps/Makefile
-	apps/s3dvt/Makefile
-	apps/dot_mcp/Makefile
-	example/Makefile
-	objs/Makefile])
-AC_OUTPUT
-
-echo "
---------------------------------------------------------------------------------
-$WARNS
---------------------------------------------------------------------------------
-"
-echo "now use 'make' to compile and 'make install' to install"



From ankon at berlios.de  Tue Feb 21 22:52:58 2006
From: ankon at berlios.de (ankon at berlios.de)
Date: Tue, 21 Feb 2006 22:52:58 +0100
Subject: [S3d-svn] r98 - trunk
Message-ID: <200602212152.k1LLqw5M018934@sheep.berlios.de>

Author: ankon
Date: 2006-02-21 22:52:57 +0100 (Tue, 21 Feb 2006)
New Revision: 98

Modified:
   trunk/autogen.sh
Log:
s,configure.in,configure.ac,



Modified: trunk/autogen.sh
===================================================================
--- trunk/autogen.sh	2006-02-21 21:52:28 UTC (rev 97)
+++ trunk/autogen.sh	2006-02-21 21:52:57 UTC (rev 98)
@@ -94,8 +94,8 @@
 	if [ ! -f $SRCDIR/Makefile.am ]; then
 		error "$SRCDIR/Makefile.am missing."
 	fi
-	if [ ! -f $SRCDIR/configure.in ]; then
-		error "$SRCDIR/configure.in missing."
+	if [ ! -f $SRCDIR/configure.ac ]; then
+		error "$SRCDIR/configure.ac missing."
 	fi
 
 	require_tool aclocal



From dotslash at berlios.de  Wed Feb 22 17:15:50 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Wed, 22 Feb 2006 17:15:50 +0100
Subject: [S3d-svn] r99 - in trunk: . client
Message-ID: <200602221615.k1MGFosS012821@sheep.berlios.de>

Author: dotslash
Date: 2006-02-22 17:15:38 +0100 (Wed, 22 Feb 2006)
New Revision: 99

Modified:
   trunk/
   trunk/client/io.c
Log:
 r132 at balthasar:  dotslash | 2006-02-22 17:15:32 +0100
  - fopen errors are not that important when looking through the
    search path ...
  - SIGNAL -> WITH_SIGNALS
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:130
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:132

Modified: trunk/client/io.c
===================================================================
--- trunk/client/io.c	2006-02-21 21:52:57 UTC (rev 98)
+++ trunk/client/io.c	2006-02-22 16:15:38 UTC (rev 99)
@@ -134,7 +134,7 @@
 
 	 /*  TODO: we should wait for the INIT-event here before proceeding. */
 	_queue_init();
-#ifdef SIGNAL
+#ifdef WITH_SIGNALS
     if (signal(SIGINT, (sig_t)sigint_handler) == SIG_ERR)
 		errdn(LOW,"s3d_init():signal()",errno);
     if (signal(SIGTERM, (sig_t)sigint_handler) == SIG_ERR)
@@ -192,11 +192,11 @@
 	{ errn("s3d_open_file():fseek()",errno); return(0);}*/
 
 	if ((fp = fopen(fname, "rt")) == NULL)
-	{ errn("s3d_open_file():fopen()",errno); return(-1);}
+	{ errdn(VLOW,"s3d_open_file():fopen()",errno); return(-1);}
 	if (fstat(fileno(fp),&bf))
-	{ errn("s3d_open_file():fopen()",errno); return(-1);}
+	{ errdn(VLOW,"s3d_open_file():fopen()",errno); return(-1);}
 	filesize=bf.st_size;
-	dprintf(LOW, "opening %s, filesize is %d",fname, filesize);
+	dprintf(VLOW, "opening %s, filesize is %d",fname, filesize);
 	if ((buf=malloc(filesize))==NULL)
 	{
 		errn("s3d_open_3ds_file():malloc()",errno);



From dotslash at berlios.de  Wed Feb 22 19:05:25 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Wed, 22 Feb 2006 19:05:25 +0100
Subject: [S3d-svn] r100 - in trunk: . server
Message-ID: <200602221805.k1MI5PDT014158@sheep.berlios.de>

Author: dotslash
Date: 2006-02-22 19:05:06 +0100 (Wed, 22 Feb 2006)
New Revision: 100

Modified:
   trunk/
   trunk/ChangeLog
   trunk/server/graphics.c
Log:
 r136 at balthasar:  dotslash | 2006-02-22 19:04:53 +0100
 - only select the nearest hit when clicking, not all on the line



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:132
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:136

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-22 16:15:38 UTC (rev 99)
+++ trunk/ChangeLog	2006-02-22 18:05:06 UTC (rev 100)
@@ -1,3 +1,8 @@
+2006-02-22  Simon Wunderlich - <dotslash at packetmixer.de>
+	- only select the nearest hit when clicking, not all on the line
+	- fopen errors are not that important when looking through the
+	  search path ...
+	- SIGNAL -> WITH_SIGNALS
 2006-02-20  Simon Wunderlich - <dotslash at packetmixer.de>
 	- added mplayer patch: patch your mplayer, use -vo s3d on
 	  the commandline and watch your videos in s3d in 3d space - yay

Modified: trunk/server/graphics.c
===================================================================
--- trunk/server/graphics.c	2006-02-22 16:15:38 UTC (rev 99)
+++ trunk/server/graphics.c	2006-02-22 18:05:06 UTC (rev 100)
@@ -7,6 +7,7 @@
 #include <SDL.h>	 /*  SDL_GL_SwapBuffers */
 #endif
 #include <math.h>		 /*  sin(),cos() */
+#define INFINITY 1<<30
 /*  this file handles graphics routines */
 /*  local prototypes ... */
 void render_virtual_object(struct t_obj *o);
@@ -195,6 +196,8 @@
 	int i,j;
 	GLint viewport[4];
 	GLfloat xpos,ypos;
+	float big,z1;
+	int found;
 	uint32_t mcp_o,o;
 	struct t_process *p=get_proc_by_pid(MCP);
 	GLuint select_buf[SBSIZE],*ptr,names,hits;
@@ -235,40 +238,51 @@
 	render_by_mcp();
 	glFlush();
 	hits=glRenderMode(GL_RENDER);
-	dprintf(LOW,"had %d hits",hits);
-	ptr=select_buf;
-	for (i=0;i<hits;i++)
+	if (hits>0)
 	{
-		names=*ptr;
-		dprintf(LOW,"number of names for hit = %d", names); ptr++;
-	    dprintf(LOW,"  z1 is %g;", (float) *ptr/0x7fffffff); ptr++;
-	    dprintf(LOW," z2 is %g", (float) *ptr/0x7fffffff); ptr++;
+		big=INFINITY;
+		dprintf(LOW,"had %d hits",hits);
+		ptr=select_buf;
 		mcp_o=o=-1;
-		for (j=0;j<names;j++)
+		/* check all the hits, only select the nearest ... */
+		for (i=0;i<hits;i++)
 		{
-			switch (j)
+			names=*ptr;
+			dprintf(LOW,"number of names for hit = %d", names); ptr++;
+			z1=*ptr/0x7fffffff;
+		    dprintf(LOW," z1 is %g;", (float) *ptr/0x7fffffff); ptr++;
+		    dprintf(LOW," z2 is %g", (float) *ptr/0x7fffffff); ptr++;
+			mcp_o=o=-1;
+			for (j=0;j<names;j++)
 			{
-				case 0:mcp_o=	*ptr;break;
-				case 1:o=		*ptr;break;
+				if (z1<big)
+				{
+					switch (j)
+					{
+						case 0:mcp_o=	*ptr;break;
+						case 1:o=		*ptr;break;
+					}
+				}
+				ptr++;
 			}
-			ptr++;
 		}
 		dprintf(MED,"mcp_o= %d, o= %d",mcp_o,o);
+		ptr=select_buf;
 		if (mcp_o==-1) /* it's an mcp object */
 		{
 			dprintf(MED,"clicked on mcp-object no. %d",o);
 			event_obj_click(p,o);
 		} else 
 		if ((names>1) && ((mcp_o>=0)&&(mcp_o<p->n_obj)))
-		{
+		{ /* it's an usual object */
 			dprintf(LOW,"clicked on mcp-object %d, object %d",mcp_o,o);
 			if (p->object[mcp_o]!=NULL)  /*  that shouldn't happen anyways ... */
 			{
-				obj_debug(get_proc_by_pid(p->object[mcp_o]->n_mat),o);
+				obj_debug(get_proc_by_pid(p->object[mcp_o]->n_mat),o); 
 				event_obj_click(get_proc_by_pid(p->object[mcp_o]->n_mat),o);
 			}
-		}
  	}
+	}
 	glMatrixMode(GL_PROJECTION);
 	glPopMatrix();
 	glMatrixMode(GL_MODELVIEW);



From dotslash at berlios.de  Thu Feb 23 00:51:59 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Thu, 23 Feb 2006 00:51:59 +0100
Subject: [S3d-svn] r101 - in trunk: . apps/dot_mcp client
Message-ID: <200602222351.k1MNpxLK027195@sheep.berlios.de>

Author: dotslash
Date: 2006-02-23 00:51:49 +0100 (Thu, 23 Feb 2006)
New Revision: 101

Modified:
   trunk/
   trunk/apps/dot_mcp/main.c
   trunk/client/config.h
Log:
 r138 at balthasar:  dotslash | 2006-02-23 00:51:39 +0100
 - reducing some debug output



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:136
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:138

Modified: trunk/apps/dot_mcp/main.c
===================================================================
--- trunk/apps/dot_mcp/main.c	2006-02-22 18:05:06 UTC (rev 100)
+++ trunk/apps/dot_mcp/main.c	2006-02-22 23:51:49 UTC (rev 101)
@@ -190,7 +190,7 @@
 		place_apps();
 		printf("..%s\n",a->name);
 	} else {
-		printf("updating app %d\n",a->oid);
+/*		printf("updating app %d\n",a->oid);*/
 		a->trans_x=mo->trans_x;
 		a->trans_y=mo->trans_y;
 		a->trans_z=mo->trans_z;

Modified: trunk/client/config.h
===================================================================
--- trunk/client/config.h	2006-02-22 18:05:06 UTC (rev 100)
+++ trunk/client/config.h	2006-02-22 23:51:49 UTC (rev 101)
@@ -2,6 +2,6 @@
 #define WITH_FONTCONFIG
 /* #define WITH_SIGNALS */
 /*  our level of debug messages */
-#define DEBUG			LOW	 /*  standard debug level */
+#define DEBUG			HIGH /*  standard debug level */
 #define SHM_MAX_IDLE	200	/* maximum wait for server timeout */
 #define	SEI_SS			200	/* seidel algorithm maximum point number */



From marec at berlios.de  Fri Feb 24 14:08:10 2006
From: marec at berlios.de (marec at berlios.de)
Date: Fri, 24 Feb 2006 14:08:10 +0100
Subject: [S3d-svn] r102 - trunk/apps/olsrs3d
Message-ID: <200602241308.k1OD8AWq014200@sheep.berlios.de>

Author: marec
Date: 2006-02-24 14:07:52 +0100 (Fri, 24 Feb 2006)
New Revision: 102

Modified:
   trunk/apps/olsrs3d/TODO
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/net.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
delete old/not needed vertices and olsr nodes

Modified: trunk/apps/olsrs3d/TODO
===================================================================
--- trunk/apps/olsrs3d/TODO	2006-02-22 23:51:49 UTC (rev 101)
+++ trunk/apps/olsrs3d/TODO	2006-02-24 13:07:52 UTC (rev 102)
@@ -1,4 +1,3 @@
-	delete old/not needed vertices
 	rotate text in cam-direction
 	search for vertices (text input?)
 	show link times

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-22 23:51:49 UTC (rev 101)
+++ trunk/apps/olsrs3d/main.c	2006-02-24 13:07:52 UTC (rev 102)
@@ -151,92 +151,208 @@
 
 void handle_olsr_node( struct olsr_node *olsr_node ) {
 
+	int result;   /* result of strcmp */
 	float f, distance;
 	float tmp_mov_vec[3];
+	struct olsr_node *top_olsr_node = NULL;   /* parent olsr node */
+	struct olsr_node **tmp_olsr_node;
 	struct olsr_con **olsr_con;
 	struct Obj_to_ip *Obj_to_ip_curr;
-	struct olsr_con_list *olsr_con_list;
+	struct olsr_con_list *olsr_con_list, *prev_olsr_con_list = NULL;
 
 	/* no more nodes left */
 	if ( olsr_node == NULL ) return;
 
-	/* olsr node shape has been modified */
-	if ( olsr_node->node_type_modified ) {
+	/* olsr node vanished */
+	olsr_node->last_seen--;
+	if ( olsr_node->last_seen == 0 ) {
 
-		/* delete old shape */
-		if ( olsr_node->obj_id != -1 ) {
-			/* remove element from ob2ip list */
-			lst_del( olsr_node->obj_id );
-			s3d_del_object( olsr_node->obj_id );
+		if ( Debug ) printf( "olsr node vanished: %s\n", olsr_node->ip );
+
+		/* reassign olsr childnodes if available */
+		if ( ( ( olsr_node->left != NULL ) || ( olsr_node->right != NULL ) ) && ( olsr_node->top != NULL ) ) {
+
+			/* find out to which side to attach to */
+			result = strncmp( olsr_node->ip, olsr_node->top->ip, NAMEMAX );
+
+			if ( result < 0 ) {
+
+				if ( olsr_node->left != NULL ) {
+					olsr_node->top->right = olsr_node->left;
+					olsr_node->left->top = olsr_node->top;
+				} else {
+					olsr_node->top->right = olsr_node->right;
+					olsr_node->right->top = olsr_node->top;
+				}
+
+			} else {
+
+				if ( olsr_node->left != NULL ) {
+					olsr_node->top->left = olsr_node->left;
+					olsr_node->left->top = olsr_node->top;
+				} else {
+					olsr_node->top->left = olsr_node->right;
+					olsr_node->right->top = olsr_node->top;
+				}
+
+			}
+
+			/* olsr node has two childnodes and we have to reassign both */
+			if ( ( olsr_node->left != NULL ) && ( olsr_node->right != NULL ) ) {
+
+				tmp_olsr_node = &olsr_node->left;
+
+				while ( (*tmp_olsr_node) != NULL ) {
+
+					result = strncmp( (*tmp_olsr_node)->ip, olsr_node->right->ip, NAMEMAX );
+
+					/* we found the node - should not happen ! */
+					if ( result == 0 ) break;
+
+					/* save parent olsr node for later use */
+					top_olsr_node = (*tmp_olsr_node);
+
+					/* the searched node must be in the subtree */
+					if ( result < 0 ) {
+						tmp_olsr_node = &(*tmp_olsr_node)->right;
+					} else {
+						tmp_olsr_node = &(*tmp_olsr_node)->left;
+					}
+
+				}
+
+				tmp_olsr_node = &olsr_node->right;
+				olsr_node->right->top = top_olsr_node;
+
+			}
+
 		}
 
-		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
+		if ( olsr_node->top != NULL ) {
 
-		/* create new shape */
-		if ( olsr_node->node_type == 1 ) {
-			/* olsr node offers internet access */
-			olsr_node->obj_id = s3d_clone( Olsr_node_inet_obj );
-		} else if ( olsr_node->node_type == 2 ) {
-			/* olsr node offers internet access */
-			olsr_node->obj_id = s3d_clone( Olsr_node_hna_net );
+			/* delete shape */
+			if ( olsr_node->obj_id != -1 ) {
+				/* remove element from ob2ip list */
+				lst_del( olsr_node->obj_id );
+				s3d_del_object( olsr_node->obj_id );
+			}
+
+			if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
+
+			/* free memory space */
+			free( olsr_node );
+			olsr_node = NULL;
+
 		} else {
-			/* normal olsr node */
-			olsr_node->obj_id = s3d_clone( Olsr_node_obj );
+
+			if ( Debug ) printf( "root olsr node can't be deleted: %s\n", olsr_node->ip );
+
 		}
 
-		s3d_flags_on( olsr_node->obj_id, S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
+	} else {
 
-		/* link newly created object to ZeroPoint */
-		s3d_link( olsr_node->obj_id, ZeroPoint );
-		/* add object_id and olsr_node to linked list */
-		lst_add(olsr_node->obj_id,&olsr_node);
+		/* olsr node shape has been modified */
+		if ( olsr_node->node_type_modified ) {
 
-		/* create olsr node text and attach (link) it to the node */
-		olsr_node->desc_id = s3d_draw_string( olsr_node->ip, &f );
-		s3d_link( olsr_node->desc_id, olsr_node->obj_id );
-		s3d_translate( olsr_node->desc_id, -f/2,-2,0 );
-		s3d_flags_on( olsr_node->desc_id, S3D_OF_VISIBLE );
+			/* delete old shape */
+			if ( olsr_node->obj_id != -1 ) {
+				/* remove element from ob2ip list */
+				lst_del( olsr_node->obj_id );
+				s3d_del_object( olsr_node->obj_id );
+			}
 
-		olsr_node->node_type_modified = 0;
+			if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
 
-	}
+			/* create new shape */
+			if ( olsr_node->node_type == 1 ) {
+				/* olsr node offers internet access */
+				olsr_node->obj_id = s3d_clone( Olsr_node_inet_obj );
+			} else if ( olsr_node->node_type == 2 ) {
+				/* via hna announced network */
+				olsr_node->obj_id = s3d_clone( Olsr_node_hna_net );
+			} else {
+				/* normal olsr node */
+				olsr_node->obj_id = s3d_clone( Olsr_node_obj );
+			}
 
-	/* drift away from unrelated nodes */
-	Obj_to_ip_curr = Obj_to_ip_head->next;
-	while ( Obj_to_ip_curr != Obj_to_ip_end ) {
+			s3d_flags_on( olsr_node->obj_id, S3D_OF_VISIBLE|S3D_OF_SELECTABLE);
 
-		/* myself ... */
-/* 		if ( strncmp( Obj_to_ip_curr->olsr_node->ip, olsr_node->ip, NAMEMAX ) != 0 ) {*/
+			/* link newly created object to ZeroPoint */
+			s3d_link( olsr_node->obj_id, ZeroPoint );
+			/* add object_id and olsr_node to linked list */
+			lst_add(olsr_node->obj_id,&olsr_node);
 
-			olsr_con_list = olsr_node->olsr_con_list;
-			while ( olsr_con_list != NULL ) {
+			/* create olsr node text and attach (link) it to the node */
+			olsr_node->desc_id = s3d_draw_string( olsr_node->ip, &f );
+			s3d_link( olsr_node->desc_id, olsr_node->obj_id );
+			s3d_translate( olsr_node->desc_id, -f/2,-2,0 );
+			s3d_flags_on( olsr_node->desc_id, S3D_OF_VISIBLE );
 
-				/* nodes are related */
-				if ( ( strncmp( olsr_con_list->olsr_con->left_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) || ( strncmp( olsr_con_list->olsr_con->right_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) ) break;
+			olsr_node->node_type_modified = 0;
 
-				olsr_con_list = olsr_con_list->next_olsr_con_list;
+		}
 
-			}
+		/* drift away from unrelated nodes */
+		Obj_to_ip_curr = Obj_to_ip_head->next;
+		while ( Obj_to_ip_curr != Obj_to_ip_end ) {
 
-			/* nodes are not related - so drift */
-			if ( olsr_con_list == NULL ) {
+			/* myself ... */
+/* 			if ( strncmp( Obj_to_ip_curr->olsr_node->ip, olsr_node->ip, NAMEMAX ) != 0 ) {*/
 
-				distance = dirt( olsr_node->pos_vec, Obj_to_ip_curr->olsr_node->pos_vec, tmp_mov_vec );
-				if ( distance < 0.1 ) distance = 0.1;
-				mov_add( olsr_node->mov_vec, tmp_mov_vec,-100 / ( distance * distance ) );
-				mov_add( Obj_to_ip_curr->olsr_node->mov_vec, tmp_mov_vec, 100 / ( distance * distance ) );
+				olsr_con_list = olsr_node->olsr_con_list;
+				while ( olsr_con_list != NULL ) {
 
-			}
+					/* nodes are related */
+					if ( ( olsr_con_list->olsr_con->left_olsr_node != NULL ) && ( olsr_con_list->olsr_con->right_olsr_node != NULL ) ) {
 
-			Obj_to_ip_curr = Obj_to_ip_curr->next;
+						if ( ( strncmp( olsr_con_list->olsr_con->left_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) || ( strncmp( olsr_con_list->olsr_con->right_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) ) break;
 
-/* 		} */
+						prev_olsr_con_list = olsr_con_list;
 
+					/* deleted node */
+					} else {
+
+						s3d_pop_vertex( olsr_con_list->olsr_con->obj_id, 6 );
+						s3d_pop_polygon( olsr_con_list->olsr_con->obj_id, 2 );
+						s3d_pop_material( olsr_con_list->olsr_con->obj_id, 1 );
+
+						/* delete connection list entry */
+						prev_olsr_con_list->next_olsr_con_list = olsr_con_list->next_olsr_con_list;
+
+						/* delete connection */
+						if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
+						if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
+
+						free( olsr_con_list->olsr_con );
+						free( olsr_con_list );
+
+					}
+
+					olsr_con_list = olsr_con_list->next_olsr_con_list;
+
+				}
+
+				/* nodes are not related - so drift */
+				if ( olsr_con_list == NULL ) {
+
+					distance = dirt( olsr_node->pos_vec, Obj_to_ip_curr->olsr_node->pos_vec, tmp_mov_vec );
+					if ( distance < 0.1 ) distance = 0.1;
+					mov_add( olsr_node->mov_vec, tmp_mov_vec,-100 / ( distance * distance ) );
+					mov_add( Obj_to_ip_curr->olsr_node->mov_vec, tmp_mov_vec, 100 / ( distance * distance ) );
+
+				}
+
+				Obj_to_ip_curr = Obj_to_ip_curr->next;
+
+/* 			} */
+
+		}
+
+		handle_olsr_node( olsr_node->left );
+		handle_olsr_node( olsr_node->right );
+
 	}
 
-	handle_olsr_node( olsr_node->left );
-	handle_olsr_node( olsr_node->right );
-
 }
 
 
@@ -432,7 +548,7 @@
 				{
 					gd=adj[i*max+j];
 					d=dirt(node[i].pos,node[j].pos,m);
-					if (gd==0.0)*/	/* points are not connected 
+					if (gd==0.0)*/	/* points are not connected
 					{
 					printf("distance between i and j: %f\n",d);
 						if (d<0.1) d=0.1;
@@ -449,8 +565,8 @@
 				}
 			}
 			d=dirt(node[i].pos,z,m);
-		mov_add(node[i].mov,m,d/100); * move a little bit to point zero 
-		mov_add(node[i].mov,m,1); * move a little bit to point zero 
+		mov_add(node[i].mov,m,d/100); * move a little bit to point zero
+		mov_add(node[i].mov,m,1); * move a little bit to point zero
 	}
 	/ * move it!! * /
  	for (i=0;i<max;i++)
@@ -469,7 +585,7 @@
  				s3d_push_vertex(o,node[i].pos[0],	 node[i].pos[1],node[i].pos[2]);
  				s3d_push_vertex(o,node[i].pos[0]+0.2,node[i].pos[1],node[i].pos[2]);
  				s3d_push_vertex(o,node[i].pos[0]-->id0.2,node[i].pos[1],node[i].pos[2]);
-				
+
  				s3d_push_vertex(o,node[j].pos[0],	 node[j].pos[1],node[j].pos[2]);
  				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]+0.2,node[j].pos[2]);
  				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]-0.2,node[j].pos[2]);
@@ -478,12 +594,15 @@
 				s3d_push_polygon(o,3,1,2,0);* /
  			}
  	} */
-	while (0!=(r=net_main()))
+
+	while (0!=(r=net_main())) {
 		if (r==-1)
 		{
 			s3d_quit();
 			break;
 		}
+	}
+
 	alpha=(alpha+5)%360;
 	s3d_rotate(mesh,0,alpha,0);
 	if(RotateSwitch) {

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-22 23:51:49 UTC (rev 101)
+++ trunk/apps/olsrs3d/net.c	2006-02-24 13:07:52 UTC (rev 102)
@@ -59,6 +59,7 @@
     buf[numbytes] = '\0';
 /* 	strncat(lbuf,buf,MAXLINESIZE); */
 	strncpy(lbuf,buf,MAXLINESIZE);
+	printf("nach strncpy\n");
 	process_main();
 	return(1);
 }

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-22 23:51:49 UTC (rev 101)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-24 13:07:52 UTC (rev 102)
@@ -10,6 +10,7 @@
 struct olsr_con {
 
 	struct olsr_con *next_olsr_con;   /* pointer to next connection */
+	struct olsr_con *prev_olsr_con;   /* pointer to previous connection */
 	struct olsr_node *left_olsr_node;   /* pointer to left end point of the connection */
 	struct olsr_node *right_olsr_node;   /* pointer to right end point of the connection */
 	float left_etx;   /* etx of left olsr node */
@@ -31,11 +32,13 @@
 /* we contruct a binary tree to handle the nodes */
 struct olsr_node {
 
+	struct olsr_node *top;
 	struct olsr_node *left;
 	struct olsr_node *right;
 	char ip[NAMEMAX];   /* host ip */
 	int node_type;   /* normal = 0, internet gateway = 1, via hna announced network = 2 */
 	int node_type_modified;   /* node_type modified flag */
+	int last_seen;   /* last seen counter */
 	float pos_vec[3];   /* position vector in 3d "space" */
 	float mov_vec[3];   /* move vector */
 	int obj_id;   /* id of node object in s3d */

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-22 23:51:49 UTC (rev 101)
+++ trunk/apps/olsrs3d/process.c	2006-02-24 13:07:52 UTC (rev 102)
@@ -22,6 +22,7 @@
 int add_olsr_con( struct olsr_node *con_from, struct olsr_node *con_to, float etx ) {
 
 	struct olsr_con **olsr_con = &Con_begin;
+	struct olsr_con *prev_olsr_con = NULL;   /* previous olsr connection */
 
 	while ( (*olsr_con) != NULL ) {
 
@@ -37,6 +38,9 @@
 
 		}
 
+		/* save previous olsr connection for later use */
+		prev_olsr_con = (*olsr_con);
+
 		olsr_con = &(*olsr_con)->next_olsr_con;
 
 	}
@@ -78,6 +82,7 @@
 		}
 
 		(*olsr_con)->next_olsr_con = NULL;
+		(*olsr_con)->prev_olsr_con = prev_olsr_con;
 
 		/* add new olsr connection to olsr nodes in order to access the connection from the olsr node */
 		struct olsr_con_list **olsr_con_list = &(*olsr_con)->left_olsr_node->olsr_con_list;
@@ -188,14 +193,21 @@
 void *get_olsr_node( struct olsr_node **olsr_node, char *ip ) {
 
 	int result;   /* result of strcmp */
+	struct olsr_node *top_olsr_node = NULL;   /* parent olsr node */
 
 	while ( (*olsr_node) != NULL ) {
 
 		result = strncmp( (*olsr_node)->ip, ip, NAMEMAX );
 
 		/* we found the node */
-		if ( result == 0 ) return (*olsr_node);
+		if ( result == 0 ) {
+			(*olsr_node)->last_seen = 20;
+			return (*olsr_node);
+		}
 
+		/* save parent olsr node for later use */
+		top_olsr_node = (*olsr_node);
+
 		/* the searched node must be in the subtree */
 		if ( result < 0 ) {
 			olsr_node = &(*olsr_node)->right;
@@ -211,12 +223,17 @@
 		(*olsr_node) = malloc( sizeof( struct olsr_node ) );
 		if ( (*olsr_node) == NULL ) out_of_mem();
 
+		(*olsr_node)->top = top_olsr_node;
 		(*olsr_node)->left = NULL;
 		(*olsr_node)->right = NULL;
+
 		strncpy( (*olsr_node)->ip, ip, NAMEMAX );
+
 		(*olsr_node)->node_type = 0;
 		(*olsr_node)->node_type_modified = 1;
 
+		(*olsr_node)->last_seen = 20;
+
 		if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
 
 		(*olsr_node)->pos_vec[0] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
@@ -433,7 +450,7 @@
  				olsr_node2 = get_olsr_node( &Olsr_root, con_to );
 
  				if ( olsr_node2->node_type != 2 ) {
-						
+
  					olsr_node2->node_type = 2;
  					olsr_node2->node_type_modified = 1;
  					if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
@@ -494,7 +511,7 @@
 
 	while ( (*lbuf_ptr) != '\0' ) {
 
-/* 		printf( "%c",(*lbuf_ptr) ); */
+		/* printf( "%c",(*lbuf_ptr) ); */
 
 		if ( (*lbuf_ptr) == '\n' ) {
 



From nichtsnutz at berlios.de  Fri Feb 24 16:41:20 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Fri, 24 Feb 2006 16:41:20 +0100
Subject: [S3d-svn] r103 - trunk/apps/olsrs3d
Message-ID: <200602241541.k1OFfKfb032339@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-24 16:40:24 +0100 (Fri, 24 Feb 2006)
New Revision: 103

Modified:
   trunk/apps/olsrs3d/net.c
Log:
format and remove comment

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-24 13:07:52 UTC (rev 102)
+++ trunk/apps/olsrs3d/net.c	2006-02-24 15:40:24 UTC (rev 103)
@@ -45,21 +45,20 @@
 }
 int net_main()
 {
-    if ((numbytes=recv(sockfd, buf, MAXDATASIZE-1, 0)) == -1) {
+	if ((numbytes=recv(sockfd, buf, MAXDATASIZE-1, 0)) == -1) {
 		if (errno==EAGAIN)
 			return(0); /* well, that's okay ... */
-        perror("recv");
-        return(-1);
-    }
+		perror("recv");
+		return(-1);
+	}
 	if (numbytes==0)
 	{
 		printf("connection reset\n");
 		return(-1);
 	}
-    buf[numbytes] = '\0';
-/* 	strncat(lbuf,buf,MAXLINESIZE); */
+	buf[numbytes] = '\0';
+ 	/*strncat(lbuf,buf,MAXLINESIZE);*/
 	strncpy(lbuf,buf,MAXLINESIZE);
-	printf("nach strncpy\n");
 	process_main();
 	return(1);
 }



From nichtsnutz at berlios.de  Fri Feb 24 16:51:05 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Fri, 24 Feb 2006 16:51:05 +0100
Subject: [S3d-svn] r104 - trunk/apps/olsrs3d
Message-ID: <200602241551.k1OFp5kc001270@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-24 16:51:03 +0100 (Fri, 24 Feb 2006)
New Revision: 104

Modified:
   trunk/apps/olsrs3d/process.c
Log:
add debug output, the bug is in get_olsr_node

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-24 15:40:24 UTC (rev 103)
+++ trunk/apps/olsrs3d/process.c	2006-02-24 15:51:03 UTC (rev 104)
@@ -500,13 +500,15 @@
  }
 */
 int process_main() {
-
+	static int cnt = 0;
+	cnt++;
+	printf("%d. call process_main\n",cnt);
 	int dn;
 	float f;
 	char *lbuf_ptr, *con_from, *con_to, *etx;
 	struct olsr_node *olsr_node1;   /* pointer to olsr nodes */
 	struct olsr_node *olsr_node2;
-
+	
 	lbuf_ptr = lbuf;
 
 	while ( (*lbuf_ptr) != '\0' ) {
@@ -581,7 +583,9 @@
 				} else {
 
 					olsr_node1 = get_olsr_node( &Olsr_root, con_from );
+					printf("before %s Line %d\n",__FILE__,__LINE__);
 					olsr_node2 = get_olsr_node( &Olsr_root, con_to );
+					printf("behind %s Line %d\n",__FILE__,__LINE__);
 					f=10.0+strtod(etx,NULL)/10.0;
 					if (f>=5) add_olsr_con( olsr_node1, olsr_node2, f );   /* just to prevent ascii to float converting inconsistency ... */
 
@@ -597,7 +601,7 @@
 		lbuf_ptr++;
 
 	}
-
+	printf("exit %d. call process_main\n",cnt);
 	return(0);
 
 }



From nichtsnutz at berlios.de  Fri Feb 24 18:44:15 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Fri, 24 Feb 2006 18:44:15 +0100
Subject: [S3d-svn] r105 - trunk/apps/olsrs3d
Message-ID: <200602241744.k1OHiFUq002029@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-24 18:44:10 +0100 (Fri, 24 Feb 2006)
New Revision: 105

Modified:
   trunk/apps/olsrs3d/net.c
   trunk/apps/olsrs3d/process.c
Log:
undo changes

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-24 15:51:03 UTC (rev 104)
+++ trunk/apps/olsrs3d/net.c	2006-02-24 17:44:10 UTC (rev 105)
@@ -59,6 +59,7 @@
 	buf[numbytes] = '\0';
  	/*strncat(lbuf,buf,MAXLINESIZE);*/
 	strncpy(lbuf,buf,MAXLINESIZE);
+	printf("nach strncpy\n");
 	process_main();
 	return(1);
 }

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-24 15:51:03 UTC (rev 104)
+++ trunk/apps/olsrs3d/process.c	2006-02-24 17:44:10 UTC (rev 105)
@@ -500,9 +500,7 @@
  }
 */
 int process_main() {
-	static int cnt = 0;
-	cnt++;
-	printf("%d. call process_main\n",cnt);
+
 	int dn;
 	float f;
 	char *lbuf_ptr, *con_from, *con_to, *etx;
@@ -583,9 +581,7 @@
 				} else {
 
 					olsr_node1 = get_olsr_node( &Olsr_root, con_from );
-					printf("before %s Line %d\n",__FILE__,__LINE__);
 					olsr_node2 = get_olsr_node( &Olsr_root, con_to );
-					printf("behind %s Line %d\n",__FILE__,__LINE__);
 					f=10.0+strtod(etx,NULL)/10.0;
 					if (f>=5) add_olsr_con( olsr_node1, olsr_node2, f );   /* just to prevent ascii to float converting inconsistency ... */
 
@@ -601,7 +597,7 @@
 		lbuf_ptr++;
 
 	}
-	printf("exit %d. call process_main\n",cnt);
+
 	return(0);
 
 }



From marec at berlios.de  Sat Feb 25 10:29:54 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sat, 25 Feb 2006 10:29:54 +0100
Subject: [S3d-svn] r106 - trunk/apps/olsrs3d
Message-ID: <200602250929.k1P9TsJD002153@sheep.berlios.de>

Author: marec
Date: 2006-02-25 10:29:50 +0100 (Sat, 25 Feb 2006)
New Revision: 106

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/net.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
parse line redone fixed II

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-24 17:44:10 UTC (rev 105)
+++ trunk/apps/olsrs3d/main.c	2006-02-25 09:29:50 UTC (rev 106)
@@ -16,6 +16,8 @@
 struct olsr_node *Olsr_root = NULL;   /* top of olsr node tree */
 struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end, *List_ptr;   /* needed pointer for linked list */
 
+int Byte_count;
+
 int node_count=-1;
 int alpha=0;
 int Olsr_node_obj, Olsr_node_inet_obj, Olsr_node_hna_net, mesh;
@@ -519,18 +521,12 @@
 
 
 
-void mainloop()
-{
-	int i,j,o,r;
-	float d,gd,f,m[3];
-	float z[3]={0,0,0};
-/* 	for (i=0;i<max;i++)
- 	{
- 		node[i].mov[0]=
- 		node[i].mov[1]=
- 		node[i].mov[2]=0.0;
- 	} */
+void mainloop() {
 
+	int net_result;   /* result of function net_main */
+
+	Byte_count = 0;
+
 	/* calculate new movement vector */
 	calc_olsr_node_mov();
 
@@ -540,64 +536,8 @@
 	/* move it */
 	move_olsr_nodes();
 
-	/*	for (i=0;i<max;i++)
-		{
-			for (j=i+1;j<max;j++)
-			{
-				if (i!=j)
-				{
-					gd=adj[i*max+j];
-					d=dirt(node[i].pos,node[j].pos,m);
-					if (gd==0.0)*/	/* points are not connected
-					{
-					printf("distance between i and j: %f\n",d);
-						if (d<0.1) d=0.1;
-						mov_add(node[j].mov,m,100/(d*d));
-						mov_add(node[i].mov,m,-100/(d*d));
-					} else { / * connected!! * /
-
-						f=(gd)/d;
-						if (f<0.3) f=0.3;
-						mov_add(node[i].mov,m,1/f-1);
-						mov_add(node[j].mov,m,-(1/f-1));
-					printf("distance between %d and %d: %f / %f = %f\n",i,j,gd,d,f);
-					}
-				}
-			}
-			d=dirt(node[i].pos,z,m);
-		mov_add(node[i].mov,m,d/100); * move a little bit to point zero
-		mov_add(node[i].mov,m,1); * move a little bit to point zero
-	}
-	/ * move it!! * /
- 	for (i=0;i<max;i++)
- 	{
-/ *		printf("applying move vector for point %d: %f:%f:%f\n",i,node[i].mov[0],node[i].mov[1],node[i].mov[2]); * /
- 		if ((d=dist(node[i].mov,z))>10.0)
- 			mov_add(node[i].pos,node[i].mov,1.0/((float )d)); / * normalize * /
- 		else
- 			mov_add(node[i].pos,node[i].mov,0.1);
- 		s3d_translate(node[i].obj,node[i].pos[0],node[i].pos[1],node[i].pos[2]);
- 		for (j=i+1;j<max;j++)
- 			if ((o=adj_obj[max*i+j])!=-1)
- 			{
- 				s3d_pop_vertex(o,6);
-/ *				s3d_pop_polygon(o,2);* /
- 				s3d_push_vertex(o,node[i].pos[0],	 node[i].pos[1],node[i].pos[2]);
- 				s3d_push_vertex(o,node[i].pos[0]+0.2,node[i].pos[1],node[i].pos[2]);
- 				s3d_push_vertex(o,node[i].pos[0]-->id0.2,node[i].pos[1],node[i].pos[2]);
-
- 				s3d_push_vertex(o,node[j].pos[0],	 node[j].pos[1],node[j].pos[2]);
- 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]+0.2,node[j].pos[2]);
- 				s3d_push_vertex(o,node[j].pos[0],node[j].pos[1]-0.2,node[j].pos[2]);
-
-/ *				s3d_push_polygon(o,0,4,5,0);
-				s3d_push_polygon(o,3,1,2,0);* /
- 			}
- 	} */
-
-	while (0!=(r=net_main())) {
-		if (r==-1)
-		{
+	while ( 0!= ( net_result = net_main() ) ) {
+		if ( net_result == -1 ) {
 			s3d_quit();
 			break;
 		}
@@ -612,6 +552,7 @@
 	usleep(100000);
 /*	sleep(1);*/
 	return;
+
 }
 
 void stop()

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-24 17:44:10 UTC (rev 105)
+++ trunk/apps/olsrs3d/net.c	2006-02-25 09:29:50 UTC (rev 106)
@@ -43,26 +43,35 @@
 	fcntl(sockfd,F_SETFL, O_NONBLOCK);
 	return(0);
 }
-int net_main()
-{
+
+int net_main() {
+
 	if ((numbytes=recv(sockfd, buf, MAXDATASIZE-1, 0)) == -1) {
 		if (errno==EAGAIN)
 			return(0); /* well, that's okay ... */
 		perror("recv");
 		return(-1);
 	}
-	if (numbytes==0)
-	{
+
+	if (numbytes==0) {
 		printf("connection reset\n");
 		return(-1);
 	}
+
 	buf[numbytes] = '\0';
- 	/*strncat(lbuf,buf,MAXLINESIZE);*/
-	strncpy(lbuf,buf,MAXLINESIZE);
-	printf("nach strncpy\n");
+ 	strncat(lbuf,buf,MAXLINESIZE);
+// 	printf( "lbuf: %s\n", lbuf );
+
 	process_main();
-	return(1);
+
+	if ( Byte_count += numbytes > 1000 ) {
+		return(0);   /* continue mainloop */
+	} else {
+		return(1);   /* continue reading data from socket */
+	}
+
 }
+
 int net_quit()
 {
     close(sockfd);

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-24 17:44:10 UTC (rev 105)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-25 09:29:50 UTC (rev 106)
@@ -63,16 +63,20 @@
 extern struct olsr_node *Olsr_root;   /* top of olsr node tree */
 extern struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end,*List_ptr;   /* struct list */
 
+extern int	Olsr_node_obj;
+extern int	Olsr_node_inet_obj;
+extern int	Olsr_node_hna_net;
+
+extern int Byte_count;
+extern int ZeroPoint;
+
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;
-extern int	Olsr_node_obj;
-extern int	Olsr_node_inet_obj;
-extern int	Olsr_node_hna_net;
 extern int	node_count;
 extern float 	bottom,left;
-extern int ZeroPoint;
 
+
 struct t_node 	*node;
 #define MAXLINESIZE 1000 /* lines in a digraph just shouldn't get that longer ... */
 #define MAXDATASIZE 100 /* max number of bytes we can get at once  */

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-24 17:44:10 UTC (rev 105)
+++ trunk/apps/olsrs3d/process.c	2006-02-25 09:29:50 UTC (rev 106)
@@ -503,19 +503,24 @@
 
 	int dn;
 	float f;
-	char *lbuf_ptr, *con_from, *con_to, *etx;
+	char *lbuf_ptr, *last_cr_ptr, *con_from, *con_from_end, *con_to, *con_to_end, *etx, *etx_end;
 	struct olsr_node *olsr_node1;   /* pointer to olsr nodes */
 	struct olsr_node *olsr_node2;
-	
+
 	lbuf_ptr = lbuf;
+	last_cr_ptr = NULL;
 
+	con_from = con_from_end = con_to = con_to_end = etx = etx_end = NULL;
+	dn = 0;
+
 	while ( (*lbuf_ptr) != '\0' ) {
 
 		/* printf( "%c",(*lbuf_ptr) ); */
 
 		if ( (*lbuf_ptr) == '\n' ) {
 
-			con_from = con_to = etx = NULL;
+			last_cr_ptr = lbuf_ptr;
+			con_from = con_from_end = con_to = con_to_end = etx = etx_end = NULL;
 			dn = 0;
 
 		}
@@ -527,22 +532,31 @@
 				case 0:
 					con_from = ++lbuf_ptr;
 					break;
+				case 1:
+					con_from_end = lbuf_ptr;
+					break;
 				case 2:
 					con_to = ++lbuf_ptr;
 					break;
+				case 3:
+					con_to_end = lbuf_ptr;
+					break;
 				case 4:
 					etx = ++lbuf_ptr;
 					break;
-				default:
-					(*lbuf_ptr) = '\0';   /* string terminator!! */
+				case 5:
+					etx_end = lbuf_ptr;
 					break;
 
 			}
 
 			if ( ++dn == 6 ) {
 
-/* 				printf( "con_from: %s, con_to: %s, etx: %s\n", con_from, con_to, etx ); */
+				/* terminate strings - but not before 6 '"' */
+				(*con_from_end) = (*con_to_end) = (*etx_end) = '\0';
 
+// 				printf( "dn: %i, con_from: %s, con_to: %s, etx: %s\n", dn, con_from, con_to, etx );
+
 				/* announced network via HNA */
 				if ( strncmp( etx, "HNA", NAMEMAX ) == 0 ) {
 
@@ -587,8 +601,9 @@
 
 				}
 
-				con_from = con_to = etx = NULL;
+				con_from = con_from_end = con_to = con_to_end = etx = etx_end = NULL;
 				dn = 0;
+				last_cr_ptr = lbuf_ptr;
 
 			}
 
@@ -598,6 +613,8 @@
 
 	}
 
+	if ( last_cr_ptr != NULL ) memmove( lbuf, ++last_cr_ptr, strlen( last_cr_ptr) );
+
 	return(0);
 
 }



From marec at berlios.de  Sat Feb 25 13:24:59 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sat, 25 Feb 2006 13:24:59 +0100
Subject: [S3d-svn] r107 - trunk/apps/olsrs3d
Message-ID: <200602251224.k1PCOx9o015615@sheep.berlios.de>

Author: marec
Date: 2006-02-25 13:24:55 +0100 (Sat, 25 Feb 2006)
New Revision: 107

Added:
   trunk/apps/olsrs3d/data_structure.xmi
Log:
internal data structure uml added - made with umbrello

Added: trunk/apps/olsrs3d/data_structure.xmi
===================================================================
--- trunk/apps/olsrs3d/data_structure.xmi	2006-02-25 09:29:50 UTC (rev 106)
+++ trunk/apps/olsrs3d/data_structure.xmi	2006-02-25 12:24:55 UTC (rev 107)
@@ -0,0 +1,10587 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-25T13:22:32" xmi.version="1.2" >
+ <XMI.header>
+  <XMI.documentation>
+   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
+   <XMI.exporterVersion>1.4.2</XMI.exporterVersion>
+   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
+  </XMI.documentation>
+  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
+ </XMI.header>
+ <XMI.content>
+  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" >
+   <UML:Namespace.ownedElement>
+    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="788" isRoot="false" isAbstract="false" name="Datentyp" />
+    <UML:DataType stereotype="788" isSpecification="false" isLeaf="false" visibility="public" xmi.id="787" isRoot="false" isAbstract="false" name="int" />
+    <UML:DataType stereotype="788" isSpecification="false" isLeaf="false" visibility="public" xmi.id="789" isRoot="false" isAbstract="false" name="char" />
+    <UML:DataType stereotype="788" isSpecification="false" isLeaf="false" visibility="public" xmi.id="790" isRoot="false" isAbstract="false" name="bool" />
+    <UML:DataType stereotype="788" isSpecification="false" isLeaf="false" visibility="public" xmi.id="791" isRoot="false" isAbstract="false" name="float" />
+    <UML:DataType stereotype="788" isSpecification="false" isLeaf="false" visibility="public" xmi.id="792" isRoot="false" isAbstract="false" name="double" />
+    <UML:DataType stereotype="788" isSpecification="false" isLeaf="false" visibility="public" xmi.id="793" isRoot="false" isAbstract="false" name="long" />
+    <UML:DataType stereotype="788" isSpecification="false" isLeaf="false" visibility="public" xmi.id="794" isRoot="false" isAbstract="false" name="short" />
+    <UML:DataType stereotype="788" isSpecification="false" isLeaf="false" visibility="public" xmi.id="795" isRoot="false" isAbstract="false" name="string" />
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="800" isRoot="false" isAbstract="false" name="olsr_node - 104.130.1.1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="801" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="802" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="824" isRoot="false" initialValue="104.131.1.1" type="825" isAbstract="false" name="top" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="862" isRoot="false" initialValue="104.129.1.1" type="825" isAbstract="false" name="left" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="864" isRoot="false" initialValue="104.130.1.99" type="825" isAbstract="false" name="right" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="803" isRoot="false" isAbstract="false" name="olsr_node - 104.131.1.1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="804" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="805" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="826" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="top" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="827" isRoot="false" initialValue="104.130.1.1" type="825" isAbstract="false" name="left" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="828" isRoot="false" initialValue="104.132.1.1" type="825" isAbstract="false" name="right" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="806" isRoot="false" isAbstract="false" name="olsr_node - 104.132.1.1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="807" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="808" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="829" isRoot="false" initialValue="104.131.1.1" type="825" isAbstract="false" name="top" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="860" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="861" isRoot="false" initialValue="104.133.1.1" type="825" isAbstract="false" name="right" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="825" isRoot="false" isAbstract="false" name="olsr_node" />
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="830" isRoot="false" isAbstract="false" name="olsr_node - 104.129.1.1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="832" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="833" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="834" isRoot="false" initialValue="104.130.1.1" type="825" isAbstract="false" name="top" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="835" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="836" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="right" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="831" isRoot="false" isAbstract="false" name="olsr_node - 104.130.1.99" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="837" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="838" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="839" isRoot="false" initialValue="104.130.1.1" type="825" isAbstract="false" name="top" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="840" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="841" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="right" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="854" isRoot="false" isAbstract="false" name="olsr_node - 104.133.1.1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="855" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="856" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="857" isRoot="false" initialValue="104.132.1.1" type="825" isAbstract="false" name="top" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="858" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="859" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="right" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="871" isRoot="false" isAbstract="false" name="olsr_con - 104.131.1.1:104.129.1.1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="896" isRoot="false" initialValue="104.131.1.1:104.130.1.1" type="897" isAbstract="false" name="next_olsr_con" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="898" isRoot="false" initialValue="NULL" type="897" isAbstract="false" name="prev_olsr_con" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="874" isRoot="false" initialValue="104.131.1.1" type="825" isAbstract="false" name="left_olsr_node" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="875" isRoot="false" initialValue="104.129.1.1" type="825" isAbstract="false" name="right_olsr_node" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="882" isRoot="false" isAbstract="false" name="olsr_con - 104.131.1.1:104.130.1.1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="899" isRoot="false" initialValue="104.132.1.1:104.133.1.1" type="897" isAbstract="false" name="next_olsr_con" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="900" isRoot="false" initialValue="104.131.1.1:104.129.1.1" type="897" isAbstract="false" name="prev_olsr_con" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="901" isRoot="false" initialValue="104.131.1.1" type="825" isAbstract="false" name="left_olsr_node" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="902" isRoot="false" initialValue="104.130.1.1" type="825" isAbstract="false" name="right_olsr_node" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="897" isRoot="false" isAbstract="false" name="olsr_con" />
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="915" isRoot="false" isAbstract="false" name="olsr_con - 104.132.1.1:104.133.1.1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="916" isRoot="false" initialValue="NULL" type="897" isAbstract="false" name="next_olsr_con" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="917" isRoot="false" initialValue="104.131.1.1:104.130.1.1" type="897" isAbstract="false" name="prev_olsr_con" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="918" isRoot="false" initialValue="104.132.1.1" type="825" isAbstract="false" name="left_olsr_node" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="919" isRoot="false" initialValue="104.133.1.1" type="825" isAbstract="false" name="right_olsr_node" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="809" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="810" aggregation="none" type="803" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="811" aggregation="none" type="800" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="812" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="813" aggregation="none" type="803" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="814" aggregation="none" type="806" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="815" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="816" aggregation="none" type="806" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="817" aggregation="none" type="803" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="818" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="819" aggregation="none" type="800" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="820" aggregation="none" type="803" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="842" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="843" aggregation="none" type="800" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="844" aggregation="none" type="830" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="845" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="846" aggregation="none" type="800" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="847" aggregation="none" type="831" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="848" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="849" aggregation="none" type="831" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="850" aggregation="none" type="800" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="851" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="852" aggregation="none" type="830" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="853" aggregation="none" type="800" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="865" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="866" aggregation="none" type="806" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="867" aggregation="none" type="854" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="868" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="869" aggregation="none" type="854" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="870" aggregation="none" type="806" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="879" client="871" name="" supplier="830" />
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="893" client="871" name="" supplier="803" />
+    <UML:Association isSpecification="false" visibility="public" xmi.id="903" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="904" aggregation="none" type="871" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="905" aggregation="none" type="882" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="906" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="907" aggregation="none" type="882" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="908" aggregation="none" type="871" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="909" client="882" name="" supplier="803" />
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="912" client="882" name="" supplier="800" />
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="920" client="915" name="" supplier="806" />
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="923" client="915" name="" supplier="854" />
+    <UML:Association isSpecification="false" visibility="public" xmi.id="926" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="927" aggregation="none" type="882" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="928" aggregation="none" type="915" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="929" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="930" aggregation="none" type="915" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="931" aggregation="none" type="882" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+   </UML:Namespace.ownedElement>
+  </UML:Model>
+ </XMI.content>
+ <XMI.extensions xmi.extender="umbrello" >
+  <docsettings viewid="786" documentation="" uniqueid="931" />
+  <diagrams>
+   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="75" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1497" snapy="10" showatts="1" xmi.id="786" documentation="" type="402" showops="1" showpackage="0" name="Klassendiagramm" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1064" >
+    <widgets>
+     <classwidget usesdiagramfillcolour="0" width="187" showattsigs="601" usesdiagramusefillcolour="0" x="329" linecolour="#ff0000" y="509" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="800" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="496" linecolour="#ff0000" y="325" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="803" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="690" linecolour="#ff0000" y="505" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="806" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="172" showattsigs="601" usesdiagramusefillcolour="0" x="205" linecolour="#ff0000" y="705" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="830" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="172" showattsigs="601" usesdiagramusefillcolour="0" x="462" linecolour="#ff0000" y="706" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="831" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="172" showattsigs="601" usesdiagramusefillcolour="0" x="843" linecolour="#ff0000" y="694" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="854" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="31" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="871" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="414" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="882" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="825" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="915" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+    </widgets>
+    <messages/>
+    <associations>
+     <assocwidget totalcounta="5" indexa="1" totalcountb="4" indexb="2" widgetbid="800" widgetaid="803" xmi.id="809" >
+      <linepath>
+       <startpoint startx="532" starty="416" />
+       <endpoint endx="422" endy="509" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="5" indexa="3" totalcountb="4" indexb="1" widgetbid="806" widgetaid="803" xmi.id="812" >
+      <linepath>
+       <startpoint startx="604" starty="416" />
+       <endpoint endx="735" endy="505" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="4" indexa="2" totalcountb="5" indexb="4" widgetbid="803" widgetaid="806" xmi.id="815" >
+      <linepath>
+       <startpoint startx="780" starty="505" />
+       <endpoint endx="640" endy="416" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="4" indexa="3" totalcountb="5" indexb="2" widgetbid="803" widgetaid="800" xmi.id="818" >
+      <linepath>
+       <startpoint startx="469" starty="509" />
+       <endpoint endx="568" endy="416" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="5" indexa="1" totalcountb="4" indexb="2" widgetbid="830" widgetaid="800" xmi.id="842" >
+      <linepath>
+       <startpoint startx="366" starty="600" />
+       <endpoint endx="291" endy="705" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="5" indexa="3" totalcountb="3" indexb="1" widgetbid="831" widgetaid="800" xmi.id="845" >
+      <linepath>
+       <startpoint startx="441" starty="600" />
+       <endpoint endx="519" endy="706" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="5" indexb="4" widgetbid="800" widgetaid="831" xmi.id="848" >
+      <linepath>
+       <startpoint startx="576" starty="706" />
+       <endpoint endx="478" endy="600" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="4" indexa="3" totalcountb="5" indexb="2" widgetbid="800" widgetaid="830" xmi.id="851" >
+      <linepath>
+       <startpoint startx="334" starty="705" />
+       <endpoint endx="403" endy="600" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="854" widgetaid="806" xmi.id="865" >
+      <linepath>
+       <startpoint startx="750" starty="596" />
+       <endpoint endx="886" endy="694" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="4" indexa="2" totalcountb="3" indexb="2" widgetbid="806" widgetaid="854" xmi.id="868" >
+      <linepath>
+       <startpoint startx="929" starty="694" />
+       <endpoint endx="810" endy="596" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="830" widgetaid="871" xmi.id="879" >
+      <linepath>
+       <startpoint startx="129" starty="163" />
+       <endpoint endx="248" endy="705" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" widgetbid="803" widgetaid="871" xmi.id="893" >
+      <linepath>
+       <startpoint startx="227" starty="163" />
+       <endpoint endx="556" endy="325" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="882" widgetaid="871" xmi.id="903" >
+      <linepath>
+       <startpoint startx="325" starty="111" />
+       <endpoint endx="414" endy="111" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="871" widgetaid="882" xmi.id="906" >
+      <linepath>
+       <startpoint startx="414" starty="137" />
+       <endpoint endx="325" endy="137" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="803" widgetaid="882" xmi.id="909" >
+      <linepath>
+       <startpoint startx="610" starty="163" />
+       <endpoint endx="616" endy="325" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="800" widgetaid="882" xmi.id="912" >
+      <linepath>
+       <startpoint startx="512" starty="163" />
+       <endpoint endx="375" endy="509" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="3" widgetbid="806" widgetaid="915" xmi.id="920" >
+      <linepath>
+       <startpoint startx="923" starty="163" />
+       <endpoint endx="825" endy="505" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="4" indexb="3" widgetbid="854" widgetaid="915" xmi.id="923" >
+      <linepath>
+       <startpoint startx="1021" starty="163" />
+       <endpoint endx="972" endy="694" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="915" widgetaid="882" xmi.id="926" >
+      <linepath>
+       <startpoint startx="708" starty="111" />
+       <endpoint endx="825" endy="111" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="882" widgetaid="915" xmi.id="929" >
+      <linepath>
+       <startpoint startx="825" starty="137" />
+       <endpoint endx="708" endy="137" />
+      </linepath>
+     </assocwidget>
+    </associations>
+   </diagram>
+  </diagrams>
+  <listview>
+   <listitem open="1" type="800" label="Ansichten" >
+    <listitem open="1" type="801" label="Logische Ansicht" >
+     <listitem open="1" type="813" id="897" />
+     <listitem open="1" type="813" id="871" >
+      <listitem open="0" type="814" id="896" />
+      <listitem open="0" type="814" id="898" />
+      <listitem open="0" type="814" id="874" />
+      <listitem open="0" type="814" id="875" />
+     </listitem>
+     <listitem open="1" type="813" id="882" >
+      <listitem open="0" type="814" id="899" />
+      <listitem open="0" type="814" id="900" />
+      <listitem open="0" type="814" id="901" />
+      <listitem open="0" type="814" id="902" />
+     </listitem>
+     <listitem open="1" type="813" id="915" >
+      <listitem open="0" type="814" id="916" />
+      <listitem open="0" type="814" id="917" />
+      <listitem open="0" type="814" id="918" />
+      <listitem open="0" type="814" id="919" />
+     </listitem>
+     <listitem open="1" type="813" id="825" />
+     <listitem open="1" type="813" id="830" >
+      <listitem open="0" type="814" id="832" />
+      <listitem open="0" type="814" id="833" />
+      <listitem open="0" type="814" id="834" />
+      <listitem open="0" type="814" id="835" />
+      <listitem open="0" type="814" id="836" />
+     </listitem>
+     <listitem open="1" type="813" id="800" >
+      <listitem open="0" type="814" id="801" />
+      <listitem open="0" type="814" id="802" />
+      <listitem open="0" type="814" id="824" />
+      <listitem open="0" type="814" id="862" />
+      <listitem open="0" type="814" id="864" />
+     </listitem>
+     <listitem open="1" type="813" id="831" >
+      <listitem open="0" type="814" id="837" />
+      <listitem open="0" type="814" id="838" />
+      <listitem open="0" type="814" id="839" />
+      <listitem open="0" type="814" id="840" />
+      <listitem open="0" type="814" id="841" />
+     </listitem>
+     <listitem open="1" type="813" id="803" >
+      <listitem open="0" type="814" id="804" />
+      <listitem open="0" type="814" id="805" />
+      <listitem open="0" type="814" id="826" />
+      <listitem open="0" type="814" id="827" />
+      <listitem open="0" type="814" id="828" />
+     </listitem>
+     <listitem open="1" type="813" id="806" >
+      <listitem open="0" type="814" id="807" />
+      <listitem open="0" type="814" id="808" />
+      <listitem open="0" type="814" id="829" />
+      <listitem open="0" type="814" id="860" />
+      <listitem open="0" type="814" id="861" />
+     </listitem>
+     <listitem open="1" type="813" id="854" >
+      <listitem open="0" type="814" id="855" />
+      <listitem open="0" type="814" id="856" />
+      <listitem open="0" type="814" id="857" />
+      <listitem open="0" type="814" id="858" />
+      <listitem open="0" type="814" id="859" />
+     </listitem>
+     <listitem open="0" type="830" label="Datentypen" >
+      <listitem open="1" type="829" id="790" />
+      <listitem open="1" type="829" id="789" />
+      <listitem open="1" type="829" id="792" />
+      <listitem open="1" type="829" id="791" />
+      <listitem open="1" type="829" id="787" />
+      <listitem open="1" type="829" id="793" />
+      <listitem open="1" type="829" id="794" />
+      <listitem open="1" type="829" id="795" />
+     </listitem>
+    </listitem>
+    <listitem open="1" type="802" label="Anwendungsfallansicht" />
+    <listitem open="1" type="821" label="Komponentenansicht" />
+    <listitem open="1" type="827" label="Verteilungsansicht" />
+    <listitem open="1" type="836" label="Entity Relationship Modell" />
+   </listitem>
+  </listview>
+  <codegeneration>
+   <codegenerator language="Cpp" >
+    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
+     <textblocks/>
+     <header>
+      <codecomment tag="" />
+     </header>
+    </codedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="787" parent_class="787" fileExt=".cpp" fileName="int" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;int.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			int.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fil!
 e &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="789" parent_class="789" fileExt=".cpp" fileName="char" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;char.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			char.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="790" parent_class="790" fileExt=".cpp" fileName="bool" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;bool.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			bool.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="791" parent_class="791" fileExt=".cpp" fileName="float" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;float.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			float.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="792" parent_class="792" fileExt=".cpp" fileName="double" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;double.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			double.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the !
 file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="793" parent_class="793" fileExt=".cpp" fileName="long" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;long.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			long.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="794" parent_class="794" fileExt=".cpp" fileName="short" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;short.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			short.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="795" parent_class="795" fileExt=".cpp" fileName="string" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;string.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the !
 file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:28:08&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="800" parent_class="800" fileExt=".cpp" fileName="olsr_node - 104.130.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" classfield_id="801" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_1" canDelete="false" classfield_id="801" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_2" canDelete="false" classfield_id="802" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_3" canDelete="false" classfield_id="802" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="824" tag="hblock_tag_9" canDelete="false" classfield_id="824" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="824" tag="hblock_tag_10" canDelete="false" classfield_id="824" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_11" canDelete="false" classfield_id="862" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_12" canDelete="false" classfield_id="862" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_13" canDelete="false" classfield_id="864" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_14" canDelete="false" classfield_id="864" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:03&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="801" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" classfield_id="801" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_1" canDelete="false" classfield_id="801" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="802" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="802" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_2" canDelete="false" classfield_id="802" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_3" canDelete="false" classfield_id="802" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="809" field_type="49" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="818" field_type="23" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="824" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="824" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="824" tag="hblock_tag_9" canDelete="false" classfield_id="824" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="824" tag="hblock_tag_10" canDelete="false" classfield_id="824" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="842" field_type="6144" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="845" field_type="6553645" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="848" field_type="48" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="851" field_type="35" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="862" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="862" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_11" canDelete="false" classfield_id="862" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_12" canDelete="false" classfield_id="862" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="864" field_type="0" initialValue="104.130.1.99" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="864" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_13" canDelete="false" classfield_id="864" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_14" canDelete="false" classfield_id="864" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="912" field_type="14" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="803" parent_class="803" fileExt=".cpp" fileName="olsr_node - 104.131.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.131.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" classfield_id="804" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" classfield_id="804" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_2" canDelete="false" classfield_id="805" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_3" canDelete="false" classfield_id="805" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="809" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="809" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="2" parent_id="809" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="3" parent_id="809" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="4" parent_id="809" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="826" tag="hblock_tag_14" canDelete="false" classfield_id="826" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="826" tag="hblock_tag_15" canDelete="false" classfield_id="826" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_16" canDelete="false" classfield_id="827" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_17" canDelete="false" classfield_id="827" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_18" canDelete="false" classfield_id="828" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_19" canDelete="false" classfield_id="828" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:03:45&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="804" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" classfield_id="804" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" classfield_id="804" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="805" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="805" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_2" canDelete="false" classfield_id="805" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_3" canDelete="false" classfield_id="805" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="809" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="809" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="809" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="809" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="809" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="809" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="812" field_type="3211310" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="815" field_type="3211310" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="818" field_type="140849464" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="826" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="826" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="826" tag="hblock_tag_14" canDelete="false" classfield_id="826" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="826" tag="hblock_tag_15" canDelete="false" classfield_id="826" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="827" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="827" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_16" canDelete="false" classfield_id="827" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_17" canDelete="false" classfield_id="827" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="828" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="828" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_18" canDelete="false" classfield_id="828" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_19" canDelete="false" classfield_id="828" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="893" field_type="6357106" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="909" field_type="3014708" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="806" parent_class="806" fileExt=".cpp" fileName="olsr_node - 104.132.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.132.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" classfield_id="807" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" classfield_id="807" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_2" canDelete="false" classfield_id="808" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_3" canDelete="false" classfield_id="808" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="829" tag="hblock_tag_4" canDelete="false" classfield_id="829" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="829" tag="hblock_tag_5" canDelete="false" classfield_id="829" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_6" canDelete="false" classfield_id="860" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_7" canDelete="false" classfield_id="860" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_8" canDelete="false" classfield_id="861" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_9" canDelete="false" classfield_id="861" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="865" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="865" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="2" parent_id="865" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="3" parent_id="865" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="4" parent_id="865" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="807" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" classfield_id="807" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" classfield_id="807" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="808" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="808" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_2" canDelete="false" classfield_id="808" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_3" canDelete="false" classfield_id="808" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="812" field_type="7471201" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="815" field_type="3211310" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="829" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="829" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="829" tag="hblock_tag_4" canDelete="false" classfield_id="829" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="829" tag="hblock_tag_5" canDelete="false" classfield_id="829" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="860" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="860" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_6" canDelete="false" classfield_id="860" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_7" canDelete="false" classfield_id="860" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="861" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="861" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_8" canDelete="false" classfield_id="861" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_9" canDelete="false" classfield_id="861" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="865" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="865" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="865" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="865" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="865" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="865" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="868" field_type="-1231290316" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="920" field_type="22" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="825" parent_class="825" fileExt=".cpp" fileName="olsr_node" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:36:21&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="830" parent_class="830" fileExt=".cpp" fileName="olsr_node - 104.129.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.129.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" classfield_id="832" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" classfield_id="832" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_2" canDelete="false" classfield_id="833" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_3" canDelete="false" classfield_id="833" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="834" tag="hblock_tag_4" canDelete="false" classfield_id="834" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="834" tag="hblock_tag_5" canDelete="false" classfield_id="834" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_6" canDelete="false" classfield_id="835" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_7" canDelete="false" classfield_id="835" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_8" canDelete="false" classfield_id="836" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_9" canDelete="false" classfield_id="836" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="832" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" classfield_id="832" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" classfield_id="832" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="833" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="833" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_2" canDelete="false" classfield_id="833" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_3" canDelete="false" classfield_id="833" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="834" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="834" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="834" tag="hblock_tag_4" canDelete="false" classfield_id="834" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="834" tag="hblock_tag_5" canDelete="false" classfield_id="834" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="835" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="835" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_6" canDelete="false" classfield_id="835" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_7" canDelete="false" classfield_id="835" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="836" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="836" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_8" canDelete="false" classfield_id="836" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_9" canDelete="false" classfield_id="836" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="842" field_type="2097213" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="851" field_type="-1231255360" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="879" field_type="3840" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="831" parent_class="831" fileExt=".cpp" fileName="olsr_node - 104.130.1.99" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.130.1.99.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" classfield_id="837" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" classfield_id="837" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_2" canDelete="false" classfield_id="838" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_3" canDelete="false" classfield_id="838" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="839" tag="hblock_tag_4" canDelete="false" classfield_id="839" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="839" tag="hblock_tag_5" canDelete="false" classfield_id="839" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_6" canDelete="false" classfield_id="840" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_7" canDelete="false" classfield_id="840" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_8" canDelete="false" classfield_id="841" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_9" canDelete="false" classfield_id="841" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010; !
   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:40&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="837" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" classfield_id="837" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" classfield_id="837" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="838" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="838" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_2" canDelete="false" classfield_id="838" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_3" canDelete="false" classfield_id="838" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="839" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="839" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="839" tag="hblock_tag_4" canDelete="false" classfield_id="839" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="839" tag="hblock_tag_5" canDelete="false" classfield_id="839" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="840" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="840" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_6" canDelete="false" classfield_id="840" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_7" canDelete="false" classfield_id="840" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="841" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="841" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_8" canDelete="false" classfield_id="841" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_9" canDelete="false" classfield_id="841" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="845" field_type="5111840" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="848" field_type="5111840" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="854" parent_class="854" fileExt=".cpp" fileName="olsr_node - 104.133.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.133.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" classfield_id="855" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" classfield_id="855" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_2" canDelete="false" classfield_id="856" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_3" canDelete="false" classfield_id="856" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="857" tag="hblock_tag_4" canDelete="false" classfield_id="857" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="857" tag="hblock_tag_5" canDelete="false" classfield_id="857" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_6" canDelete="false" classfield_id="858" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_7" canDelete="false" classfield_id="858" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_8" canDelete="false" classfield_id="859" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_9" canDelete="false" classfield_id="859" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="855" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" classfield_id="855" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" classfield_id="855" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="856" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="856" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_2" canDelete="false" classfield_id="856" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_3" canDelete="false" classfield_id="856" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="857" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="857" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="857" tag="hblock_tag_4" canDelete="false" classfield_id="857" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="857" tag="hblock_tag_5" canDelete="false" classfield_id="857" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="858" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="858" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_6" canDelete="false" classfield_id="858" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_7" canDelete="false" classfield_id="858" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="859" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="859" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_8" canDelete="false" classfield_id="859" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_9" canDelete="false" classfield_id="859" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="865" field_type="5111840" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="868" field_type="5111840" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="923" field_type="3211310" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="871" parent_class="871" fileExt=".cpp" fileName="olsr_con - 104.131.1.1:104.129.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con - 104.131.1.1:104.129.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_4" canDelete="false" classfield_id="874" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_5" canDelete="false" classfield_id="874" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_6" canDelete="false" classfield_id="875" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_7" canDelete="false" classfield_id="875" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_16" canDelete="false" classfield_id="896" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_17" canDelete="false" classfield_id="896" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_0" canDelete="false" classfield_id="898" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_22" canDelete="false" classfield_id="898" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:05:59&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="874" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="874" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_4" canDelete="false" classfield_id="874" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_5" canDelete="false" classfield_id="874" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="875" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="875" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_6" canDelete="false" classfield_id="875" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_7" canDelete="false" classfield_id="875" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="879" field_type="-1231255344" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="893" field_type="7077993" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="896" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_16" canDelete="false" classfield_id="896" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_17" canDelete="false" classfield_id="896" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="898" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="898" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_0" canDelete="false" classfield_id="898" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_22" canDelete="false" classfield_id="898" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="903" field_type="150329864" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="906" field_type="3407920" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="882" parent_class="882" fileExt=".cpp" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" classfield_id="899" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" classfield_id="899" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_2" canDelete="false" classfield_id="900" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_3" canDelete="false" classfield_id="900" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_4" canDelete="false" classfield_id="901" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_5" canDelete="false" classfield_id="901" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_6" canDelete="false" classfield_id="902" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_7" canDelete="false" classfield_id="902" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="906" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="906" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="2" parent_id="906" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="3" parent_id="906" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="4" parent_id="906" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="929" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="929" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="2" parent_id="929" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="3" parent_id="929" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="4" parent_id="929" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:07:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="899" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" classfield_id="899" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" classfield_id="899" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="900" field_type="0" initialValue="104.131.1.1:104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="900" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_2" canDelete="false" classfield_id="900" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_3" canDelete="false" classfield_id="900" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="901" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="901" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_4" canDelete="false" classfield_id="901" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_5" canDelete="false" classfield_id="901" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="902" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="902" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_6" canDelete="false" classfield_id="902" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_7" canDelete="false" classfield_id="902" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="903" field_type="-1231255400" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="906" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="906" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="906" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="906" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="906" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="906" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="909" field_type="4980821" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="912" field_type="655370" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="926" field_type="7" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="929" field_type="0" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="929" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="929" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="929" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="929" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="929" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="897" parent_class="897" fileExt=".cpp" fileName="olsr_con" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:01:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="915" parent_class="915" fileExt=".cpp" fileName="olsr_con - 104.132.1.1:104.133.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con - 104.132.1.1:104.133.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" classfield_id="916" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" classfield_id="916" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_2" canDelete="false" classfield_id="917" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_3" canDelete="false" classfield_id="917" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_4" canDelete="false" classfield_id="918" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_5" canDelete="false" classfield_id="918" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_6" canDelete="false" classfield_id="919" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_7" canDelete="false" classfield_id="919" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:22:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="916" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" classfield_id="916" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" classfield_id="916" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="917" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="917" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_2" canDelete="false" classfield_id="917" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_3" canDelete="false" classfield_id="917" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="918" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="918" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_4" canDelete="false" classfield_id="918" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_5" canDelete="false" classfield_id="918" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="919" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="919" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_6" canDelete="false" classfield_id="919" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_7" canDelete="false" classfield_id="919" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="920" field_type="3211296" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="923" field_type="155025864" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="926" field_type="3211296" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="929" field_type="72" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader787" parent_class="787" fileExt=".h" fileName="int" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INT_H&amp;#010;#define INT_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="787" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class int&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="int ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INT_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			int.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &q!
 uot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader789" parent_class="789" fileExt=".h" fileName="char" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CHAR_H&amp;#010;#define CHAR_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="789" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class char&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="char ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CHAR_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			char.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &!
 quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader790" parent_class="790" fileExt=".h" fileName="bool" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BOOL_H&amp;#010;#define BOOL_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="790" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class bool&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="bool ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BOOL_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			bool.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &!
 quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader791" parent_class="791" fileExt=".h" fileName="float" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FLOAT_H&amp;#010;#define FLOAT_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="791" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class float&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="float ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FLOAT_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			float.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file !
 &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader792" parent_class="792" fileExt=".h" fileName="double" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DOUBLE_H&amp;#010;#define DOUBLE_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="792" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class double&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="double ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DOUBLE_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			double.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file!
  &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader793" parent_class="793" fileExt=".h" fileName="long" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LONG_H&amp;#010;#define LONG_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="793" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class long&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="long ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LONG_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			long.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &!
 quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader794" parent_class="794" fileExt=".h" fileName="short" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SHORT_H&amp;#010;#define SHORT_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="794" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class short&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="short ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SHORT_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			short.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file !
 &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader795" parent_class="795" fileExt=".h" fileName="string" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRING_H&amp;#010;#define STRING_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="795" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class string&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="string ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRING_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file!
  &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:28:08&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader800" parent_class="800" fileExt=".h" fileName="olsr_node - 104.130.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.130.1.1_H&amp;#010;#define OLSR_NODE_-_104.130.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.131.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.129.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.130.1.99.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="800" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.130.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.131.131.131_1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="801" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="802" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="824" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="862" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="864" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="801" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="801" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="802" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="802" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="824" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="824" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="824" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="824" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="862" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="862" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="864" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="864" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.130.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:03&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="801" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="801" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="801" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="802" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="802" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="802" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="802" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="809" field_type="49" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.131.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="818" field_type="655370" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.131.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="824" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="824" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="824" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="824" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="824" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="824" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="842" field_type="3801146" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.129.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="845" field_type="147429808" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.99 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="848" field_type="7536745" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.130.1.99 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="851" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.129.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="862" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="862" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="862" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="862" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="864" field_type="0" initialValue="104.130.1.99" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="864" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="864" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="864" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="912" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader803" parent_class="803" fileExt=".h" fileName="olsr_node - 104.131.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.131.1.1_H&amp;#010;#define OLSR_NODE_-_104.131.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.132.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="803" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.131.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="893" tag="tblock_14" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.131.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="893" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="893" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="2" parent_id="893" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="3" parent_id="893" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="4" parent_id="893" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="804" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="805" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="826" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="827" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="828" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="804" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="804" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="805" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="805" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="826" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="826" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="826" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="826" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="827" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="827" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="828" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="828" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.131.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:03:45&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="804" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="804" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="804" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="805" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="805" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="805" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="805" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="809" field_type="144227880" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="812" field_type="3801146" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.132.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="815" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.132.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="818" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="826" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="826" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="826" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="826" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="826" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="826" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="827" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="827" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="827" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="827" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="828" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="828" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="828" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="828" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="893" field_type="0" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="893" tag="tblock_14" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="893" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="893" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="893" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="893" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="893" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="909" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader806" parent_class="806" fileExt=".h" fileName="olsr_node - 104.132.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.132.1.1_H&amp;#010;#define OLSR_NODE_-_104.132.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.131.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.133.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="806" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.132.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="865" tag="tblock_14" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.133.1.1 ;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="920" tag="tblock_20" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.132.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="865" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="865" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="2" parent_id="865" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="3" parent_id="865" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="4" parent_id="865" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="920" tag="hblock_tag_21" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="920" tag="hblock_tag_22" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="2" parent_id="920" tag="hblock_tag_23" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="3" parent_id="920" tag="hblock_tag_24" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="4" parent_id="920" tag="hblock_tag_25" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="807" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="808" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="829" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="860" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="861" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="807" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="807" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="808" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="808" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="829" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="829" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="829" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="829" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="860" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="860" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="861" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="861" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.132.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="807" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="807" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="807" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="808" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="808" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="808" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="808" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="812" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.131.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="815" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.131.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="829" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="829" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="829" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="829" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="829" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="829" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="860" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="860" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="860" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="860" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="861" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="861" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="861" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="861" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="865" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="865" tag="tblock_14" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.133.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="865" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="865" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="865" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="865" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="865" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="868" field_type="3801146" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.133.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="920" field_type="0" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="920" tag="tblock_20" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="920" tag="hblock_tag_21" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="920" tag="hblock_tag_22" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="920" tag="hblock_tag_23" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="920" tag="hblock_tag_24" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="920" tag="hblock_tag_25" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader825" parent_class="825" fileExt=".h" fileName="olsr_node" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_H&amp;#010;#define OLSR_NODE_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="825" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:36:21&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader830" parent_class="830" fileExt=".h" fileName="olsr_node - 104.129.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.129.1.1_H&amp;#010;#define OLSR_NODE_-_104.129.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="830" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.129.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.129.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="832" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="833" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="834" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="835" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="836" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="832" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="832" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="833" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="833" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="834" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="834" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="834" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="834" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="835" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="835" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="836" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="836" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.129.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="832" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="832" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="832" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="833" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="833" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="833" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="833" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="834" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="834" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="834" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="834" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="834" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="834" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="835" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="835" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="835" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="835" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="836" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="836" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="836" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="836" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="842" field_type="655370" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="851" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="879" field_type="3801146" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader831" parent_class="831" fileExt=".h" fileName="olsr_node - 104.130.1.99" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.130.1.99_H&amp;#010;#define OLSR_NODE_-_104.130.1.99_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="831" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.130.1.99&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.130.1.99 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="837" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="838" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="839" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="840" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="841" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="837" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="837" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="838" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="838" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="839" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="839" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="839" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="839" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="840" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="840" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="841" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="841" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.130.1.99_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If!
  you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:40&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="837" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="837" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="837" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="838" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="838" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="838" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="838" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="839" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="839" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="839" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="839" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="839" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="839" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="840" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="840" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="840" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="840" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="841" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="841" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="841" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="841" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="845" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="848" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader854" parent_class="854" fileExt=".h" fileName="olsr_node - 104.133.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.133.1.1_H&amp;#010;#define OLSR_NODE_-_104.133.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.132.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="854" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.133.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.133.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="855" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="856" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="857" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="858" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="859" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="855" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="855" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="856" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="856" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="857" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="857" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="857" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="857" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="858" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="858" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="859" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="859" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.133.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="855" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="855" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="855" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="856" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="856" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="856" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="856" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="857" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="857" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="857" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="857" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="857" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="857" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="858" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="858" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="858" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="858" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="859" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="859" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="859" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="859" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="865" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.132.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="868" field_type="3801146" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.132.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="923" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader871" parent_class="871" fileExt=".h" fileName="olsr_con - 104.131.1.1:104.129.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_-_104.131.1.1:104.129.1.1_H&amp;#010;#define OLSR_CON_-_104.131.1.1:104.129.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="871" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con - 104.131.1.1:104.129.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="874" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="875" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="896" tag="tblock_23" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="898" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="874" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="874" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="875" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="875" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="896" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="896" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="898" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="898" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_-_104.131.1.1:104.129.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:05:59&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="874" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="874" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="874" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="874" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="875" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="875" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="875" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="875" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="879" field_type="2949152" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.129.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="893" field_type="655370" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.131.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="896" tag="tblock_23" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="896" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="896" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="898" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="898" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="898" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="898" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="903" field_type="3145777" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="906" field_type="3145777" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader882" parent_class="882" fileExt=".h" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_-_104.131.1.1:104.130.1.1_H&amp;#010;#define OLSR_CON_-_104.131.1.1:104.130.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con - 104.131.1.1:104.129.1.1.h&quot;&amp;#010;#include &quot;olsr_con - 104.132.1.1:104.133.1.1.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="882" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con - 104.131.1.1:104.130.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="899" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="900" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="901" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="902" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="899" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="899" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="900" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="900" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="901" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="901" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="902" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="902" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_-_104.131.1.1:104.130.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:07:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="899" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="899" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="899" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="900" field_type="0" initialValue="104.131.1.1:104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="900" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="900" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="900" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="901" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="901" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="901" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="901" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="902" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="902" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="902" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="902" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="903" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="906" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="909" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.131.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="912" field_type="3145777" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="926" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="929" field_type="3145777" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader897" parent_class="897" fileExt=".h" fileName="olsr_con" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_H&amp;#010;#define OLSR_CON_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="897" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:01:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader915" parent_class="915" fileExt=".h" fileName="olsr_con - 104.132.1.1:104.133.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_-_104.132.1.1:104.133.1.1_H&amp;#010;#define OLSR_CON_-_104.132.1.1:104.133.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="915" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con - 104.132.1.1:104.133.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con - 104.132.1.1:104.133.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="916" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="917" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="918" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="919" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="916" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="916" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="917" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="917" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="918" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="918" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="919" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="919" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_-_104.132.1.1:104.133.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:22:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="916" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="916" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="916" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="917" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="917" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="917" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="917" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="918" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="918" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="918" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="918" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="919" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="919" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="919" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="919" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="920" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.132.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="923" field_type="3145777" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.133.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="926" field_type="3145777" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="929" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+   </codegenerator>
+  </codegeneration>
+ </XMI.extensions>
+</XMI>



From marec at berlios.de  Sun Feb 26 16:20:46 2006
From: marec at berlios.de (marec at berlios.de)
Date: Sun, 26 Feb 2006 16:20:46 +0100
Subject: [S3d-svn] r108 - trunk/apps/olsrs3d
Message-ID: <200602261520.k1QFKkul008423@sheep.berlios.de>

Author: marec
Date: 2006-02-26 16:20:42 +0100 (Sun, 26 Feb 2006)
New Revision: 108

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/net.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
parse line redone fixed III && delte olsr node fix

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-25 12:24:55 UTC (rev 107)
+++ trunk/apps/olsrs3d/main.c	2006-02-26 15:20:42 UTC (rev 108)
@@ -171,86 +171,17 @@
 
 		if ( Debug ) printf( "olsr node vanished: %s\n", olsr_node->ip );
 
-		/* reassign olsr childnodes if available */
-		if ( ( ( olsr_node->left != NULL ) || ( olsr_node->right != NULL ) ) && ( olsr_node->top != NULL ) ) {
+		olsr_node->visible = 0;
 
-			/* find out to which side to attach to */
-			result = strncmp( olsr_node->ip, olsr_node->top->ip, NAMEMAX );
-
-			if ( result < 0 ) {
-
-				if ( olsr_node->left != NULL ) {
-					olsr_node->top->right = olsr_node->left;
-					olsr_node->left->top = olsr_node->top;
-				} else {
-					olsr_node->top->right = olsr_node->right;
-					olsr_node->right->top = olsr_node->top;
-				}
-
-			} else {
-
-				if ( olsr_node->left != NULL ) {
-					olsr_node->top->left = olsr_node->left;
-					olsr_node->left->top = olsr_node->top;
-				} else {
-					olsr_node->top->left = olsr_node->right;
-					olsr_node->right->top = olsr_node->top;
-				}
-
-			}
-
-			/* olsr node has two childnodes and we have to reassign both */
-			if ( ( olsr_node->left != NULL ) && ( olsr_node->right != NULL ) ) {
-
-				tmp_olsr_node = &olsr_node->left;
-
-				while ( (*tmp_olsr_node) != NULL ) {
-
-					result = strncmp( (*tmp_olsr_node)->ip, olsr_node->right->ip, NAMEMAX );
-
-					/* we found the node - should not happen ! */
-					if ( result == 0 ) break;
-
-					/* save parent olsr node for later use */
-					top_olsr_node = (*tmp_olsr_node);
-
-					/* the searched node must be in the subtree */
-					if ( result < 0 ) {
-						tmp_olsr_node = &(*tmp_olsr_node)->right;
-					} else {
-						tmp_olsr_node = &(*tmp_olsr_node)->left;
-					}
-
-				}
-
-				tmp_olsr_node = &olsr_node->right;
-				olsr_node->right->top = top_olsr_node;
-
-			}
-
+		/* delete shape */
+		if ( olsr_node->obj_id != -1 ) {
+			/* remove element from ob2ip list */
+			lst_del( olsr_node->obj_id );
+			s3d_del_object( olsr_node->obj_id );
 		}
 
-		if ( olsr_node->top != NULL ) {
+		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
 
-			/* delete shape */
-			if ( olsr_node->obj_id != -1 ) {
-				/* remove element from ob2ip list */
-				lst_del( olsr_node->obj_id );
-				s3d_del_object( olsr_node->obj_id );
-			}
-
-			if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
-
-			/* free memory space */
-			free( olsr_node );
-			olsr_node = NULL;
-
-		} else {
-
-			if ( Debug ) printf( "root olsr node can't be deleted: %s\n", olsr_node->ip );
-
-		}
-
 	} else {
 
 		/* olsr node shape has been modified */
@@ -305,29 +236,29 @@
 				while ( olsr_con_list != NULL ) {
 
 					/* nodes are related */
-					if ( ( olsr_con_list->olsr_con->left_olsr_node != NULL ) && ( olsr_con_list->olsr_con->right_olsr_node != NULL ) ) {
+					if ( ( olsr_con_list->olsr_con->left_olsr_node->visible == 1 ) && ( olsr_con_list->olsr_con->right_olsr_node->visible == 1 ) ) {
 
 						if ( ( strncmp( olsr_con_list->olsr_con->left_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) || ( strncmp( olsr_con_list->olsr_con->right_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) ) break;
 
 						prev_olsr_con_list = olsr_con_list;
 
-					/* deleted node */
+					/* invisble (deleted) node */
 					} else {
 
-						s3d_pop_vertex( olsr_con_list->olsr_con->obj_id, 6 );
-						s3d_pop_polygon( olsr_con_list->olsr_con->obj_id, 2 );
-						s3d_pop_material( olsr_con_list->olsr_con->obj_id, 1 );
+// 						s3d_pop_vertex( olsr_con_list->olsr_con->obj_id, 6 );
+// 						s3d_pop_polygon( olsr_con_list->olsr_con->obj_id, 2 );
+// 						s3d_pop_material( olsr_con_list->olsr_con->obj_id, 1 );
+//
+// 						/* delete connection list entry */
+// 						prev_olsr_con_list->next_olsr_con_list = olsr_con_list->next_olsr_con_list;
+//
+// 						/* delete connection */
+// 						if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
+// 						if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
+//
+// 						free( olsr_con_list->olsr_con );
+// 						free( olsr_con_list );
 
-						/* delete connection list entry */
-						prev_olsr_con_list->next_olsr_con_list = olsr_con_list->next_olsr_con_list;
-
-						/* delete connection */
-						if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
-						if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
-
-						free( olsr_con_list->olsr_con );
-						free( olsr_con_list );
-
 					}
 
 					olsr_con_list = olsr_con_list->next_olsr_con_list;
@@ -350,11 +281,11 @@
 
 		}
 
-		handle_olsr_node( olsr_node->left );
-		handle_olsr_node( olsr_node->right );
-
 	}
 
+	handle_olsr_node( olsr_node->left );
+	handle_olsr_node( olsr_node->right );
+
 }
 
 
@@ -525,8 +456,6 @@
 
 	int net_result;   /* result of function net_main */
 
-	Byte_count = 0;
-
 	/* calculate new movement vector */
 	calc_olsr_node_mov();
 
@@ -536,7 +465,9 @@
 	/* move it */
 	move_olsr_nodes();
 
-	while ( 0!= ( net_result = net_main() ) ) {
+	/* read data from socket */
+	Byte_count = 0;
+	while ( ( net_result = net_main() ) != 0 ) {
 		if ( net_result == -1 ) {
 			s3d_quit();
 			break;

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-25 12:24:55 UTC (rev 107)
+++ trunk/apps/olsrs3d/net.c	2006-02-26 15:20:42 UTC (rev 108)
@@ -60,11 +60,10 @@
 
 	buf[numbytes] = '\0';
  	strncat(lbuf,buf,MAXLINESIZE);
-// 	printf( "lbuf: %s\n", lbuf );
 
 	process_main();
 
-	if ( Byte_count += numbytes > 1000 ) {
+	if ( ( Byte_count += numbytes ) > 1000 ) {
 		return(0);   /* continue mainloop */
 	} else {
 		return(1);   /* continue reading data from socket */

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-25 12:24:55 UTC (rev 107)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-26 15:20:42 UTC (rev 108)
@@ -39,6 +39,7 @@
 	int node_type;   /* normal = 0, internet gateway = 1, via hna announced network = 2 */
 	int node_type_modified;   /* node_type modified flag */
 	int last_seen;   /* last seen counter */
+	int visible;   /* is this node visible or vanished */
 	float pos_vec[3];   /* position vector in 3d "space" */
 	float mov_vec[3];   /* move vector */
 	int obj_id;   /* id of node object in s3d */

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-25 12:24:55 UTC (rev 107)
+++ trunk/apps/olsrs3d/process.c	2006-02-26 15:20:42 UTC (rev 108)
@@ -201,8 +201,17 @@
 
 		/* we found the node */
 		if ( result == 0 ) {
-			(*olsr_node)->last_seen = 20;
+
+			(*olsr_node)->last_seen = 50;
+
+			/* former invisble (deleted) node */
+			if ( (*olsr_node)->visible == 0 ) {
+				(*olsr_node)->visible = 1;
+				if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
+			}
+
 			return (*olsr_node);
+
 		}
 
 		/* save parent olsr node for later use */
@@ -232,7 +241,8 @@
 		(*olsr_node)->node_type = 0;
 		(*olsr_node)->node_type_modified = 1;
 
-		(*olsr_node)->last_seen = 20;
+		(*olsr_node)->last_seen = 50;
+		(*olsr_node)->visible = 1;
 
 		if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
 
@@ -530,19 +540,19 @@
 			switch ( dn ) {
 
 				case 0:
-					con_from = ++lbuf_ptr;
+					con_from = lbuf_ptr + 1;
 					break;
 				case 1:
 					con_from_end = lbuf_ptr;
 					break;
 				case 2:
-					con_to = ++lbuf_ptr;
+					con_to = lbuf_ptr + 1;
 					break;
 				case 3:
 					con_to_end = lbuf_ptr;
 					break;
 				case 4:
-					etx = ++lbuf_ptr;
+					etx = lbuf_ptr + 1;
 					break;
 				case 5:
 					etx_end = lbuf_ptr;
@@ -552,10 +562,10 @@
 
 			if ( ++dn == 6 ) {
 
-				/* terminate strings - but not before 6 '"' */
+				/* terminate strings - but not before 6 times '"' */
 				(*con_from_end) = (*con_to_end) = (*etx_end) = '\0';
 
-// 				printf( "dn: %i, con_from: %s, con_to: %s, etx: %s\n", dn, con_from, con_to, etx );
+// 				printf( "con_from: %s, con_to: %s, etx: %s\n", con_from, con_to, etx );
 
 				/* announced network via HNA */
 				if ( strncmp( etx, "HNA", NAMEMAX ) == 0 ) {



From nichtsnutz at berlios.de  Sun Feb 26 20:48:25 2006
From: nichtsnutz at berlios.de (nichtsnutz at berlios.de)
Date: Sun, 26 Feb 2006 20:48:25 +0100
Subject: [S3d-svn] r109 - trunk/apps/olsrs3d
Message-ID: <200602261948.k1QJmPIf008548@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-26 20:48:20 +0100 (Sun, 26 Feb 2006)
New Revision: 109

Modified:
   trunk/apps/olsrs3d/data_structure.xmi
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
delete olsr_nodes fix
add double linked list to data_structur

Modified: trunk/apps/olsrs3d/data_structure.xmi
===================================================================
--- trunk/apps/olsrs3d/data_structure.xmi	2006-02-26 15:20:42 UTC (rev 108)
+++ trunk/apps/olsrs3d/data_structure.xmi	2006-02-26 19:48:20 UTC (rev 109)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-25T13:22:32" xmi.version="1.2" >
+<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-26T20:38:10" xmi.version="1.2" >
  <XMI.header>
   <XMI.documentation>
    <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
@@ -100,6 +100,38 @@
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="919" isRoot="false" initialValue="104.133.1.1" type="825" isAbstract="false" name="right_olsr_node" />
      </UML:Classifier.feature>
     </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="933" isRoot="false" isAbstract="false" name="Obj_to_ip" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="934" isRoot="false" initialValue="0" type="787" isAbstract="false" name="Object_id" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="935" isRoot="false" initialValue="" type="825" isAbstract="false" name="olsr_node" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="936" isRoot="false" initialValue="Obj_to_ip - 1" type="933" isAbstract="false" name="next" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="938" isRoot="false" initialValue="Obj_to_ip" type="933" isAbstract="false" name="prev" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="940" isRoot="false" isAbstract="false" name="Obj_to_ip - 1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="941" isRoot="false" initialValue="1" type="787" isAbstract="false" name="Object_id" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="942" isRoot="false" initialValue="" type="825" isAbstract="false" name="olsr_node" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="943" isRoot="false" initialValue="Obj_to_ip - 2" type="933" isAbstract="false" name="next" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="944" isRoot="false" initialValue="Obj_to_ip" type="933" isAbstract="false" name="prev" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="967" isRoot="false" isAbstract="false" name="Obj_to_ip - 2" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="968" isRoot="false" initialValue="2" type="787" isAbstract="false" name="Object_id" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="969" isRoot="false" initialValue="" type="825" isAbstract="false" name="olsr_node" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="970" isRoot="false" initialValue="Obj_to_ip - 3" type="933" isAbstract="false" name="next" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="971" isRoot="false" initialValue="Obj_to_ip - 1" type="933" isAbstract="false" name="prev" />
+     </UML:Classifier.feature>
+    </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="1004" isRoot="false" isAbstract="false" name="Obj_to_ip -3" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1005" isRoot="false" initialValue="0" type="787" isAbstract="false" name="Object_id" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1006" isRoot="false" initialValue="" type="825" isAbstract="false" name="olsr_node" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1007" isRoot="false" initialValue="Obj_to_ip - 3" type="933" isAbstract="false" name="next" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1008" isRoot="false" initialValue="Obj_to_ip - 2" type="933" isAbstract="false" name="prev" />
+     </UML:Classifier.feature>
+    </UML:Class>
     <UML:Association isSpecification="false" visibility="public" xmi.id="809" name="" >
      <UML:Association.connection>
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="810" aggregation="none" type="803" name="" />
@@ -190,208 +222,349 @@
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="931" aggregation="none" type="882" name="" />
      </UML:Association.connection>
     </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1049" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1050" aggregation="none" type="933" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1051" aggregation="none" type="933" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1053" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1054" aggregation="none" type="967" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1055" aggregation="none" type="1004" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1056" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1057" aggregation="none" type="1004" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1058" aggregation="none" type="967" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1059" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1060" aggregation="none" type="940" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1061" aggregation="none" type="967" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1062" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1063" aggregation="none" type="967" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1064" aggregation="none" type="940" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1065" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1066" aggregation="none" type="933" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1067" aggregation="none" type="940" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1068" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1069" aggregation="none" type="940" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1070" aggregation="none" type="933" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1071" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1072" aggregation="none" type="933" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1073" aggregation="none" type="933" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1074" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1075" aggregation="none" type="1004" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1076" aggregation="none" type="1004" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1077" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1078" aggregation="none" type="1004" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1079" aggregation="none" type="1004" name="" />
+     </UML:Association.connection>
+    </UML:Association>
    </UML:Namespace.ownedElement>
   </UML:Model>
  </XMI.content>
  <XMI.extensions xmi.extender="umbrello" >
-  <docsettings viewid="786" documentation="" uniqueid="931" />
+  <docsettings viewid="786" documentation="" uniqueid="1079" />
   <diagrams>
-   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="75" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1497" snapy="10" showatts="1" xmi.id="786" documentation="" type="402" showops="1" showpackage="0" name="Klassendiagramm" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1064" >
+   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="75" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1409" snapy="10" showatts="1" xmi.id="786" documentation="" type="402" showops="1" showpackage="0" name="Klassendiagramm" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1103" >
     <widgets>
-     <classwidget usesdiagramfillcolour="0" width="187" showattsigs="601" usesdiagramusefillcolour="0" x="329" linecolour="#ff0000" y="509" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="800" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="496" linecolour="#ff0000" y="325" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="803" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="690" linecolour="#ff0000" y="505" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="806" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="172" showattsigs="601" usesdiagramusefillcolour="0" x="205" linecolour="#ff0000" y="705" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="830" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="172" showattsigs="601" usesdiagramusefillcolour="0" x="462" linecolour="#ff0000" y="706" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="831" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="172" showattsigs="601" usesdiagramusefillcolour="0" x="843" linecolour="#ff0000" y="694" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="91" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="854" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="31" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="871" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="414" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="882" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="825" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="915" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="230" showattsigs="601" usesdiagramusefillcolour="0" x="329" linecolour="#ff0000" y="509" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="800" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="222" showattsigs="601" usesdiagramusefillcolour="0" x="496" linecolour="#ff0000" y="325" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="803" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="222" showattsigs="601" usesdiagramusefillcolour="0" x="690" linecolour="#ff0000" y="505" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="806" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="212" showattsigs="601" usesdiagramusefillcolour="0" x="205" linecolour="#ff0000" y="705" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="830" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="212" showattsigs="601" usesdiagramusefillcolour="0" x="462" linecolour="#ff0000" y="706" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="831" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="212" showattsigs="601" usesdiagramusefillcolour="0" x="843" linecolour="#ff0000" y="694" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="854" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="356" showattsigs="601" usesdiagramusefillcolour="0" x="31" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="871" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="356" showattsigs="601" usesdiagramusefillcolour="0" x="414" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="882" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="356" showattsigs="601" usesdiagramusefillcolour="0" x="825" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="915" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="220" showattsigs="601" usesdiagramusefillcolour="0" x="24" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="933" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="220" showattsigs="601" usesdiagramusefillcolour="0" x="315" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="940" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="220" showattsigs="601" usesdiagramusefillcolour="0" x="586" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="967" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="220" showattsigs="601" usesdiagramusefillcolour="0" x="866" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1004" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     </widgets>
     <messages/>
     <associations>
      <assocwidget totalcounta="5" indexa="1" totalcountb="4" indexb="2" widgetbid="800" widgetaid="803" xmi.id="809" >
       <linepath>
-       <startpoint startx="532" starty="416" />
-       <endpoint endx="422" endy="509" />
+       <startpoint startx="540" starty="429" />
+       <endpoint endx="444" endy="509" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="5" indexa="3" totalcountb="4" indexb="1" widgetbid="806" widgetaid="803" xmi.id="812" >
       <linepath>
-       <startpoint startx="604" starty="416" />
-       <endpoint endx="735" endy="505" />
+       <startpoint startx="629" starty="429" />
+       <endpoint endx="745" endy="505" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="4" indexa="2" totalcountb="5" indexb="4" widgetbid="803" widgetaid="806" xmi.id="815" >
       <linepath>
-       <startpoint startx="780" starty="505" />
-       <endpoint endx="640" endy="416" />
+       <startpoint startx="801" starty="505" />
+       <endpoint endx="673" endy="429" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="4" indexa="3" totalcountb="5" indexb="2" widgetbid="803" widgetaid="800" xmi.id="818" >
       <linepath>
-       <startpoint startx="469" starty="509" />
-       <endpoint endx="568" endy="416" />
+       <startpoint startx="501" starty="509" />
+       <endpoint endx="584" endy="429" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="5" indexa="1" totalcountb="4" indexb="2" widgetbid="830" widgetaid="800" xmi.id="842" >
       <linepath>
-       <startpoint startx="366" starty="600" />
-       <endpoint endx="291" endy="705" />
+       <startpoint startx="375" starty="613" />
+       <endpoint endx="311" endy="705" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="5" indexa="3" totalcountb="3" indexb="1" widgetbid="831" widgetaid="800" xmi.id="845" >
       <linepath>
-       <startpoint startx="441" starty="600" />
-       <endpoint endx="519" endy="706" />
+       <startpoint startx="467" starty="613" />
+       <endpoint endx="532" endy="706" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="5" indexb="4" widgetbid="800" widgetaid="831" xmi.id="848" >
       <linepath>
-       <startpoint startx="576" starty="706" />
-       <endpoint endx="478" endy="600" />
+       <startpoint startx="603" starty="706" />
+       <endpoint endx="513" endy="613" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="4" indexa="3" totalcountb="5" indexb="2" widgetbid="800" widgetaid="830" xmi.id="851" >
       <linepath>
-       <startpoint startx="334" starty="705" />
-       <endpoint endx="403" endy="600" />
+       <startpoint startx="364" starty="705" />
+       <endpoint endx="421" endy="613" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="854" widgetaid="806" xmi.id="865" >
       <linepath>
-       <startpoint startx="750" starty="596" />
-       <endpoint endx="886" endy="694" />
+       <startpoint startx="764" starty="609" />
+       <endpoint endx="896" endy="694" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="4" indexa="2" totalcountb="3" indexb="2" widgetbid="806" widgetaid="854" xmi.id="868" >
       <linepath>
-       <startpoint startx="929" starty="694" />
-       <endpoint endx="810" endy="596" />
+       <startpoint startx="949" starty="694" />
+       <endpoint endx="838" endy="609" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="830" widgetaid="871" xmi.id="879" >
       <linepath>
-       <startpoint startx="129" starty="163" />
-       <endpoint endx="248" endy="705" />
+       <startpoint startx="149" starty="174" />
+       <endpoint endx="258" endy="705" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" widgetbid="803" widgetaid="871" xmi.id="893" >
       <linepath>
-       <startpoint startx="227" starty="163" />
-       <endpoint endx="556" endy="325" />
+       <startpoint startx="268" starty="174" />
+       <endpoint endx="570" endy="325" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="882" widgetaid="871" xmi.id="903" >
       <linepath>
-       <startpoint startx="325" starty="111" />
-       <endpoint endx="414" endy="111" />
+       <startpoint startx="387" starty="115" />
+       <endpoint endx="414" endy="115" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="871" widgetaid="882" xmi.id="906" >
       <linepath>
-       <startpoint startx="414" starty="137" />
-       <endpoint endx="325" endy="137" />
+       <startpoint startx="414" starty="144" />
+       <endpoint endx="387" endy="144" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="803" widgetaid="882" xmi.id="909" >
       <linepath>
-       <startpoint startx="610" starty="163" />
-       <endpoint endx="616" endy="325" />
+       <startpoint startx="651" starty="174" />
+       <endpoint endx="644" endy="325" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="800" widgetaid="882" xmi.id="912" >
       <linepath>
-       <startpoint startx="512" starty="163" />
-       <endpoint endx="375" endy="509" />
+       <startpoint startx="532" starty="174" />
+       <endpoint endx="386" endy="509" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="3" widgetbid="806" widgetaid="915" xmi.id="920" >
       <linepath>
-       <startpoint startx="923" starty="163" />
-       <endpoint endx="825" endy="505" />
+       <startpoint startx="943" starty="174" />
+       <endpoint endx="856" endy="505" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="4" indexb="3" widgetbid="854" widgetaid="915" xmi.id="923" >
       <linepath>
-       <startpoint startx="1021" starty="163" />
-       <endpoint endx="972" endy="694" />
+       <startpoint startx="1062" starty="174" />
+       <endpoint endx="1002" endy="694" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="915" widgetaid="882" xmi.id="926" >
       <linepath>
-       <startpoint startx="708" starty="111" />
-       <endpoint endx="825" endy="111" />
+       <startpoint startx="770" starty="115" />
+       <endpoint endx="825" endy="115" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="882" widgetaid="915" xmi.id="929" >
       <linepath>
-       <startpoint startx="825" starty="137" />
-       <endpoint endx="708" endy="137" />
+       <startpoint startx="825" starty="144" />
+       <endpoint endx="770" endy="144" />
       </linepath>
      </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="1004" widgetaid="967" xmi.id="1053" >
+      <linepath>
+       <startpoint startx="806" starty="912" />
+       <endpoint endx="866" endy="912" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="967" widgetaid="1004" xmi.id="1056" >
+      <linepath>
+       <startpoint startx="866" starty="941" />
+       <endpoint endx="806" endy="941" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="967" widgetaid="940" xmi.id="1059" >
+      <linepath>
+       <startpoint startx="535" starty="912" />
+       <endpoint endx="586" endy="912" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="940" widgetaid="967" xmi.id="1062" >
+      <linepath>
+       <startpoint startx="586" starty="941" />
+       <endpoint endx="535" endy="941" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="940" widgetaid="933" xmi.id="1065" >
+      <linepath>
+       <startpoint startx="244" starty="912" />
+       <endpoint endx="315" endy="912" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="933" widgetaid="940" xmi.id="1068" >
+      <linepath>
+       <startpoint startx="315" starty="941" />
+       <endpoint endx="244" endy="941" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="0" indexa="0" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="1071" >
+      <linepath>
+       <startpoint startx="79" starty="883" />
+       <endpoint endx="189" endy="883" />
+       <point x="79" y="867" />
+       <point x="79" y="833" />
+       <point x="189" y="833" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="0" indexa="0" totalcountb="0" indexb="0" widgetbid="1004" widgetaid="1004" xmi.id="1077" >
+      <linepath>
+       <startpoint startx="921" starty="883" />
+       <endpoint endx="1031" endy="883" />
+       <point x="921" y="833" />
+       <point x="1031" y="833" />
+      </linepath>
+     </assocwidget>
     </associations>
    </diagram>
   </diagrams>
   <listview>
    <listitem open="1" type="800" label="Ansichten" >
     <listitem open="1" type="801" label="Logische Ansicht" >
+     <listitem open="0" type="813" id="933" >
+      <listitem open="0" type="814" id="934" />
+      <listitem open="0" type="814" id="935" />
+      <listitem open="0" type="814" id="936" />
+      <listitem open="0" type="814" id="938" />
+     </listitem>
+     <listitem open="0" type="813" id="940" >
+      <listitem open="0" type="814" id="941" />
+      <listitem open="0" type="814" id="942" />
+      <listitem open="0" type="814" id="943" />
+      <listitem open="0" type="814" id="944" />
+     </listitem>
+     <listitem open="0" type="813" id="967" >
+      <listitem open="0" type="814" id="968" />
+      <listitem open="0" type="814" id="969" />
+      <listitem open="0" type="814" id="970" />
+      <listitem open="0" type="814" id="971" />
+     </listitem>
+     <listitem open="0" type="813" id="1004" >
+      <listitem open="0" type="814" id="1005" />
+      <listitem open="0" type="814" id="1006" />
+      <listitem open="0" type="814" id="1007" />
+      <listitem open="0" type="814" id="1008" />
+     </listitem>
      <listitem open="1" type="813" id="897" />
-     <listitem open="1" type="813" id="871" >
+     <listitem open="0" type="813" id="871" >
       <listitem open="0" type="814" id="896" />
       <listitem open="0" type="814" id="898" />
       <listitem open="0" type="814" id="874" />
       <listitem open="0" type="814" id="875" />
      </listitem>
-     <listitem open="1" type="813" id="882" >
+     <listitem open="0" type="813" id="882" >
       <listitem open="0" type="814" id="899" />
       <listitem open="0" type="814" id="900" />
       <listitem open="0" type="814" id="901" />
       <listitem open="0" type="814" id="902" />
      </listitem>
-     <listitem open="1" type="813" id="915" >
+     <listitem open="0" type="813" id="915" >
       <listitem open="0" type="814" id="916" />
       <listitem open="0" type="814" id="917" />
       <listitem open="0" type="814" id="918" />
       <listitem open="0" type="814" id="919" />
      </listitem>
      <listitem open="1" type="813" id="825" />
-     <listitem open="1" type="813" id="830" >
+     <listitem open="0" type="813" id="830" >
       <listitem open="0" type="814" id="832" />
       <listitem open="0" type="814" id="833" />
       <listitem open="0" type="814" id="834" />
       <listitem open="0" type="814" id="835" />
       <listitem open="0" type="814" id="836" />
      </listitem>
-     <listitem open="1" type="813" id="800" >
+     <listitem open="0" type="813" id="800" >
       <listitem open="0" type="814" id="801" />
       <listitem open="0" type="814" id="802" />
       <listitem open="0" type="814" id="824" />
       <listitem open="0" type="814" id="862" />
       <listitem open="0" type="814" id="864" />
      </listitem>
-     <listitem open="1" type="813" id="831" >
+     <listitem open="0" type="813" id="831" >
       <listitem open="0" type="814" id="837" />
       <listitem open="0" type="814" id="838" />
       <listitem open="0" type="814" id="839" />
       <listitem open="0" type="814" id="840" />
       <listitem open="0" type="814" id="841" />
      </listitem>
-     <listitem open="1" type="813" id="803" >
+     <listitem open="0" type="813" id="803" >
       <listitem open="0" type="814" id="804" />
       <listitem open="0" type="814" id="805" />
       <listitem open="0" type="814" id="826" />
       <listitem open="0" type="814" id="827" />
       <listitem open="0" type="814" id="828" />
      </listitem>
-     <listitem open="1" type="813" id="806" >
+     <listitem open="0" type="813" id="806" >
       <listitem open="0" type="814" id="807" />
       <listitem open="0" type="814" id="808" />
       <listitem open="0" type="814" id="829" />
       <listitem open="0" type="814" id="860" />
       <listitem open="0" type="814" id="861" />
      </listitem>
-     <listitem open="1" type="813" id="854" >
+     <listitem open="0" type="813" id="854" >
       <listitem open="0" type="814" id="855" />
       <listitem open="0" type="814" id="856" />
       <listitem open="0" type="814" id="857" />
@@ -415,10173 +588,6 @@
     <listitem open="1" type="836" label="Entity Relationship Modell" />
    </listitem>
   </listview>
-  <codegeneration>
-   <codegenerator language="Cpp" >
-    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
-     <textblocks/>
-     <header>
-      <codecomment tag="" />
-     </header>
-    </codedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="787" parent_class="787" fileExt=".cpp" fileName="int" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;int.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			int.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fil!
 e &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="789" parent_class="789" fileExt=".cpp" fileName="char" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;char.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			char.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="790" parent_class="790" fileExt=".cpp" fileName="bool" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;bool.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			bool.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="791" parent_class="791" fileExt=".cpp" fileName="float" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;float.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			float.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="792" parent_class="792" fileExt=".cpp" fileName="double" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;double.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			double.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the !
 file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="793" parent_class="793" fileExt=".cpp" fileName="long" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;long.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			long.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="794" parent_class="794" fileExt=".cpp" fileName="short" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;short.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			short.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="795" parent_class="795" fileExt=".cpp" fileName="string" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;string.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the !
 file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:28:08&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="800" parent_class="800" fileExt=".cpp" fileName="olsr_node - 104.130.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks>
-        <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" classfield_id="801" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_1" canDelete="false" classfield_id="801" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_2" canDelete="false" classfield_id="802" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_3" canDelete="false" classfield_id="802" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="824" tag="hblock_tag_9" canDelete="false" classfield_id="824" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="824" tag="hblock_tag_10" canDelete="false" classfield_id="824" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_11" canDelete="false" classfield_id="862" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_12" canDelete="false" classfield_id="862" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_13" canDelete="false" classfield_id="864" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_14" canDelete="false" classfield_id="864" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-       </textblocks>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:03&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="801" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" classfield_id="801" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_1" canDelete="false" classfield_id="801" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="802" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="802" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_2" canDelete="false" classfield_id="802" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_3" canDelete="false" classfield_id="802" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="809" field_type="49" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="809" tag="" canDelete="false" writeOutText="false" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="818" field_type="23" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="824" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="824" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="824" tag="hblock_tag_9" canDelete="false" classfield_id="824" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="824" tag="hblock_tag_10" canDelete="false" classfield_id="824" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="842" field_type="6144" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="845" field_type="6553645" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="848" field_type="48" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="851" field_type="35" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="862" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="862" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_11" canDelete="false" classfield_id="862" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_12" canDelete="false" classfield_id="862" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="864" field_type="0" initialValue="104.130.1.99" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="864" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_13" canDelete="false" classfield_id="864" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_14" canDelete="false" classfield_id="864" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="912" field_type="14" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="803" parent_class="803" fileExt=".cpp" fileName="olsr_node - 104.131.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.131.1.1.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks>
-        <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" classfield_id="804" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" classfield_id="804" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_2" canDelete="false" classfield_id="805" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_3" canDelete="false" classfield_id="805" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="809" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="809" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="2" parent_id="809" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="3" parent_id="809" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="4" parent_id="809" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="826" tag="hblock_tag_14" canDelete="false" classfield_id="826" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="826" tag="hblock_tag_15" canDelete="false" classfield_id="826" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_16" canDelete="false" classfield_id="827" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_17" canDelete="false" classfield_id="827" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_18" canDelete="false" classfield_id="828" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_19" canDelete="false" classfield_id="828" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-       </textblocks>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:03:45&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="804" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" classfield_id="804" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" classfield_id="804" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="805" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="805" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_2" canDelete="false" classfield_id="805" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_3" canDelete="false" classfield_id="805" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="809" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="809" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="809" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="809" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="809" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="809" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="812" field_type="3211310" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="815" field_type="3211310" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="818" field_type="140849464" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="818" tag="" canDelete="false" writeOutText="false" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="826" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="826" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="826" tag="hblock_tag_14" canDelete="false" classfield_id="826" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="826" tag="hblock_tag_15" canDelete="false" classfield_id="826" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="827" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="827" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_16" canDelete="false" classfield_id="827" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_17" canDelete="false" classfield_id="827" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="828" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="828" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_18" canDelete="false" classfield_id="828" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_19" canDelete="false" classfield_id="828" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="893" field_type="6357106" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="909" field_type="3014708" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="806" parent_class="806" fileExt=".cpp" fileName="olsr_node - 104.132.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.132.1.1.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks>
-        <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" classfield_id="807" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" classfield_id="807" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_2" canDelete="false" classfield_id="808" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_3" canDelete="false" classfield_id="808" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="829" tag="hblock_tag_4" canDelete="false" classfield_id="829" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="829" tag="hblock_tag_5" canDelete="false" classfield_id="829" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_6" canDelete="false" classfield_id="860" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_7" canDelete="false" classfield_id="860" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_8" canDelete="false" classfield_id="861" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_9" canDelete="false" classfield_id="861" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="865" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="865" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="2" parent_id="865" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="3" parent_id="865" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="4" parent_id="865" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-       </textblocks>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="807" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" classfield_id="807" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" classfield_id="807" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="808" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="808" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_2" canDelete="false" classfield_id="808" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_3" canDelete="false" classfield_id="808" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="812" field_type="7471201" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="812" tag="" canDelete="false" writeOutText="false" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="815" field_type="3211310" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="815" tag="" canDelete="false" writeOutText="false" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="829" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="829" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="829" tag="hblock_tag_4" canDelete="false" classfield_id="829" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="829" tag="hblock_tag_5" canDelete="false" classfield_id="829" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="860" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="860" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_6" canDelete="false" classfield_id="860" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_7" canDelete="false" classfield_id="860" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="861" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="861" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_8" canDelete="false" classfield_id="861" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_9" canDelete="false" classfield_id="861" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="865" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="865" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="865" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="865" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="865" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="865" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="868" field_type="-1231290316" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="920" field_type="22" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="825" parent_class="825" fileExt=".cpp" fileName="olsr_node" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:36:21&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="830" parent_class="830" fileExt=".cpp" fileName="olsr_node - 104.129.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.129.1.1.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks>
-        <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" classfield_id="832" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" classfield_id="832" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_2" canDelete="false" classfield_id="833" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_3" canDelete="false" classfield_id="833" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="834" tag="hblock_tag_4" canDelete="false" classfield_id="834" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="834" tag="hblock_tag_5" canDelete="false" classfield_id="834" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_6" canDelete="false" classfield_id="835" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_7" canDelete="false" classfield_id="835" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_8" canDelete="false" classfield_id="836" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_9" canDelete="false" classfield_id="836" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-       </textblocks>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="832" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" classfield_id="832" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" classfield_id="832" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="833" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="833" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_2" canDelete="false" classfield_id="833" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_3" canDelete="false" classfield_id="833" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="834" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="834" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="834" tag="hblock_tag_4" canDelete="false" classfield_id="834" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="834" tag="hblock_tag_5" canDelete="false" classfield_id="834" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="835" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="835" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_6" canDelete="false" classfield_id="835" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_7" canDelete="false" classfield_id="835" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="836" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="836" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_8" canDelete="false" classfield_id="836" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_9" canDelete="false" classfield_id="836" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="842" field_type="2097213" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="842" tag="" canDelete="false" writeOutText="false" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="851" field_type="-1231255360" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="851" tag="" canDelete="false" writeOutText="false" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="879" field_type="3840" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="831" parent_class="831" fileExt=".cpp" fileName="olsr_node - 104.130.1.99" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.130.1.99.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks>
-        <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" classfield_id="837" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" classfield_id="837" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_2" canDelete="false" classfield_id="838" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_3" canDelete="false" classfield_id="838" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="839" tag="hblock_tag_4" canDelete="false" classfield_id="839" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="839" tag="hblock_tag_5" canDelete="false" classfield_id="839" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_6" canDelete="false" classfield_id="840" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_7" canDelete="false" classfield_id="840" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_8" canDelete="false" classfield_id="841" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_9" canDelete="false" classfield_id="841" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-       </textblocks>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010; !
   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:40&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="837" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" classfield_id="837" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" classfield_id="837" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="838" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="838" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_2" canDelete="false" classfield_id="838" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_3" canDelete="false" classfield_id="838" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="839" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="839" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="839" tag="hblock_tag_4" canDelete="false" classfield_id="839" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="839" tag="hblock_tag_5" canDelete="false" classfield_id="839" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="840" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="840" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_6" canDelete="false" classfield_id="840" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_7" canDelete="false" classfield_id="840" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="841" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="841" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_8" canDelete="false" classfield_id="841" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_9" canDelete="false" classfield_id="841" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="845" field_type="5111840" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="845" tag="" canDelete="false" writeOutText="false" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="848" field_type="5111840" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="848" tag="" canDelete="false" writeOutText="false" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="854" parent_class="854" fileExt=".cpp" fileName="olsr_node - 104.133.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.133.1.1.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks>
-        <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" classfield_id="855" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" classfield_id="855" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_2" canDelete="false" classfield_id="856" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_3" canDelete="false" classfield_id="856" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="857" tag="hblock_tag_4" canDelete="false" classfield_id="857" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="857" tag="hblock_tag_5" canDelete="false" classfield_id="857" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_6" canDelete="false" classfield_id="858" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_7" canDelete="false" classfield_id="858" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_8" canDelete="false" classfield_id="859" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_9" canDelete="false" classfield_id="859" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-       </textblocks>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="855" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" classfield_id="855" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" classfield_id="855" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="856" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="856" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_2" canDelete="false" classfield_id="856" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_3" canDelete="false" classfield_id="856" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="857" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="857" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="857" tag="hblock_tag_4" canDelete="false" classfield_id="857" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="857" tag="hblock_tag_5" canDelete="false" classfield_id="857" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="858" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="858" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_6" canDelete="false" classfield_id="858" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_7" canDelete="false" classfield_id="858" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="859" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="859" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_8" canDelete="false" classfield_id="859" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_9" canDelete="false" classfield_id="859" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="865" field_type="5111840" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="865" tag="" canDelete="false" writeOutText="false" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="868" field_type="5111840" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="868" tag="" canDelete="false" writeOutText="false" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="923" field_type="3211310" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="871" parent_class="871" fileExt=".cpp" fileName="olsr_con - 104.131.1.1:104.129.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con - 104.131.1.1:104.129.1.1.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks>
-        <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_4" canDelete="false" classfield_id="874" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_5" canDelete="false" classfield_id="874" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_6" canDelete="false" classfield_id="875" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_7" canDelete="false" classfield_id="875" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_16" canDelete="false" classfield_id="896" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_17" canDelete="false" classfield_id="896" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_0" canDelete="false" classfield_id="898" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_22" canDelete="false" classfield_id="898" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-       </textblocks>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:05:59&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="874" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="874" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_4" canDelete="false" classfield_id="874" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_5" canDelete="false" classfield_id="874" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="875" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="875" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_6" canDelete="false" classfield_id="875" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_7" canDelete="false" classfield_id="875" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="879" field_type="-1231255344" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="879" tag="" canDelete="false" writeOutText="false" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="893" field_type="7077993" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="893" tag="" canDelete="false" writeOutText="false" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="896" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_16" canDelete="false" classfield_id="896" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_17" canDelete="false" classfield_id="896" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="898" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="898" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_0" canDelete="false" classfield_id="898" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_22" canDelete="false" classfield_id="898" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="903" field_type="150329864" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="906" field_type="3407920" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="906" tag="" canDelete="false" writeOutText="false" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="882" parent_class="882" fileExt=".cpp" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks>
-        <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" classfield_id="899" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" classfield_id="899" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_2" canDelete="false" classfield_id="900" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_3" canDelete="false" classfield_id="900" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_4" canDelete="false" classfield_id="901" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_5" canDelete="false" classfield_id="901" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_6" canDelete="false" classfield_id="902" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_7" canDelete="false" classfield_id="902" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="906" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="906" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="2" parent_id="906" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="3" parent_id="906" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="4" parent_id="906" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="929" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="929" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="2" parent_id="929" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="3" parent_id="929" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="4" parent_id="929" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-       </textblocks>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:07:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="899" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" classfield_id="899" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" classfield_id="899" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="900" field_type="0" initialValue="104.131.1.1:104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="900" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_2" canDelete="false" classfield_id="900" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_3" canDelete="false" classfield_id="900" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="901" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="901" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_4" canDelete="false" classfield_id="901" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_5" canDelete="false" classfield_id="901" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="902" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="902" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_6" canDelete="false" classfield_id="902" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_7" canDelete="false" classfield_id="902" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="903" field_type="-1231255400" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="903" tag="" canDelete="false" writeOutText="false" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="906" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="906" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="906" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="906" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="906" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="906" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="909" field_type="4980821" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="909" tag="" canDelete="false" writeOutText="false" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="912" field_type="655370" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="912" tag="" canDelete="false" writeOutText="false" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="926" field_type="7" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="929" field_type="0" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="929" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="929" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="929" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="929" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="929" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="897" parent_class="897" fileExt=".cpp" fileName="olsr_con" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:01:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="915" parent_class="915" fileExt=".cpp" fileName="olsr_con - 104.132.1.1:104.133.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con - 104.132.1.1:104.133.1.1.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks>
-        <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" classfield_id="916" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" classfield_id="916" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_2" canDelete="false" classfield_id="917" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_3" canDelete="false" classfield_id="917" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_4" canDelete="false" classfield_id="918" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_5" canDelete="false" classfield_id="918" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_6" canDelete="false" classfield_id="919" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_7" canDelete="false" classfield_id="919" >
-         <header>
-          <cppcodedocumentation tag="" />
-         </header>
-        </codeaccessormethod>
-       </textblocks>
-      </hierarchicalcodeblock>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:22:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="916" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" classfield_id="916" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" classfield_id="916" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="917" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="917" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_2" canDelete="false" classfield_id="917" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_3" canDelete="false" classfield_id="917" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="918" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="918" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_4" canDelete="false" classfield_id="918" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_5" canDelete="false" classfield_id="918" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="919" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="919" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_6" canDelete="false" classfield_id="919" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_7" canDelete="false" classfield_id="919" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="920" field_type="3211296" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="920" tag="" canDelete="false" writeOutText="false" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="923" field_type="155025864" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="923" tag="" canDelete="false" writeOutText="false" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="926" field_type="3211296" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="926" tag="" canDelete="false" writeOutText="false" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="929" field_type="72" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="929" tag="" canDelete="false" writeOutText="false" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader787" parent_class="787" fileExt=".h" fileName="int" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INT_H&amp;#010;#define INT_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="787" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class int&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="int ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INT_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			int.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &q!
 uot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader789" parent_class="789" fileExt=".h" fileName="char" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CHAR_H&amp;#010;#define CHAR_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="789" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class char&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="char ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CHAR_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			char.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &!
 quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader790" parent_class="790" fileExt=".h" fileName="bool" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BOOL_H&amp;#010;#define BOOL_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="790" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class bool&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="bool ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BOOL_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			bool.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &!
 quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader791" parent_class="791" fileExt=".h" fileName="float" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FLOAT_H&amp;#010;#define FLOAT_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="791" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class float&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="float ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FLOAT_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			float.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file !
 &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader792" parent_class="792" fileExt=".h" fileName="double" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DOUBLE_H&amp;#010;#define DOUBLE_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="792" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class double&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="double ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DOUBLE_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			double.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file!
  &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader793" parent_class="793" fileExt=".h" fileName="long" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LONG_H&amp;#010;#define LONG_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="793" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class long&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="long ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LONG_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			long.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &!
 quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader794" parent_class="794" fileExt=".h" fileName="short" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SHORT_H&amp;#010;#define SHORT_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="794" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class short&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="short ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SHORT_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			short.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file !
 &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:27:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader795" parent_class="795" fileExt=".h" fileName="string" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRING_H&amp;#010;#define STRING_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="795" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class string&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="string ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRING_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file!
  &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:28:08&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader800" parent_class="800" fileExt=".h" fileName="olsr_node - 104.130.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.130.1.1_H&amp;#010;#define OLSR_NODE_-_104.130.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.131.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.129.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.130.1.99.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="800" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_node - 104.130.1.1&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.131.131.131_1 ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="801" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="802" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="824" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="862" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="864" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="801" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="801" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="802" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="802" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="824" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="824" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="824" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="824" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="862" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="862" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="864" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="864" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.130.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:03&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="801" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="801" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="801" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="802" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="802" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="802" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="802" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="809" field_type="49" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.131.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="818" field_type="655370" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.131.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="824" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="824" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="824" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="824" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="824" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="824" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="842" field_type="3801146" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.129.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="845" field_type="147429808" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.99 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="848" field_type="7536745" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.130.1.99 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="851" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.129.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="862" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="862" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="862" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="862" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="864" field_type="0" initialValue="104.130.1.99" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="864" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="864" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="864" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="912" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader803" parent_class="803" fileExt=".h" fileName="olsr_node - 104.131.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.131.1.1_H&amp;#010;#define OLSR_NODE_-_104.131.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.132.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="803" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_node - 104.131.1.1&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="893" tag="tblock_14" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.131.1.1 ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="893" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="893" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="2" parent_id="893" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="3" parent_id="893" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="4" parent_id="893" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="804" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="805" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="826" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="827" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="828" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="804" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="804" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="805" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="805" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="826" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="826" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="826" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="826" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="827" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="827" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="828" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="828" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.131.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:03:45&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="804" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="804" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="804" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="805" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="805" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="805" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="805" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="809" field_type="144227880" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="809" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="809" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="812" field_type="3801146" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.132.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="815" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.132.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="818" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="818" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="818" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="826" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="826" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="826" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="826" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="826" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="826" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="827" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="827" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="827" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="827" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="828" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="828" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="828" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="828" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="893" field_type="0" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="893" tag="tblock_14" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="893" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="893" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="893" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="893" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="893" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="909" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader806" parent_class="806" fileExt=".h" fileName="olsr_node - 104.132.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.132.1.1_H&amp;#010;#define OLSR_NODE_-_104.132.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.131.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.133.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="806" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_node - 104.132.1.1&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="865" tag="tblock_14" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.133.1.1 ;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="920" tag="tblock_20" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.132.1.1 ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="865" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="865" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="2" parent_id="865" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="3" parent_id="865" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="4" parent_id="865" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="920" tag="hblock_tag_21" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="920" tag="hblock_tag_22" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="2" parent_id="920" tag="hblock_tag_23" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="3" parent_id="920" tag="hblock_tag_24" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="4" parent_id="920" tag="hblock_tag_25" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="807" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="808" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="829" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="860" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="861" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="807" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="807" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="808" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="808" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="829" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="829" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="829" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="829" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="860" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="860" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="861" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="861" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.132.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="807" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="807" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="807" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="808" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="808" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="808" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="808" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="812" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.131.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="812" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="812" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="815" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.131.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="815" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="815" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="829" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="829" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="829" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="829" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="829" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="829" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="860" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="860" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="860" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="860" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="861" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="861" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="861" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="861" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="865" field_type="0" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="865" tag="tblock_14" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.133.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="865" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="865" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="865" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="865" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="865" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="868" field_type="3801146" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.133.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="920" field_type="0" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="920" tag="tblock_20" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="920" tag="hblock_tag_21" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="920" tag="hblock_tag_22" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="920" tag="hblock_tag_23" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="920" tag="hblock_tag_24" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="920" tag="hblock_tag_25" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader825" parent_class="825" fileExt=".h" fileName="olsr_node" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_H&amp;#010;#define OLSR_NODE_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="825" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_node&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 12:36:21&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader830" parent_class="830" fileExt=".h" fileName="olsr_node - 104.129.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.129.1.1_H&amp;#010;#define OLSR_NODE_-_104.129.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="830" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_node - 104.129.1.1&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.129.1.1 ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="832" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="833" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="834" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="835" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="836" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="832" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="832" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="833" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="833" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="834" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="834" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="834" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="834" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="835" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="835" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="836" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="836" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.129.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:38&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="832" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="832" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="832" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="833" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="833" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="833" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="833" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="834" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="834" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="834" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="834" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="834" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="834" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="835" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="835" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="835" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="835" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="836" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="836" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="836" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="836" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="842" field_type="655370" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="842" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="842" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="851" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="851" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="879" field_type="3801146" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader831" parent_class="831" fileExt=".h" fileName="olsr_node - 104.130.1.99" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.130.1.99_H&amp;#010;#define OLSR_NODE_-_104.130.1.99_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="831" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_node - 104.130.1.99&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.130.1.99 ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="837" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="838" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="839" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="840" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="841" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="837" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="837" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="838" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="838" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="839" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="839" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="839" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="839" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="840" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="840" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="841" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="841" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.130.1.99_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If!
  you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:40&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="837" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="837" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="837" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="838" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="838" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="838" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="838" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="839" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="839" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="839" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="839" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="839" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="839" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="840" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="840" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="840" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="840" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="841" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="841" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="841" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="841" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="845" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="845" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="845" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="848" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="848" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="848" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader854" parent_class="854" fileExt=".h" fileName="olsr_node - 104.133.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.133.1.1_H&amp;#010;#define OLSR_NODE_-_104.133.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.132.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="854" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_node - 104.133.1.1&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.133.1.1 ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="855" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="856" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="857" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="858" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="859" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="855" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="855" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="856" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="856" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="857" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="857" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="857" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="857" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="858" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="858" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="859" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="859" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.133.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:21:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="855" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="855" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="855" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="856" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="856" tag="tblock_2" canDelete="false" indentLevel="1" text=" int last_seen;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="856" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="856" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="857" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="857" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node top;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="857" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="857" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="857" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="857" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="858" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="858" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node left;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="858" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="858" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="859" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="859" tag="tblock_11" canDelete="false" indentLevel="1" text=" olsr_node right;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="859" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="859" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="865" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_node - 104.132.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="865" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="865" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="868" field_type="3801146" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.132.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="868" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="868" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="923" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader871" parent_class="871" fileExt=".h" fileName="olsr_con - 104.131.1.1:104.129.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_-_104.131.1.1:104.129.1.1_H&amp;#010;#define OLSR_CON_-_104.131.1.1:104.129.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="871" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_con - 104.131.1.1:104.129.1.1&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="874" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="875" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="896" tag="tblock_23" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="898" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="874" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="874" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="875" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="875" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="896" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="896" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="898" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="898" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_-_104.131.1.1:104.129.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:05:59&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="874" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="874" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="874" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="874" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="875" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="875" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="875" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="875" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="879" field_type="2949152" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.129.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="879" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="879" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="893" field_type="655370" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.131.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="893" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="893" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="896" tag="tblock_23" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="896" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="896" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="898" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="898" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="898" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="898" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="903" field_type="3145777" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="906" field_type="3145777" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader882" parent_class="882" fileExt=".h" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_-_104.131.1.1:104.130.1.1_H&amp;#010;#define OLSR_CON_-_104.131.1.1:104.130.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con - 104.131.1.1:104.129.1.1.h&quot;&amp;#010;#include &quot;olsr_con - 104.132.1.1:104.133.1.1.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="882" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_con - 104.131.1.1:104.130.1.1&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="899" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="900" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="901" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="902" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="899" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="899" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="900" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="900" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="901" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="901" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="902" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="902" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_-_104.131.1.1:104.130.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:07:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="899" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="899" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="899" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="900" field_type="0" initialValue="104.131.1.1:104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="900" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="900" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="900" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="901" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="901" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="901" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="901" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="902" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="902" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="902" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="902" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="903" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="903" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="903" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="906" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="906" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="906" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="909" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.131.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="909" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="909" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="912" field_type="3145777" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="912" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="912" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="926" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="929" field_type="3145777" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.132.1.1:104.133.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader897" parent_class="897" fileExt=".h" fileName="olsr_con" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_H&amp;#010;#define OLSR_CON_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="897" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_con&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:01:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields/>
-    </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader915" parent_class="915" fileExt=".h" fileName="olsr_con - 104.132.1.1:104.133.1.1" >
-     <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_-_104.132.1.1:104.133.1.1_H&amp;#010;#define OLSR_CON_-_104.132.1.1:104.133.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <codeblockwithcomments tag="using" writeOutText="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="namespace" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
-       </header>
-       <textblocks>
-        <codeblockwithcomments tag="enums" writeOutText="false" >
-         <header>
-          <cppcodedocumentation tag="" writeOutText="false" />
-         </header>
-        </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="915" tag="classDeclarationBlock" canDelete="false" >
-         <header>
-          <cppcodedocumentation tag="" text="Class olsr_con - 104.132.1.1:104.133.1.1&amp;#010;" />
-         </header>
-         <textblocks>
-          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Public stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con - 104.132.1.1:104.133.1.1 ( ) { }" >
-                 <header>
-                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
-                 </header>
-                </codeblockwithcomments>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Protected stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks/>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
-           <header>
-            <cppcodedocumentation tag="" text="Private stuff" />
-           </header>
-           <textblocks>
-            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
-             </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="916" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="917" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="918" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="919" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
-             <header>
-              <cppcodedocumentation tag="" indentLevel="1" />
-             </header>
-             <textblocks>
-              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
-               </header>
-               <textblocks>
-                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks/>
-                </hierarchicalcodeblock>
-                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
-                 <header>
-                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-                 </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="916" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="916" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="917" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="917" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="918" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="918" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="919" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="919" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
-                </hierarchicalcodeblock>
-               </textblocks>
-              </hierarchicalcodeblock>
-              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
-               <header>
-                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
-               </header>
-               <textblocks/>
-              </hierarchicalcodeblock>
-             </textblocks>
-            </hierarchicalcodeblock>
-           </textblocks>
-          </hierarchicalcodeblock>
-         </textblocks>
-        </cppheaderclassdeclarationblock>
-       </textblocks>
-      </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_-_104.132.1.1:104.133.1.1_H" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-     </textblocks>
-     <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Feb 25 2006 at 13:22:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
-     </header>
-     <classfields>
-      <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="916" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="916" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="916" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="917" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="917" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="917" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="917" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="918" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="918" tag="tblock_5" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="918" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="918" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="919" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="919" tag="tblock_8" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="919" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="919" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="920" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.132.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="920" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="920" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="923" field_type="3145777" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_node - 104.133.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="923" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="923" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="926" field_type="3145777" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="926" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="926" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="929" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.131.1.1:104.130.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="929" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
-    </classifiercodedocument>
-   </codegenerator>
-  </codegeneration>
+  <codegeneration/>
  </XMI.extensions>
 </XMI>

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-26 15:20:42 UTC (rev 108)
+++ trunk/apps/olsrs3d/main.c	2006-02-26 19:48:20 UTC (rev 109)
@@ -178,6 +178,13 @@
 			/* remove element from ob2ip list */
 			lst_del( olsr_node->obj_id );
 			s3d_del_object( olsr_node->obj_id );
+	
+			olsr_con_list = olsr_node->olsr_con_list;
+				while( olsr_con_list != NULL) {
+					olsr_con_list->olsr_con->visible = 0;
+					s3d_del_object(olsr_con_list->olsr_con->obj_id);
+					olsr_con_list = olsr_con_list->next_olsr_con_list;
+			}
 		}
 
 		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
@@ -339,7 +346,7 @@
 	while ( (*olsr_con) != NULL ) {
 
 		/* move left olsr node if it has not been moved yet */
-		if ( !( ( (*olsr_con)->left_olsr_node->mov_vec[0] == 0 ) && ( (*olsr_con)->left_olsr_node->mov_vec[1] == 0 ) && ( (*olsr_con)->left_olsr_node->mov_vec[2] == 0 ) ) ) {
+		if ( !( ( (*olsr_con)->left_olsr_node->mov_vec[0] == 0 ) && ( (*olsr_con)->left_olsr_node->mov_vec[1] == 0 ) && ( (*olsr_con)->left_olsr_node->mov_vec[2] == 0 ) )  && (*olsr_con)->left_olsr_node->visible) {
 
 			distance = dirt( (*olsr_con)->left_olsr_node->pos_vec, null_vec, tmp_mov_vec );
 			mov_add( (*olsr_con)->left_olsr_node->mov_vec, tmp_mov_vec, distance / 100 ); /* move a little bit to point zero */
@@ -359,7 +366,7 @@
 		}
 
 		/* move right olsr node if it has not been moved yet */
-		if ( !( ( (*olsr_con)->right_olsr_node->mov_vec[0] == 0 ) && ( (*olsr_con)->right_olsr_node->mov_vec[1] == 0 ) && ( (*olsr_con)->right_olsr_node->mov_vec[2] == 0 ) ) ) {
+		if ( !( ( (*olsr_con)->right_olsr_node->mov_vec[0] == 0 ) && ( (*olsr_con)->right_olsr_node->mov_vec[1] == 0 ) && ( (*olsr_con)->right_olsr_node->mov_vec[2] == 0 ) ) && (*olsr_con)->right_olsr_node->visible) {
 
 			distance = dirt( (*olsr_con)->right_olsr_node->pos_vec, null_vec, tmp_mov_vec );
 			mov_add( (*olsr_con)->right_olsr_node->mov_vec, tmp_mov_vec, distance / 100 ); /* move a little bit to point zero */
@@ -378,72 +385,73 @@
 
 		}
 
-		/* move connection between left and right olsr node */
-		s3d_pop_vertex( (*olsr_con)->obj_id, 6 );
-		s3d_pop_polygon( (*olsr_con)->obj_id, 2 );
-		s3d_pop_material( (*olsr_con)->obj_id, 1 );
-
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] - 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
-
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
-		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]- 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
-
-		if ( ColorSwitch ) {
-
-			/* HNA */
-			if ( (*olsr_con)->left_etx == -1000.00 ) {
-
-				s3d_push_material( (*olsr_con)->obj_id,
-							   0.0,0.0,1.0,
-							   0.0,0.0,1.0,
-							   0.0,0.0,1.0);
-
-			} else {
-
-				etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
-
-				if ( ( etx >= 1.0 ) && ( etx < 2.0 ) ) {
-
-					rgb = etx - 1.0;
+		if( (*olsr_con)->visible) {
+			/* move connection between left and right olsr node */
+			s3d_pop_vertex( (*olsr_con)->obj_id, 6 );
+			s3d_pop_polygon( (*olsr_con)->obj_id, 2 );
+			s3d_pop_material( (*olsr_con)->obj_id, 1 );
+	
+			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
+			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
+			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] - 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
+	
+			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
+			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
+			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]- 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
+	
+			if ( ColorSwitch ) {
+	
+				/* HNA */
+				if ( (*olsr_con)->left_etx == -1000.00 ) {
+	
 					s3d_push_material( (*olsr_con)->obj_id,
-								rgb,1.0,0.0,
-								rgb,1.0,0.0,
-								rgb,1.0,0.0);
-
-				} else if ( ( etx >= 2.0 ) && ( etx < 3.0 ) ) {
-
-					rgb = 3.0 - etx;
-					s3d_push_material( (*olsr_con)->obj_id,
-								1.0,rgb,0.0,
-								1.0,rgb,0.0,
-								1.0,rgb,0.0);
-
+								   0.0,0.0,1.0,
+								   0.0,0.0,1.0,
+								   0.0,0.0,1.0);
+	
 				} else {
-
-					s3d_push_material( (*olsr_con)->obj_id,
-								1.0,0.0,0.0,
-								1.0,0.0,0.0,
-								1.0,0.0,0.0);
-
+	
+					etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
+	
+					if ( ( etx >= 1.0 ) && ( etx < 2.0 ) ) {
+	
+						rgb = etx - 1.0;
+						s3d_push_material( (*olsr_con)->obj_id,
+									rgb,1.0,0.0,
+									rgb,1.0,0.0,
+									rgb,1.0,0.0);
+	
+					} else if ( ( etx >= 2.0 ) && ( etx < 3.0 ) ) {
+	
+						rgb = 3.0 - etx;
+						s3d_push_material( (*olsr_con)->obj_id,
+									1.0,rgb,0.0,
+									1.0,rgb,0.0,
+									1.0,rgb,0.0);
+	
+					} else {
+	
+						s3d_push_material( (*olsr_con)->obj_id,
+									1.0,0.0,0.0,
+									1.0,0.0,0.0,
+									1.0,0.0,0.0);
+	
+					}
+	
 				}
-
+	
+			} else {
+	
+				s3d_push_material( (*olsr_con)->obj_id,
+							1.0,1.0,1.0,
+							1.0,1.0,1.0,
+							1.0,1.0,1.0);
+	
 			}
-
-		} else {
-
-			s3d_push_material( (*olsr_con)->obj_id,
-						1.0,1.0,1.0,
-						1.0,1.0,1.0,
-						1.0,1.0,1.0);
-
+	
+			s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
+			s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
 		}
-
-		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
-		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
-
 		olsr_con = &(*olsr_con)->next_olsr_con;
 
 	}

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-26 15:20:42 UTC (rev 108)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-26 19:48:20 UTC (rev 109)
@@ -15,6 +15,7 @@
 	struct olsr_node *right_olsr_node;   /* pointer to right end point of the connection */
 	float left_etx;   /* etx of left olsr node */
 	float right_etx;   /* etx of right olsr node */
+	int visible;   /* is this connection visible or vanished */
 	int obj_id;   /* id of connection object in s3d */
 
 };

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-26 15:20:42 UTC (rev 108)
+++ trunk/apps/olsrs3d/process.c	2006-02-26 19:48:20 UTC (rev 109)
@@ -53,6 +53,7 @@
 
 		/* create connection object */
 		(*olsr_con)->obj_id = s3d_new_object();
+		(*olsr_con)->visible = 1;
 		s3d_push_material( (*olsr_con)->obj_id,
 				  1.0,1.0,1.0,
 				  1.0,1.0,1.0,
@@ -206,6 +207,15 @@
 
 			/* former invisble (deleted) node */
 			if ( (*olsr_node)->visible == 0 ) {
+				struct olsr_con_list *olsr_con_list;
+				
+				olsr_con_list = (*olsr_node)->olsr_con_list;
+				
+				while(olsr_con_list != NULL) {
+					olsr_con_list->olsr_con->visible = 1;
+					olsr_con_list = olsr_con_list->next_olsr_con_list;	
+				}
+				
 				(*olsr_node)->visible = 1;
 				if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
 			}
@@ -596,9 +606,9 @@
 							if ( Debug ) printf( "new hna network: %s\n", olsr_node2->ip );
 
 						}
+						if(olsr_node1->visible && olsr_node2->visible)
+							add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
 
-						add_olsr_con( olsr_node1, olsr_node2, -1000.00 );
-
 					}
 
 				/* normal node */
@@ -607,7 +617,8 @@
 					olsr_node1 = get_olsr_node( &Olsr_root, con_from );
 					olsr_node2 = get_olsr_node( &Olsr_root, con_to );
 					f=10.0+strtod(etx,NULL)/10.0;
-					if (f>=5) add_olsr_con( olsr_node1, olsr_node2, f );   /* just to prevent ascii to float converting inconsistency ... */
+					if (f>=5 && olsr_node1->visible && olsr_node2->visible)
+						add_olsr_con( olsr_node1, olsr_node2, f );   /* just to prevent ascii to float converting inconsistency ... */
 
 				}
 



From dotslash at berlios.de  Mon Feb 27 15:54:45 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Mon, 27 Feb 2006 15:54:45 +0100
Subject: [S3d-svn] r110 - trunk
Message-ID: <200602271454.k1REsjhN020860@sheep.berlios.de>

Author: dotslash
Date: 2006-02-27 15:54:24 +0100 (Mon, 27 Feb 2006)
New Revision: 110

Modified:
   trunk/
   trunk/TODO
Log:
 r150 at balthasar:  dotslash | 2006-02-27 15:54:10 +0100
 todo ;)



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:138
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:150

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2006-02-26 19:48:20 UTC (rev 109)
+++ trunk/TODO	2006-02-27 14:54:24 UTC (rev 110)
@@ -1,3 +1,4 @@
+look for strncat foobar :)
 client(portability?!):
 	shmat() return (char *) -1 or NULL?! data_ctos/data_stoc should
 	really not be 0x0



From ankon at berlios.de  Mon Feb 27 16:46:57 2006
From: ankon at berlios.de (ankon at BerliOS)
Date: Mon, 27 Feb 2006 16:46:57 +0100
Subject: [S3d-svn] r111 - trunk
Message-ID: <200602271546.k1RFkvOp029250@sheep.berlios.de>

Author: ankon
Date: 2006-02-27 16:46:57 +0100 (Mon, 27 Feb 2006)
New Revision: 111

Modified:
   trunk/README
Log:
Add WWW: link



Modified: trunk/README
===================================================================
--- trunk/README	2006-02-27 14:54:24 UTC (rev 110)
+++ trunk/README	2006-02-27 15:46:57 UTC (rev 111)
@@ -128,5 +128,6 @@
 
 MAIL: 	dotslash at packetmixer.de
 IRC: 	#s3d @ irc.freenode.org
+WWW:	http://s3d.berlios.de
 
 Any Feedback is welcome!!



From marec at berlios.de  Mon Feb 27 17:42:44 2006
From: marec at berlios.de (marec at BerliOS)
Date: Mon, 27 Feb 2006 17:42:44 +0100
Subject: [S3d-svn] r112 - trunk/apps/olsrs3d
Message-ID: <200602271642.k1RGgi68006642@sheep.berlios.de>

Author: marec
Date: 2006-02-27 17:42:43 +0100 (Mon, 27 Feb 2006)
New Revision: 112

Modified:
   trunk/apps/olsrs3d/data_structure.xmi
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
code cleanup


Modified: trunk/apps/olsrs3d/data_structure.xmi
===================================================================
--- trunk/apps/olsrs3d/data_structure.xmi	2006-02-27 15:46:57 UTC (rev 111)
+++ trunk/apps/olsrs3d/data_structure.xmi	2006-02-27 16:42:43 UTC (rev 112)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-26T20:38:10" xmi.version="1.2" >
+<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-27T15:55:27" xmi.version="1.2" >
  <XMI.header>
   <XMI.documentation>
    <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
@@ -24,7 +24,6 @@
      <UML:Classifier.feature>
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="801" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="802" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
-      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="824" isRoot="false" initialValue="104.131.1.1" type="825" isAbstract="false" name="top" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="862" isRoot="false" initialValue="104.129.1.1" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="864" isRoot="false" initialValue="104.130.1.99" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
@@ -33,7 +32,6 @@
      <UML:Classifier.feature>
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="804" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="805" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
-      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="826" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="top" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="827" isRoot="false" initialValue="104.130.1.1" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="828" isRoot="false" initialValue="104.132.1.1" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
@@ -42,7 +40,6 @@
      <UML:Classifier.feature>
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="807" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="808" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
-      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="829" isRoot="false" initialValue="104.131.1.1" type="825" isAbstract="false" name="top" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="860" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="861" isRoot="false" initialValue="104.133.1.1" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
@@ -52,7 +49,6 @@
      <UML:Classifier.feature>
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="832" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="833" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
-      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="834" isRoot="false" initialValue="104.130.1.1" type="825" isAbstract="false" name="top" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="835" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="836" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
@@ -61,7 +57,6 @@
      <UML:Classifier.feature>
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="837" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="838" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
-      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="839" isRoot="false" initialValue="104.130.1.1" type="825" isAbstract="false" name="top" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="840" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="841" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
@@ -70,7 +65,6 @@
      <UML:Classifier.feature>
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="855" isRoot="false" initialValue="" type="789" isAbstract="false" name="ip" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="856" isRoot="false" initialValue="50" type="787" isAbstract="false" name="last_seen" />
-      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="857" isRoot="false" initialValue="104.132.1.1" type="825" isAbstract="false" name="top" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="858" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="859" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
@@ -144,18 +138,6 @@
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="814" aggregation="none" type="806" name="" />
      </UML:Association.connection>
     </UML:Association>
-    <UML:Association isSpecification="false" visibility="public" xmi.id="815" name="" >
-     <UML:Association.connection>
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="816" aggregation="none" type="806" name="" />
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="817" aggregation="none" type="803" name="" />
-     </UML:Association.connection>
-    </UML:Association>
-    <UML:Association isSpecification="false" visibility="public" xmi.id="818" name="" >
-     <UML:Association.connection>
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="819" aggregation="none" type="800" name="" />
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="820" aggregation="none" type="803" name="" />
-     </UML:Association.connection>
-    </UML:Association>
     <UML:Association isSpecification="false" visibility="public" xmi.id="842" name="" >
      <UML:Association.connection>
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="843" aggregation="none" type="800" name="" />
@@ -168,30 +150,12 @@
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="847" aggregation="none" type="831" name="" />
      </UML:Association.connection>
     </UML:Association>
-    <UML:Association isSpecification="false" visibility="public" xmi.id="848" name="" >
-     <UML:Association.connection>
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="849" aggregation="none" type="831" name="" />
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="850" aggregation="none" type="800" name="" />
-     </UML:Association.connection>
-    </UML:Association>
-    <UML:Association isSpecification="false" visibility="public" xmi.id="851" name="" >
-     <UML:Association.connection>
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="852" aggregation="none" type="830" name="" />
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="853" aggregation="none" type="800" name="" />
-     </UML:Association.connection>
-    </UML:Association>
     <UML:Association isSpecification="false" visibility="public" xmi.id="865" name="" >
      <UML:Association.connection>
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="866" aggregation="none" type="806" name="" />
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="867" aggregation="none" type="854" name="" />
      </UML:Association.connection>
     </UML:Association>
-    <UML:Association isSpecification="false" visibility="public" xmi.id="868" name="" >
-     <UML:Association.connection>
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="869" aggregation="none" type="854" name="" />
-      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="870" aggregation="none" type="806" name="" />
-     </UML:Association.connection>
-    </UML:Association>
     <UML:Dependency isSpecification="false" visibility="public" xmi.id="879" client="871" name="" supplier="830" />
     <UML:Dependency isSpecification="false" visibility="public" xmi.id="893" client="871" name="" supplier="803" />
     <UML:Association isSpecification="false" visibility="public" xmi.id="903" name="" >
@@ -286,195 +250,165 @@
   </UML:Model>
  </XMI.content>
  <XMI.extensions xmi.extender="umbrello" >
-  <docsettings viewid="786" documentation="" uniqueid="1079" />
+  <docsettings viewid="786" documentation="" uniqueid="1080" />
   <diagrams>
-   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="75" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1409" snapy="10" showatts="1" xmi.id="786" documentation="" type="402" showops="1" showpackage="0" name="Klassendiagramm" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1103" >
+   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="75" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1341" snapy="10" showatts="1" xmi.id="786" documentation="" type="402" showops="1" showpackage="0" name="Klassendiagramm" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1085" >
     <widgets>
-     <classwidget usesdiagramfillcolour="0" width="230" showattsigs="601" usesdiagramusefillcolour="0" x="329" linecolour="#ff0000" y="509" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="800" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="222" showattsigs="601" usesdiagramusefillcolour="0" x="496" linecolour="#ff0000" y="325" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="803" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="222" showattsigs="601" usesdiagramusefillcolour="0" x="690" linecolour="#ff0000" y="505" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="806" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="212" showattsigs="601" usesdiagramusefillcolour="0" x="205" linecolour="#ff0000" y="705" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="830" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="212" showattsigs="601" usesdiagramusefillcolour="0" x="462" linecolour="#ff0000" y="706" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="831" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="212" showattsigs="601" usesdiagramusefillcolour="0" x="843" linecolour="#ff0000" y="694" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="104" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="854" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="356" showattsigs="601" usesdiagramusefillcolour="0" x="31" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="871" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="356" showattsigs="601" usesdiagramusefillcolour="0" x="414" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="882" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="356" showattsigs="601" usesdiagramusefillcolour="0" x="825" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="915" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="220" showattsigs="601" usesdiagramusefillcolour="0" x="24" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="933" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="220" showattsigs="601" usesdiagramusefillcolour="0" x="315" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="940" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="220" showattsigs="601" usesdiagramusefillcolour="0" x="586" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="967" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="220" showattsigs="601" usesdiagramusefillcolour="0" x="866" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="88" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1004" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="187" showattsigs="601" usesdiagramusefillcolour="0" x="329" linecolour="#ff0000" y="509" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="800" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="496" linecolour="#ff0000" y="325" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="803" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="690" linecolour="#ff0000" y="505" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="806" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="205" linecolour="#ff0000" y="705" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="830" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="148" showattsigs="601" usesdiagramusefillcolour="0" x="462" linecolour="#ff0000" y="706" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="831" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="843" linecolour="#ff0000" y="694" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="854" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="31" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="871" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="414" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="882" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="825" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="915" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="24" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="933" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="315" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="940" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="586" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="967" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="866" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1004" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     </widgets>
     <messages/>
     <associations>
-     <assocwidget totalcounta="5" indexa="1" totalcountb="4" indexb="2" widgetbid="800" widgetaid="803" xmi.id="809" >
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="800" widgetaid="803" xmi.id="809" >
       <linepath>
-       <startpoint startx="540" starty="429" />
-       <endpoint endx="444" endy="509" />
+       <startpoint startx="556" starty="402" />
+       <endpoint endx="453" endy="509" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="5" indexa="3" totalcountb="4" indexb="1" widgetbid="806" widgetaid="803" xmi.id="812" >
+     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" widgetbid="806" widgetaid="803" xmi.id="812" >
       <linepath>
-       <startpoint startx="629" starty="429" />
-       <endpoint endx="745" endy="505" />
+       <startpoint startx="616" starty="402" />
+       <endpoint endx="750" endy="505" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="4" indexa="2" totalcountb="5" indexb="4" widgetbid="803" widgetaid="806" xmi.id="815" >
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="830" widgetaid="800" xmi.id="842" >
       <linepath>
-       <startpoint startx="801" starty="505" />
-       <endpoint endx="673" endy="429" />
+       <startpoint startx="391" starty="586" />
+       <endpoint endx="299" endy="705" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="4" indexa="3" totalcountb="5" indexb="2" widgetbid="803" widgetaid="800" xmi.id="818" >
+     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="831" widgetaid="800" xmi.id="845" >
       <linepath>
-       <startpoint startx="501" starty="509" />
-       <endpoint endx="584" endy="429" />
+       <startpoint startx="453" starty="586" />
+       <endpoint endx="536" endy="706" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="5" indexa="1" totalcountb="4" indexb="2" widgetbid="830" widgetaid="800" xmi.id="842" >
+     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="854" widgetaid="806" xmi.id="865" >
       <linepath>
-       <startpoint startx="375" starty="613" />
-       <endpoint endx="311" endy="705" />
+       <startpoint startx="780" starty="582" />
+       <endpoint endx="890" endy="694" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="5" indexa="3" totalcountb="3" indexb="1" widgetbid="831" widgetaid="800" xmi.id="845" >
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="830" widgetaid="871" xmi.id="879" >
       <linepath>
-       <startpoint startx="467" starty="613" />
-       <endpoint endx="532" endy="706" />
+       <startpoint startx="129" starty="163" />
+       <endpoint endx="252" endy="705" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="2" totalcountb="5" indexb="4" widgetbid="800" widgetaid="831" xmi.id="848" >
-      <linepath>
-       <startpoint startx="603" starty="706" />
-       <endpoint endx="513" endy="613" />
-      </linepath>
-     </assocwidget>
-     <assocwidget totalcounta="4" indexa="3" totalcountb="5" indexb="2" widgetbid="800" widgetaid="830" xmi.id="851" >
-      <linepath>
-       <startpoint startx="364" starty="705" />
-       <endpoint endx="421" endy="613" />
-      </linepath>
-     </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="854" widgetaid="806" xmi.id="865" >
-      <linepath>
-       <startpoint startx="764" starty="609" />
-       <endpoint endx="896" endy="694" />
-      </linepath>
-     </assocwidget>
-     <assocwidget totalcounta="4" indexa="2" totalcountb="3" indexb="2" widgetbid="806" widgetaid="854" xmi.id="868" >
-      <linepath>
-       <startpoint startx="949" starty="694" />
-       <endpoint endx="838" endy="609" />
-      </linepath>
-     </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="830" widgetaid="871" xmi.id="879" >
-      <linepath>
-       <startpoint startx="149" starty="174" />
-       <endpoint endx="258" endy="705" />
-      </linepath>
-     </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" widgetbid="803" widgetaid="871" xmi.id="893" >
       <linepath>
-       <startpoint startx="268" starty="174" />
-       <endpoint endx="570" endy="325" />
+       <startpoint startx="227" starty="163" />
+       <endpoint endx="556" endy="325" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="882" widgetaid="871" xmi.id="903" >
       <linepath>
-       <startpoint startx="387" starty="115" />
-       <endpoint endx="414" endy="115" />
+       <startpoint startx="325" starty="111" />
+       <endpoint endx="414" endy="111" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="871" widgetaid="882" xmi.id="906" >
       <linepath>
-       <startpoint startx="414" starty="144" />
-       <endpoint endx="387" endy="144" />
+       <startpoint startx="414" starty="137" />
+       <endpoint endx="325" endy="137" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="803" widgetaid="882" xmi.id="909" >
       <linepath>
-       <startpoint startx="651" starty="174" />
-       <endpoint endx="644" endy="325" />
+       <startpoint startx="610" starty="163" />
+       <endpoint endx="616" endy="325" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="800" widgetaid="882" xmi.id="912" >
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="800" widgetaid="882" xmi.id="912" >
       <linepath>
-       <startpoint startx="532" starty="174" />
-       <endpoint endx="386" endy="509" />
+       <startpoint startx="512" starty="163" />
+       <endpoint endx="391" endy="509" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="3" widgetbid="806" widgetaid="915" xmi.id="920" >
+     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="806" widgetaid="915" xmi.id="920" >
       <linepath>
-       <startpoint startx="943" starty="174" />
-       <endpoint endx="856" endy="505" />
+       <startpoint startx="923" starty="163" />
+       <endpoint endx="810" endy="505" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="2" totalcountb="4" indexb="3" widgetbid="854" widgetaid="915" xmi.id="923" >
+     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="854" widgetaid="915" xmi.id="923" >
       <linepath>
-       <startpoint startx="1062" starty="174" />
-       <endpoint endx="1002" endy="694" />
+       <startpoint startx="1021" starty="163" />
+       <endpoint endx="937" endy="694" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="915" widgetaid="882" xmi.id="926" >
       <linepath>
-       <startpoint startx="770" starty="115" />
-       <endpoint endx="825" endy="115" />
+       <startpoint startx="708" starty="111" />
+       <endpoint endx="825" endy="111" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="882" widgetaid="915" xmi.id="929" >
       <linepath>
-       <startpoint startx="825" starty="144" />
-       <endpoint endx="770" endy="144" />
+       <startpoint startx="825" starty="137" />
+       <endpoint endx="708" endy="137" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="1004" widgetaid="967" xmi.id="1053" >
       <linepath>
-       <startpoint startx="806" starty="912" />
-       <endpoint endx="866" endy="912" />
+       <startpoint startx="760" starty="908" />
+       <endpoint endx="866" endy="908" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="967" widgetaid="1004" xmi.id="1056" >
       <linepath>
-       <startpoint startx="866" starty="941" />
-       <endpoint endx="806" endy="941" />
+       <startpoint startx="866" starty="934" />
+       <endpoint endx="760" endy="934" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="967" widgetaid="940" xmi.id="1059" >
       <linepath>
-       <startpoint startx="535" starty="912" />
-       <endpoint endx="586" endy="912" />
+       <startpoint startx="489" starty="908" />
+       <endpoint endx="586" endy="908" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="940" widgetaid="967" xmi.id="1062" >
       <linepath>
-       <startpoint startx="586" starty="941" />
-       <endpoint endx="535" endy="941" />
+       <startpoint startx="586" starty="934" />
+       <endpoint endx="489" endy="934" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="940" widgetaid="933" xmi.id="1065" >
       <linepath>
-       <startpoint startx="244" starty="912" />
-       <endpoint endx="315" endy="912" />
+       <startpoint startx="198" starty="908" />
+       <endpoint endx="315" endy="908" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="933" widgetaid="940" xmi.id="1068" >
       <linepath>
-       <startpoint startx="315" starty="941" />
-       <endpoint endx="244" endy="941" />
+       <startpoint startx="315" starty="934" />
+       <endpoint endx="198" endy="934" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="0" indexa="0" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="1071" >
+     <assocwidget totalcounta="2" indexa="1" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="1071" >
       <linepath>
-       <startpoint startx="79" starty="883" />
-       <endpoint endx="189" endy="883" />
+       <startpoint startx="67" starty="883" />
+       <endpoint endx="154" endy="883" />
        <point x="79" y="867" />
        <point x="79" y="833" />
        <point x="189" y="833" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="0" indexa="0" totalcountb="0" indexb="0" widgetbid="1004" widgetaid="1004" xmi.id="1077" >
+     <assocwidget totalcounta="2" indexa="1" totalcountb="0" indexb="0" widgetbid="1004" widgetaid="1004" xmi.id="1077" >
       <linepath>
-       <startpoint startx="921" starty="883" />
-       <endpoint endx="1031" endy="883" />
+       <startpoint startx="909" starty="883" />
+       <endpoint endx="996" endy="883" />
        <point x="921" y="833" />
        <point x="1031" y="833" />
       </linepath>
@@ -532,42 +466,36 @@
      <listitem open="0" type="813" id="830" >
       <listitem open="0" type="814" id="832" />
       <listitem open="0" type="814" id="833" />
-      <listitem open="0" type="814" id="834" />
       <listitem open="0" type="814" id="835" />
       <listitem open="0" type="814" id="836" />
      </listitem>
      <listitem open="0" type="813" id="800" >
       <listitem open="0" type="814" id="801" />
       <listitem open="0" type="814" id="802" />
-      <listitem open="0" type="814" id="824" />
       <listitem open="0" type="814" id="862" />
       <listitem open="0" type="814" id="864" />
      </listitem>
      <listitem open="0" type="813" id="831" >
       <listitem open="0" type="814" id="837" />
       <listitem open="0" type="814" id="838" />
-      <listitem open="0" type="814" id="839" />
       <listitem open="0" type="814" id="840" />
       <listitem open="0" type="814" id="841" />
      </listitem>
      <listitem open="0" type="813" id="803" >
       <listitem open="0" type="814" id="804" />
       <listitem open="0" type="814" id="805" />
-      <listitem open="0" type="814" id="826" />
       <listitem open="0" type="814" id="827" />
       <listitem open="0" type="814" id="828" />
      </listitem>
      <listitem open="0" type="813" id="806" >
       <listitem open="0" type="814" id="807" />
       <listitem open="0" type="814" id="808" />
-      <listitem open="0" type="814" id="829" />
       <listitem open="0" type="814" id="860" />
       <listitem open="0" type="814" id="861" />
      </listitem>
      <listitem open="0" type="813" id="854" >
       <listitem open="0" type="814" id="855" />
       <listitem open="0" type="814" id="856" />
-      <listitem open="0" type="814" id="857" />
       <listitem open="0" type="814" id="858" />
       <listitem open="0" type="814" id="859" />
      </listitem>
@@ -588,6 +516,6925 @@
     <listitem open="1" type="836" label="Entity Relationship Modell" />
    </listitem>
   </listview>
-  <codegeneration/>
+  <codegeneration>
+   <codegenerator language="Cpp" >
+    <classifiercodedocument writeOutCode="true" package="" id="800" parent_class="800" fileExt=".cpp" fileName="olsr_node - 104.130.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" classfield_id="801" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_1" canDelete="false" classfield_id="801" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_2" canDelete="false" classfield_id="802" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_3" canDelete="false" classfield_id="802" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_6" canDelete="false" classfield_id="862" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_7" canDelete="false" classfield_id="862" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_8" canDelete="false" classfield_id="864" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_9" canDelete="false" classfield_id="864" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="801" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" classfield_id="801" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_1" canDelete="false" classfield_id="801" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="802" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="802" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_2" canDelete="false" classfield_id="802" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_3" canDelete="false" classfield_id="802" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="862" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="862" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_6" canDelete="false" classfield_id="862" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_7" canDelete="false" classfield_id="862" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="864" field_type="0" initialValue="104.130.1.99" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="864" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_8" canDelete="false" classfield_id="864" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_9" canDelete="false" classfield_id="864" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="803" parent_class="803" fileExt=".cpp" fileName="olsr_node - 104.131.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.131.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" classfield_id="804" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" classfield_id="804" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_2" canDelete="false" classfield_id="805" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_3" canDelete="false" classfield_id="805" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_6" canDelete="false" classfield_id="827" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_7" canDelete="false" classfield_id="827" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_8" canDelete="false" classfield_id="828" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_9" canDelete="false" classfield_id="828" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:55:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="804" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" classfield_id="804" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_1" canDelete="false" classfield_id="804" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="805" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="805" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_2" canDelete="false" classfield_id="805" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_3" canDelete="false" classfield_id="805" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="827" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="827" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_6" canDelete="false" classfield_id="827" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_7" canDelete="false" classfield_id="827" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="828" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="828" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_8" canDelete="false" classfield_id="828" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_9" canDelete="false" classfield_id="828" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="806" parent_class="806" fileExt=".cpp" fileName="olsr_node - 104.132.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.132.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" classfield_id="807" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" classfield_id="807" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_2" canDelete="false" classfield_id="808" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_3" canDelete="false" classfield_id="808" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_6" canDelete="false" classfield_id="860" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_7" canDelete="false" classfield_id="860" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_8" canDelete="false" classfield_id="861" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_9" canDelete="false" classfield_id="861" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="807" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" classfield_id="807" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_1" canDelete="false" classfield_id="807" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="808" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="808" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_2" canDelete="false" classfield_id="808" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_3" canDelete="false" classfield_id="808" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="860" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="860" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_6" canDelete="false" classfield_id="860" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_7" canDelete="false" classfield_id="860" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="861" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="861" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_8" canDelete="false" classfield_id="861" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_9" canDelete="false" classfield_id="861" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="825" parent_class="825" fileExt=".cpp" fileName="olsr_node" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="830" parent_class="830" fileExt=".cpp" fileName="olsr_node - 104.129.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.129.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" classfield_id="832" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" classfield_id="832" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_2" canDelete="false" classfield_id="833" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_3" canDelete="false" classfield_id="833" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_6" canDelete="false" classfield_id="835" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_7" canDelete="false" classfield_id="835" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_8" canDelete="false" classfield_id="836" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_9" canDelete="false" classfield_id="836" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="832" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" classfield_id="832" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_1" canDelete="false" classfield_id="832" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="833" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="833" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_2" canDelete="false" classfield_id="833" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_3" canDelete="false" classfield_id="833" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="835" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="835" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_6" canDelete="false" classfield_id="835" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_7" canDelete="false" classfield_id="835" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="836" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="836" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_8" canDelete="false" classfield_id="836" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_9" canDelete="false" classfield_id="836" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="831" parent_class="831" fileExt=".cpp" fileName="olsr_node - 104.130.1.99" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.130.1.99.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" classfield_id="837" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" classfield_id="837" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_2" canDelete="false" classfield_id="838" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_3" canDelete="false" classfield_id="838" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_6" canDelete="false" classfield_id="840" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_7" canDelete="false" classfield_id="840" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_8" canDelete="false" classfield_id="841" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_9" canDelete="false" classfield_id="841" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010; !
   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="837" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" classfield_id="837" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_1" canDelete="false" classfield_id="837" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="838" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="838" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_2" canDelete="false" classfield_id="838" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_3" canDelete="false" classfield_id="838" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="840" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="840" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_6" canDelete="false" classfield_id="840" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_7" canDelete="false" classfield_id="840" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="841" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="841" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_8" canDelete="false" classfield_id="841" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_9" canDelete="false" classfield_id="841" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="854" parent_class="854" fileExt=".cpp" fileName="olsr_node - 104.133.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_node - 104.133.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" classfield_id="855" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" classfield_id="855" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_2" canDelete="false" classfield_id="856" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_3" canDelete="false" classfield_id="856" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_6" canDelete="false" classfield_id="858" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_7" canDelete="false" classfield_id="858" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_8" canDelete="false" classfield_id="859" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_9" canDelete="false" classfield_id="859" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:31&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="855" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" classfield_id="855" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_1" canDelete="false" classfield_id="855" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="856" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="856" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_2" canDelete="false" classfield_id="856" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_3" canDelete="false" classfield_id="856" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="858" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="858" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_6" canDelete="false" classfield_id="858" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_7" canDelete="false" classfield_id="858" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="859" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="859" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_8" canDelete="false" classfield_id="859" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_9" canDelete="false" classfield_id="859" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="871" parent_class="871" fileExt=".cpp" fileName="olsr_con - 104.131.1.1:104.129.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con - 104.131.1.1:104.129.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_0" canDelete="false" classfield_id="896" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_1" canDelete="false" classfield_id="896" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_2" canDelete="false" classfield_id="898" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_3" canDelete="false" classfield_id="898" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_4" canDelete="false" classfield_id="874" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_5" canDelete="false" classfield_id="874" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_6" canDelete="false" classfield_id="875" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_7" canDelete="false" classfield_id="875" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="896" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_0" canDelete="false" classfield_id="896" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_1" canDelete="false" classfield_id="896" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="898" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="898" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_2" canDelete="false" classfield_id="898" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_3" canDelete="false" classfield_id="898" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="874" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="874" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_4" canDelete="false" classfield_id="874" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_5" canDelete="false" classfield_id="874" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="875" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="875" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_6" canDelete="false" classfield_id="875" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_7" canDelete="false" classfield_id="875" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="882" parent_class="882" fileExt=".cpp" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" classfield_id="899" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" classfield_id="899" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_2" canDelete="false" classfield_id="900" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_3" canDelete="false" classfield_id="900" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_4" canDelete="false" classfield_id="901" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_5" canDelete="false" classfield_id="901" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_6" canDelete="false" classfield_id="902" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_7" canDelete="false" classfield_id="902" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="899" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" classfield_id="899" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_1" canDelete="false" classfield_id="899" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="900" field_type="0" initialValue="104.131.1.1:104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="900" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_2" canDelete="false" classfield_id="900" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_3" canDelete="false" classfield_id="900" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="901" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="901" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_4" canDelete="false" classfield_id="901" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_5" canDelete="false" classfield_id="901" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="902" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="902" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_6" canDelete="false" classfield_id="902" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_7" canDelete="false" classfield_id="902" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="897" parent_class="897" fileExt=".cpp" fileName="olsr_con" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="915" parent_class="915" fileExt=".cpp" fileName="olsr_con - 104.132.1.1:104.133.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con - 104.132.1.1:104.133.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" classfield_id="916" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" classfield_id="916" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_2" canDelete="false" classfield_id="917" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_3" canDelete="false" classfield_id="917" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_4" canDelete="false" classfield_id="918" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_5" canDelete="false" classfield_id="918" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_6" canDelete="false" classfield_id="919" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_7" canDelete="false" classfield_id="919" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="916" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" classfield_id="916" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_1" canDelete="false" classfield_id="916" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="917" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="917" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_2" canDelete="false" classfield_id="917" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_3" canDelete="false" classfield_id="917" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="918" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="918" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_4" canDelete="false" classfield_id="918" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_5" canDelete="false" classfield_id="918" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="919" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="919" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_6" canDelete="false" classfield_id="919" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_7" canDelete="false" classfield_id="919" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="933" parent_class="933" fileExt=".cpp" fileName="obj_to_ip" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;obj_to_ip.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="934" tag="hblock_tag_0" canDelete="false" classfield_id="934" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="934" tag="hblock_tag_1" canDelete="false" classfield_id="934" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="935" tag="hblock_tag_2" canDelete="false" classfield_id="935" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="935" tag="hblock_tag_3" canDelete="false" classfield_id="935" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="936" tag="hblock_tag_4" canDelete="false" classfield_id="936" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="936" tag="hblock_tag_5" canDelete="false" classfield_id="936" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="938" tag="hblock_tag_6" canDelete="false" classfield_id="938" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="938" tag="hblock_tag_7" canDelete="false" classfield_id="938" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="934" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="934" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="934" tag="hblock_tag_0" canDelete="false" classfield_id="934" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="934" tag="hblock_tag_1" canDelete="false" classfield_id="934" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="935" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="935" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="935" tag="hblock_tag_2" canDelete="false" classfield_id="935" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="935" tag="hblock_tag_3" canDelete="false" classfield_id="935" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="936" field_type="0" initialValue="Obj_to_ip - 1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="936" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="936" tag="hblock_tag_4" canDelete="false" classfield_id="936" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="936" tag="hblock_tag_5" canDelete="false" classfield_id="936" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="938" field_type="0" initialValue="Obj_to_ip" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="938" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="938" tag="hblock_tag_6" canDelete="false" classfield_id="938" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="938" tag="hblock_tag_7" canDelete="false" classfield_id="938" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="940" parent_class="940" fileExt=".cpp" fileName="obj_to_ip - 1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;obj_to_ip - 1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="941" tag="hblock_tag_0" canDelete="false" classfield_id="941" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="941" tag="hblock_tag_1" canDelete="false" classfield_id="941" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="942" tag="hblock_tag_2" canDelete="false" classfield_id="942" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="942" tag="hblock_tag_3" canDelete="false" classfield_id="942" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="943" tag="hblock_tag_4" canDelete="false" classfield_id="943" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="943" tag="hblock_tag_5" canDelete="false" classfield_id="943" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="944" tag="hblock_tag_6" canDelete="false" classfield_id="944" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="944" tag="hblock_tag_7" canDelete="false" classfield_id="944" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="941" field_type="0" initialValue="1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="941" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="941" tag="hblock_tag_0" canDelete="false" classfield_id="941" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="941" tag="hblock_tag_1" canDelete="false" classfield_id="941" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="942" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="942" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="942" tag="hblock_tag_2" canDelete="false" classfield_id="942" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="942" tag="hblock_tag_3" canDelete="false" classfield_id="942" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="943" field_type="0" initialValue="Obj_to_ip - 2" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="943" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="943" tag="hblock_tag_4" canDelete="false" classfield_id="943" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="943" tag="hblock_tag_5" canDelete="false" classfield_id="943" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="944" field_type="0" initialValue="Obj_to_ip" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="944" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="944" tag="hblock_tag_6" canDelete="false" classfield_id="944" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="944" tag="hblock_tag_7" canDelete="false" classfield_id="944" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="967" parent_class="967" fileExt=".cpp" fileName="obj_to_ip - 2" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;obj_to_ip - 2.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="968" tag="hblock_tag_0" canDelete="false" classfield_id="968" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="968" tag="hblock_tag_1" canDelete="false" classfield_id="968" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="969" tag="hblock_tag_2" canDelete="false" classfield_id="969" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="969" tag="hblock_tag_3" canDelete="false" classfield_id="969" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="970" tag="hblock_tag_4" canDelete="false" classfield_id="970" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="970" tag="hblock_tag_5" canDelete="false" classfield_id="970" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="971" tag="hblock_tag_6" canDelete="false" classfield_id="971" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="971" tag="hblock_tag_7" canDelete="false" classfield_id="971" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="968" field_type="0" initialValue="2" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="968" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="968" tag="hblock_tag_0" canDelete="false" classfield_id="968" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="968" tag="hblock_tag_1" canDelete="false" classfield_id="968" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="969" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="969" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="969" tag="hblock_tag_2" canDelete="false" classfield_id="969" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="969" tag="hblock_tag_3" canDelete="false" classfield_id="969" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="970" field_type="0" initialValue="Obj_to_ip - 3" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="970" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="970" tag="hblock_tag_4" canDelete="false" classfield_id="970" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="970" tag="hblock_tag_5" canDelete="false" classfield_id="970" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="971" field_type="0" initialValue="Obj_to_ip - 1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="971" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="971" tag="hblock_tag_6" canDelete="false" classfield_id="971" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="971" tag="hblock_tag_7" canDelete="false" classfield_id="971" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="1004" parent_class="1004" fileExt=".cpp" fileName="obj_to_ip -3" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;obj_to_ip -3.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="1005" tag="hblock_tag_0" canDelete="false" classfield_id="1005" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="1005" tag="hblock_tag_1" canDelete="false" classfield_id="1005" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="1006" tag="hblock_tag_2" canDelete="false" classfield_id="1006" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="1006" tag="hblock_tag_3" canDelete="false" classfield_id="1006" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="1007" tag="hblock_tag_4" canDelete="false" classfield_id="1007" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="1007" tag="hblock_tag_5" canDelete="false" classfield_id="1007" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="1008" tag="hblock_tag_6" canDelete="false" classfield_id="1008" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="1008" tag="hblock_tag_7" canDelete="false" classfield_id="1008" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you nam!
 e the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="1005" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1005" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1005" tag="hblock_tag_0" canDelete="false" classfield_id="1005" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1005" tag="hblock_tag_1" canDelete="false" classfield_id="1005" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1006" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1006" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1006" tag="hblock_tag_2" canDelete="false" classfield_id="1006" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1006" tag="hblock_tag_3" canDelete="false" classfield_id="1006" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1007" field_type="0" initialValue="Obj_to_ip - 3" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1007" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1007" tag="hblock_tag_4" canDelete="false" classfield_id="1007" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1007" tag="hblock_tag_5" canDelete="false" classfield_id="1007" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1008" field_type="0" initialValue="Obj_to_ip - 2" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1008" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1008" tag="hblock_tag_6" canDelete="false" classfield_id="1008" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1008" tag="hblock_tag_7" canDelete="false" classfield_id="1008" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
+     <textblocks/>
+     <header>
+      <codecomment tag="" />
+     </header>
+    </codedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader800" parent_class="800" fileExt=".h" fileName="olsr_node - 104.130.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.130.1.1_H&amp;#010;#define OLSR_NODE_-_104.130.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.131.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.129.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.130.1.99.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="800" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.130.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.130.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="801" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="802" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="862" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="864" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="801" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="801" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="802" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="802" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="862" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="862" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="864" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="864" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.130.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="801" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="801" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="801" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="801" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="802" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="802" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="802" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="802" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="862" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="862" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="862" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="862" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="864" field_type="0" initialValue="104.130.1.99" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="864" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="864" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="864" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader803" parent_class="803" fileExt=".h" fileName="olsr_node - 104.131.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.131.1.1_H&amp;#010;#define OLSR_NODE_-_104.131.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.132.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="803" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.131.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.131.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="804" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="805" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="827" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="828" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="804" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="804" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="805" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="805" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="827" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="827" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="828" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="828" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.131.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:55:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="804" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="804" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="804" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="804" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="805" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="805" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="805" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="805" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="827" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="827" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="827" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="827" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="828" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="828" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="828" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="828" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader806" parent_class="806" fileExt=".h" fileName="olsr_node - 104.132.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.132.1.1_H&amp;#010;#define OLSR_NODE_-_104.132.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.131.1.1.h&quot;&amp;#010;#include &quot;olsr_node - 104.133.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="806" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.132.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.132.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="807" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="808" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="860" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="861" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="807" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="807" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="808" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="808" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="860" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="860" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="861" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="861" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.132.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="807" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="807" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="807" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="807" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="808" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="808" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="808" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="808" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="860" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="860" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="860" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="860" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="861" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="861" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="861" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="861" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader825" parent_class="825" fileExt=".h" fileName="olsr_node" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_H&amp;#010;#define OLSR_NODE_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="825" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader830" parent_class="830" fileExt=".h" fileName="olsr_node - 104.129.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.129.1.1_H&amp;#010;#define OLSR_NODE_-_104.129.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="830" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.129.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.129.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="832" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="833" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="835" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="836" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="832" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="832" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="833" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="833" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="835" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="835" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="836" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="836" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.129.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="832" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="832" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="832" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="832" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="833" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="833" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="833" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="833" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="835" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="835" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="835" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="835" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="836" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="836" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="836" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="836" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader831" parent_class="831" fileExt=".h" fileName="olsr_node - 104.130.1.99" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.130.1.99_H&amp;#010;#define OLSR_NODE_-_104.130.1.99_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="831" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.130.1.99&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.130.1.99 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="837" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="838" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="840" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="841" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="837" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="837" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="838" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="838" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="840" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="840" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="841" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="841" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.130.1.99_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If!
  you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="837" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="837" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="837" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="837" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="838" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="838" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="838" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="838" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="840" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="840" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="840" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="840" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="841" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="841" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="841" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="841" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader854" parent_class="854" fileExt=".h" fileName="olsr_node - 104.133.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.133.1.1_H&amp;#010;#define OLSR_NODE_-_104.133.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_node - 104.132.1.1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="854" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_node - 104.133.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_node - 104.133.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="855" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="856" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="858" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="859" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="855" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="855" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="856" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="856" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="858" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="858" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="859" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="859" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_NODE_-_104.133.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:31&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="855" tag="tblock_0" canDelete="false" indentLevel="1" text=" char ip;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="855" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="855" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="855" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="856" field_type="0" initialValue="50" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="856" tag="tblock_1" canDelete="false" indentLevel="1" text=" int last_seen;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="856" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="856" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="858" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="858" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="858" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="858" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="859" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="859" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="859" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="859" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader871" parent_class="871" fileExt=".h" fileName="olsr_con - 104.131.1.1:104.129.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_-_104.131.1.1:104.129.1.1_H&amp;#010;#define OLSR_CON_-_104.131.1.1:104.129.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="871" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con - 104.131.1.1:104.129.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con - 104.131.1.1:104.129.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="896" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="898" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="874" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="875" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="896" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="896" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="898" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="898" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="874" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="874" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="875" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="875" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_-_104.131.1.1:104.129.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="896" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="896" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="896" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="896" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="896" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="898" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="898" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="898" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="898" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="898" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="898" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="874" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="874" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="874" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="874" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="874" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="874" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="875" field_type="0" initialValue="104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="875" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="875" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="875" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="875" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="875" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader882" parent_class="882" fileExt=".h" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_-_104.131.1.1:104.130.1.1_H&amp;#010;#define OLSR_CON_-_104.131.1.1:104.130.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con - 104.131.1.1:104.129.1.1.h&quot;&amp;#010;#include &quot;olsr_con - 104.132.1.1:104.133.1.1.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="882" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con - 104.131.1.1:104.130.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con - 104.131.1.1:104.130.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="899" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="900" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="901" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="902" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="899" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="899" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="900" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="900" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="901" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="901" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="902" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="902" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_-_104.131.1.1:104.130.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="899" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="899" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="899" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="899" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="899" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="900" field_type="0" initialValue="104.131.1.1:104.129.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="900" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="900" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="900" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="900" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="900" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="901" field_type="0" initialValue="104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="901" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="901" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="901" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="901" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="901" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="902" field_type="0" initialValue="104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="902" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="902" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="902" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="902" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="902" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader897" parent_class="897" fileExt=".h" fileName="olsr_con" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_H&amp;#010;#define OLSR_CON_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="897" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader915" parent_class="915" fileExt=".h" fileName="olsr_con - 104.132.1.1:104.133.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_-_104.132.1.1:104.133.1.1_H&amp;#010;#define OLSR_CON_-_104.132.1.1:104.133.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="915" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con - 104.132.1.1:104.133.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con - 104.132.1.1:104.133.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="916" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="917" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="918" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="919" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="916" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="916" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="917" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="917" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="918" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="918" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="919" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="919" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_-_104.132.1.1:104.133.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="916" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con next_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="916" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="916" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="916" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="916" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="917" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="917" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_con prev_olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="917" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="917" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="917" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="917" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="918" field_type="0" initialValue="104.132.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="918" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="918" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="918" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="918" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="918" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="919" field_type="0" initialValue="104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="919" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right_olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="919" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="919" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="919" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="919" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader933" parent_class="933" fileExt=".h" fileName="obj_to_ip" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OBJ_TO_IP_H&amp;#010;#define OBJ_TO_IP_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;obj_to_ip - 1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="933" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class Obj_to_ip&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Obj_to_ip ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="934" tag="tblock_0" canDelete="false" indentLevel="1" text=" int Object_id;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="935" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_node olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="936" tag="tblock_2" canDelete="false" indentLevel="1" text=" Obj_to_ip next;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="938" tag="tblock_3" canDelete="false" indentLevel="1" text=" Obj_to_ip prev;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="934" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="934" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="934" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="934" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="935" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="935" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="935" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="935" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="936" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="936" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="936" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="936" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="938" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="938" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="938" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="938" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OBJ_TO_IP_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="934" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="934" tag="tblock_0" canDelete="false" indentLevel="1" text=" int Object_id;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="934" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="934" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="934" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="934" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="935" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="935" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_node olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="935" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="935" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="935" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="935" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="936" field_type="0" initialValue="Obj_to_ip - 1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="936" tag="tblock_2" canDelete="false" indentLevel="1" text=" Obj_to_ip next;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="936" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="936" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="936" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="936" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="938" field_type="0" initialValue="Obj_to_ip" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="938" tag="tblock_3" canDelete="false" indentLevel="1" text=" Obj_to_ip prev;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="938" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="938" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="938" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="938" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader940" parent_class="940" fileExt=".h" fileName="obj_to_ip - 1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OBJ_TO_IP_-_1_H&amp;#010;#define OBJ_TO_IP_-_1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;obj_to_ip - 2.h&quot;&amp;#010;#include &quot;obj_to_ip.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="940" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class Obj_to_ip - 1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Obj_to_ip - 1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="941" tag="tblock_0" canDelete="false" indentLevel="1" text=" int Object_id;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="942" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_node olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="943" tag="tblock_2" canDelete="false" indentLevel="1" text=" Obj_to_ip next;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="944" tag="tblock_3" canDelete="false" indentLevel="1" text=" Obj_to_ip prev;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="941" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="941" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="941" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="941" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="942" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="942" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="942" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="942" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="943" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="943" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="943" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="943" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="944" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="944" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="944" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="944" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OBJ_TO_IP_-_1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="941" field_type="0" initialValue="1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="941" tag="tblock_0" canDelete="false" indentLevel="1" text=" int Object_id;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="941" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="941" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="941" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="941" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="942" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="942" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_node olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="942" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="942" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="942" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="942" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="943" field_type="0" initialValue="Obj_to_ip - 2" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="943" tag="tblock_2" canDelete="false" indentLevel="1" text=" Obj_to_ip next;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="943" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="943" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="943" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="943" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="944" field_type="0" initialValue="Obj_to_ip" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="944" tag="tblock_3" canDelete="false" indentLevel="1" text=" Obj_to_ip prev;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="944" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="944" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="944" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="944" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader967" parent_class="967" fileExt=".h" fileName="obj_to_ip - 2" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OBJ_TO_IP_-_2_H&amp;#010;#define OBJ_TO_IP_-_2_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;obj_to_ip -3.h&quot;&amp;#010;#include &quot;obj_to_ip - 1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;#include &quot;obj_to_ip.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="967" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class Obj_to_ip - 2&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Obj_to_ip - 2 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="968" tag="tblock_0" canDelete="false" indentLevel="1" text=" int Object_id;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="969" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_node olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="970" tag="tblock_2" canDelete="false" indentLevel="1" text=" Obj_to_ip next;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="971" tag="tblock_3" canDelete="false" indentLevel="1" text=" Obj_to_ip prev;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="968" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="968" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="968" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="968" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="969" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="969" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="969" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="969" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="970" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="970" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="970" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="970" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="971" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="971" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="971" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="971" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OBJ_TO_IP_-_2_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="968" field_type="0" initialValue="2" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="968" tag="tblock_0" canDelete="false" indentLevel="1" text=" int Object_id;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="968" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="968" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="968" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="968" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="969" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="969" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_node olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="969" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="969" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="969" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="969" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="970" field_type="0" initialValue="Obj_to_ip - 3" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="970" tag="tblock_2" canDelete="false" indentLevel="1" text=" Obj_to_ip next;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="970" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="970" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="970" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="970" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="971" field_type="0" initialValue="Obj_to_ip - 1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="971" tag="tblock_3" canDelete="false" indentLevel="1" text=" Obj_to_ip prev;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="971" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="971" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="971" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="971" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader1004" parent_class="1004" fileExt=".h" fileName="obj_to_ip -3" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OBJ_TO_IP_-3_H&amp;#010;#define OBJ_TO_IP_-3_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;obj_to_ip - 2.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;#include &quot;obj_to_ip.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="1004" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class Obj_to_ip -3&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Obj_to_ip -3 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="1005" tag="tblock_0" canDelete="false" indentLevel="1" text=" int Object_id;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="1006" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_node olsr_node;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="1007" tag="tblock_2" canDelete="false" indentLevel="1" text=" Obj_to_ip next;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="1008" tag="tblock_3" canDelete="false" indentLevel="1" text=" Obj_to_ip prev;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="1005" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1005" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="1005" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="1005" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="1006" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="1006" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="1006" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="1006" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="1007" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="1007" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="1007" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="1007" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="1008" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="1008" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="1008" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="1008" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OBJ_TO_IP_-3_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="1005" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1005" tag="tblock_0" canDelete="false" indentLevel="1" text=" int Object_id;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1005" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1005" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1005" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="1005" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1006" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1006" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_node olsr_node;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1006" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="1006" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1006" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="1006" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1007" field_type="0" initialValue="Obj_to_ip - 3" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1007" tag="tblock_2" canDelete="false" indentLevel="1" text=" Obj_to_ip next;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1007" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="1007" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1007" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="1007" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1008" field_type="0" initialValue="Obj_to_ip - 2" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1008" tag="tblock_3" canDelete="false" indentLevel="1" text=" Obj_to_ip prev;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1008" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="1008" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1008" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="1008" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+   </codegenerator>
+  </codegeneration>
  </XMI.extensions>
 </XMI>

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 15:46:57 UTC (rev 111)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 16:42:43 UTC (rev 112)
@@ -33,7 +33,6 @@
 /* we contruct a binary tree to handle the nodes */
 struct olsr_node {
 
-	struct olsr_node *top;
 	struct olsr_node *left;
 	struct olsr_node *right;
 	char ip[NAMEMAX];   /* host ip */

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-27 15:46:57 UTC (rev 111)
+++ trunk/apps/olsrs3d/process.c	2006-02-27 16:42:43 UTC (rev 112)
@@ -194,7 +194,6 @@
 void *get_olsr_node( struct olsr_node **olsr_node, char *ip ) {
 
 	int result;   /* result of strcmp */
-	struct olsr_node *top_olsr_node = NULL;   /* parent olsr node */
 
 	while ( (*olsr_node) != NULL ) {
 
@@ -207,26 +206,16 @@
 
 			/* former invisble (deleted) node */
 			if ( (*olsr_node)->visible == 0 ) {
-				struct olsr_con_list *olsr_con_list;
-				
-				olsr_con_list = (*olsr_node)->olsr_con_list;
-				
-				while(olsr_con_list != NULL) {
-					olsr_con_list->olsr_con->visible = 1;
-					olsr_con_list = olsr_con_list->next_olsr_con_list;	
-				}
-				
+
 				(*olsr_node)->visible = 1;
 				if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
+
 			}
 
 			return (*olsr_node);
 
 		}
 
-		/* save parent olsr node for later use */
-		top_olsr_node = (*olsr_node);
-
 		/* the searched node must be in the subtree */
 		if ( result < 0 ) {
 			olsr_node = &(*olsr_node)->right;
@@ -242,7 +231,6 @@
 		(*olsr_node) = malloc( sizeof( struct olsr_node ) );
 		if ( (*olsr_node) == NULL ) out_of_mem();
 
-		(*olsr_node)->top = top_olsr_node;
 		(*olsr_node)->left = NULL;
 		(*olsr_node)->right = NULL;
 
@@ -617,8 +605,7 @@
 					olsr_node1 = get_olsr_node( &Olsr_root, con_from );
 					olsr_node2 = get_olsr_node( &Olsr_root, con_to );
 					f=10.0+strtod(etx,NULL)/10.0;
-					if (f>=5 && olsr_node1->visible && olsr_node2->visible)
-						add_olsr_con( olsr_node1, olsr_node2, f );   /* just to prevent ascii to float converting inconsistency ... */
+					if ( f >= 5 ) add_olsr_con( olsr_node1, olsr_node2, f );   /* just to prevent ascii to float converting inconsistency ... */
 
 				}
 



From marec at berlios.de  Mon Feb 27 17:54:43 2006
From: marec at berlios.de (marec at BerliOS)
Date: Mon, 27 Feb 2006 17:54:43 +0100
Subject: [S3d-svn] r113 - trunk/apps/olsrs3d
Message-ID: <200602271654.k1RGshFd008340@sheep.berlios.de>

Author: marec
Date: 2006-02-27 17:54:40 +0100 (Mon, 27 Feb 2006)
New Revision: 113

Added:
   trunk/apps/olsrs3d/olsrs3d.png
Log:
olsr data structure png


Added: trunk/apps/olsrs3d/olsrs3d.png
===================================================================
(Binary files differ)


Property changes on: trunk/apps/olsrs3d/olsrs3d.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From nichtsnutz at berlios.de  Mon Feb 27 18:03:50 2006
From: nichtsnutz at berlios.de (nichtsnutz at BerliOS)
Date: Mon, 27 Feb 2006 18:03:50 +0100
Subject: [S3d-svn] r114 - trunk/apps/olsrs3d
Message-ID: <200602271703.k1RH3oVe010407@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-27 18:03:50 +0100 (Mon, 27 Feb 2006)
New Revision: 114

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/olsrs3d.h
Log:
delete node fix the fix



Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-27 16:54:40 UTC (rev 113)
+++ trunk/apps/olsrs3d/main.c	2006-02-27 17:03:50 UTC (rev 114)
@@ -166,8 +166,9 @@
 	if ( olsr_node == NULL ) return;
 
 	/* olsr node vanished */
-	olsr_node->last_seen--;
-	if ( olsr_node->last_seen == 0 ) {
+	if(olsr_node->last_seen > 0)
+		olsr_node->last_seen--;
+	if ( olsr_node->last_seen == 0 && olsr_node->visible) {
 
 		if ( Debug ) printf( "olsr node vanished: %s\n", olsr_node->ip );
 
@@ -180,16 +181,33 @@
 			s3d_del_object( olsr_node->obj_id );
 	
 			olsr_con_list = olsr_node->olsr_con_list;
-				while( olsr_con_list != NULL) {
-					olsr_con_list->olsr_con->visible = 0;
-					s3d_del_object(olsr_con_list->olsr_con->obj_id);
-					olsr_con_list = olsr_con_list->next_olsr_con_list;
+
+			while( olsr_con_list != NULL) {
+				printf("start remove\n");
+				printf("remove %d\n",olsr_con_list->olsr_con->obj_id);
+				s3d_del_object(olsr_con_list->olsr_con->obj_id);
+
+				if( olsr_con_list->olsr_con->left_olsr_node == olsr_node)
+					free(olsr_con_list->olsr_con->right_olsr_node->olsr_con_list);
+				else
+					free(olsr_con_list->olsr_con->left_olsr_node->olsr_con_list);
+
+				/* delete connection list entry */
+				// prev_olsr_con_list->next_olsr_con_list = olsr_con_list->next_olsr_con_list;
+				
+				/* delete connection */
+				if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
+				if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
+				free( olsr_con_list->olsr_con );
+				free( olsr_con_list );
+				olsr_con_list = olsr_con_list->next_olsr_con_list;
 			}
+			
 		}
 
 		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
 
-	} else {
+	} else if (olsr_node->visible) {
 
 		/* olsr node shape has been modified */
 		if ( olsr_node->node_type_modified ) {
@@ -250,24 +268,7 @@
 						prev_olsr_con_list = olsr_con_list;
 
 					/* invisble (deleted) node */
-					} else {
-
-// 						s3d_pop_vertex( olsr_con_list->olsr_con->obj_id, 6 );
-// 						s3d_pop_polygon( olsr_con_list->olsr_con->obj_id, 2 );
-// 						s3d_pop_material( olsr_con_list->olsr_con->obj_id, 1 );
-//
-// 						/* delete connection list entry */
-// 						prev_olsr_con_list->next_olsr_con_list = olsr_con_list->next_olsr_con_list;
-//
-// 						/* delete connection */
-// 						if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
-// 						if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
-//
-// 						free( olsr_con_list->olsr_con );
-// 						free( olsr_con_list );
-
 					}
-
 					olsr_con_list = olsr_con_list->next_olsr_con_list;
 
 				}
@@ -385,73 +386,73 @@
 
 		}
 
-		if( (*olsr_con)->visible) {
-			/* move connection between left and right olsr node */
-			s3d_pop_vertex( (*olsr_con)->obj_id, 6 );
-			s3d_pop_polygon( (*olsr_con)->obj_id, 2 );
-			s3d_pop_material( (*olsr_con)->obj_id, 1 );
+
+		/* move connection between left and right olsr node */
+		s3d_pop_vertex( (*olsr_con)->obj_id, 6 );
+		s3d_pop_polygon( (*olsr_con)->obj_id, 2 );
+		s3d_pop_material( (*olsr_con)->obj_id, 1 );
+
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] - 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
+
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
+		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]- 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
+
+		if ( ColorSwitch ) {
 	
-			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
-			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] + 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
-			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->left_olsr_node->pos_vec[0] - 0.2 + ZeroPosition[0], (*olsr_con)->left_olsr_node->pos_vec[1] + ZeroPosition[1], (*olsr_con)->left_olsr_node->pos_vec[2] + ZeroPosition[2] );
+			/* HNA */
+			if ( (*olsr_con)->left_etx == -1000.00 ) {
+
+				s3d_push_material( (*olsr_con)->obj_id,
+							   0.0,0.0,1.0,
+							   0.0,0.0,1.0,
+							   0.0,0.0,1.0);
 	
-			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
-			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]+ 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
-			s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]- 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
-	
-			if ( ColorSwitch ) {
-	
-				/* HNA */
-				if ( (*olsr_con)->left_etx == -1000.00 ) {
-	
+			} else {
+
+				etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
+
+				if ( ( etx >= 1.0 ) && ( etx < 2.0 ) ) {
+
+					rgb = etx - 1.0;
 					s3d_push_material( (*olsr_con)->obj_id,
-								   0.0,0.0,1.0,
-								   0.0,0.0,1.0,
-								   0.0,0.0,1.0);
-	
+								rgb,1.0,0.0,
+								rgb,1.0,0.0,
+								rgb,1.0,0.0);
+
+				} else if ( ( etx >= 2.0 ) && ( etx < 3.0 ) ) {
+
+					rgb = 3.0 - etx;
+					s3d_push_material( (*olsr_con)->obj_id,
+								1.0,rgb,0.0,
+								1.0,rgb,0.0,
+								1.0,rgb,0.0);
+
 				} else {
-	
-					etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
-	
-					if ( ( etx >= 1.0 ) && ( etx < 2.0 ) ) {
-	
-						rgb = etx - 1.0;
-						s3d_push_material( (*olsr_con)->obj_id,
-									rgb,1.0,0.0,
-									rgb,1.0,0.0,
-									rgb,1.0,0.0);
-	
-					} else if ( ( etx >= 2.0 ) && ( etx < 3.0 ) ) {
-	
-						rgb = 3.0 - etx;
-						s3d_push_material( (*olsr_con)->obj_id,
-									1.0,rgb,0.0,
-									1.0,rgb,0.0,
-									1.0,rgb,0.0);
-	
-					} else {
-	
-						s3d_push_material( (*olsr_con)->obj_id,
-									1.0,0.0,0.0,
-									1.0,0.0,0.0,
-									1.0,0.0,0.0);
-	
-					}
-	
+
+					s3d_push_material( (*olsr_con)->obj_id,
+								1.0,0.0,0.0,
+								1.0,0.0,0.0,
+								1.0,0.0,0.0);
+
 				}
-	
-			} else {
-	
-				s3d_push_material( (*olsr_con)->obj_id,
-							1.0,1.0,1.0,
-							1.0,1.0,1.0,
-							1.0,1.0,1.0);
-	
+
 			}
+
+		} else {
+
+			s3d_push_material( (*olsr_con)->obj_id,
+						1.0,1.0,1.0,
+						1.0,1.0,1.0,
+						1.0,1.0,1.0);
 	
-			s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
-			s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
 		}
+	
+		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
+		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
+
 		olsr_con = &(*olsr_con)->next_olsr_con;
 
 	}

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 16:54:40 UTC (rev 113)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 17:03:50 UTC (rev 114)
@@ -15,7 +15,6 @@
 	struct olsr_node *right_olsr_node;   /* pointer to right end point of the connection */
 	float left_etx;   /* etx of left olsr node */
 	float right_etx;   /* etx of right olsr node */
-	int visible;   /* is this connection visible or vanished */
 	int obj_id;   /* id of connection object in s3d */
 
 };



From nichtsnutz at berlios.de  Mon Feb 27 18:14:25 2006
From: nichtsnutz at berlios.de (nichtsnutz at BerliOS)
Date: Mon, 27 Feb 2006 18:14:25 +0100
Subject: [S3d-svn] r115 - trunk/apps/olsrs3d
Message-ID: <200602271714.k1RHEPGL012330@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-27 18:14:24 +0100 (Mon, 27 Feb 2006)
New Revision: 115

Modified:
   trunk/apps/olsrs3d/main.c
Log:
svn test with eclipse ;-)

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-27 17:03:50 UTC (rev 114)
+++ trunk/apps/olsrs3d/main.c	2006-02-27 17:14:24 UTC (rev 115)
@@ -183,8 +183,8 @@
 			olsr_con_list = olsr_node->olsr_con_list;
 
 			while( olsr_con_list != NULL) {
-				printf("start remove\n");
-				printf("remove %d\n",olsr_con_list->olsr_con->obj_id);
+				// printf("start remove\n");
+				// printf("remove %d\n",olsr_con_list->olsr_con->obj_id);
 				s3d_del_object(olsr_con_list->olsr_con->obj_id);
 
 				if( olsr_con_list->olsr_con->left_olsr_node == olsr_node)



From dotslash at berlios.de  Mon Feb 27 19:01:49 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Mon, 27 Feb 2006 19:01:49 +0100
Subject: [S3d-svn] r116 - in trunk: . client server
Message-ID: <200602271801.k1RI1ncB005548@sheep.berlios.de>

Author: dotslash
Date: 2006-02-27 19:01:26 +0100 (Mon, 27 Feb 2006)
New Revision: 116

Added:
   trunk/INSTALL
Modified:
   trunk/
   trunk/ChangeLog
   trunk/README
   trunk/client/fontselect.c
   trunk/server/graphics.c
Log:
 r155 at balthasar:  dotslash | 2006-02-27 19:01:17 +0100
 - INFINITY define into #ifndef
 - splitting README and INSTALL
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:150
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:155

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-27 17:14:24 UTC (rev 115)
+++ trunk/ChangeLog	2006-02-27 18:01:26 UTC (rev 116)
@@ -1,3 +1,7 @@
+2006-02-27  Simon Wunderlich - <dotslash at packetmixer.de>
+	- INFINITY define into #ifndef
+	- splitting README and INSTALL
+	- security check for strncat and strncpy functions
 2006-02-22  Simon Wunderlich - <dotslash at packetmixer.de>
 	- only select the nearest hit when clicking, not all on the line
 	- fopen errors are not that important when looking through the

Added: trunk/INSTALL
===================================================================
--- trunk/INSTALL	2006-02-27 17:14:24 UTC (rev 115)
+++ trunk/INSTALL	2006-02-27 18:01:26 UTC (rev 116)
@@ -0,0 +1,80 @@
+### 1 Preparing 
+
+Before being able to install s3d and the sample programs, you need to prepare
+the build, and compile s3d. 
+
+### 1.1 Subversion Checkout
+
+If you are using a version directly checked out from subversion, you will need
+to setup the GNU autotools first. The following assumes that automake 1.9,
+autoconf 2.59 are available and installed into a directory listed in the $PATH
+environment variable.
+
+$ ./autogen.sh [--prefix=/some/where] [--disable-debug] [--enable-profiling]
+
+This will create configure, and run it. Use the --prefix command line argument
+to select a different prefix to install s3d into. The default is /usr/local, so
+binaries will get installed into /usr/local/bin, libraries into
+/usr/local/lib, and documentation into /usr/local/share/doc/s3d-version.
+If you are not intending to work on s3d, you can use the --disable-debug
+argument to disable building a debug version. Likewise, --enable-profiling
+will enable a version compiled for profiling.
+
+After configure has been created, you can also use
+
+$ ./configure --help
+
+to learn about more configuration parameters.
+
+### 1.2 Preparing a Released Version
+
+A released version of s3d contains a pregenerated configure script, which you
+can run directly:
+
+$ ./configure [--prefix=/somewhere] [--enable-debug] [--enable-profiling]
+
+Releases do not have debugging or profiling enabled by default, if you want these
+features you have to enable them with --enable-debug and --enable-profiling,
+respectively.
+
+### 2 Building
+
+After configure has finished, you can start the build of s3d:
+
+$ make
+
+in the root directory will compile server, client-lib and the examples
+for you.
+
+after that, go
+
+$ cd server
+$ ./s3d
+
+fire up the server. if you're lucky, a window appears.now the s3d is listening 
+on port 6066. 
+now it's time to test some things. on another terminal:
+
+$ cd examples
+$ ./3dsloader miu3ds/miu.3ds
+
+now there should appear a rotating cat. you can move with with the middle 
+mouse-button pushed.
+now you can try the MCP, which is something like a windowmanager in X:
+
+$ cd examples
+$ ./dot_mcp
+
+now you should get some fancy window decorations :D
+there are a few other examples, just play around
+
+### 3 Installing
+
+You can use the install target to install s3d into the selected prefix. 
+Currently, you have to install s3d, otherwise the examples will not get built.
+
+$ make install
+
+Depending on the selected prefix, you may need to become superuser first.
+
+

Modified: trunk/README
===================================================================
--- trunk/README	2006-02-27 17:14:24 UTC (rev 115)
+++ trunk/README	2006-02-27 18:01:26 UTC (rev 116)
@@ -1,6 +1,3 @@
-Well ... Hello :)
-this should give you a little starting point in my s3d project.
-
 1.REASONS
 ---------
 
@@ -20,85 +17,8 @@
 2.INSTALL
 ---------
 
-2.1 Preparing 
+see the INSTALL file
 
-Before being able to install s3d and the sample programs, you need to prepare
-the build, and compile s3d. 
-
-2.1.1 Subversion Checkout
-
-If you are using a version directly checked out from subversion, you will need
-to setup the GNU autotools first. The following assumes that automake 1.9,
-autoconf 2.59 are available and installed into a directory listed in the $PATH
-environment variable.
-
-$ ./autogen.sh [--prefix=/some/where] [--disable-debug] [--enable-profiling]
-
-This will create configure, and run it. Use the --prefix command line argument
-to select a different prefix to install s3d into. The default is /usr/local, so
-binaries will get installed into /usr/local/bin, libraries into
-/usr/local/lib, and documentation into /usr/local/share/doc/s3d-version.
-If you are not intending to work on s3d, you can use the --disable-debug
-argument to disable building a debug version. Likewise, --enable-profiling
-will enable a version compiled for profiling.
-
-After configure has been created, you can also use
-
-$ ./configure --help
-
-to learn about more configuration parameters.
-
-2.1.2 Preparing a Released Version
-
-A released version of s3d contains a pregenerated configure script, which you
-can run directly:
-
-$ ./configure [--prefix=/somewhere] [--enable-debug] [--enable-profiling]
-
-Releases do not have debugging or profiling enabled by default, if you want these
-features you have to enable them with --enable-debug and --enable-profiling,
-respectively.
-
-2.2 Building
-
-After configure has finished, you can start the build of s3d:
-
-$ make
-
-in the root directory will compile server, client-lib and the examples
-for you.
-
-after that, go
-
-$ cd server
-$ ./s3d
-
-fire up the server. if you're lucky, a window appears.now the s3d is listening 
-on port 6066. 
-now it's time to test some things. on another terminal:
-
-$ cd examples
-$ ./3dsloader miu3ds/miu.3ds
-
-now there should appear a rotating cat. you can move with with the middle 
-mouse-button pushed.
-now you can try the MCP, which is something like a windowmanager in X:
-
-$ cd examples
-$ ./dot_mcp
-
-now you should get some fancy window decorations :D
-there are a few other examples, just play around
-
-2.3 Installing
-
-You can use the install target to install s3d into the selected prefix. 
-Currently, you have to install s3d, otherwise the examples will not get built.
-
-$ make install
-
-Depending on the selected prefix, you may need to become superuser first.
-
 3. WARRANTY
 -----------
 

Modified: trunk/client/fontselect.c
===================================================================
--- trunk/client/fontselect.c	2006-02-27 17:14:24 UTC (rev 115)
+++ trunk/client/fontselect.c	2006-02-27 18:01:26 UTC (rev 116)
@@ -71,7 +71,8 @@
 							if (good==NULL)
 								good=malloc(256);
 							strncpy(good,flist[fnum],255);
-							strncat(good,fname,255);
+							good[256]=0; 									/* just in case */
+							strncat(good,fname,255-strlen(good));
 							if ((strlen(mask)+4)==strlen(fname))
 							{
 								return(good);

Modified: trunk/server/graphics.c
===================================================================
--- trunk/server/graphics.c	2006-02-27 17:14:24 UTC (rev 115)
+++ trunk/server/graphics.c	2006-02-27 18:01:26 UTC (rev 116)
@@ -7,7 +7,9 @@
 #include <SDL.h>	 /*  SDL_GL_SwapBuffers */
 #endif
 #include <math.h>		 /*  sin(),cos() */
+#ifndef INFINITY
 #define INFINITY 1<<30
+#endif
 /*  this file handles graphics routines */
 /*  local prototypes ... */
 void render_virtual_object(struct t_obj *o);



From dotslash at berlios.de  Mon Feb 27 19:58:55 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Mon, 27 Feb 2006 19:58:55 +0100
Subject: [S3d-svn] r117 - in trunk: . client example
Message-ID: <200602271858.k1RIwtWq030964@sheep.berlios.de>

Author: dotslash
Date: 2006-02-27 19:58:49 +0100 (Mon, 27 Feb 2006)
New Revision: 117

Modified:
   trunk/
   trunk/ChangeLog
   trunk/client/3dsread.c
   trunk/client/freetype.c
   trunk/example/filebrowser.c
Log:
 r160 at balthasar:  dotslash | 2006-02-27 19:58:41 +0100
 - implemented object search path as : delimited list
 - more strncat fixing	



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:155
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:160

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-27 18:01:26 UTC (rev 116)
+++ trunk/ChangeLog	2006-02-27 18:58:49 UTC (rev 117)
@@ -1,4 +1,5 @@
 2006-02-27  Simon Wunderlich - <dotslash at packetmixer.de>
+	- implemented object search path as : delimited list
 	- INFINITY define into #ifndef
 	- splitting README and INSTALL
 	- security check for strncat and strncpy functions

Modified: trunk/client/3dsread.c
===================================================================
--- trunk/client/3dsread.c	2006-02-27 18:01:26 UTC (rev 116)
+++ trunk/client/3dsread.c	2006-02-27 18:58:49 UTC (rev 117)
@@ -9,22 +9,35 @@
 /*  just a helper function for reading from file instead of memory. */
 int s3d_import_3ds_file(char *fname)
 {
-	char *buf;
+	char *buf,*ptr,*next;
+	char searchpath[1024];
 	char path[1024];
-	int i;
-	char *searchpath[4]=
-		{"./",
-		 "",
-		 "../",
-		 "../../"
-		 };
-	for (i=0;i<4;i++)
+#ifndef OBJSDIR
+#define OBJSDIR 	"./:../:../../"
+#endif
+	
+	strncpy(searchpath,OBJSDIR,1023);
+	searchpath[1023]=0;							/* just in case */
+	next=ptr=searchpath;
+	while (next!=NULL)
 	{
-		strncpy(path,searchpath[i],1024);
-		strncat(path,fname,1024);
-		if (s3d_open_file(path,&buf)!=-1)  /* found something */
-			return(s3d_import_3ds(buf));
+		next=NULL;
+		if (next=strchr(ptr,':'))
+		{
+			*next=0; 							/* clear the delimiter */
+			next+=1;							/* move to the beginner of the next dir */
+		}
+		if ((strlen(ptr)+strlen(fname))<1024) 	/* only try if this fits */
+		{
+			strcpy(path,ptr); 					/* can use "unsafe" functions because size was verified above */
+			strcat(path,fname);
+			if (s3d_open_file(path,&buf)!=-1)  /* found something */
+				return(s3d_import_3ds(buf));
+		}
+		if (next!=NULL)
+			ptr=next;							/* move pointer to the next position */
 	}
+	errds(LOW,"s3d_import_3ds_file()","Could not open %s", fname);
 	return(-1); /* nothing in search path ... */
 }
 static void normal(float *p0, float *p1, float *p2, float *r)

Modified: trunk/client/freetype.c
===================================================================
--- trunk/client/freetype.c	2006-02-27 18:01:26 UTC (rev 116)
+++ trunk/client/freetype.c	2006-02-27 18:58:49 UTC (rev 117)
@@ -72,8 +72,8 @@
 	int i;
 	for (i=0; i<256;i++)
 	{
-		if (tess_buf[i].vbuf) free(tess_buf[i].vbuf);
-		if (tess_buf[i].pbuf) free(tess_buf[i].pbuf);
+		if (tess_buf[i].vbuf!=NULL) free(tess_buf[i].vbuf);
+		if (tess_buf[i].pbuf!=NULL) free(tess_buf[i].pbuf);
 	}
 	return(0);
 }

Modified: trunk/example/filebrowser.c
===================================================================
--- trunk/example/filebrowser.c	2006-02-27 18:01:26 UTC (rev 116)
+++ trunk/example/filebrowser.c	2006-02-27 18:58:49 UTC (rev 117)
@@ -30,7 +30,7 @@
 	char *ext;
 	char *nstr;
 	float alpha,al,radius,f;
-	char ndir[M_DIR];  /* unsafe, I know ... */
+	char ndir[M_DIR+1];
 	if (n_item)
 	{
 		printf("freeing %d old items\n",n_item);
@@ -64,8 +64,9 @@
 			else {
 				ext=strrchr(nstr,'.');
 			    strncpy(ndir,dir,M_DIR);
-			    strncat(ndir,"/",M_DIR);
-		    	strncat(ndir,namelist[n]->d_name,M_DIR);
+				ndir[M_DIR]=0;		/* just in case */
+			    strncat(ndir,"/",M_DIR-strlen(ndir));
+		    	strncat(ndir,namelist[n]->d_name,M_DIR-strlen(ndir));
 /* 				printf("displaying %s\n",ndir); */
 			    if ((namelist[n]->d_type==DT_DIR) ||
 					((namelist[n]->d_type==DT_UNKNOWN) && (opendir(ndir)!=NULL)))



From nichtsnutz at berlios.de  Mon Feb 27 19:59:56 2006
From: nichtsnutz at berlios.de (nichtsnutz at BerliOS)
Date: Mon, 27 Feb 2006 19:59:56 +0100
Subject: [S3d-svn] r118 - trunk/apps/olsrs3d
Message-ID: <200602271859.k1RIxueW031634@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-27 19:59:54 +0100 (Mon, 27 Feb 2006)
New Revision: 118

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/process.c
Log:
delete node fix II

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-27 18:58:49 UTC (rev 117)
+++ trunk/apps/olsrs3d/main.c	2006-02-27 18:59:54 UTC (rev 118)
@@ -178,23 +178,46 @@
 		if ( olsr_node->obj_id != -1 ) {
 			/* remove element from ob2ip list */
 			lst_del( olsr_node->obj_id );
+
 			s3d_del_object( olsr_node->obj_id );
-	
+			olsr_node->obj_id = -1;
 			olsr_con_list = olsr_node->olsr_con_list;
 
 			while( olsr_con_list != NULL) {
-				// printf("start remove\n");
-				// printf("remove %d\n",olsr_con_list->olsr_con->obj_id);
+				
+				struct olsr_con_list *con_list;
+				int con_id = olsr_con_list->olsr_con->obj_id;
+				
 				s3d_del_object(olsr_con_list->olsr_con->obj_id);
+				olsr_con_list->olsr_con->obj_id = -1;
+				
+				if( olsr_con_list->olsr_con->left_olsr_node == olsr_node) {
+					
+					con_list = olsr_con_list->olsr_con->right_olsr_node->olsr_con_list;
+					while(con_list != NULL) {
+						if(con_list->olsr_con->obj_id == con_id)		
+							break;
+						prev_olsr_con_list = con_list;
+						con_list = con_list->next_olsr_con_list;	
+					}
+					
+				} else {
+					
+					con_list = olsr_con_list->olsr_con->right_olsr_node->olsr_con_list;
+					while(con_list != NULL) {
+						if(con_list->olsr_con->obj_id == con_id)		
+							break;
+						prev_olsr_con_list = con_list;
+						con_list = con_list->next_olsr_con_list;	
+					}
+					
+				}
 
-				if( olsr_con_list->olsr_con->left_olsr_node == olsr_node)
-					free(olsr_con_list->olsr_con->right_olsr_node->olsr_con_list);
-				else
-					free(olsr_con_list->olsr_con->left_olsr_node->olsr_con_list);
-
-				/* delete connection list entry */
-				// prev_olsr_con_list->next_olsr_con_list = olsr_con_list->next_olsr_con_list;
-				
+				if( con_list != NULL ) {
+					prev_olsr_con_list->next_olsr_con_list = olsr_con_list->next_olsr_con_list;
+					free(con_list);
+				}
+								
 				/* delete connection */
 				if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
 				if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
@@ -204,7 +227,7 @@
 			}
 			
 		}
-
+		olsr_node->olsr_con_list = NULL;
 		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
 
 	} else if (olsr_node->visible) {

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-27 18:58:49 UTC (rev 117)
+++ trunk/apps/olsrs3d/process.c	2006-02-27 18:59:54 UTC (rev 118)
@@ -53,7 +53,6 @@
 
 		/* create connection object */
 		(*olsr_con)->obj_id = s3d_new_object();
-		(*olsr_con)->visible = 1;
 		s3d_push_material( (*olsr_con)->obj_id,
 				  1.0,1.0,1.0,
 				  1.0,1.0,1.0,



From marec at berlios.de  Mon Feb 27 20:32:00 2006
From: marec at berlios.de (marec at BerliOS)
Date: Mon, 27 Feb 2006 20:32:00 +0100
Subject: [S3d-svn] r119 - trunk/apps/olsrs3d
Message-ID: <200602271932.k1RJW0wD014724@sheep.berlios.de>

Author: marec
Date: 2006-02-27 20:31:58 +0100 (Mon, 27 Feb 2006)
New Revision: 119

Modified:
   trunk/apps/olsrs3d/data_structure.xmi
   trunk/apps/olsrs3d/main.c
Log:
delete old/not needed vertices and olsr nodes - fix

Modified: trunk/apps/olsrs3d/data_structure.xmi
===================================================================
--- trunk/apps/olsrs3d/data_structure.xmi	2006-02-27 18:59:54 UTC (rev 118)
+++ trunk/apps/olsrs3d/data_structure.xmi	2006-02-27 19:31:58 UTC (rev 119)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-27T15:55:27" xmi.version="1.2" >
+<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-27T20:31:31" xmi.version="1.2" >
  <XMI.header>
   <XMI.documentation>
    <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
@@ -52,6 +52,14 @@
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="835" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="836" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
+     <UML:Namespace.ownedElement>
+      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="1082" isRoot="false" isAbstract="false" name="olsr_con_list - 104.129.1.1:104.131.1.1" >
+       <UML:Classifier.feature>
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1126" isRoot="false" initialValue="NULL" type="1127" isAbstract="false" name="next_olsr_con_list" />
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1128" isRoot="false" initialValue="104.129.1.1:104.131.1.1" type="897" isAbstract="false" name="olsr_con" />
+       </UML:Classifier.feature>
+      </UML:Class>
+     </UML:Namespace.ownedElement>
     </UML:Class>
     <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="831" isRoot="false" isAbstract="false" name="olsr_node - 104.130.1.99" >
      <UML:Classifier.feature>
@@ -126,6 +134,7 @@
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1008" isRoot="false" initialValue="Obj_to_ip - 2" type="933" isAbstract="false" name="prev" />
      </UML:Classifier.feature>
     </UML:Class>
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="1127" isRoot="false" isAbstract="false" name="olsr_con_list" />
     <UML:Association isSpecification="false" visibility="public" xmi.id="809" name="" >
      <UML:Association.connection>
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="810" aggregation="none" type="803" name="" />
@@ -246,173 +255,247 @@
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1079" aggregation="none" type="1004" name="" />
      </UML:Association.connection>
     </UML:Association>
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="1123" client="1082" name="" supplier="871" />
    </UML:Namespace.ownedElement>
   </UML:Model>
  </XMI.content>
  <XMI.extensions xmi.extender="umbrello" >
-  <docsettings viewid="786" documentation="" uniqueid="1080" />
+  <docsettings viewid="786" documentation="" uniqueid="1128" />
   <diagrams>
    <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="75" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1341" snapy="10" showatts="1" xmi.id="786" documentation="" type="402" showops="1" showpackage="0" name="Klassendiagramm" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1085" >
     <widgets>
-     <classwidget usesdiagramfillcolour="0" width="187" showattsigs="601" usesdiagramusefillcolour="0" x="329" linecolour="#ff0000" y="509" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="800" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="496" linecolour="#ff0000" y="325" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="803" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="690" linecolour="#ff0000" y="505" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="806" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="205" linecolour="#ff0000" y="705" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="830" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="148" showattsigs="601" usesdiagramusefillcolour="0" x="462" linecolour="#ff0000" y="706" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="831" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="843" linecolour="#ff0000" y="694" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="854" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="31" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="871" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="414" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="882" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="825" linecolour="#ff0000" y="86" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="915" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="24" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="933" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="315" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="940" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="586" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="967" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="866" linecolour="#ff0000" y="883" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1004" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="187" showattsigs="601" usesdiagramusefillcolour="0" x="341" linecolour="#ff0000" y="442" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="800" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="482" linecolour="#ff0000" y="262" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="803" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="676" linecolour="#ff0000" y="442" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="806" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="192" linecolour="#ff0000" y="668" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="830" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="148" showattsigs="601" usesdiagramusefillcolour="0" x="488" linecolour="#ff0000" y="669" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="831" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="829" linecolour="#ff0000" y="631" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="854" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="17" linecolour="#ff0000" y="23" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="871" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="400" linecolour="#ff0000" y="23" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="882" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="811" linecolour="#ff0000" y="23" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="915" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="113" linecolour="#ff0000" y="971" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="933" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="404" linecolour="#ff0000" y="971" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="940" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="675" linecolour="#ff0000" y="971" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="967" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="955" linecolour="#ff0000" y="971" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1004" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="263" showattsigs="601" usesdiagramusefillcolour="0" x="56" linecolour="#ff0000" y="792" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="49" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1082" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     </widgets>
     <messages/>
     <associations>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="800" widgetaid="803" xmi.id="809" >
       <linepath>
-       <startpoint startx="556" starty="402" />
-       <endpoint endx="453" endy="509" />
+       <startpoint startx="542" starty="339" />
+       <endpoint endx="465" endy="442" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" widgetbid="806" widgetaid="803" xmi.id="812" >
       <linepath>
-       <startpoint startx="616" starty="402" />
-       <endpoint endx="750" endy="505" />
+       <startpoint startx="602" starty="339" />
+       <endpoint endx="736" endy="442" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="830" widgetaid="800" xmi.id="842" >
       <linepath>
-       <startpoint startx="391" starty="586" />
-       <endpoint endx="299" endy="705" />
+       <startpoint startx="403" starty="519" />
+       <endpoint endx="286" endy="668" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="831" widgetaid="800" xmi.id="845" >
       <linepath>
-       <startpoint startx="453" starty="586" />
-       <endpoint endx="536" endy="706" />
+       <startpoint startx="465" starty="519" />
+       <endpoint endx="562" endy="669" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="854" widgetaid="806" xmi.id="865" >
       <linepath>
-       <startpoint startx="780" starty="582" />
-       <endpoint endx="890" endy="694" />
+       <startpoint startx="766" starty="519" />
+       <endpoint endx="876" endy="631" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="830" widgetaid="871" xmi.id="879" >
+     <assocwidget totalcounta="4" indexa="2" totalcountb="3" indexb="1" widgetbid="830" widgetaid="871" xmi.id="879" >
       <linepath>
-       <startpoint startx="129" starty="163" />
-       <endpoint endx="252" endy="705" />
+       <startpoint startx="164" starty="100" />
+       <endpoint endx="239" endy="668" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" widgetbid="803" widgetaid="871" xmi.id="893" >
+     <assocwidget totalcounta="4" indexa="3" totalcountb="3" indexb="1" widgetbid="803" widgetaid="871" xmi.id="893" >
       <linepath>
-       <startpoint startx="227" starty="163" />
-       <endpoint endx="556" endy="325" />
+       <startpoint startx="237" starty="100" />
+       <endpoint endx="542" endy="262" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="882" widgetaid="871" xmi.id="903" >
       <linepath>
-       <startpoint startx="325" starty="111" />
-       <endpoint endx="414" endy="111" />
+       <startpoint startx="311" starty="48" />
+       <endpoint endx="400" endy="48" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="871" widgetaid="882" xmi.id="906" >
       <linepath>
-       <startpoint startx="414" starty="137" />
-       <endpoint endx="325" endy="137" />
+       <startpoint startx="400" starty="74" />
+       <endpoint endx="311" endy="74" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="803" widgetaid="882" xmi.id="909" >
       <linepath>
-       <startpoint startx="610" starty="163" />
-       <endpoint endx="616" endy="325" />
+       <startpoint startx="596" starty="100" />
+       <endpoint endx="602" endy="262" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="800" widgetaid="882" xmi.id="912" >
       <linepath>
-       <startpoint startx="512" starty="163" />
-       <endpoint endx="391" endy="509" />
+       <startpoint startx="498" starty="100" />
+       <endpoint endx="403" endy="442" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="806" widgetaid="915" xmi.id="920" >
       <linepath>
-       <startpoint startx="923" starty="163" />
-       <endpoint endx="810" endy="505" />
+       <startpoint startx="909" starty="100" />
+       <endpoint endx="796" endy="442" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="854" widgetaid="915" xmi.id="923" >
       <linepath>
-       <startpoint startx="1021" starty="163" />
-       <endpoint endx="937" endy="694" />
+       <startpoint startx="1007" starty="100" />
+       <endpoint endx="923" endy="631" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="915" widgetaid="882" xmi.id="926" >
       <linepath>
-       <startpoint startx="708" starty="111" />
-       <endpoint endx="825" endy="111" />
+       <startpoint startx="694" starty="48" />
+       <endpoint endx="811" endy="48" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="882" widgetaid="915" xmi.id="929" >
       <linepath>
-       <startpoint startx="825" starty="137" />
-       <endpoint endx="708" endy="137" />
+       <startpoint startx="811" starty="74" />
+       <endpoint endx="694" endy="74" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="1004" widgetaid="967" xmi.id="1053" >
+     <assocwidget totalcounta="3" indexa="1" totalcountb="5" indexb="1" widgetbid="1004" widgetaid="967" xmi.id="1053" >
       <linepath>
-       <startpoint startx="760" starty="908" />
-       <endpoint endx="866" endy="908" />
+       <startpoint startx="849" starty="996" />
+       <endpoint endx="955" endy="986" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="967" widgetaid="1004" xmi.id="1056" >
+     <assocwidget totalcounta="5" indexa="2" totalcountb="3" indexb="2" widgetbid="967" widgetaid="1004" xmi.id="1056" >
       <linepath>
-       <startpoint startx="866" starty="934" />
-       <endpoint endx="760" endy="934" />
+       <startpoint startx="955" starty="1001" />
+       <endpoint endx="849" endy="1022" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="967" widgetaid="940" xmi.id="1059" >
+     <assocwidget totalcounta="3" indexa="1" totalcountb="5" indexb="1" widgetbid="967" widgetaid="940" xmi.id="1059" >
       <linepath>
-       <startpoint startx="489" starty="908" />
-       <endpoint endx="586" endy="908" />
+       <startpoint startx="578" starty="996" />
+       <endpoint endx="675" endy="986" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="940" widgetaid="967" xmi.id="1062" >
+     <assocwidget totalcounta="5" indexa="2" totalcountb="3" indexb="2" widgetbid="940" widgetaid="967" xmi.id="1062" >
       <linepath>
-       <startpoint startx="586" starty="934" />
-       <endpoint endx="489" endy="934" />
+       <startpoint startx="675" starty="1001" />
+       <endpoint endx="578" endy="1022" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="940" widgetaid="933" xmi.id="1065" >
+     <assocwidget totalcounta="9" indexa="1" totalcountb="5" indexb="1" widgetbid="940" widgetaid="933" xmi.id="1065" >
       <linepath>
-       <startpoint startx="198" starty="908" />
-       <endpoint endx="315" endy="908" />
+       <startpoint startx="287" starty="979" />
+       <endpoint endx="404" endy="986" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="933" widgetaid="940" xmi.id="1068" >
+     <assocwidget totalcounta="5" indexa="2" totalcountb="9" indexb="2" widgetbid="933" widgetaid="940" xmi.id="1068" >
       <linepath>
-       <startpoint startx="315" starty="934" />
-       <endpoint endx="198" endy="934" />
+       <startpoint startx="404" starty="1001" />
+       <endpoint endx="287" endy="988" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="2" indexa="1" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="1071" >
       <linepath>
-       <startpoint startx="67" starty="883" />
-       <endpoint endx="154" endy="883" />
-       <point x="79" y="867" />
-       <point x="79" y="833" />
-       <point x="189" y="833" />
+       <startpoint startx="156" starty="971" />
+       <endpoint endx="243" endy="971" />
+       <point x="168" y="955" />
+       <point x="168" y="921" />
+       <point x="278" y="921" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="2" indexa="1" totalcountb="0" indexb="0" widgetbid="1004" widgetaid="1004" xmi.id="1077" >
       <linepath>
-       <startpoint startx="909" starty="883" />
-       <endpoint endx="996" endy="883" />
-       <point x="921" y="833" />
-       <point x="1031" y="833" />
+       <startpoint startx="1000" starty="971" />
+       <endpoint endx="1087" endy="971" />
+       <point x="1010" y="921" />
+       <point x="1120" y="921" />
       </linepath>
      </assocwidget>
+     <assocwidget totalcounta="0" indexa="0" visibilityB="201" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="936" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="156" starty="971" />
+       <endpoint endx="243" endy="971" />
+       <point x="156" y="921" />
+       <point x="243" y="921" />
+      </linepath>
+      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="207" linecolour="none" y="951" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1087" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+     </assocwidget>
+     <assocwidget totalcounta="0" indexa="0" visibilityB="201" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="938" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="156" starty="971" />
+       <endpoint endx="243" endy="971" />
+       <point x="156" y="921" />
+       <point x="243" y="921" />
+      </linepath>
+      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="207" linecolour="none" y="951" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1092" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+     </assocwidget>
+     <assocwidget totalcounta="5" indexa="3" visibilityB="201" totalcountb="9" indexb="5" widgetbid="933" widgetaid="940" xmi.id="943" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="404" starty="1017" />
+       <endpoint endx="287" endy="1013" />
+      </linepath>
+      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1030" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1097" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+     </assocwidget>
+     <assocwidget totalcounta="5" indexa="4" visibilityB="201" totalcountb="9" indexb="7" widgetbid="933" widgetaid="940" xmi.id="944" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="404" starty="1032" />
+       <endpoint endx="287" endy="1030" />
+      </linepath>
+      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1034" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1102" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+     </assocwidget>
+     <assocwidget totalcounta="5" indexa="3" visibilityB="201" totalcountb="9" indexb="4" widgetbid="933" widgetaid="967" xmi.id="970" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="675" starty="1017" />
+       <endpoint endx="287" endy="1005" />
+      </linepath>
+      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1015" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1107" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+     </assocwidget>
+     <assocwidget totalcounta="5" indexa="4" visibilityB="201" totalcountb="9" indexb="6" widgetbid="933" widgetaid="967" xmi.id="971" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="675" starty="1032" />
+       <endpoint endx="287" endy="1022" />
+      </linepath>
+      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1017" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1112" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+     </assocwidget>
+     <assocwidget totalcounta="5" indexa="3" visibilityB="201" totalcountb="9" indexb="3" widgetbid="933" widgetaid="1004" xmi.id="1007" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="955" starty="1017" />
+       <endpoint endx="287" endy="996" />
+      </linepath>
+      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1018" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1117" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+     </assocwidget>
+     <assocwidget totalcounta="5" indexa="4" visibilityB="201" totalcountb="9" indexb="8" widgetbid="933" widgetaid="1004" xmi.id="1008" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="955" starty="1032" />
+       <endpoint endx="287" endy="1039" />
+      </linepath>
+      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1019" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1122" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+     </assocwidget>
+     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="1082" widgetaid="830" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="262" starty="745" />
+       <endpoint endx="231" endy="792" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="871" widgetaid="1082" xmi.id="1123" >
+      <linepath>
+       <startpoint startx="143" starty="792" />
+       <endpoint endx="90" endy="100" />
+      </linepath>
+     </assocwidget>
     </associations>
    </diagram>
   </diagrams>
@@ -462,8 +545,13 @@
       <listitem open="0" type="814" id="918" />
       <listitem open="0" type="814" id="919" />
      </listitem>
+     <listitem open="1" type="813" id="1127" />
      <listitem open="1" type="813" id="825" />
-     <listitem open="0" type="813" id="830" >
+     <listitem open="1" type="813" id="830" >
+      <listitem open="1" type="813" id="1082" >
+       <listitem open="0" type="814" id="1126" />
+       <listitem open="0" type="814" id="1128" />
+      </listitem>
       <listitem open="0" type="814" id="832" />
       <listitem open="0" type="814" id="833" />
       <listitem open="0" type="814" id="835" />
@@ -556,22 +644,22 @@
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_6" canDelete="false" classfield_id="862" >
+        <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_6" canDelete="false" classfield_id="864" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_7" canDelete="false" classfield_id="862" >
+        <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_7" canDelete="false" classfield_id="864" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_8" canDelete="false" classfield_id="864" >
+        <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_4" canDelete="false" classfield_id="862" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_9" canDelete="false" classfield_id="864" >
+        <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_5" canDelete="false" classfield_id="862" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
@@ -580,7 +668,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:04:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -632,12 +720,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_6" canDelete="false" classfield_id="862" >
+       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_4" canDelete="false" classfield_id="862" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_7" canDelete="false" classfield_id="862" >
+       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_5" canDelete="false" classfield_id="862" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -652,12 +740,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_8" canDelete="false" classfield_id="864" >
+       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_6" canDelete="false" classfield_id="864" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_9" canDelete="false" classfield_id="864" >
+       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_7" canDelete="false" classfield_id="864" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -703,22 +791,22 @@
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_6" canDelete="false" classfield_id="827" >
+        <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_6" canDelete="false" classfield_id="828" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_7" canDelete="false" classfield_id="827" >
+        <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_7" canDelete="false" classfield_id="828" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_8" canDelete="false" classfield_id="828" >
+        <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_4" canDelete="false" classfield_id="827" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_9" canDelete="false" classfield_id="828" >
+        <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_5" canDelete="false" classfield_id="827" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
@@ -727,7 +815,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:55:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:03:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -779,12 +867,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_6" canDelete="false" classfield_id="827" >
+       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_4" canDelete="false" classfield_id="827" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_7" canDelete="false" classfield_id="827" >
+       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_5" canDelete="false" classfield_id="827" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -799,12 +887,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_8" canDelete="false" classfield_id="828" >
+       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_6" canDelete="false" classfield_id="828" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_9" canDelete="false" classfield_id="828" >
+       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_7" canDelete="false" classfield_id="828" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -850,22 +938,22 @@
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_6" canDelete="false" classfield_id="860" >
+        <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_6" canDelete="false" classfield_id="861" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_7" canDelete="false" classfield_id="860" >
+        <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_7" canDelete="false" classfield_id="861" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_8" canDelete="false" classfield_id="861" >
+        <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_4" canDelete="false" classfield_id="860" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_9" canDelete="false" classfield_id="861" >
+        <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_5" canDelete="false" classfield_id="860" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
@@ -874,7 +962,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -926,12 +1014,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_6" canDelete="false" classfield_id="860" >
+       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_4" canDelete="false" classfield_id="860" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_7" canDelete="false" classfield_id="860" >
+       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_5" canDelete="false" classfield_id="860" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -946,12 +1034,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_8" canDelete="false" classfield_id="861" >
+       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_6" canDelete="false" classfield_id="861" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_9" canDelete="false" classfield_id="861" >
+       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_7" canDelete="false" classfield_id="861" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -980,7 +1068,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields/>
     </classifiercodedocument>
@@ -1022,22 +1110,22 @@
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_6" canDelete="false" classfield_id="835" >
+        <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_6" canDelete="false" classfield_id="836" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_7" canDelete="false" classfield_id="835" >
+        <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_7" canDelete="false" classfield_id="836" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_8" canDelete="false" classfield_id="836" >
+        <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_4" canDelete="false" classfield_id="835" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_9" canDelete="false" classfield_id="836" >
+        <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_5" canDelete="false" classfield_id="835" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
@@ -1046,7 +1134,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:07:44&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1098,12 +1186,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_6" canDelete="false" classfield_id="835" >
+       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_4" canDelete="false" classfield_id="835" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_7" canDelete="false" classfield_id="835" >
+       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_5" canDelete="false" classfield_id="835" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -1118,12 +1206,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_8" canDelete="false" classfield_id="836" >
+       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_6" canDelete="false" classfield_id="836" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_9" canDelete="false" classfield_id="836" >
+       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_7" canDelete="false" classfield_id="836" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -1169,22 +1257,22 @@
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_6" canDelete="false" classfield_id="840" >
+        <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_6" canDelete="false" classfield_id="841" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_7" canDelete="false" classfield_id="840" >
+        <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_7" canDelete="false" classfield_id="841" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_8" canDelete="false" classfield_id="841" >
+        <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_4" canDelete="false" classfield_id="840" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_9" canDelete="false" classfield_id="841" >
+        <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_5" canDelete="false" classfield_id="840" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
@@ -1193,7 +1281,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010; !
   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010; !
   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:07:43&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1245,12 +1333,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_6" canDelete="false" classfield_id="840" >
+       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_4" canDelete="false" classfield_id="840" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_7" canDelete="false" classfield_id="840" >
+       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_5" canDelete="false" classfield_id="840" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -1265,12 +1353,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_8" canDelete="false" classfield_id="841" >
+       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_6" canDelete="false" classfield_id="841" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_9" canDelete="false" classfield_id="841" >
+       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_7" canDelete="false" classfield_id="841" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -1316,22 +1404,22 @@
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_6" canDelete="false" classfield_id="858" >
+        <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_6" canDelete="false" classfield_id="859" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_7" canDelete="false" classfield_id="858" >
+        <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_7" canDelete="false" classfield_id="859" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_8" canDelete="false" classfield_id="859" >
+        <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_4" canDelete="false" classfield_id="858" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_9" canDelete="false" classfield_id="859" >
+        <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_5" canDelete="false" classfield_id="858" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
@@ -1340,7 +1428,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:31&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1392,12 +1480,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_6" canDelete="false" classfield_id="858" >
+       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_4" canDelete="false" classfield_id="858" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_7" canDelete="false" classfield_id="858" >
+       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_5" canDelete="false" classfield_id="858" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -1412,12 +1500,12 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_8" canDelete="false" classfield_id="859" >
+       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_6" canDelete="false" classfield_id="859" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_9" canDelete="false" classfield_id="859" >
+       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_7" canDelete="false" classfield_id="859" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -1487,7 +1575,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:06:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1570,6 +1658,41 @@
         </header>
        </codeaccessormethod>
       </codeclassfield>
+      <codeclassfield parent_id="1123" field_type="3407920" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
      </classfields>
     </classifiercodedocument>
     <classifiercodedocument writeOutCode="true" package="" id="882" parent_class="882" fileExt=".cpp" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
@@ -1634,7 +1757,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1740,7 +1863,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields/>
     </classifiercodedocument>
@@ -1806,7 +1929,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1953,7 +2076,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:03:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="934" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2100,7 +2223,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="941" field_type="0" initialValue="1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2247,7 +2370,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="968" field_type="0" initialValue="2" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2394,7 +2517,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you nam!
 e the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you nam!
 e the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="1005" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2485,6 +2608,153 @@
       <codecomment tag="" />
      </header>
     </codedocument>
+    <classifiercodedocument writeOutCode="true" package="olsr_node - 104.129.1.1" id="1082" parent_class="1082" fileExt=".cpp" fileName="olsr_con_list - 104.129.1.1:104.131.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con_list - 104.129.1.1:104.131.1.1.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks>
+        <codeaccessormethod accessType="0" parent_id="1126" tag="hblock_tag_0" canDelete="false" classfield_id="1126" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="1126" tag="hblock_tag_1" canDelete="false" classfield_id="1126" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="0" parent_id="1128" tag="hblock_tag_2" canDelete="false" classfield_id="1128" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+        <codeaccessormethod accessType="1" parent_id="1128" tag="hblock_tag_3" canDelete="false" classfield_id="1128" >
+         <header>
+          <cppcodedocumentation tag="" />
+         </header>
+        </codeaccessormethod>
+       </textblocks>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list - 104.129.1.1:104.131.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java c!
 ode.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:10:15&amp;#010;The original location of this file is olsr_node_-_104/129/1/1&amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="1123" field_type="6619252" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1126" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1126" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1126" tag="hblock_tag_0" canDelete="false" classfield_id="1126" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1126" tag="hblock_tag_1" canDelete="false" classfield_id="1126" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1128" field_type="0" initialValue="104.129.1.1:104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1128" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1128" tag="hblock_tag_2" canDelete="false" classfield_id="1128" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1128" tag="hblock_tag_3" canDelete="false" classfield_id="1128" >
+        <header>
+         <cppcodedocumentation tag="" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="1127" parent_class="1127" fileExt=".cpp" fileName="olsr_con_list" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con_list.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:10:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
     <classifiercodedocument writeOutCode="true" package="" id="cppheader800" parent_class="800" fileExt=".h" fileName="olsr_node - 104.130.1.1" >
      <textblocks>
       <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.130.1.1_H&amp;#010;#define OLSR_NODE_-_104.130.1.1_H" >
@@ -2645,12 +2915,12 @@
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="862" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+              <ccfdeclarationcodeblock parent_id="862" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="864" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+              <ccfdeclarationcodeblock parent_id="864" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
@@ -2689,37 +2959,37 @@
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="801" >
+                  <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="801" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="802" >
+                  <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="802" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="802" >
+                  <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="802" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="862" >
+                  <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="862" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="862" >
+                  <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="862" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="864" >
+                  <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="864" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="864" >
+                  <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="864" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
@@ -2749,7 +3019,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:04:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2766,7 +3036,7 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="801" >
+       <codeaccessormethod accessType="1" parent_id="801" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="801" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -2781,12 +3051,12 @@
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="802" >
+       <codeaccessormethod accessType="0" parent_id="802" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="802" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="802" >
+       <codeaccessormethod accessType="1" parent_id="802" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="802" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -2796,17 +3066,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="862" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+       <ccfdeclarationcodeblock parent_id="862" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="862" >
+       <codeaccessormethod accessType="0" parent_id="862" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="862" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="862" >
+       <codeaccessormethod accessType="1" parent_id="862" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="862" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -2816,17 +3086,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="864" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+       <ccfdeclarationcodeblock parent_id="864" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="864" >
+       <codeaccessormethod accessType="0" parent_id="864" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="864" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="864" >
+       <codeaccessormethod accessType="1" parent_id="864" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="864" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -2994,12 +3264,12 @@
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="827" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+              <ccfdeclarationcodeblock parent_id="827" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="828" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+              <ccfdeclarationcodeblock parent_id="828" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
@@ -3038,37 +3308,37 @@
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="804" >
+                  <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="804" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="805" >
+                  <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="805" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="805" >
+                  <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="805" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="827" >
+                  <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="827" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="827" >
+                  <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="827" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="828" >
+                  <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="828" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="828" >
+                  <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="828" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
@@ -3098,7 +3368,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:55:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:03:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -3115,7 +3385,7 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="804" >
+       <codeaccessormethod accessType="1" parent_id="804" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="804" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -3130,12 +3400,12 @@
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="805" >
+       <codeaccessormethod accessType="0" parent_id="805" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="805" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="805" >
+       <codeaccessormethod accessType="1" parent_id="805" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="805" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -3145,17 +3415,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="827" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+       <ccfdeclarationcodeblock parent_id="827" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="827" >
+       <codeaccessormethod accessType="0" parent_id="827" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="827" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="827" >
+       <codeaccessormethod accessType="1" parent_id="827" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="827" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -3165,17 +3435,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="828" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+       <ccfdeclarationcodeblock parent_id="828" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="828" >
+       <codeaccessormethod accessType="0" parent_id="828" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="828" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="828" >
+       <codeaccessormethod accessType="1" parent_id="828" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="828" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -3343,12 +3613,12 @@
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="860" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+              <ccfdeclarationcodeblock parent_id="860" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="861" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+              <ccfdeclarationcodeblock parent_id="861" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
@@ -3387,37 +3657,37 @@
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="807" >
+                  <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="807" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="808" >
+                  <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="808" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="808" >
+                  <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="808" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="860" >
+                  <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="860" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="860" >
+                  <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="860" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="861" >
+                  <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="861" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="861" >
+                  <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="861" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
@@ -3447,7 +3717,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -3464,7 +3734,7 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="807" >
+       <codeaccessormethod accessType="1" parent_id="807" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="807" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -3479,12 +3749,12 @@
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="808" >
+       <codeaccessormethod accessType="0" parent_id="808" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="808" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="808" >
+       <codeaccessormethod accessType="1" parent_id="808" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="808" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -3494,17 +3764,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="860" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+       <ccfdeclarationcodeblock parent_id="860" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="860" >
+       <codeaccessormethod accessType="0" parent_id="860" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="860" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="860" >
+       <codeaccessormethod accessType="1" parent_id="860" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="860" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -3514,17 +3784,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="861" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+       <ccfdeclarationcodeblock parent_id="861" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="861" >
+       <codeaccessormethod accessType="0" parent_id="861" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="861" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="861" >
+       <codeaccessormethod accessType="1" parent_id="861" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="861" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -3734,7 +4004,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields/>
     </classifiercodedocument>
@@ -3898,12 +4168,12 @@
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="835" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+              <ccfdeclarationcodeblock parent_id="835" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="836" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+              <ccfdeclarationcodeblock parent_id="836" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
@@ -3942,37 +4212,37 @@
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="832" >
+                  <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="832" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="833" >
+                  <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="833" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="833" >
+                  <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="833" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="835" >
+                  <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="835" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="835" >
+                  <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="835" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="836" >
+                  <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="836" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="836" >
+                  <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="836" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
@@ -4002,7 +4272,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:17&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:07:44&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -4019,7 +4289,7 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="832" >
+       <codeaccessormethod accessType="1" parent_id="832" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="832" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4034,12 +4304,12 @@
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="833" >
+       <codeaccessormethod accessType="0" parent_id="833" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="833" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="833" >
+       <codeaccessormethod accessType="1" parent_id="833" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="833" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4049,17 +4319,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="835" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+       <ccfdeclarationcodeblock parent_id="835" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="835" >
+       <codeaccessormethod accessType="0" parent_id="835" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="835" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="835" >
+       <codeaccessormethod accessType="1" parent_id="835" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="835" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4069,17 +4339,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="836" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+       <ccfdeclarationcodeblock parent_id="836" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="836" >
+       <codeaccessormethod accessType="0" parent_id="836" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="836" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="836" >
+       <codeaccessormethod accessType="1" parent_id="836" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="836" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4247,12 +4517,12 @@
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="840" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+              <ccfdeclarationcodeblock parent_id="840" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="841" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+              <ccfdeclarationcodeblock parent_id="841" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
@@ -4291,37 +4561,37 @@
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="837" >
+                  <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="837" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="838" >
+                  <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="838" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="838" >
+                  <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="838" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="840" >
+                  <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="840" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="840" >
+                  <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="840" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="841" >
+                  <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="841" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="841" >
+                  <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="841" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
@@ -4351,7 +4621,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If!
  you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If!
  you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:07:43&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -4368,7 +4638,7 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="837" >
+       <codeaccessormethod accessType="1" parent_id="837" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="837" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4383,12 +4653,12 @@
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="838" >
+       <codeaccessormethod accessType="0" parent_id="838" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="838" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="838" >
+       <codeaccessormethod accessType="1" parent_id="838" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="838" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4398,17 +4668,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="840" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+       <ccfdeclarationcodeblock parent_id="840" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="840" >
+       <codeaccessormethod accessType="0" parent_id="840" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="840" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="840" >
+       <codeaccessormethod accessType="1" parent_id="840" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="840" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4418,17 +4688,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="841" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+       <ccfdeclarationcodeblock parent_id="841" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="841" >
+       <codeaccessormethod accessType="0" parent_id="841" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="841" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="841" >
+       <codeaccessormethod accessType="1" parent_id="841" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="841" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4596,12 +4866,12 @@
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="858" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+              <ccfdeclarationcodeblock parent_id="858" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
               </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="859" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+              <ccfdeclarationcodeblock parent_id="859" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
                <header>
                 <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                </header>
@@ -4640,37 +4910,37 @@
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="855" >
+                  <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="855" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="856" >
+                  <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="856" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="856" >
+                  <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="856" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="858" >
+                  <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="858" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="858" >
+                  <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="858" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="859" >
+                  <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="859" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
                   </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="859" >
+                  <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="859" >
                    <header>
                     <cppcodedocumentation tag="" indentLevel="1" />
                    </header>
@@ -4700,7 +4970,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:54:31&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -4717,7 +4987,7 @@
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="855" >
+       <codeaccessormethod accessType="1" parent_id="855" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="855" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4732,12 +5002,12 @@
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="856" >
+       <codeaccessormethod accessType="0" parent_id="856" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="856" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="856" >
+       <codeaccessormethod accessType="1" parent_id="856" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="856" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4747,17 +5017,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="858" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node left;" >
+       <ccfdeclarationcodeblock parent_id="858" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_node left;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="858" >
+       <codeaccessormethod accessType="0" parent_id="858" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="858" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="858" >
+       <codeaccessormethod accessType="1" parent_id="858" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="858" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -4767,17 +5037,17 @@
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="859" tag="tblock_4" canDelete="false" indentLevel="1" text=" olsr_node right;" >
+       <ccfdeclarationcodeblock parent_id="859" tag="tblock_3" canDelete="false" indentLevel="1" text=" olsr_node right;" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="859" >
+       <codeaccessormethod accessType="0" parent_id="859" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="859" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="859" >
+       <codeaccessormethod accessType="1" parent_id="859" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="859" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
@@ -5049,7 +5319,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:06:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -5132,6 +5402,41 @@
         </header>
        </codeaccessormethod>
       </codeclassfield>
+      <codeclassfield parent_id="1123" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con_list - 104.129.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
      </classfields>
     </classifiercodedocument>
     <classifiercodedocument writeOutCode="true" package="" id="cppheader882" parent_class="882" fileExt=".h" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
@@ -5398,7 +5703,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -5685,7 +5990,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields/>
     </classifiercodedocument>
@@ -5953,7 +6258,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -6302,7 +6607,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:03:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="934" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -6651,7 +6956,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="941" field_type="0" initialValue="1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -7000,7 +7305,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="968" field_type="0" initialValue="2" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -7349,7 +7654,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 15:31:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="1005" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -7434,6 +7739,526 @@
       </codeclassfield>
      </classfields>
     </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="olsr_node - 104.129.1.1" id="cppheader1082" parent_class="1082" fileExt=".h" fileName="olsr_con_list - 104.129.1.1:104.131.1.1" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_LIST_-_104.129.1.1:104.131.1.1_H&amp;#010;#define OLSR_CON_LIST_-_104.129.1.1:104.131.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con_list.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="1082" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con_list - 104.129.1.1:104.131.1.1&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con_list - 104.129.1.1 ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="1126" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con_list next_olsr_con_list;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="1128" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="1126" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1126" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="1126" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="1126" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="1128" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="1128" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="1128" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="1128" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_LIST_-_104.129.1.1:104.131.1.1_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list - 104.129.1.1:104.131.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.!
 &amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:10:15&amp;#010;The original location of this file is olsr_node_-_104/129/1/1&amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields>
+      <codeclassfield parent_id="1123" field_type="3211310" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="2" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="3" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="4" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1126" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1126" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con_list next_olsr_con_list;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1126" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1126" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1126" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="1126" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1128" field_type="0" initialValue="104.129.1.1:104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1128" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1128" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="1128" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1128" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="1128" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader1127" parent_class="1127" fileExt=".h" fileName="olsr_con_list" >
+     <textblocks>
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_LIST_H&amp;#010;#define OLSR_CON_LIST_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <codeblockwithcomments tag="using" writeOutText="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="namespace" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
+       </header>
+       <textblocks>
+        <codeblockwithcomments tag="enums" writeOutText="false" >
+         <header>
+          <cppcodedocumentation tag="" writeOutText="false" />
+         </header>
+        </codeblockwithcomments>
+        <cppheaderclassdeclarationblock parent_id="1127" tag="classDeclarationBlock" canDelete="false" >
+         <header>
+          <cppcodedocumentation tag="" text="Class olsr_con_list&amp;#010;" />
+         </header>
+         <textblocks>
+          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Public stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks>
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con_list ( ) { }" >
+                 <header>
+                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
+                 </header>
+                </codeblockwithcomments>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Protected stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
+           <header>
+            <cppcodedocumentation tag="" text="Private stuff" />
+           </header>
+           <textblocks>
+            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
+             </header>
+             <textblocks/>
+            </hierarchicalcodeblock>
+            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
+             <header>
+              <cppcodedocumentation tag="" indentLevel="1" />
+             </header>
+             <textblocks>
+              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
+               </header>
+               <textblocks>
+                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
+                 <header>
+                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+                 </header>
+                 <textblocks/>
+                </hierarchicalcodeblock>
+               </textblocks>
+              </hierarchicalcodeblock>
+              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
+               <header>
+                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
+               </header>
+               <textblocks/>
+              </hierarchicalcodeblock>
+             </textblocks>
+            </hierarchicalcodeblock>
+           </textblocks>
+          </hierarchicalcodeblock>
+         </textblocks>
+        </cppheaderclassdeclarationblock>
+       </textblocks>
+      </hierarchicalcodeblock>
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_LIST_H" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+     </textblocks>
+     <header>
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:10:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+     </header>
+     <classfields/>
+    </classifiercodedocument>
    </codegenerator>
   </codegeneration>
  </XMI.extensions>

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-27 18:59:54 UTC (rev 118)
+++ trunk/apps/olsrs3d/main.c	2006-02-27 19:31:58 UTC (rev 119)
@@ -160,75 +160,79 @@
 	struct olsr_node **tmp_olsr_node;
 	struct olsr_con **olsr_con;
 	struct Obj_to_ip *Obj_to_ip_curr;
-	struct olsr_con_list *olsr_con_list, *prev_olsr_con_list = NULL;
+	struct olsr_con_list *olsr_con_list, *prev_olsr_con_list, *other_node_con_list;
 
 	/* no more nodes left */
 	if ( olsr_node == NULL ) return;
 
 	/* olsr node vanished */
-	if(olsr_node->last_seen > 0)
-		olsr_node->last_seen--;
-	if ( olsr_node->last_seen == 0 && olsr_node->visible) {
+	if ( olsr_node->last_seen > 0 ) olsr_node->last_seen--;
 
+	if ( olsr_node->last_seen == 0 && olsr_node->visible ) {
+
 		if ( Debug ) printf( "olsr node vanished: %s\n", olsr_node->ip );
 
 		olsr_node->visible = 0;
 
 		/* delete shape */
 		if ( olsr_node->obj_id != -1 ) {
+
 			/* remove element from ob2ip list */
 			lst_del( olsr_node->obj_id );
+			/* remove object from s3d server */
+			s3d_del_object( olsr_node->obj_id );
 
-			s3d_del_object( olsr_node->obj_id );
 			olsr_node->obj_id = -1;
-			olsr_con_list = olsr_node->olsr_con_list;
 
-			while( olsr_con_list != NULL) {
-				
-				struct olsr_con_list *con_list;
-				int con_id = olsr_con_list->olsr_con->obj_id;
-				
-				s3d_del_object(olsr_con_list->olsr_con->obj_id);
-				olsr_con_list->olsr_con->obj_id = -1;
-				
-				if( olsr_con_list->olsr_con->left_olsr_node == olsr_node) {
-					
-					con_list = olsr_con_list->olsr_con->right_olsr_node->olsr_con_list;
-					while(con_list != NULL) {
-						if(con_list->olsr_con->obj_id == con_id)		
-							break;
-						prev_olsr_con_list = con_list;
-						con_list = con_list->next_olsr_con_list;	
-					}
-					
-				} else {
-					
-					con_list = olsr_con_list->olsr_con->right_olsr_node->olsr_con_list;
-					while(con_list != NULL) {
-						if(con_list->olsr_con->obj_id == con_id)		
-							break;
-						prev_olsr_con_list = con_list;
-						con_list = con_list->next_olsr_con_list;	
-					}
-					
-				}
+		}
 
-				if( con_list != NULL ) {
-					prev_olsr_con_list->next_olsr_con_list = olsr_con_list->next_olsr_con_list;
-					free(con_list);
-				}
-								
-				/* delete connection */
-				if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
-				if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
-				free( olsr_con_list->olsr_con );
-				free( olsr_con_list );
-				olsr_con_list = olsr_con_list->next_olsr_con_list;
+		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
+
+		/* delete olsr connections of this node */
+		olsr_con_list = olsr_node->olsr_con_list;
+
+		while ( olsr_con_list != NULL ) {
+
+			/* get connection list of 'other' node */
+			if ( olsr_con_list->olsr_con->left_olsr_node == olsr_node ) {
+				other_node_con_list = olsr_con_list->olsr_con->right_olsr_node->olsr_con_list;
+			} else {
+				other_node_con_list = olsr_con_list->olsr_con->right_olsr_node->olsr_con_list;
 			}
-			
+
+			/* find this connection in 'other' nodes connection list ... */
+			prev_olsr_con_list = NULL;
+
+			while ( other_node_con_list != NULL ) {
+
+				if( other_node_con_list->olsr_con->obj_id == olsr_con_list->olsr_con->obj_id ) break;
+
+				prev_olsr_con_list = other_node_con_list;
+				other_node_con_list = other_node_con_list->next_olsr_con_list;
+
+			}
+
+			/* and delete it ! */
+			if ( other_node_con_list != NULL ) {
+				prev_olsr_con_list->next_olsr_con_list = other_node_con_list->next_olsr_con_list;
+				free( other_node_con_list );
+			}
+
+			s3d_del_object( olsr_con_list->olsr_con->obj_id );
+			olsr_con_list->olsr_con->obj_id = -1;
+
+			/* delete connection */
+			if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
+			if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
+
+			free( olsr_con_list->olsr_con );
+			free( olsr_con_list );
+
+			olsr_con_list = olsr_con_list->next_olsr_con_list;
+
 		}
+
 		olsr_node->olsr_con_list = NULL;
-		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
 
 	} else if (olsr_node->visible) {
 
@@ -424,7 +428,7 @@
 		s3d_push_vertex( (*olsr_con)->obj_id, (*olsr_con)->right_olsr_node->pos_vec[0] + ZeroPosition[0], (*olsr_con)->right_olsr_node->pos_vec[1]- 0.2 + ZeroPosition[1], (*olsr_con)->right_olsr_node->pos_vec[2] + ZeroPosition[2] );
 
 		if ( ColorSwitch ) {
-	
+
 			/* HNA */
 			if ( (*olsr_con)->left_etx == -1000.00 ) {
 
@@ -432,7 +436,7 @@
 							   0.0,0.0,1.0,
 							   0.0,0.0,1.0,
 							   0.0,0.0,1.0);
-	
+
 			} else {
 
 				etx = ( ( ( (*olsr_con)->left_etx + (*olsr_con)->right_etx ) / 2.0 ) - 10.0 ) * 10.0;
@@ -470,9 +474,9 @@
 						1.0,1.0,1.0,
 						1.0,1.0,1.0,
 						1.0,1.0,1.0);
-	
+
 		}
-	
+
 		s3d_push_polygon( (*olsr_con)->obj_id, 0,4,5,0 );
 		s3d_push_polygon( (*olsr_con)->obj_id, 3,1,2,0 );
 



From marec at berlios.de  Mon Feb 27 20:34:07 2006
From: marec at berlios.de (marec at BerliOS)
Date: Mon, 27 Feb 2006 20:34:07 +0100
Subject: [S3d-svn] r120 - trunk/apps/olsrs3d
Message-ID: <200602271934.k1RJY7nR016488@sheep.berlios.de>

Author: marec
Date: 2006-02-27 20:34:05 +0100 (Mon, 27 Feb 2006)
New Revision: 120

Modified:
   trunk/apps/olsrs3d/main.c
Log:
delete old/not needed vertices and olsr nodes - fix II

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-27 19:31:58 UTC (rev 119)
+++ trunk/apps/olsrs3d/main.c	2006-02-27 19:34:05 UTC (rev 120)
@@ -225,11 +225,11 @@
 			if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
 			if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
 
+			olsr_con_list = olsr_con_list->next_olsr_con_list;
+
 			free( olsr_con_list->olsr_con );
 			free( olsr_con_list );
 
-			olsr_con_list = olsr_con_list->next_olsr_con_list;
-
 		}
 
 		olsr_node->olsr_con_list = NULL;



From ankon at berlios.de  Mon Feb 27 21:09:43 2006
From: ankon at berlios.de (ankon at BerliOS)
Date: Mon, 27 Feb 2006 21:09:43 +0100
Subject: [S3d-svn] r121 - trunk
Message-ID: <200602272009.k1RK9hBJ001070@sheep.berlios.de>

Author: ankon
Date: 2006-02-27 21:09:40 +0100 (Mon, 27 Feb 2006)
New Revision: 121

Modified:
   trunk/configure.ac
Log:
- DEBUG_CFLAGS now include -Wall -ansi -pedantic
- define G_GLUT to 1 if glut is avaibale and should be included.
- define G_SDL to 1 if SDL is available and should be included.

These are the low hanging fruit, shm and signal stuff needs more things.



Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2006-02-27 19:34:05 UTC (rev 120)
+++ trunk/configure.ac	2006-02-27 20:09:40 UTC (rev 121)
@@ -41,7 +41,7 @@
 # XXX: switch default and help string for releases.
 AC_ARG_ENABLE([devel], AS_HELP_STRING([--disable-debug],[Disables debugging flags]), [enable_debug=$enableval], [enable_debug=yes])
 if test x$enable_debug = xyes; then
-	DEVEL_CFLAGS="$DEVEL_CFLAGS -ggdb"
+	DEVEL_CFLAGS="$DEVEL_CFLAGS -Wall -pedantic -ansi -ggdb"
 	DEVEL_LDFLAGS="$DEVEL_LDFLAGS -ggdb"
 fi
 
@@ -72,6 +72,12 @@
 
 SDL_VERSION=1.2.7
 AM_PATH_SDL($SDL_VERSION, [HAVE_SDL="x"], [])
+if test "x${HAVE_glut}" != "x"; then
+	AC_DEFINE([G_GLUT], 1, [Use GLUT])
+fi
+if test "x${HAVE_SDL}" != "x"; then
+	AC_DEFINE([G_SDL], 1, [Use SDL])
+fi
 if test "x${HAVE_glut}${HAVE_SDL}" = "x"; then
 	AC_MSG_ERROR([No OpenGL Framework found. Try installing GLUT or SDL, or both])
 fi



From nichtsnutz at berlios.de  Mon Feb 27 21:20:30 2006
From: nichtsnutz at berlios.de (nichtsnutz at BerliOS)
Date: Mon, 27 Feb 2006 21:20:30 +0100
Subject: [S3d-svn] r122 - trunk/apps/olsrs3d
Message-ID: <200602272020.k1RKKUPX004444@sheep.berlios.de>

Author: nichtsnutz
Date: 2006-02-27 21:20:28 +0100 (Mon, 27 Feb 2006)
New Revision: 122

Modified:
   trunk/apps/olsrs3d/main.c
Log:
delete node fix III

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-27 20:09:40 UTC (rev 121)
+++ trunk/apps/olsrs3d/main.c	2006-02-27 20:20:28 UTC (rev 122)
@@ -225,13 +225,14 @@
 			if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
 			if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
 
+			struct olsr_con_list *rm = olsr_con_list;
 			olsr_con_list = olsr_con_list->next_olsr_con_list;
+			free( rm->olsr_con );
+			free( rm );
+			
 
-			free( olsr_con_list->olsr_con );
-			free( olsr_con_list );
-
 		}
-
+		
 		olsr_node->olsr_con_list = NULL;
 
 	} else if (olsr_node->visible) {



From ankon at berlios.de  Mon Feb 27 21:29:27 2006
From: ankon at berlios.de (ankon at BerliOS)
Date: Mon, 27 Feb 2006 21:29:27 +0100
Subject: [S3d-svn] r123 - trunk
Message-ID: <200602272029.k1RKTRT9008008@sheep.berlios.de>

Author: ankon
Date: 2006-02-27 21:29:16 +0100 (Mon, 27 Feb 2006)
New Revision: 123

Modified:
   trunk/configure.ac
Log:
Define TCP, SIGS and SHM accordingly.
(Which under unixy systems usually means: they get defined, pasta.)



Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2006-02-27 20:20:28 UTC (rev 122)
+++ trunk/configure.ac	2006-02-27 20:29:16 UTC (rev 123)
@@ -27,7 +27,7 @@
 AC_PROG_GCC_TRADITIONAL
 AC_FUNC_SETVBUF_REVERSED
 AC_TYPE_SIGNAL
-AC_CHECK_FUNCS(select socket strerror strtod strtol)
+AC_CHECK_FUNCS([select socket strerror strtod strtol shmget signal]) # XXX: the previous test should have established the existence of signal() already. just be safe here.
 
 WARNS=""
 CFLAGS="$CFLAGS $X_CFLAGS"
@@ -134,6 +134,23 @@
 AC_ARG_WITH([examples], AS_HELP_STRING([--with-examples], [build examples]), [with_examples=$withval], [with_examples=yes])
 AM_CONDITIONAL([BUILD_EXAMPLES], [test x$with_examples = xyes])
 
+###
+### This part just defined some things in config.h
+### XXX: we should provide configure option to disable these parts, or don't use conditional
+###      compiles on those symbols (and instead just code parts that either get or don't get 
+###      linked in.
+
+if test x${ac_cv_func_socket} = xyes; then
+	AC_DEFINE([TCP], 1, [Define if TCP/IP network code should be compiled])
+fi
+if test x${ac_cv_func_shmget} = xyes; then
+	AC_DEFINE([SHM], 1, [Define if shared memory networking code should be compiled])
+fi
+if test x${ac_cv_func_signal} = xyes; then
+	# XXX: win32? we need to figure out if those actually exist on cygwin.
+	AC_DEFINE([SIGS], 1, [Define if signal code should be compiled])
+fi
+
 AC_CONFIG_HEADER(config.h)
 AC_CONFIG_FILES([
 	Makefile



From dotslash at berlios.de  Mon Feb 27 22:15:17 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Mon, 27 Feb 2006 22:15:17 +0100
Subject: [S3d-svn] r124 - in trunk: . apps/dot_mcp apps/s3d_x11gate apps/s3dgps apps/s3dvt client example server
Message-ID: <200602272115.k1RLFHkR001894@sheep.berlios.de>

Author: dotslash
Date: 2006-02-27 22:14:47 +0100 (Mon, 27 Feb 2006)
New Revision: 124

Modified:
   trunk/
   trunk/CREDITS
   trunk/ChangeLog
   trunk/README
   trunk/apps/dot_mcp/dot_mcp.h
   trunk/apps/dot_mcp/main.c
   trunk/apps/dot_mcp/menu.c
   trunk/apps/s3d_x11gate/s3d_x11gate.c
   trunk/apps/s3dgps/s3dgps.c
   trunk/apps/s3dvt/main.c
   trunk/apps/s3dvt/s3dvt.h
   trunk/apps/s3dvt/terminal.c
   trunk/client/3dsread.c
   trunk/client/callback.c
   trunk/client/config.h
   trunk/client/error.c
   trunk/client/event.c
   trunk/client/fontselect.c
   trunk/client/freetype.c
   trunk/client/io.c
   trunk/client/network.c
   trunk/client/object_queue.c
   trunk/client/proto_in.c
   trunk/client/proto_out.c
   trunk/client/s3d.h
   trunk/client/s3dlib.h
   trunk/client/sei_construct.c
   trunk/client/sei_interface.h
   trunk/client/sei_misc.c
   trunk/client/sei_monotone.c
   trunk/client/sei_tri.c
   trunk/client/sei_triangulate.h
   trunk/client/shm.c
   trunk/client/shm_ringbuf.c
   trunk/client/tcp.c
   trunk/example/3dsloader.c
   trunk/example/filebrowser.c
   trunk/example/hudtest.c
   trunk/example/katze.c
   trunk/example/radius_test.c
   trunk/example/s3dclock.c
   trunk/example/snowman.c
   trunk/example/strtest.c
   trunk/example/texturetest.c
   trunk/server/config.h
   trunk/server/cull.c
   trunk/server/error.c
   trunk/server/event.c
   trunk/server/global.h
   trunk/server/graphics.c
   trunk/server/graphics_glut.c
   trunk/server/graphics_sdl.c
   trunk/server/main.c
   trunk/server/matrix.c
   trunk/server/mcp.c
   trunk/server/navigation.c
   trunk/server/network.c
   trunk/server/object.c
   trunk/server/process.c
   trunk/server/proto.c
   trunk/server/proto.h
   trunk/server/shm.c
   trunk/server/shm_ringbuf.c
   trunk/server/tcp.c
   trunk/server/user.c
   trunk/server/user_glut.c
   trunk/server/user_sdl.c
Log:
 r162 at balthasar:  dotslash | 2006-02-27 22:14:40 +0100
 - added GPL/LGPL copyright notes (phew -.-)
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:160
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:162

Modified: trunk/CREDITS
===================================================================
--- trunk/CREDITS	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/CREDITS	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,7 +1,5 @@
 server/cull.c
 	- culling code adapted from Ruud van Gaal
-client/freetype.c
-	- tesselation things come from the OpenGL redbook
 client/sei_*.c
 	Implementation of the fast polygon triangulation algorithm
 	by R.Seidel (1991),  implementation by Narkhede A. and 

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/ChangeLog	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,4 +1,5 @@
 2006-02-27  Simon Wunderlich - <dotslash at packetmixer.de>
+	- added GPL/LGPL copyright notes (phew -.-)
 	- implemented object search path as : delimited list
 	- INFINITY define into #ifndef
 	- splitting README and INSTALL

Modified: trunk/README
===================================================================
--- trunk/README	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/README	2006-02-27 21:14:47 UTC (rev 124)
@@ -35,6 +35,7 @@
 The Library is licensed under the GNU Lesser GPL (LGPL), so you can 
 also write close-sourced thing which links to the library (if you 
 really have to ...).
+gpl.txt for the GPL and client/lgpl.txt for the LGPL are included too.
 if I'm mistaken in any ownership-concerns, please tell me and don't be 
 too mad at me, as I have had no idea of licensing at all.
 

Modified: trunk/apps/dot_mcp/dot_mcp.h
===================================================================
--- trunk/apps/dot_mcp/dot_mcp.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/apps/dot_mcp/dot_mcp.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,2 +1,26 @@
+/*
+ * dot_mcp.h
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 int menu_init();
 void menu_click(int oid);

Modified: trunk/apps/dot_mcp/main.c
===================================================================
--- trunk/apps/dot_mcp/main.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/apps/dot_mcp/main.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * main.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "dot_mcp.h"
 #include <unistd.h>  /*  sleep() */

Modified: trunk/apps/dot_mcp/menu.c
===================================================================
--- trunk/apps/dot_mcp/menu.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/apps/dot_mcp/menu.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * menu.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "dot_mcp.h"
 #include <unistd.h> /* fork(), execl() */

Modified: trunk/apps/s3d_x11gate/s3d_x11gate.c
===================================================================
--- trunk/apps/s3d_x11gate/s3d_x11gate.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/apps/s3d_x11gate/s3d_x11gate.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * s3d_x11gate.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <s3d.h>		 /*  s3d_*() */
 #include <stdlib.h> 	 /*  getenv() */
 #include <stdio.h>		 /*  printf() */

Modified: trunk/apps/s3dgps/s3dgps.c
===================================================================
--- trunk/apps/s3dgps/s3dgps.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/apps/s3dgps/s3dgps.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * s3dgps.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <s3d.h>
 #include <gps.h> 	/* gps_*() */
 #include <stdio.h> 	/* printf() */

Modified: trunk/apps/s3dvt/main.c
===================================================================
--- trunk/apps/s3dvt/main.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/apps/s3dvt/main.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,28 @@
+/*
+ * main.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ * Copyright (C) 2002 Alexander Graf <helly at gmx.net>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3dvt.h"
 #include <stdio.h> 		 /*  FILE,NULL */
 #include <unistd.h> 	 /*  read(),write(), sleep(),close() ... */

Modified: trunk/apps/s3dvt/s3dvt.h
===================================================================
--- trunk/apps/s3dvt/s3dvt.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/apps/s3dvt/s3dvt.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,28 @@
+/*
+ * s3dvt.h
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ * Copyright (C) 2002 Alexander Graf <helly at gmx.net>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #define MAX_LINES	50
 #define MAX_CHARS	80
 #define DEFAULT_FGCOLOR 2

Modified: trunk/apps/s3dvt/terminal.c
===================================================================
--- trunk/apps/s3dvt/terminal.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/apps/s3dvt/terminal.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,28 @@
+/*
+ * terminal.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ * Copyright (C) 2002 Alexander Graf <helly at gmx.net>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3dvt.h"
 #include <stdio.h> 		 /*  NULL,perror() */
 #include <string.h>		 /*  memcpy() */

Modified: trunk/client/3dsread.c
===================================================================
--- trunk/client/3dsread.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/3dsread.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * 3dsread.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include <stdlib.h> 	 /*  exit(), malloc() */

Modified: trunk/client/callback.c
===================================================================
--- trunk/client/callback.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/callback.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * callback.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "s3dlib.h"
 /*  the s3d callback list */

Modified: trunk/client/config.h
===================================================================
--- trunk/client/config.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/config.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * config.h
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 /*  this is definitly the better way to pick fonts. */
 #define WITH_FONTCONFIG
 /* #define WITH_SIGNALS */
@@ -2,3 +26,3 @@
 /*  our level of debug messages */
-#define DEBUG			HIGH /*  standard debug level */
+#define DEBUG			LOW /*  standard debug level */
 #define SHM_MAX_IDLE	200	/* maximum wait for server timeout */

Modified: trunk/client/error.c
===================================================================
--- trunk/client/error.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/error.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * error.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include <stdarg.h>		 /*  va_list */

Modified: trunk/client/event.c
===================================================================
--- trunk/client/event.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/event.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * event.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include "proto.h"

Modified: trunk/client/fontselect.c
===================================================================
--- trunk/client/fontselect.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/fontselect.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * fontselect.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 /*  here we select our truetype font. I'd recommend the fontconfig way,  */
 /*  as it always gives the best matching font. a xft version and a win32 */
 /*  version would be nice too, to be implemented :) */

Modified: trunk/client/freetype.c
===================================================================
--- trunk/client/freetype.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/freetype.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * freetype.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 /*  this file should render truetype fonts as objects */
 #include "s3d.h"
 #include "s3dlib.h"

Modified: trunk/client/io.c
===================================================================
--- trunk/client/io.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/io.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * io.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include "proto.h"

Modified: trunk/client/network.c
===================================================================
--- trunk/client/network.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/network.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * network.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include <string.h> 	 /*  memcpy() */

Modified: trunk/client/object_queue.c
===================================================================
--- trunk/client/object_queue.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/object_queue.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * object_queue.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include "proto.h"	 

Modified: trunk/client/proto_in.c
===================================================================
--- trunk/client/proto_in.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/proto_in.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * proto_in.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include <proto.h>

Modified: trunk/client/proto_out.c
===================================================================
--- trunk/client/proto_out.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/proto_out.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * proto_out.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include <proto.h>

Modified: trunk/client/s3d.h
===================================================================
--- trunk/client/s3d.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/s3d.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * s3d.h
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 struct s3d_evt {
 	unsigned char event;
 	int length;

Modified: trunk/client/s3dlib.h
===================================================================
--- trunk/client/s3dlib.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/s3dlib.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * s3dlib.h
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <stdint.h>
 #define VLOW	1
 #define	LOW		2

Modified: trunk/client/sei_construct.c
===================================================================
--- trunk/client/sei_construct.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/sei_construct.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,42 @@
+/*
+ * sei_construct.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich
+ * Copyright (C) 1994 A. Narkhede and D .Manocha, who released their code
+ * for public domain: 
+ * <snip>
+ *
+ * This code is in the public domain. Specifically, we give to the public
+ * domain all rights for future licensing of the source code, all resale
+ * rights, and all publishing rights.
+ *
+ * UNC-CH GIVES NO WARRANTY, EXPRESSED OR IMPLIED, FOR THE SOFTWARE
+ * AND/OR DOCUMENTATION PROVIDED, INCLUDING, WITHOUT LIMITATION, WARRANTY
+ * OF MERCHANTABILITY AND WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ *
+ *                                 - Atul Narkhede (narkhede at cs.unc.edu)
+ * </snip>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <sei_triangulate.h>
 #include <math.h>
 

Modified: trunk/client/sei_interface.h
===================================================================
--- trunk/client/sei_interface.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/sei_interface.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,42 @@
+/*
+ * sei_interface.h
+ * 
+ * Copyright (C) 2006 Simon Wunderlich
+ * Copyright (C) 1994 A. Narkhede and D .Manocha, who released their code
+ * for public domain: 
+ * <snip>
+ *
+ * This code is in the public domain. Specifically, we give to the public
+ * domain all rights for future licensing of the source code, all resale
+ * rights, and all publishing rights.
+ *
+ * UNC-CH GIVES NO WARRANTY, EXPRESSED OR IMPLIED, FOR THE SOFTWARE
+ * AND/OR DOCUMENTATION PROVIDED, INCLUDING, WITHOUT LIMITATION, WARRANTY
+ * OF MERCHANTABILITY AND WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ *
+ *                                 - Atul Narkhede (narkhede at cs.unc.edu)
+ * </snip>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #ifndef __interface_h
 #define __interface_h
 

Modified: trunk/client/sei_misc.c
===================================================================
--- trunk/client/sei_misc.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/sei_misc.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,42 @@
+/*
+ * sei_misc.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich
+ * Copyright (C) 1994 A. Narkhede and D .Manocha, who released their code
+ * for public domain: 
+ * <snip>
+ *
+ * This code is in the public domain. Specifically, we give to the public
+ * domain all rights for future licensing of the source code, all resale
+ * rights, and all publishing rights.
+ *
+ * UNC-CH GIVES NO WARRANTY, EXPRESSED OR IMPLIED, FOR THE SOFTWARE
+ * AND/OR DOCUMENTATION PROVIDED, INCLUDING, WITHOUT LIMITATION, WARRANTY
+ * OF MERCHANTABILITY AND WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ *
+ *                                 - Atul Narkhede (narkhede at cs.unc.edu)
+ * </snip>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <sei_triangulate.h>
 #include <sys/time.h>
 #include <math.h>

Modified: trunk/client/sei_monotone.c
===================================================================
--- trunk/client/sei_monotone.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/sei_monotone.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,42 @@
+/*
+ * sei_monotone.c
+ * 
+ * Copyright (C) 2006 Simon Wunderlich
+ * Copyright (C) 1994 A. Narkhede and D .Manocha, who released their code
+ * for public domain: 
+ * <snip>
+ *
+ * This code is in the public domain. Specifically, we give to the public
+ * domain all rights for future licensing of the source code, all resale
+ * rights, and all publishing rights.
+ *
+ * UNC-CH GIVES NO WARRANTY, EXPRESSED OR IMPLIED, FOR THE SOFTWARE
+ * AND/OR DOCUMENTATION PROVIDED, INCLUDING, WITHOUT LIMITATION, WARRANTY
+ * OF MERCHANTABILITY AND WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ *
+ *                                 - Atul Narkhede (narkhede at cs.unc.edu)
+ * </snip>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <sei_triangulate.h>
 #include <math.h>
 

Modified: trunk/client/sei_tri.c
===================================================================
--- trunk/client/sei_tri.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/sei_tri.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,42 @@
+/*
+ * sei_tri.c
+ *
+ * Copyright (C) 2006 Simon Wunderlich
+ * Copyright (C) 1994 A. Narkhede and D .Manocha, who released their code
+ * for public domain: 
+ * <snip>
+ *
+ * This code is in the public domain. Specifically, we give to the public
+ * domain all rights for future licensing of the source code, all resale
+ * rights, and all publishing rights.
+ *
+ * UNC-CH GIVES NO WARRANTY, EXPRESSED OR IMPLIED, FOR THE SOFTWARE
+ * AND/OR DOCUMENTATION PROVIDED, INCLUDING, WITHOUT LIMITATION, WARRANTY
+ * OF MERCHANTABILITY AND WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ *
+ *                                 - Atul Narkhede (narkhede at cs.unc.edu)
+ * </snip>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <sei_triangulate.h>
 #include <sys/time.h>
 

Modified: trunk/client/sei_triangulate.h
===================================================================
--- trunk/client/sei_triangulate.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/sei_triangulate.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,42 @@
+/*
+ * sei_triangulate.h
+ * 
+ * Copyright (C) 2006 Simon Wunderlich
+ * Copyright (C) 1994 A. Narkhede and D .Manocha, who released their code
+ * for public domain: 
+ * <snip>
+ *
+ * This code is in the public domain. Specifically, we give to the public
+ * domain all rights for future licensing of the source code, all resale
+ * rights, and all publishing rights.
+ *
+ * UNC-CH GIVES NO WARRANTY, EXPRESSED OR IMPLIED, FOR THE SOFTWARE
+ * AND/OR DOCUMENTATION PROVIDED, INCLUDING, WITHOUT LIMITATION, WARRANTY
+ * OF MERCHANTABILITY AND WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ *
+ *                                 - Atul Narkhede (narkhede at cs.unc.edu)
+ * </snip>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #ifndef _triangulate_h
 #define _triangulate_h
 

Modified: trunk/client/shm.c
===================================================================
--- trunk/client/shm.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/shm.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,26 @@
+/*
+ * shm.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include <stdlib.h> /* malloc() */

Modified: trunk/client/shm_ringbuf.c
===================================================================
--- trunk/client/shm_ringbuf.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/shm_ringbuf.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,26 @@
+/*
+ * shm_ringbuf.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include <stdint.h> /* uint32_t */

Modified: trunk/client/tcp.c
===================================================================
--- trunk/client/tcp.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/client/tcp.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,26 @@
+/*
+ * tcp.c
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of the s3d API, the API of s3d (the 3d network display server).
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * the s3d API is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published by
+ * the Free Software Foundation; either version 2.1 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d API is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ * 
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with the s3d API; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include "s3d.h"
 #include "s3dlib.h"
 #include <sys/types.h>

Modified: trunk/example/3dsloader.c
===================================================================
--- trunk/example/3dsloader.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/example/3dsloader.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,29 @@
+/*
+ * 3dsloader.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
+
 #include <s3d.h>
 #include <stdio.h>  /*  NULL */
 #include <unistd.h>  /* usleep() */

Modified: trunk/example/filebrowser.c
===================================================================
--- trunk/example/filebrowser.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/example/filebrowser.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,29 @@
+/*
+ * filebrowser.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
+
 #include <s3d.h>
 #include <stdio.h> 	 /*  printf() */
 #include <unistd.h>  /*  usleep() */

Modified: trunk/example/hudtest.c
===================================================================
--- trunk/example/hudtest.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/example/hudtest.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,28 @@
+/*
+ * hudtest.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
 #include <s3d.h>
 #include <unistd.h>  /*  sleep() */
 #include <stdio.h>  /*  printf() */

Modified: trunk/example/katze.c
===================================================================
--- trunk/example/katze.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/example/katze.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,29 @@
+/*
+ * katze.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
+
 #include <s3d.h>
 #include <unistd.h> /* usleep()*/
 #include <math.h>	/* sin() */

Modified: trunk/example/radius_test.c
===================================================================
--- trunk/example/radius_test.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/example/radius_test.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,26 @@
+/*
+ * radius_test.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include <s3d.h>
 #include <stdio.h>  /*  NULL */
 #include <unistd.h>  /* usleep() */

Modified: trunk/example/s3dclock.c
===================================================================
--- trunk/example/s3dclock.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/example/s3dclock.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * s3dclock.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <s3d.h>
 #include <stdio.h>  /*  NULL, sprintf() */
 #include <unistd.h>  /* usleep() */

Modified: trunk/example/snowman.c
===================================================================
--- trunk/example/snowman.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/example/snowman.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,26 @@
+/*
+ * snowman.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include <s3d.h>
 #include <unistd.h> /* usleep()*/
 #include <math.h>	/* sin() */

Modified: trunk/example/strtest.c
===================================================================
--- trunk/example/strtest.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/example/strtest.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,28 @@
+/*
+ * strtest.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
 #include <s3d.h>
 #include <stdio.h>  /*  NULL*/
 #include <unistd.h> /* sleep() */

Modified: trunk/example/texturetest.c
===================================================================
--- trunk/example/texturetest.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/example/texturetest.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * texturetest.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include <s3d.h>
 #include <stdio.h>  /*  NULL */
 #include <unistd.h>  /* usleep() */

Modified: trunk/server/config.h
===================================================================
--- trunk/server/config.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/config.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * config.h
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 /*  to be filled with configure options ...  */
 /*   */
 /*  on which port do we listen? */

Modified: trunk/server/cull.c
===================================================================
--- trunk/server/cull.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/cull.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,8 +1,32 @@
+/*
+ * cull.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ * code originated from  http://www.racer.nl/reference/vfc.htm 
+ * which is (C) Ruud van Gaal
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include <math.h>	/* sqrt() */
 #include <GL/gl.h>	/* glGetFloatv() */
-/* code originated from  http://www.racer.nl/reference/vfc.htm 
- * which is (c) Ruud van Gaal */
 struct t_plane {
 	struct t_vertex n;
 	float d;

Modified: trunk/server/error.c
===================================================================
--- trunk/server/error.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/error.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * error.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"	 
 #include <stdio.h>	 /*  for printf() */
 #include <stdarg.h>	 /*  va_start, va_end */

Modified: trunk/server/event.c
===================================================================
--- trunk/server/event.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/event.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * event.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include "proto.h"
 #ifdef WIN32 

Modified: trunk/server/global.h
===================================================================
--- trunk/server/global.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/global.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * global.h
+ *
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "config.h"
 #include <stdint.h>		 /*  integer types */
 #ifdef SHM

Modified: trunk/server/graphics.c
===================================================================
--- trunk/server/graphics.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/graphics.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,26 @@
+/*
+ * graphics.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include "global.h"
 #include <stdlib.h>		 /*  malloc() */
 #include <string.h>		 /*  memcpy() */

Modified: trunk/server/graphics_glut.c
===================================================================
--- trunk/server/graphics_glut.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/graphics_glut.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * graphics_glut.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 /*  this is the file for operation with glut ... */
 /*  maybe we are able to choose if we want to use glut or sdl or any other lib later ... */
 

Modified: trunk/server/graphics_sdl.c
===================================================================
--- trunk/server/graphics_sdl.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/graphics_sdl.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,26 @@
+/*
+ * graphics_sdl.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 #include "global.h"
 
 #include <SDL_opengl.h>

Modified: trunk/server/main.c
===================================================================
--- trunk/server/main.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/main.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * main.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h" 		 /*  contains the prototypes of all modules */
 #include <unistd.h> 	 /*  usleep() */
 #include <stdlib.h>		 /*  exit() */

Modified: trunk/server/matrix.c
===================================================================
--- trunk/server/matrix.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/matrix.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * matrix.c 
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+i
+
 /*  this file gives some simple matrix functionality for things I was unable */
 /*  to do with OpenGL */
 #include "global.h"

Modified: trunk/server/mcp.c
===================================================================
--- trunk/server/mcp.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/mcp.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * mcp.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include "proto.h" 			 /*  for S3D_P_OBJECT, to be integrated in proto.c */
 #ifdef WIN32

Modified: trunk/server/navigation.c
===================================================================
--- trunk/server/navigation.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/navigation.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * navigation.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include <math.h>
 int alphax,alphay;

Modified: trunk/server/network.c
===================================================================
--- trunk/server/network.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/network.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * network.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include <stdio.h>
 #include <stdlib.h>		 /*  free() */

Modified: trunk/server/object.c
===================================================================
--- trunk/server/object.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/object.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * object.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include <stdlib.h>		 /*  malloc(),realloc(),free() */
 #include <string.h>		 /*  memcpy() */

Modified: trunk/server/process.c
===================================================================
--- trunk/server/process.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/process.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * process.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include <stdlib.h>  /*  for malloc, free */
 #include <string.h>	 /*  strncmp(), strncpy() */

Modified: trunk/server/proto.c
===================================================================
--- trunk/server/proto.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/proto.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * proto.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include "proto.h"
 /* #include <string.h>  / *  memcpy() * / */

Modified: trunk/server/proto.h
===================================================================
--- trunk/server/proto.h	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/proto.h	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * proto.h
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 /*  this defines the protocol */
 
 /*  simply put, a command can be issued from either the client or  */

Modified: trunk/server/shm.c
===================================================================
--- trunk/server/shm.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/shm.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * shm.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #ifdef SHM
 #include <stdio.h>  /* printf(),fopen(),fclose() */

Modified: trunk/server/shm_ringbuf.c
===================================================================
--- trunk/server/shm_ringbuf.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/shm_ringbuf.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * shm_ringbuf.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include <stdio.h>	/* printf(), getchar() */
 #include <stdint.h> /* uint32_t */

Modified: trunk/server/tcp.c
===================================================================
--- trunk/server/tcp.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/tcp.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * tcp.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #ifdef TCP
 #include <errno.h>		 /*  errno */

Modified: trunk/server/user.c
===================================================================
--- trunk/server/user.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/user.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * user.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 /*  this file reads user input */
 /*  this is done right now by SDL-polling */

Modified: trunk/server/user_glut.c
===================================================================
--- trunk/server/user_glut.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/user_glut.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * user_glut.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include <GL/glut.h> 	 /*  all the glut functions */
 /*  local prototypes */

Modified: trunk/server/user_sdl.c
===================================================================
--- trunk/server/user_sdl.c	2006-02-27 20:29:16 UTC (rev 123)
+++ trunk/server/user_sdl.c	2006-02-27 21:14:47 UTC (rev 124)
@@ -1,3 +1,27 @@
+/*
+ * user_sdl.c
+ * 
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *
+ * This file is part of s3d, a 3d network display server.
+ * See http://s3d.berlios.de/ for more updates.
+ * 
+ * s3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ * 
+ * s3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
 #include "global.h"
 #include <SDL.h>
 /*  this file reads user input */



From dotslash at berlios.de  Mon Feb 27 23:04:04 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Mon, 27 Feb 2006 23:04:04 +0100
Subject: [S3d-svn] r125 - in trunk: . client
Message-ID: <200602272204.k1RM44Ed031631@sheep.berlios.de>

Author: dotslash
Date: 2006-02-27 23:04:03 +0100 (Mon, 27 Feb 2006)
New Revision: 125

Modified:
   trunk/
   trunk/client/3dsread.c
   trunk/client/callback.c
   trunk/client/config.h
   trunk/client/error.c
   trunk/client/event.c
   trunk/client/fontselect.c
   trunk/client/freetype.c
   trunk/client/io.c
   trunk/client/network.c
   trunk/client/object_queue.c
   trunk/client/proto_in.c
   trunk/client/proto_out.c
   trunk/client/s3d.h
   trunk/client/s3dlib.h
   trunk/client/sei_construct.c
   trunk/client/sei_interface.h
   trunk/client/sei_misc.c
   trunk/client/sei_monotone.c
   trunk/client/sei_tri.c
   trunk/client/sei_triangulate.h
   trunk/client/shm.c
   trunk/client/shm_ringbuf.c
   trunk/client/tcp.c
Log:
 r171 at balthasar:  dotslash | 2006-02-27 23:03:56 +0100
 the -> The :)



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:162
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:171

Modified: trunk/client/3dsread.c
===================================================================
--- trunk/client/3dsread.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/3dsread.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/callback.c
===================================================================
--- trunk/client/callback.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/callback.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/config.h
===================================================================
--- trunk/client/config.h	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/config.h	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/error.c
===================================================================
--- trunk/client/error.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/error.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/event.c
===================================================================
--- trunk/client/event.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/event.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/fontselect.c
===================================================================
--- trunk/client/fontselect.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/fontselect.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/freetype.c
===================================================================
--- trunk/client/freetype.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/freetype.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/io.c
===================================================================
--- trunk/client/io.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/io.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/network.c
===================================================================
--- trunk/client/network.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/network.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/object_queue.c
===================================================================
--- trunk/client/object_queue.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/object_queue.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/proto_in.c
===================================================================
--- trunk/client/proto_in.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/proto_in.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/proto_out.c
===================================================================
--- trunk/client/proto_out.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/proto_out.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/s3d.h
===================================================================
--- trunk/client/s3d.h	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/s3d.h	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/s3dlib.h
===================================================================
--- trunk/client/s3dlib.h	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/s3dlib.h	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/sei_construct.c
===================================================================
--- trunk/client/sei_construct.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/sei_construct.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -21,12 +21,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/sei_interface.h
===================================================================
--- trunk/client/sei_interface.h	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/sei_interface.h	2006-02-27 22:04:03 UTC (rev 125)
@@ -21,12 +21,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/sei_misc.c
===================================================================
--- trunk/client/sei_misc.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/sei_misc.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -21,12 +21,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/sei_monotone.c
===================================================================
--- trunk/client/sei_monotone.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/sei_monotone.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -21,12 +21,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/sei_tri.c
===================================================================
--- trunk/client/sei_tri.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/sei_tri.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -21,12 +21,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/sei_triangulate.h
===================================================================
--- trunk/client/sei_triangulate.h	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/sei_triangulate.h	2006-02-27 22:04:03 UTC (rev 125)
@@ -21,12 +21,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/shm.c
===================================================================
--- trunk/client/shm.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/shm.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/shm_ringbuf.c
===================================================================
--- trunk/client/shm_ringbuf.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/shm_ringbuf.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.

Modified: trunk/client/tcp.c
===================================================================
--- trunk/client/tcp.c	2006-02-27 21:14:47 UTC (rev 124)
+++ trunk/client/tcp.c	2006-02-27 22:04:03 UTC (rev 125)
@@ -6,12 +6,12 @@
  * This file is part of the s3d API, the API of s3d (the 3d network display server).
  * See http://s3d.berlios.de/ for more updates.
  * 
- * the s3d API is free software; you can redistribute it and/or modify
+ * The s3d API is free software; you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation; either version 2.1 of the License, or
  * (at your option) any later version.
  * 
- * s3d API is distributed in the hope that it will be useful,
+ * The s3d API is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.



From marec at berlios.de  Mon Feb 27 23:52:40 2006
From: marec at berlios.de (marec at BerliOS)
Date: Mon, 27 Feb 2006 23:52:40 +0100
Subject: [S3d-svn] r126 - trunk/apps/olsrs3d
Message-ID: <200602272252.k1RMqeCx006271@sheep.berlios.de>

Author: marec
Date: 2006-02-27 23:52:39 +0100 (Mon, 27 Feb 2006)
New Revision: 126

Modified:
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/net.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
- delete old/not needed vertices and olsr nodes - final fix
- olsr node count re-added
- gpl licence text added
- meshnode.org icon disabled

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-27 22:04:03 UTC (rev 125)
+++ trunk/apps/olsrs3d/main.c	2006-02-27 22:52:39 UTC (rev 126)
@@ -1,3 +1,28 @@
+/*
+ * main.c
+ *
+ * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ *
+ * This file is part of olsrs3d, an olsr topology visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * olsrs3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * olsrs3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
 #include <stdio.h>
 #include <s3d.h>
 #include <unistd.h>	/* sleep() */
@@ -16,6 +41,8 @@
 struct olsr_node *Olsr_root = NULL;   /* top of olsr node tree */
 struct Obj_to_ip *Obj_to_ip_head, *Obj_to_ip_end, *List_ptr;   /* needed pointer for linked list */
 
+int Olsr_node_count = 0, Last_olsr_node_count = -1;
+int Olsr_node_count_obj = -1;
 int Byte_count;
 
 int node_count=-1;
@@ -160,7 +187,7 @@
 	struct olsr_node **tmp_olsr_node;
 	struct olsr_con **olsr_con;
 	struct Obj_to_ip *Obj_to_ip_curr;
-	struct olsr_con_list *olsr_con_list, *prev_olsr_con_list, *other_node_con_list;
+	struct olsr_con_list *olsr_con_list, *prev_olsr_con_list, *other_node_con_list, *tmp_olsr_con_list;
 
 	/* no more nodes left */
 	if ( olsr_node == NULL ) return;
@@ -172,6 +199,8 @@
 
 		if ( Debug ) printf( "olsr node vanished: %s\n", olsr_node->ip );
 
+		Olsr_node_count--;
+
 		olsr_node->visible = 0;
 
 		/* delete shape */
@@ -186,8 +215,13 @@
 
 		}
 
-		if ( olsr_node->desc_id != -1 ) s3d_del_object( olsr_node->desc_id );
+		if ( olsr_node->desc_id != -1 ) {
 
+			s3d_del_object( olsr_node->desc_id );
+			olsr_node->desc_id = -1;
+
+		}
+
 		/* delete olsr connections of this node */
 		olsr_con_list = olsr_node->olsr_con_list;
 
@@ -197,7 +231,7 @@
 			if ( olsr_con_list->olsr_con->left_olsr_node == olsr_node ) {
 				other_node_con_list = olsr_con_list->olsr_con->right_olsr_node->olsr_con_list;
 			} else {
-				other_node_con_list = olsr_con_list->olsr_con->right_olsr_node->olsr_con_list;
+				other_node_con_list = olsr_con_list->olsr_con->left_olsr_node->olsr_con_list;
 			}
 
 			/* find this connection in 'other' nodes connection list ... */
@@ -214,25 +248,25 @@
 
 			/* and delete it ! */
 			if ( other_node_con_list != NULL ) {
-				prev_olsr_con_list->next_olsr_con_list = other_node_con_list->next_olsr_con_list;
+				if ( prev_olsr_con_list != NULL ) prev_olsr_con_list->next_olsr_con_list = other_node_con_list->next_olsr_con_list;
 				free( other_node_con_list );
 			}
 
 			s3d_del_object( olsr_con_list->olsr_con->obj_id );
-			olsr_con_list->olsr_con->obj_id = -1;
 
 			/* delete connection */
 			if ( olsr_con_list->olsr_con->prev_olsr_con != NULL ) olsr_con_list->olsr_con->prev_olsr_con->next_olsr_con = olsr_con_list->olsr_con->next_olsr_con;
 			if ( olsr_con_list->olsr_con->next_olsr_con != NULL ) olsr_con_list->olsr_con->next_olsr_con->prev_olsr_con = olsr_con_list->olsr_con->prev_olsr_con;
 
-			struct olsr_con_list *rm = olsr_con_list;
+			tmp_olsr_con_list = olsr_con_list;
+
 			olsr_con_list = olsr_con_list->next_olsr_con_list;
-			free( rm->olsr_con );
-			free( rm );
-			
 
+			free( tmp_olsr_con_list->olsr_con );
+			free( tmp_olsr_con_list );
+
 		}
-		
+
 		olsr_node->olsr_con_list = NULL;
 
 	} else if (olsr_node->visible) {
@@ -293,10 +327,10 @@
 
 						if ( ( strncmp( olsr_con_list->olsr_con->left_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) || ( strncmp( olsr_con_list->olsr_con->right_olsr_node->ip, Obj_to_ip_curr->olsr_node->ip, NAMEMAX ) == 0 ) ) break;
 
-						prev_olsr_con_list = olsr_con_list;
+// 						if ( ( olsr_con_list->olsr_con->left_olsr_node == Obj_to_ip_curr->olsr_node ) || (  olsr_con_list->olsr_con->right_olsr_node == Obj_to_ip_curr->olsr_node ) ) break;
 
-					/* invisble (deleted) node */
 					}
+
 					olsr_con_list = olsr_con_list->next_olsr_con_list;
 
 				}
@@ -492,6 +526,7 @@
 void mainloop() {
 
 	int net_result;   /* result of function net_main */
+	char nc_str[20];
 
 	/* calculate new movement vector */
 	calc_olsr_node_mov();
@@ -502,6 +537,21 @@
 	/* move it */
 	move_olsr_nodes();
 
+	/* if we have more or less nodes now - redraw node count */
+	if ( Olsr_node_count != Last_olsr_node_count ) {
+
+		if ( Olsr_node_count_obj != -1 ) s3d_del_object( Olsr_node_count_obj );
+		snprintf( nc_str, 20, "node count: %d", Olsr_node_count );
+		Olsr_node_count_obj = s3d_draw_string( nc_str, NULL );
+		s3d_link( Olsr_node_count_obj, 0 );
+		s3d_flags_on( Olsr_node_count_obj, S3D_OF_VISIBLE );
+		s3d_scale( Olsr_node_count_obj, 0.2 );
+		s3d_translate( Olsr_node_count_obj, left*3.0, -bottom*3.0-0.2, -3.0 );
+
+		Last_olsr_node_count = Olsr_node_count;
+
+	}
+
 	/* read data from socket */
 	Byte_count = 0;
 	while ( ( net_result = net_main() ) != 0 ) {
@@ -512,7 +562,7 @@
 	}
 
 	alpha=(alpha+5)%360;
-	s3d_rotate(mesh,0,alpha,0);
+// 	s3d_rotate(mesh,0,alpha,0);
 	if(RotateSwitch) {
 		Zp_rotate = (Zp_rotate+RotateSpeed)%360;
 		s3d_rotate(ZeroPoint,0,Zp_rotate,0);
@@ -809,9 +859,9 @@
 			Olsr_node_obj = s3d_import_3ds_file( "objs/accesspoint.3ds" );
 			Olsr_node_inet_obj = s3d_import_3ds_file( "objs/accesspoint_inet.3ds" );
 			Olsr_node_hna_net = s3d_import_3ds_file( "objs/internet.3ds" );
-			mesh=s3d_import_3ds_file("objs/meshnode.3ds");
-			s3d_link(mesh,0);
-			s3d_scale(mesh,0.15);
+// 			mesh=s3d_import_3ds_file("objs/meshnode.3ds");
+// 			s3d_link(mesh,0);
+// 			s3d_scale(mesh,0.15);
 			ZeroPoint = s3d_new_object();
 			s3d_mainloop(mainloop);
 			s3d_quit();

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-27 22:04:03 UTC (rev 125)
+++ trunk/apps/olsrs3d/net.c	2006-02-27 22:52:39 UTC (rev 126)
@@ -1,3 +1,28 @@
+/*
+ * net.c
+ *
+ * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ *
+ * This file is part of olsrs3d, an olsr topology visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * olsrs3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * olsrs3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <unistd.h>

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 22:04:03 UTC (rev 125)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 22:52:39 UTC (rev 126)
@@ -1,3 +1,28 @@
+/*
+ * olsrs3d.h
+ *
+ * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ *
+ * This file is part of olsrs3d, an olsr topology visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * olsrs3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * olsrs3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
 #define NAMEMAX		128
 struct t_node {
 	float pos[3], mov[3];
@@ -67,9 +92,14 @@
 extern int	Olsr_node_inet_obj;
 extern int	Olsr_node_hna_net;
 
+extern int Olsr_node_count_obj;
+extern int Olsr_node_count;
+extern int Last_olsr_node_count;
 extern int Byte_count;
 extern int ZeroPoint;
 
+extern float bottom,left;
+
 extern int 	max, new_max;
 extern float 	*adj;
 extern int	*adj_obj;

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-27 22:04:03 UTC (rev 125)
+++ trunk/apps/olsrs3d/process.c	2006-02-27 22:52:39 UTC (rev 126)
@@ -1,3 +1,28 @@
+/*
+ * process.c
+ *
+ * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ *
+ * This file is part of olsrs3d, an olsr topology visualizer for s3d.
+ * See http://s3d.berlios.de/ for more updates.
+ *
+ * olsrs3d is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * olsrs3d is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with s3d; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+
+
 #include <stdio.h> 	/* NULL */
 #include <string.h> 	/* strlen(), memmove() */
 #include <stdlib.h> 	/* rand(), malloc(), realloc(), free(), strtof() */
@@ -206,9 +231,17 @@
 			/* former invisble (deleted) node */
 			if ( (*olsr_node)->visible == 0 ) {
 
+				(*olsr_node)->node_type = 0;
+				(*olsr_node)->node_type_modified = 1;
+
 				(*olsr_node)->visible = 1;
+
+				(*olsr_node)->mov_vec[0] = (*olsr_node)->mov_vec[1] = (*olsr_node)->mov_vec[2] = 0.0;
+
 				if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
 
+				Olsr_node_count++;
+
 			}
 
 			return (*olsr_node);
@@ -243,6 +276,8 @@
 
 		if ( Debug ) printf( "new olsr node: %s\n", (*olsr_node)->ip );
 
+		Olsr_node_count++;
+
 		(*olsr_node)->pos_vec[0] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
 		(*olsr_node)->pos_vec[1] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;
 		(*olsr_node)->pos_vec[2] = ( ( float ) 2.0 * rand() ) / RAND_MAX - 1.0;



From dotslash at berlios.de  Tue Feb 28 00:00:06 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Tue, 28 Feb 2006 00:00:06 +0100
Subject: [S3d-svn] r127 - in trunk: . apps/dot_mcp apps/s3d_x11gate apps/s3dgps apps/s3dvt
Message-ID: <200602272300.k1RN06Au007501@sheep.berlios.de>

Author: dotslash
Date: 2006-02-28 00:00:03 +0100 (Tue, 28 Feb 2006)
New Revision: 127

Modified:
   trunk/
   trunk/apps/dot_mcp/dot_mcp.h
   trunk/apps/dot_mcp/main.c
   trunk/apps/dot_mcp/menu.c
   trunk/apps/s3d_x11gate/s3d_x11gate.c
   trunk/apps/s3dgps/s3dgps.c
   trunk/apps/s3dvt/main.c
   trunk/apps/s3dvt/s3dvt.h
   trunk/apps/s3dvt/terminal.c
Log:
 r175 at balthasar:  dotslash | 2006-02-27 23:59:55 +0100
 - Changing apps to standalone application



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:171
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:175

Modified: trunk/apps/dot_mcp/dot_mcp.h
===================================================================
--- trunk/apps/dot_mcp/dot_mcp.h	2006-02-27 22:52:39 UTC (rev 126)
+++ trunk/apps/dot_mcp/dot_mcp.h	2006-02-27 23:00:03 UTC (rev 127)
@@ -3,24 +3,23 @@
  * 
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
- * This file is part of s3d, a 3d network display server.
+ * This file is part of dot_mcp, a mcp for s3d.
  * See http://s3d.berlios.de/ for more updates.
  * 
- * s3d is free software; you can redistribute it and/or modify
+ * dot_mcp is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  * 
- * s3d is distributed in the hope that it will be useful,
+ * dot_mcp is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  * 
  * You should have received a copy of the GNU General Public License
- * along with s3d; if not, write to the Free Software
+ * along with dot_mcp; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 
-
 int menu_init();
 void menu_click(int oid);

Modified: trunk/apps/dot_mcp/main.c
===================================================================
--- trunk/apps/dot_mcp/main.c	2006-02-27 22:52:39 UTC (rev 126)
+++ trunk/apps/dot_mcp/main.c	2006-02-27 23:00:03 UTC (rev 127)
@@ -3,21 +3,21 @@
  * 
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
- * This file is part of s3d, a 3d network display server.
+ * This file is part of dot_mcp, a mcp for s3d.
  * See http://s3d.berlios.de/ for more updates.
  * 
- * s3d is free software; you can redistribute it and/or modify
+ * dot_mcp is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  * 
- * s3d is distributed in the hope that it will be useful,
+ * dot_mcp is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  * 
  * You should have received a copy of the GNU General Public License
- * along with s3d; if not, write to the Free Software
+ * along with dot_mcp; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 

Modified: trunk/apps/dot_mcp/menu.c
===================================================================
--- trunk/apps/dot_mcp/menu.c	2006-02-27 22:52:39 UTC (rev 126)
+++ trunk/apps/dot_mcp/menu.c	2006-02-27 23:00:03 UTC (rev 127)
@@ -3,25 +3,26 @@
  * 
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
- * This file is part of s3d, a 3d network display server.
+ * This file is part of dot_mcp, a mcp for s3d.
  * See http://s3d.berlios.de/ for more updates.
  * 
- * s3d is free software; you can redistribute it and/or modify
+ * dot_mcp is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  * 
- * s3d is distributed in the hope that it will be useful,
+ * dot_mcp is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  * 
  * You should have received a copy of the GNU General Public License
- * along with s3d; if not, write to the Free Software
+ * along with dot_mcp; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 
 
+
 #include "s3d.h"
 #include "dot_mcp.h"
 #include <unistd.h> /* fork(), execl() */

Modified: trunk/apps/s3d_x11gate/s3d_x11gate.c
===================================================================
--- trunk/apps/s3d_x11gate/s3d_x11gate.c	2006-02-27 22:52:39 UTC (rev 126)
+++ trunk/apps/s3d_x11gate/s3d_x11gate.c	2006-02-27 23:00:03 UTC (rev 127)
@@ -3,21 +3,21 @@
  * 
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
- * This file is part of s3d, a 3d network display server.
+ * This file is part of s3d_x11gate, a 3d gateway for x11 desktops.
  * See http://s3d.berlios.de/ for more updates.
  * 
- * s3d is free software; you can redistribute it and/or modify
+ * s3d_x11gate is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  * 
- * s3d is distributed in the hope that it will be useful,
+ * s3d_x11gate is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  * 
  * You should have received a copy of the GNU General Public License
- * along with s3d; if not, write to the Free Software
+ * along with s3d_x11gate; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 

Modified: trunk/apps/s3dgps/s3dgps.c
===================================================================
--- trunk/apps/s3dgps/s3dgps.c	2006-02-27 22:52:39 UTC (rev 126)
+++ trunk/apps/s3dgps/s3dgps.c	2006-02-27 23:00:03 UTC (rev 127)
@@ -3,21 +3,21 @@
  * 
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
- * This file is part of s3d, a 3d network display server.
+ * This file is part of s3dgps, a gps navigator for s3d.
  * See http://s3d.berlios.de/ for more updates.
  * 
- * s3d is free software; you can redistribute it and/or modify
+ * s3dgps is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  * 
- * s3d is distributed in the hope that it will be useful,
+ * s3dgps is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  * 
  * You should have received a copy of the GNU General Public License
- * along with s3d; if not, write to the Free Software
+ * along with s3dgps; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 

Modified: trunk/apps/s3dvt/main.c
===================================================================
--- trunk/apps/s3dvt/main.c	2006-02-27 22:52:39 UTC (rev 126)
+++ trunk/apps/s3dvt/main.c	2006-02-27 23:00:03 UTC (rev 127)
@@ -4,21 +4,21 @@
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  * Copyright (C) 2002 Alexander Graf <helly at gmx.net>
  *
- * This file is part of s3d, a 3d network display server.
+ * This file is part of s3dvt, a 3d terminal emulator for s3d.
  * See http://s3d.berlios.de/ for more updates.
  * 
- * s3d is free software; you can redistribute it and/or modify
+ * s3dvt is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  * 
- * s3d is distributed in the hope that it will be useful,
+ * s3dvt is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  * 
  * You should have received a copy of the GNU General Public License
- * along with s3d; if not, write to the Free Software
+ * along with s3dvt; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 

Modified: trunk/apps/s3dvt/s3dvt.h
===================================================================
--- trunk/apps/s3dvt/s3dvt.h	2006-02-27 22:52:39 UTC (rev 126)
+++ trunk/apps/s3dvt/s3dvt.h	2006-02-27 23:00:03 UTC (rev 127)
@@ -4,25 +4,24 @@
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  * Copyright (C) 2002 Alexander Graf <helly at gmx.net>
  *
- * This file is part of s3d, a 3d network display server.
+ * This file is part of s3dvt, a 3d terminal emulator for s3d.
  * See http://s3d.berlios.de/ for more updates.
  * 
- * s3d is free software; you can redistribute it and/or modify
+ * s3dvt is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  * 
- * s3d is distributed in the hope that it will be useful,
+ * s3dvt is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  * 
  * You should have received a copy of the GNU General Public License
- * along with s3d; if not, write to the Free Software
+ * along with s3dvt; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 
-
 #define MAX_LINES	50
 #define MAX_CHARS	80
 #define DEFAULT_FGCOLOR 2

Modified: trunk/apps/s3dvt/terminal.c
===================================================================
--- trunk/apps/s3dvt/terminal.c	2006-02-27 22:52:39 UTC (rev 126)
+++ trunk/apps/s3dvt/terminal.c	2006-02-27 23:00:03 UTC (rev 127)
@@ -4,21 +4,21 @@
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  * Copyright (C) 2002 Alexander Graf <helly at gmx.net>
  *
- * This file is part of s3d, a 3d network display server.
+ * This file is part of s3dvt, a 3d terminal emulator for s3d.
  * See http://s3d.berlios.de/ for more updates.
  * 
- * s3d is free software; you can redistribute it and/or modify
+ * s3dvt is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  * 
- * s3d is distributed in the hope that it will be useful,
+ * s3dvt is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  * 
  * You should have received a copy of the GNU General Public License
- * along with s3d; if not, write to the Free Software
+ * along with s3dvt; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 



From dotslash at berlios.de  Tue Feb 28 00:16:30 2006
From: dotslash at berlios.de (dotslash at BerliOS)
Date: Tue, 28 Feb 2006 00:16:30 +0100
Subject: [S3d-svn] r128 - in trunk: . apps/olsrs3d
Message-ID: <200602272316.k1RNGU34009701@sheep.berlios.de>

Author: dotslash
Date: 2006-02-28 00:16:15 +0100 (Tue, 28 Feb 2006)
New Revision: 128

Modified:
   trunk/
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/net.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/process.c
Log:
 r177 at balthasar:  dotslash | 2006-02-28 00:16:09 +0100
 - copyright information added
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:175
   + bf2c72c7-850b-0410-b9e4-c1fddb578f10:/s3d-trunk:177

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-27 23:00:03 UTC (rev 127)
+++ trunk/apps/olsrs3d/main.c	2006-02-27 23:16:15 UTC (rev 128)
@@ -2,6 +2,7 @@
  * main.c
  *
  * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
  * This file is part of olsrs3d, an olsr topology visualizer for s3d.
  * See http://s3d.berlios.de/ for more updates.

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-27 23:00:03 UTC (rev 127)
+++ trunk/apps/olsrs3d/net.c	2006-02-27 23:16:15 UTC (rev 128)
@@ -2,6 +2,7 @@
  * net.c
  *
  * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
  * This file is part of olsrs3d, an olsr topology visualizer for s3d.
  * See http://s3d.berlios.de/ for more updates.

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 23:00:03 UTC (rev 127)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 23:16:15 UTC (rev 128)
@@ -2,6 +2,7 @@
  * olsrs3d.h
  *
  * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
  * This file is part of olsrs3d, an olsr topology visualizer for s3d.
  * See http://s3d.berlios.de/ for more updates.

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-27 23:00:03 UTC (rev 127)
+++ trunk/apps/olsrs3d/process.c	2006-02-27 23:16:15 UTC (rev 128)
@@ -2,6 +2,7 @@
  * process.c
  *
  * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
  * This file is part of olsrs3d, an olsr topology visualizer for s3d.
  * See http://s3d.berlios.de/ for more updates.



From marec at berlios.de  Tue Feb 28 00:36:07 2006
From: marec at berlios.de (marec at BerliOS)
Date: Tue, 28 Feb 2006 00:36:07 +0100
Subject: [S3d-svn] r129 - trunk/apps/olsrs3d
Message-ID: <200602272336.k1RNa7up015848@sheep.berlios.de>

Author: marec
Date: 2006-02-28 00:35:58 +0100 (Tue, 28 Feb 2006)
New Revision: 129

Modified:
   trunk/apps/olsrs3d/data_structure.xmi
   trunk/apps/olsrs3d/main.c
   trunk/apps/olsrs3d/net.c
   trunk/apps/olsrs3d/olsrs3d.h
   trunk/apps/olsrs3d/olsrs3d.png
   trunk/apps/olsrs3d/process.c
Log:
data structure update

Modified: trunk/apps/olsrs3d/data_structure.xmi
===================================================================
--- trunk/apps/olsrs3d/data_structure.xmi	2006-02-27 23:16:15 UTC (rev 128)
+++ trunk/apps/olsrs3d/data_structure.xmi	2006-02-27 23:35:58 UTC (rev 129)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-27T20:31:31" xmi.version="1.2" >
+<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-28T00:33:34" xmi.version="1.2" >
  <XMI.header>
   <XMI.documentation>
    <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
@@ -27,6 +27,14 @@
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="862" isRoot="false" initialValue="104.129.1.1" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="864" isRoot="false" initialValue="104.130.1.99" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
+     <UML:Namespace.ownedElement>
+      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="1129" isRoot="false" isAbstract="false" name="olsr_con_list - 104.130.1.1:104.131.1.1" >
+       <UML:Classifier.feature>
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1150" isRoot="false" initialValue="NULL" type="1127" isAbstract="false" name="next_olsr_con_list" />
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1151" isRoot="false" initialValue="104.130.1.1:104.131.1.1" type="897" isAbstract="false" name="olsr_con" />
+       </UML:Classifier.feature>
+      </UML:Class>
+     </UML:Namespace.ownedElement>
     </UML:Class>
     <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="803" isRoot="false" isAbstract="false" name="olsr_node - 104.131.1.1" >
      <UML:Classifier.feature>
@@ -35,6 +43,14 @@
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="827" isRoot="false" initialValue="104.130.1.1" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="828" isRoot="false" initialValue="104.132.1.1" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
+     <UML:Namespace.ownedElement>
+      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="1210" isRoot="false" isAbstract="false" name="olsr_con_list - 104.131.1.1:104.129.1.1" >
+       <UML:Classifier.feature>
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1261" isRoot="false" initialValue="104.131.1.1:104.130.1.1" type="1127" isAbstract="false" name="next_olsr_con_list" />
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1262" isRoot="false" initialValue="104.131.1.1:104.129.1.1" type="897" isAbstract="false" name="olsr_con" />
+       </UML:Classifier.feature>
+      </UML:Class>
+     </UML:Namespace.ownedElement>
     </UML:Class>
     <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="806" isRoot="false" isAbstract="false" name="olsr_node - 104.132.1.1" >
      <UML:Classifier.feature>
@@ -43,6 +59,14 @@
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="860" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="861" isRoot="false" initialValue="104.133.1.1" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
+     <UML:Namespace.ownedElement>
+      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="1184" isRoot="false" isAbstract="false" name="olsr_con_list - 104.132.1.1:104.133.1.1" >
+       <UML:Classifier.feature>
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1205" isRoot="false" initialValue="NULL" type="1127" isAbstract="false" name="next_olsr_con_list" />
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1206" isRoot="false" initialValue="104.132.1.1:104.133.1.1" type="897" isAbstract="false" name="olsr_con" />
+       </UML:Classifier.feature>
+      </UML:Class>
+     </UML:Namespace.ownedElement>
     </UML:Class>
     <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="825" isRoot="false" isAbstract="false" name="olsr_node" />
     <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="830" isRoot="false" isAbstract="false" name="olsr_node - 104.129.1.1" >
@@ -76,6 +100,14 @@
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="858" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="left" />
       <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="859" isRoot="false" initialValue="NULL" type="825" isAbstract="false" name="right" />
      </UML:Classifier.feature>
+     <UML:Namespace.ownedElement>
+      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="1155" isRoot="false" isAbstract="false" name="olsr_con_list - 104.133.1.1:104.132.1.1" >
+       <UML:Classifier.feature>
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1179" isRoot="false" initialValue="NULL" type="1127" isAbstract="false" name="next_olsr_con_list" />
+        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1180" isRoot="false" initialValue="104.133.1.1:104.132.1.1" type="897" isAbstract="false" name="olsr_con" />
+       </UML:Classifier.feature>
+      </UML:Class>
+     </UML:Namespace.ownedElement>
     </UML:Class>
     <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="871" isRoot="false" isAbstract="false" name="olsr_con - 104.131.1.1:104.129.1.1" >
      <UML:Classifier.feature>
@@ -135,6 +167,12 @@
      </UML:Classifier.feature>
     </UML:Class>
     <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="1127" isRoot="false" isAbstract="false" name="olsr_con_list" />
+    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="1234" isRoot="false" isAbstract="false" name="olsr_con_list - 104.131.1.1:104.130.1.1" >
+     <UML:Classifier.feature>
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1263" isRoot="false" initialValue="NULL" type="1127" isAbstract="false" name="next_olsr_con_list" />
+      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="1264" isRoot="false" initialValue="104.131.1.1:104.130.1.1" type="897" isAbstract="false" name="olsr_con" />
+     </UML:Classifier.feature>
+    </UML:Class>
     <UML:Association isSpecification="false" visibility="public" xmi.id="809" name="" >
      <UML:Association.connection>
       <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="810" aggregation="none" type="803" name="" />
@@ -256,119 +294,135 @@
      </UML:Association.connection>
     </UML:Association>
     <UML:Dependency isSpecification="false" visibility="public" xmi.id="1123" client="1082" name="" supplier="871" />
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="1152" client="1129" name="" supplier="882" />
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="1181" client="1155" name="" supplier="915" />
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="1207" client="1184" name="" supplier="915" />
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="1231" client="1210" name="" supplier="871" />
+    <UML:Association isSpecification="false" visibility="public" xmi.id="1255" name="" >
+     <UML:Association.connection>
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="1256" aggregation="none" type="1210" name="" />
+      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="1257" aggregation="none" type="1234" name="" />
+     </UML:Association.connection>
+    </UML:Association>
+    <UML:Dependency isSpecification="false" visibility="public" xmi.id="1258" client="1234" name="" supplier="882" />
    </UML:Namespace.ownedElement>
   </UML:Model>
  </XMI.content>
  <XMI.extensions xmi.extender="umbrello" >
-  <docsettings viewid="786" documentation="" uniqueid="1128" />
+  <docsettings viewid="786" documentation="" uniqueid="1273" />
   <diagrams>
-   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="75" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1341" snapy="10" showatts="1" xmi.id="786" documentation="" type="402" showops="1" showpackage="0" name="Klassendiagramm" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1085" >
+   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="75" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1413" snapy="10" showatts="1" xmi.id="786" documentation="" type="402" showops="1" showpackage="0" name="Klassendiagramm" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1064" >
     <widgets>
-     <classwidget usesdiagramfillcolour="0" width="187" showattsigs="601" usesdiagramusefillcolour="0" x="341" linecolour="#ff0000" y="442" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="800" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="482" linecolour="#ff0000" y="262" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="803" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="676" linecolour="#ff0000" y="442" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="806" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="192" linecolour="#ff0000" y="668" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="830" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="148" showattsigs="601" usesdiagramusefillcolour="0" x="488" linecolour="#ff0000" y="669" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="831" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="829" linecolour="#ff0000" y="631" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="854" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="17" linecolour="#ff0000" y="23" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="871" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="400" linecolour="#ff0000" y="23" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="882" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="811" linecolour="#ff0000" y="23" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="915" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="187" showattsigs="601" usesdiagramusefillcolour="0" x="433" linecolour="#ff0000" y="480" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="800" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="600" linecolour="#ff0000" y="290" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="803" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="180" showattsigs="601" usesdiagramusefillcolour="0" x="742" linecolour="#ff0000" y="480" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="806" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="316" linecolour="#ff0000" y="672" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="830" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="148" showattsigs="601" usesdiagramusefillcolour="0" x="540" linecolour="#ff0000" y="671" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="831" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="601" usesdiagramusefillcolour="0" x="876" linecolour="#ff0000" y="668" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="854" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="17" linecolour="#ff0000" y="23" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#7fffb9" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="871" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="548" linecolour="#ff0000" y="23" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#7fffb9" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="882" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="294" showattsigs="601" usesdiagramusefillcolour="0" x="1115" linecolour="#ff0000" y="23" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#7fffb9" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="915" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
      <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="113" linecolour="#ff0000" y="971" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="933" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
      <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="404" linecolour="#ff0000" y="971" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="940" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
      <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="675" linecolour="#ff0000" y="971" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="967" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
      <classwidget usesdiagramfillcolour="0" width="174" showattsigs="601" usesdiagramusefillcolour="0" x="955" linecolour="#ff0000" y="971" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="77" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1004" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
-     <classwidget usesdiagramfillcolour="0" width="263" showattsigs="601" usesdiagramusefillcolour="0" x="56" linecolour="#ff0000" y="792" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="49" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1082" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="263" showattsigs="601" usesdiagramusefillcolour="0" x="36" linecolour="#ff0000" y="733" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#0da2ff" height="49" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1082" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="263" showattsigs="601" usesdiagramusefillcolour="0" x="150" linecolour="#ff0000" y="546" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#0da2ff" height="49" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1129" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="263" showattsigs="601" usesdiagramusefillcolour="0" x="1028" linecolour="#ff0000" y="727" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#0da2ff" height="49" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1155" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="263" showattsigs="601" usesdiagramusefillcolour="0" x="932" linecolour="#ff0000" y="545" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#0da2ff" height="49" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1184" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="338" showattsigs="601" usesdiagramusefillcolour="0" x="334" linecolour="#ff0000" y="383" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#0da2ff" height="49" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1210" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
+     <classwidget usesdiagramfillcolour="0" width="263" showattsigs="601" usesdiagramusefillcolour="0" x="770" linecolour="#ff0000" y="382" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#0da2ff" height="49" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="1234" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     </widgets>
     <messages/>
     <associations>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="800" widgetaid="803" xmi.id="809" >
       <linepath>
-       <startpoint startx="542" starty="339" />
-       <endpoint endx="465" endy="442" />
+       <startpoint startx="660" starty="367" />
+       <endpoint endx="557" endy="480" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" widgetbid="806" widgetaid="803" xmi.id="812" >
       <linepath>
-       <startpoint startx="602" starty="339" />
-       <endpoint endx="736" endy="442" />
+       <startpoint startx="720" starty="367" />
+       <endpoint endx="802" endy="480" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="830" widgetaid="800" xmi.id="842" >
       <linepath>
-       <startpoint startx="403" starty="519" />
-       <endpoint endx="286" endy="668" />
+       <startpoint startx="495" starty="557" />
+       <endpoint endx="410" endy="672" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="831" widgetaid="800" xmi.id="845" >
       <linepath>
-       <startpoint startx="465" starty="519" />
-       <endpoint endx="562" endy="669" />
+       <startpoint startx="557" starty="557" />
+       <endpoint endx="614" endy="671" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="854" widgetaid="806" xmi.id="865" >
       <linepath>
-       <startpoint startx="766" starty="519" />
-       <endpoint endx="876" endy="631" />
+       <startpoint startx="832" starty="557" />
+       <endpoint endx="923" endy="668" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="4" indexa="2" totalcountb="3" indexb="1" widgetbid="830" widgetaid="871" xmi.id="879" >
+     <assocwidget totalcounta="5" indexa="2" totalcountb="3" indexb="1" widgetbid="830" widgetaid="871" xmi.id="879" >
       <linepath>
-       <startpoint startx="164" starty="100" />
-       <endpoint endx="239" endy="668" />
+       <startpoint startx="134" starty="100" />
+       <endpoint endx="363" endy="672" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="4" indexa="3" totalcountb="3" indexb="1" widgetbid="803" widgetaid="871" xmi.id="893" >
+     <assocwidget totalcounta="5" indexa="4" totalcountb="3" indexb="1" widgetbid="803" widgetaid="871" xmi.id="893" >
       <linepath>
-       <startpoint startx="237" starty="100" />
-       <endpoint endx="542" endy="262" />
+       <startpoint startx="252" starty="100" />
+       <endpoint endx="660" endy="290" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="882" widgetaid="871" xmi.id="903" >
       <linepath>
        <startpoint startx="311" starty="48" />
-       <endpoint endx="400" endy="48" />
+       <endpoint endx="548" endy="48" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="871" widgetaid="882" xmi.id="906" >
       <linepath>
-       <startpoint startx="400" starty="74" />
+       <startpoint startx="548" starty="74" />
        <endpoint endx="311" endy="74" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="803" widgetaid="882" xmi.id="909" >
+     <assocwidget totalcounta="5" indexa="3" totalcountb="3" indexb="2" widgetbid="803" widgetaid="882" xmi.id="909" >
       <linepath>
-       <startpoint startx="596" starty="100" />
-       <endpoint endx="602" endy="262" />
+       <startpoint startx="724" starty="100" />
+       <endpoint endx="720" endy="290" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="800" widgetaid="882" xmi.id="912" >
+     <assocwidget totalcounta="5" indexa="2" totalcountb="3" indexb="1" widgetbid="800" widgetaid="882" xmi.id="912" >
       <linepath>
-       <startpoint startx="498" starty="100" />
-       <endpoint endx="403" endy="442" />
+       <startpoint startx="665" starty="100" />
+       <endpoint endx="495" endy="480" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="806" widgetaid="915" xmi.id="920" >
+     <assocwidget totalcounta="5" indexa="1" totalcountb="3" indexb="2" widgetbid="806" widgetaid="915" xmi.id="920" >
       <linepath>
-       <startpoint startx="909" starty="100" />
-       <endpoint endx="796" endy="442" />
+       <startpoint startx="1173" starty="100" />
+       <endpoint endx="862" endy="480" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="854" widgetaid="915" xmi.id="923" >
+     <assocwidget totalcounta="5" indexa="2" totalcountb="3" indexb="2" widgetbid="854" widgetaid="915" xmi.id="923" >
       <linepath>
-       <startpoint startx="1007" starty="100" />
-       <endpoint endx="923" endy="631" />
+       <startpoint startx="1232" starty="100" />
+       <endpoint endx="970" endy="668" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="915" widgetaid="882" xmi.id="926" >
       <linepath>
-       <startpoint startx="694" starty="48" />
-       <endpoint endx="811" endy="48" />
+       <startpoint startx="842" starty="48" />
+       <endpoint endx="1115" endy="48" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="882" widgetaid="915" xmi.id="929" >
       <linepath>
-       <startpoint startx="811" starty="74" />
-       <endpoint endx="694" endy="74" />
+       <startpoint startx="1115" starty="74" />
+       <endpoint endx="842" endy="74" />
       </linepath>
      </assocwidget>
      <assocwidget totalcounta="3" indexa="1" totalcountb="5" indexb="1" widgetbid="1004" widgetaid="967" xmi.id="1053" >
@@ -418,84 +472,144 @@
      </assocwidget>
      <assocwidget totalcounta="2" indexa="1" totalcountb="0" indexb="0" widgetbid="1004" widgetaid="1004" xmi.id="1077" >
       <linepath>
-       <startpoint startx="1000" starty="971" />
-       <endpoint endx="1087" endy="971" />
+       <startpoint startx="998" starty="971" />
+       <endpoint endx="1085" endy="971" />
        <point x="1010" y="921" />
        <point x="1120" y="921" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="0" indexa="0" visibilityB="201" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="936" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="936" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
       <linepath>
        <startpoint startx="156" starty="971" />
        <endpoint endx="243" endy="971" />
        <point x="156" y="921" />
        <point x="243" y="921" />
       </linepath>
-      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="207" linecolour="none" y="951" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1087" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="207" linecolour="none" y="951" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="1265" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      </assocwidget>
-     <assocwidget totalcounta="0" indexa="0" visibilityB="201" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="938" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+     <assocwidget totalcounta="4" indexa="3" visibilityB="200" totalcountb="0" indexb="0" widgetbid="933" widgetaid="933" xmi.id="938" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
       <linepath>
        <startpoint startx="156" starty="971" />
        <endpoint endx="243" endy="971" />
        <point x="156" y="921" />
        <point x="243" y="921" />
       </linepath>
-      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="207" linecolour="none" y="951" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1092" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="207" linecolour="none" y="951" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="1266" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      </assocwidget>
-     <assocwidget totalcounta="5" indexa="3" visibilityB="201" totalcountb="9" indexb="5" widgetbid="933" widgetaid="940" xmi.id="943" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+     <assocwidget totalcounta="5" indexa="3" visibilityB="200" totalcountb="9" indexb="6" widgetbid="933" widgetaid="940" xmi.id="943" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
       <linepath>
        <startpoint startx="404" starty="1017" />
-       <endpoint endx="287" endy="1013" />
+       <endpoint endx="287" endy="1022" />
       </linepath>
-      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1030" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1097" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1030" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="1267" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      </assocwidget>
-     <assocwidget totalcounta="5" indexa="4" visibilityB="201" totalcountb="9" indexb="7" widgetbid="933" widgetaid="940" xmi.id="944" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+     <assocwidget totalcounta="5" indexa="4" visibilityB="200" totalcountb="9" indexb="8" widgetbid="933" widgetaid="940" xmi.id="944" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
       <linepath>
        <startpoint startx="404" starty="1032" />
-       <endpoint endx="287" endy="1030" />
+       <endpoint endx="287" endy="1039" />
       </linepath>
-      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1034" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1102" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1034" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="1268" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      </assocwidget>
-     <assocwidget totalcounta="5" indexa="3" visibilityB="201" totalcountb="9" indexb="4" widgetbid="933" widgetaid="967" xmi.id="970" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+     <assocwidget totalcounta="5" indexa="3" visibilityB="200" totalcountb="9" indexb="4" widgetbid="933" widgetaid="967" xmi.id="970" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
       <linepath>
        <startpoint startx="675" starty="1017" />
        <endpoint endx="287" endy="1005" />
       </linepath>
-      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1015" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1107" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1015" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="1269" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      </assocwidget>
-     <assocwidget totalcounta="5" indexa="4" visibilityB="201" totalcountb="9" indexb="6" widgetbid="933" widgetaid="967" xmi.id="971" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+     <assocwidget totalcounta="5" indexa="4" visibilityB="200" totalcountb="9" indexb="7" widgetbid="933" widgetaid="967" xmi.id="971" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
       <linepath>
        <startpoint startx="675" starty="1032" />
-       <endpoint endx="287" endy="1022" />
+       <endpoint endx="287" endy="1030" />
       </linepath>
-      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1017" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1112" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1017" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="1270" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      </assocwidget>
-     <assocwidget totalcounta="5" indexa="3" visibilityB="201" totalcountb="9" indexb="3" widgetbid="933" widgetaid="1004" xmi.id="1007" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+     <assocwidget totalcounta="5" indexa="3" visibilityB="200" totalcountb="9" indexb="3" widgetbid="933" widgetaid="1004" xmi.id="1007" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
       <linepath>
        <startpoint startx="955" starty="1017" />
        <endpoint endx="287" endy="996" />
       </linepath>
-      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1018" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1117" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1018" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="1271" text="next" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      </assocwidget>
-     <assocwidget totalcounta="5" indexa="4" visibilityB="201" totalcountb="9" indexb="8" widgetbid="933" widgetaid="1004" xmi.id="1008" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+     <assocwidget totalcounta="5" indexa="4" visibilityB="200" totalcountb="9" indexb="5" widgetbid="933" widgetaid="1004" xmi.id="1008" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
       <linepath>
        <startpoint startx="955" starty="1032" />
-       <endpoint endx="287" endy="1039" />
+       <endpoint endx="287" endy="1013" />
       </linepath>
-      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1019" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="-" isinstance="0" xmi.id="1122" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
+      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="289" linecolour="none" y="1019" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="1272" text="prev" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      </assocwidget>
      <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="1082" widgetaid="830" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
       <linepath>
-       <startpoint startx="262" starty="745" />
-       <endpoint endx="231" endy="792" />
+       <startpoint startx="316" starty="710" />
+       <endpoint endx="211" endy="733" />
       </linepath>
      </assocwidget>
-     <assocwidget totalcounta="3" indexa="1" totalcountb="4" indexb="1" widgetbid="871" widgetaid="1082" xmi.id="1123" >
+     <assocwidget totalcounta="3" indexa="1" totalcountb="5" indexb="1" widgetbid="871" widgetaid="1082" xmi.id="1123" >
       <linepath>
-       <startpoint startx="143" starty="792" />
-       <endpoint endx="90" endy="100" />
+       <startpoint startx="123" starty="733" />
+       <endpoint endx="75" endy="100" />
       </linepath>
      </assocwidget>
+     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="1129" widgetaid="800" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="433" starty="518" />
+       <endpoint endx="325" endy="546" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="5" indexb="1" widgetbid="882" widgetaid="1129" xmi.id="1152" >
+      <linepath>
+       <startpoint startx="237" starty="546" />
+       <endpoint endx="606" endy="100" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="1155" widgetaid="854" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="1017" starty="706" />
+       <endpoint endx="1115" endy="727" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="5" indexb="4" widgetbid="915" widgetaid="1155" xmi.id="1181" >
+      <linepath>
+       <startpoint startx="1203" starty="727" />
+       <endpoint endx="1350" endy="100" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="1184" widgetaid="806" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="922" starty="518" />
+       <endpoint endx="1019" endy="545" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="2" totalcountb="5" indexb="3" widgetbid="915" widgetaid="1184" xmi.id="1207" >
+      <linepath>
+       <startpoint startx="1107" starty="545" />
+       <endpoint endx="1291" endy="100" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="1210" widgetaid="803" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
+      <linepath>
+       <startpoint startx="600" starty="328" />
+       <endpoint endx="559" endy="383" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="3" indexa="1" totalcountb="5" indexb="3" widgetbid="871" widgetaid="1210" xmi.id="1231" >
+      <linepath>
+       <startpoint startx="446" starty="383" />
+       <endpoint endx="193" endy="100" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="1234" widgetaid="1210" xmi.id="1255" >
+      <linepath>
+       <startpoint startx="672" starty="407" />
+       <endpoint endx="770" endy="406" />
+      </linepath>
+     </assocwidget>
+     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="4" widgetbid="882" widgetaid="1234" xmi.id="1258" >
+      <linepath>
+       <startpoint startx="901" starty="382" />
+       <endpoint endx="783" endy="100" />
+      </linepath>
+     </assocwidget>
     </associations>
    </diagram>
   </diagrams>
@@ -546,6 +660,10 @@
       <listitem open="0" type="814" id="919" />
      </listitem>
      <listitem open="1" type="813" id="1127" />
+     <listitem open="1" type="813" id="1234" >
+      <listitem open="0" type="814" id="1263" />
+      <listitem open="0" type="814" id="1264" />
+     </listitem>
      <listitem open="1" type="813" id="825" />
      <listitem open="1" type="813" id="830" >
       <listitem open="1" type="813" id="1082" >
@@ -558,6 +676,10 @@
       <listitem open="0" type="814" id="836" />
      </listitem>
      <listitem open="0" type="813" id="800" >
+      <listitem open="1" type="813" id="1129" >
+       <listitem open="0" type="814" id="1150" />
+       <listitem open="0" type="814" id="1151" />
+      </listitem>
       <listitem open="0" type="814" id="801" />
       <listitem open="0" type="814" id="802" />
       <listitem open="0" type="814" id="862" />
@@ -569,19 +691,31 @@
       <listitem open="0" type="814" id="840" />
       <listitem open="0" type="814" id="841" />
      </listitem>
-     <listitem open="0" type="813" id="803" >
+     <listitem open="1" type="813" id="803" >
+      <listitem open="1" type="813" id="1210" >
+       <listitem open="0" type="814" id="1261" />
+       <listitem open="0" type="814" id="1262" />
+      </listitem>
       <listitem open="0" type="814" id="804" />
       <listitem open="0" type="814" id="805" />
       <listitem open="0" type="814" id="827" />
       <listitem open="0" type="814" id="828" />
      </listitem>
      <listitem open="0" type="813" id="806" >
+      <listitem open="1" type="813" id="1184" >
+       <listitem open="0" type="814" id="1205" />
+       <listitem open="0" type="814" id="1206" />
+      </listitem>
       <listitem open="0" type="814" id="807" />
       <listitem open="0" type="814" id="808" />
       <listitem open="0" type="814" id="860" />
       <listitem open="0" type="814" id="861" />
      </listitem>
      <listitem open="0" type="813" id="854" >
+      <listitem open="1" type="813" id="1155" >
+       <listitem open="0" type="814" id="1179" />
+       <listitem open="0" type="814" id="1180" />
+      </listitem>
       <listitem open="0" type="814" id="855" />
       <listitem open="0" type="814" id="856" />
       <listitem open="0" type="814" id="858" />
@@ -668,7 +802,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:04:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -815,7 +949,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:03:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -962,7 +1096,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1068,7 +1202,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields/>
     </classifiercodedocument>
@@ -1134,7 +1268,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:07:44&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1281,7 +1415,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010; !
   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:07:43&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010; !
   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1428,7 +1562,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;  !
  If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:19&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1575,7 +1709,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:06:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1658,41 +1792,6 @@
         </header>
        </codeaccessormethod>
       </codeclassfield>
-      <codeclassfield parent_id="1123" field_type="3407920" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
      </classfields>
     </classifiercodedocument>
     <classifiercodedocument writeOutCode="true" package="" id="882" parent_class="882" fileExt=".cpp" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
@@ -1757,7 +1856,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -1863,7 +1962,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields/>
     </classifiercodedocument>
@@ -1929,7 +2028,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&!
 amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2076,7 +2175,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:03:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="934" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2223,7 +2322,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="941" field_type="0" initialValue="1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2370,7 +2469,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="968" field_type="0" initialValue="2" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2517,7 +2616,7 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you nam!
 e the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you nam!
 e the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="1005" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -2602,15 +2701,34 @@
       </codeclassfield>
      </classfields>
     </classifiercodedocument>
-    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
-     <textblocks/>
+    <classifiercodedocument writeOutCode="true" package="" id="1127" parent_class="1127" fileExt=".cpp" fileName="olsr_con_list" >
+     <textblocks>
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con_list.h&quot;&amp;#010;" >
+       <header>
+        <cppcodedocumentation tag="" writeOutText="false" />
+       </header>
+      </codeblockwithcomments>
+      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Constructors/Destructors" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
+       <header>
+        <cppcodedocumentation tag="" text="Methods" />
+       </header>
+       <textblocks/>
+      </hierarchicalcodeblock>
+     </textblocks>
      <header>
-      <codecomment tag="" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
-    </codedocument>
-    <classifiercodedocument writeOutCode="true" package="olsr_node - 104.129.1.1" id="1082" parent_class="1082" fileExt=".cpp" fileName="olsr_con_list - 104.129.1.1:104.131.1.1" >
+     <classfields/>
+    </classifiercodedocument>
+    <classifiercodedocument writeOutCode="true" package="" id="1234" parent_class="1234" fileExt=".cpp" fileName="olsr_con_list - 104.131.1.1:104.130.1.1" >
      <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con_list - 104.129.1.1:104.131.1.1.h&quot;&amp;#010;" >
+      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con_list - 104.131.1.1:104.130.1.1.h&quot;&amp;#010;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
@@ -2626,22 +2744,22 @@
         <cppcodedocumentation tag="" text="Methods" />
        </header>
        <textblocks>
-        <codeaccessormethod accessType="0" parent_id="1126" tag="hblock_tag_0" canDelete="false" classfield_id="1126" >
+        <codeaccessormethod accessType="0" parent_id="1263" tag="hblock_tag_0" canDelete="false" classfield_id="1263" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="1126" tag="hblock_tag_1" canDelete="false" classfield_id="1126" >
+        <codeaccessormethod accessType="1" parent_id="1263" tag="hblock_tag_1" canDelete="false" classfield_id="1263" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="0" parent_id="1128" tag="hblock_tag_2" canDelete="false" classfield_id="1128" >
+        <codeaccessormethod accessType="0" parent_id="1264" tag="hblock_tag_2" canDelete="false" classfield_id="1264" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
         </codeaccessormethod>
-        <codeaccessormethod accessType="1" parent_id="1128" tag="hblock_tag_3" canDelete="false" classfield_id="1128" >
+        <codeaccessormethod accessType="1" parent_id="1264" tag="hblock_tag_3" canDelete="false" classfield_id="1264" >
          <header>
           <cppcodedocumentation tag="" />
          </header>
@@ -2650,79 +2768,44 @@
       </hierarchicalcodeblock>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list - 104.129.1.1:104.131.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java c!
 ode.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:10:15&amp;#010;The original location of this file is olsr_node_-_104/129/1/1&amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list - 104.131.1.1:104.130.1.1.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java c!
 ode.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
-      <codeclassfield parent_id="1123" field_type="6619252" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
+      <codeclassfield parent_id="1263" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
+       <ccfdeclarationcodeblock parent_id="1263" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
         <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="1123" tag="" canDelete="false" writeOutText="false" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="1126" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="1126" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
-        <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="1126" tag="hblock_tag_0" canDelete="false" classfield_id="1126" >
+       <codeaccessormethod accessType="0" parent_id="1263" tag="hblock_tag_0" canDelete="false" classfield_id="1263" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="1126" tag="hblock_tag_1" canDelete="false" classfield_id="1126" >
+       <codeaccessormethod accessType="1" parent_id="1263" tag="hblock_tag_1" canDelete="false" classfield_id="1263" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </codeclassfield>
-      <codeclassfield parent_id="1128" field_type="0" initialValue="104.129.1.1:104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+      <codeclassfield parent_id="1264" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
-       <ccfdeclarationcodeblock parent_id="1128" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
+       <ccfdeclarationcodeblock parent_id="1264" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
         <header>
          <cppcodedocumentation tag="" indentLevel="1" />
         </header>
        </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="1128" tag="hblock_tag_2" canDelete="false" classfield_id="1128" >
+       <codeaccessormethod accessType="0" parent_id="1264" tag="hblock_tag_2" canDelete="false" classfield_id="1264" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="1128" tag="hblock_tag_3" canDelete="false" classfield_id="1128" >
+       <codeaccessormethod accessType="1" parent_id="1264" tag="hblock_tag_3" canDelete="false" classfield_id="1264" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
@@ -2730,31 +2813,12 @@
       </codeclassfield>
      </classfields>
     </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="1127" parent_class="1127" fileExt=".cpp" fileName="olsr_con_list" >
-     <textblocks>
-      <codeblockwithcomments tag="includes" text="#include &quot;olsr_con_list.h&quot;&amp;#010;" >
-       <header>
-        <cppcodedocumentation tag="" writeOutText="false" />
-       </header>
-      </codeblockwithcomments>
-      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Constructors/Destructors" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
-       <header>
-        <cppcodedocumentation tag="" text="Methods" />
-       </header>
-       <textblocks/>
-      </hierarchicalcodeblock>
-     </textblocks>
+    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
+     <textblocks/>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list.cpp - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you na!
 me the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:10:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" />
      </header>
-     <classfields/>
-    </classifiercodedocument>
+    </codedocument>
     <classifiercodedocument writeOutCode="true" package="" id="cppheader800" parent_class="800" fileExt=".h" fileName="olsr_node - 104.130.1.1" >
      <textblocks>
       <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_NODE_-_104.130.1.1_H&amp;#010;#define OLSR_NODE_-_104.130.1.1_H" >
@@ -3019,7 +3083,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:04:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="801" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -3368,7 +3432,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:03:16&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.131.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="804" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -3717,7 +3781,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.132.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="807" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -4004,7 +4068,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields/>
     </classifiercodedocument>
@@ -4272,7 +4336,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:07:44&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="832" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -4621,7 +4685,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If!
  you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:07:43&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.130.1.99.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If!
  you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="837" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -4970,7 +5034,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_node - 104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If !
 you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:19&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="855" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -5319,7 +5383,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:06:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.129.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="896" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -5402,41 +5466,6 @@
         </header>
        </codeaccessormethod>
       </codeclassfield>
-      <codeclassfield parent_id="1123" field_type="6815860" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" olsr_con_list - 104.129.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="1" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
      </classfields>
     </classifiercodedocument>
     <classifiercodedocument writeOutCode="true" package="" id="cppheader882" parent_class="882" fileExt=".h" fileName="olsr_con - 104.131.1.1:104.130.1.1" >
@@ -5703,7 +5732,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.131.1.1:104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="899" field_type="0" initialValue="104.132.1.1:104.133.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -5990,7 +6019,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the fi!
 le &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields/>
     </classifiercodedocument>
@@ -6258,7 +6287,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con - 104.132.1.1:104.133.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;!
 #010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="916" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -6607,7 +6636,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:03:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the f!
 ile &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="934" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -6956,7 +6985,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="941" field_type="0" initialValue="1" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -7048,7 +7077,7 @@
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
       </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;obj_to_ip -3.h&quot;&amp;#010;#include &quot;obj_to_ip - 1.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;#include &quot;obj_to_ip.h&quot;&amp;#010;" >
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;obj_to_ip -3.h&quot;&amp;#010;#include &quot;obj_to_ip - 1.h&quot;&amp;#010;#include &quot;obj_to_ip.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
@@ -7305,7 +7334,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip - 2.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="968" field_type="0" initialValue="2" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -7397,7 +7426,7 @@
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
       </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;obj_to_ip - 2.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;#include &quot;obj_to_ip.h&quot;&amp;#010;" >
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;obj_to_ip - 2.h&quot;&amp;#010;#include &quot;obj_to_ip.h&quot;&amp;#010;#include &quot;olsr_node.h&quot;&amp;#010;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
@@ -7654,7 +7683,7 @@
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 18:59:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			obj_to_ip -3.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name th!
 e file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
      <classfields>
       <codeclassfield parent_id="1005" field_type="0" initialValue="0" role_id="-1" writeOutMethods="true" listClassName="" >
@@ -7739,14 +7768,14 @@
       </codeclassfield>
      </classfields>
     </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="olsr_node - 104.129.1.1" id="cppheader1082" parent_class="1082" fileExt=".h" fileName="olsr_con_list - 104.129.1.1:104.131.1.1" >
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader1127" parent_class="1127" fileExt=".h" fileName="olsr_con_list" >
      <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_LIST_-_104.129.1.1:104.131.1.1_H&amp;#010;#define OLSR_CON_LIST_-_104.129.1.1:104.131.1.1_H" >
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_LIST_H&amp;#010;#define OLSR_CON_LIST_H" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
       </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con_list.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;" >
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
@@ -7766,9 +7795,9 @@
           <cppcodedocumentation tag="" writeOutText="false" />
          </header>
         </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="1082" tag="classDeclarationBlock" canDelete="false" >
+        <cppheaderclassdeclarationblock parent_id="1127" tag="classDeclarationBlock" canDelete="false" >
          <header>
-          <cppcodedocumentation tag="" text="Class olsr_con_list - 104.129.1.1:104.131.1.1&amp;#010;" />
+          <cppcodedocumentation tag="" text="Class olsr_con_list&amp;#010;" />
          </header>
          <textblocks>
           <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
@@ -7792,7 +7821,7 @@
                 <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
                </header>
                <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con_list - 104.129.1.1 ( ) { }" >
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con_list ( ) { }" >
                  <header>
                   <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                  </header>
@@ -7888,18 +7917,7 @@
              <header>
               <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
              </header>
-             <textblocks>
-              <ccfdeclarationcodeblock parent_id="1126" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con_list next_olsr_con_list;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-              <ccfdeclarationcodeblock parent_id="1128" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con olsr_con;" >
-               <header>
-                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-               </header>
-              </ccfdeclarationcodeblock>
-             </textblocks>
+             <textblocks/>
             </hierarchicalcodeblock>
             <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
              <header>
@@ -7927,28 +7945,7 @@
                  <header>
                   <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                  </header>
-                 <textblocks>
-                  <codeaccessormethod accessType="0" parent_id="1126" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1126" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="1126" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="1126" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="0" parent_id="1128" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="1128" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                  <codeaccessormethod accessType="1" parent_id="1128" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="1128" >
-                   <header>
-                    <cppcodedocumentation tag="" indentLevel="1" />
-                   </header>
-                  </codeaccessormethod>
-                 </textblocks>
+                 <textblocks/>
                 </hierarchicalcodeblock>
                </textblocks>
               </hierarchicalcodeblock>
@@ -7966,101 +7963,25 @@
         </cppheaderclassdeclarationblock>
        </textblocks>
       </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_LIST_-_104.129.1.1:104.131.1.1_H" >
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_LIST_H" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list - 104.129.1.1:104.131.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.!
 &amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:10:15&amp;#010;The original location of this file is olsr_node_-_104/129/1/1&amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
-     <classfields>
-      <codeclassfield parent_id="1123" field_type="3211310" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" olsr_con - 104.131.1.1:104.129.1.1 ;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="2" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="3" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="4" parent_id="1123" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="1123" role_id="0" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="1126" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="1126" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con_list next_olsr_con_list;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="1126" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1126" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="1126" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="1126" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-      <codeclassfield parent_id="1128" field_type="0" initialValue="104.129.1.1:104.131.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
-       <header>
-        <cppcodedocumentation tag="" />
-       </header>
-       <ccfdeclarationcodeblock parent_id="1128" tag="tblock_2" canDelete="false" indentLevel="1" text=" olsr_con olsr_con;" >
-        <header>
-         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
-        </header>
-       </ccfdeclarationcodeblock>
-       <codeaccessormethod accessType="0" parent_id="1128" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="1128" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-       <codeaccessormethod accessType="1" parent_id="1128" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="1128" >
-        <header>
-         <cppcodedocumentation tag="" indentLevel="1" />
-        </header>
-       </codeaccessormethod>
-      </codeclassfield>
-     </classfields>
+     <classfields/>
     </classifiercodedocument>
-    <classifiercodedocument writeOutCode="true" package="" id="cppheader1127" parent_class="1127" fileExt=".h" fileName="olsr_con_list" >
+    <classifiercodedocument writeOutCode="true" package="" id="cppheader1234" parent_class="1234" fileExt=".h" fileName="olsr_con_list - 104.131.1.1:104.130.1.1" >
      <textblocks>
-      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_LIST_H&amp;#010;#define OLSR_CON_LIST_H" >
+      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OLSR_CON_LIST_-_104.131.1.1:104.130.1.1_H&amp;#010;#define OLSR_CON_LIST_-_104.131.1.1:104.130.1.1_H" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
       </codeblockwithcomments>
-      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
+      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;olsr_con_list - 104.131.1.1:104.129.1.1.h&quot;&amp;#010;#include &quot;olsr_con_list.h&quot;&amp;#010;#include &quot;olsr_con.h&quot;&amp;#010;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
@@ -8080,9 +8001,9 @@
           <cppcodedocumentation tag="" writeOutText="false" />
          </header>
         </codeblockwithcomments>
-        <cppheaderclassdeclarationblock parent_id="1127" tag="classDeclarationBlock" canDelete="false" >
+        <cppheaderclassdeclarationblock parent_id="1234" tag="classDeclarationBlock" canDelete="false" >
          <header>
-          <cppcodedocumentation tag="" text="Class olsr_con_list&amp;#010;" />
+          <cppcodedocumentation tag="" text="Class olsr_con_list - 104.131.1.1:104.130.1.1&amp;#010;" />
          </header>
          <textblocks>
           <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
@@ -8106,7 +8027,7 @@
                 <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
                </header>
                <textblocks>
-                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con_list ( ) { }" >
+                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="olsr_con_list - 104.131.1.1:104.130.1.1 ( ) { }" >
                  <header>
                   <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                  </header>
@@ -8202,7 +8123,18 @@
              <header>
               <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
              </header>
-             <textblocks/>
+             <textblocks>
+              <ccfdeclarationcodeblock parent_id="1263" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con_list next_olsr_con_list;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+              <ccfdeclarationcodeblock parent_id="1264" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_con olsr_con;" >
+               <header>
+                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+               </header>
+              </ccfdeclarationcodeblock>
+             </textblocks>
             </hierarchicalcodeblock>
             <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
              <header>
@@ -8230,7 +8162,28 @@
                  <header>
                   <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                  </header>
-                 <textblocks/>
+                 <textblocks>
+                  <codeaccessormethod accessType="0" parent_id="1263" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1263" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="1263" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="1263" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="0" parent_id="1264" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="1264" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                  <codeaccessormethod accessType="1" parent_id="1264" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="1264" >
+                   <header>
+                    <cppcodedocumentation tag="" indentLevel="1" />
+                   </header>
+                  </codeaccessormethod>
+                 </textblocks>
                 </hierarchicalcodeblock>
                </textblocks>
               </hierarchicalcodeblock>
@@ -8248,16 +8201,57 @@
         </cppheaderclassdeclarationblock>
        </textblocks>
       </hierarchicalcodeblock>
-      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_LIST_H" >
+      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OLSR_CON_LIST_-_104.131.1.1:104.130.1.1_H" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" />
        </header>
       </codeblockwithcomments>
      </textblocks>
      <header>
-      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name t!
 he file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mo Feb 27 2006 at 19:10:15&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
+      <codecomment tag="" text="/************************************************************************&amp;#010;  			olsr_con_list - 104.131.1.1:104.130.1.1.h - Copyright bigm&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.!
 &amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Feb 28 2006 at 00:33:13&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
      </header>
-     <classfields/>
+     <classfields>
+      <codeclassfield parent_id="1263" field_type="0" initialValue="NULL" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1263" tag="tblock_0" canDelete="false" indentLevel="1" text=" olsr_con_list next_olsr_con_list;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1263" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="1263" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1263" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="1263" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+      <codeclassfield parent_id="1264" field_type="0" initialValue="104.131.1.1:104.130.1.1" role_id="-1" writeOutMethods="true" listClassName="" >
+       <header>
+        <cppcodedocumentation tag="" />
+       </header>
+       <ccfdeclarationcodeblock parent_id="1264" tag="tblock_1" canDelete="false" indentLevel="1" text=" olsr_con olsr_con;" >
+        <header>
+         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
+        </header>
+       </ccfdeclarationcodeblock>
+       <codeaccessormethod accessType="0" parent_id="1264" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="1264" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+       <codeaccessormethod accessType="1" parent_id="1264" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="1264" >
+        <header>
+         <cppcodedocumentation tag="" indentLevel="1" />
+        </header>
+       </codeaccessormethod>
+      </codeclassfield>
+     </classfields>
     </classifiercodedocument>
    </codegenerator>
   </codegeneration>

Modified: trunk/apps/olsrs3d/main.c
===================================================================
--- trunk/apps/olsrs3d/main.c	2006-02-27 23:16:15 UTC (rev 128)
+++ trunk/apps/olsrs3d/main.c	2006-02-27 23:35:58 UTC (rev 129)
@@ -1,7 +1,9 @@
 /*
  * main.c
  *
- * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ * Copyright (C) 2005-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *                         Marek Lindner <lindner_marek at yahoo.de>
+ *                         Andreas Langer <andreas_lbg at gmx.de>
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
  * This file is part of olsrs3d, an olsr topology visualizer for s3d.

Modified: trunk/apps/olsrs3d/net.c
===================================================================
--- trunk/apps/olsrs3d/net.c	2006-02-27 23:16:15 UTC (rev 128)
+++ trunk/apps/olsrs3d/net.c	2006-02-27 23:35:58 UTC (rev 129)
@@ -1,7 +1,9 @@
 /*
  * net.c
  *
- * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ * Copyright (C) 2005-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *                         Marek Lindner <lindner_marek at yahoo.de>
+ *                         Andreas Langer <andreas_lbg at gmx.de>
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
  * This file is part of olsrs3d, an olsr topology visualizer for s3d.

Modified: trunk/apps/olsrs3d/olsrs3d.h
===================================================================
--- trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 23:16:15 UTC (rev 128)
+++ trunk/apps/olsrs3d/olsrs3d.h	2006-02-27 23:35:58 UTC (rev 129)
@@ -1,7 +1,9 @@
 /*
  * olsrs3d.h
  *
- * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ * Copyright (C) 2005-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *                         Marek Lindner <lindner_marek at yahoo.de>
+ *                         Andreas Langer <andreas_lbg at gmx.de>
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
  * This file is part of olsrs3d, an olsr topology visualizer for s3d.

Modified: trunk/apps/olsrs3d/olsrs3d.png
===================================================================
(Binary files differ)

Modified: trunk/apps/olsrs3d/process.c
===================================================================
--- trunk/apps/olsrs3d/process.c	2006-02-27 23:16:15 UTC (rev 128)
+++ trunk/apps/olsrs3d/process.c	2006-02-27 23:35:58 UTC (rev 129)
@@ -1,7 +1,9 @@
 /*
  * process.c
  *
- * Copyright (C) 2006 Marek Lindner <lindner_marek at yahoo.de>, Andreas Langer <andreas_lbg at gmx.de>
+ * Copyright (C) 2005-2006 Simon Wunderlich <dotslash at packetmixer.de>
+ *                         Marek Lindner <lindner_marek at yahoo.de>
+ *                         Andreas Langer <andreas_lbg at gmx.de>
  * Copyright (C) 2004-2006 Simon Wunderlich <dotslash at packetmixer.de>
  *
  * This file is part of olsrs3d, an olsr topology visualizer for s3d.



